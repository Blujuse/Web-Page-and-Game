%!PS-Adobe-3.1 EPSF-3.0
%ADO_DSC_Encoding: Windows Cyrillic
%%Title: Adobe Illustrator Artwork
%%Creator: Adobe Illustrator(R) 25.2
%%For: Lenovo
%%CreationDate: 2/17/2023
%%BoundingBox: 0 0 801 993
%%HiResBoundingBox: 0 0 800.5674 992.4178
%%CropBox: 0 0 800.5674 992.4178
%%LanguageLevel: 2
%%DocumentData: Clean7Bit
%ADOBeginClientInjection: DocumentHeader "AI11EPS"
%%AI8_CreatorVersion: 25.2.1%AI9_PrintingDataBegin%ADO_BuildNumber: Adobe Illustrator(R) 25.2.1 x236 R agm 4.7767 ct 5.4352%ADO_ContainsXMP: MainFirst
%ADOEndClientInjection: DocumentHeader "AI11EPS"
%%Pages: 1
%%DocumentNeededResources: 
%%DocumentSuppliedResources: procset Adobe_AGM_Image 1.0 0
%%+ procset Adobe_CoolType_Utility_T42 1.0 0
%%+ procset Adobe_CoolType_Utility_MAKEOCF 1.23 0
%%+ procset Adobe_CoolType_Core 2.31 0
%%+ procset Adobe_AGM_Core 2.0 0
%%+ procset Adobe_AGM_Utils 1.0 0
%%DocumentFonts: 
%%DocumentNeededFonts: 
%%DocumentNeededFeatures: 
%%DocumentSuppliedFeatures: 
%%DocumentCustomColors: 
%%CMYKCustomColor: 
%%RGBCustomColor: 
%%EndComments
         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
%%BeginDefaults
%%ViewingOrientation: 1 0 0 1
%%EndDefaults
%%BeginProlog
%%BeginResource: procset Adobe_AGM_Utils 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2006 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{currentpacking	true setpacking}if
userdict/Adobe_AGM_Utils 75 dict dup begin put
/bdf
{bind def}bind def
/nd{null def}bdf
/xdf
{exch def}bdf
/ldf 
{load def}bdf
/ddf
{put}bdf	
/xddf
{3 -1 roll put}bdf	
/xpt
{exch put}bdf
/ndf
{
	exch dup where{
		pop pop pop
	}{
		xdf
	}ifelse
}def
/cdndf
{
	exch dup currentdict exch known{
		pop pop
	}{
		exch def
	}ifelse
}def
/gx
{get exec}bdf
/ps_level
	/languagelevel where{
		pop systemdict/languagelevel gx
	}{
		1
	}ifelse
def
/level2 
	ps_level 2 ge
def
/level3 
	ps_level 3 ge
def
/ps_version
	{version cvr}stopped{-1}if
def
/set_gvm
{currentglobal exch setglobal}bdf
/reset_gvm
{setglobal}bdf
/makereadonlyarray
{
	/packedarray where{pop packedarray
	}{
		array astore readonly}ifelse
}bdf
/map_reserved_ink_name
{
	dup type/stringtype eq{
		dup/Red eq{
			pop(_Red_)
		}{
			dup/Green eq{
				pop(_Green_)
			}{
				dup/Blue eq{
					pop(_Blue_)
				}{
					dup()cvn eq{
						pop(Process)
					}if
				}ifelse
			}ifelse
		}ifelse
	}if
}bdf
/AGMUTIL_GSTATE 22 dict def
/get_gstate
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_clr_spc currentcolorspace def
	/AGMUTIL_GSTATE_clr_indx 0 def
	/AGMUTIL_GSTATE_clr_comps 12 array def
	mark currentcolor counttomark
		{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 3 -1 roll put
		/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 add def}repeat pop
	/AGMUTIL_GSTATE_fnt rootfont def
	/AGMUTIL_GSTATE_lw currentlinewidth def
	/AGMUTIL_GSTATE_lc currentlinecap def
	/AGMUTIL_GSTATE_lj currentlinejoin def
	/AGMUTIL_GSTATE_ml currentmiterlimit def
	currentdash/AGMUTIL_GSTATE_do xdf/AGMUTIL_GSTATE_da xdf
	/AGMUTIL_GSTATE_sa currentstrokeadjust def
	/AGMUTIL_GSTATE_clr_rnd currentcolorrendering def
	/AGMUTIL_GSTATE_op currentoverprint def
	/AGMUTIL_GSTATE_bg currentblackgeneration cvlit def
	/AGMUTIL_GSTATE_ucr currentundercolorremoval cvlit def
	currentcolortransfer cvlit/AGMUTIL_GSTATE_gy_xfer xdf cvlit/AGMUTIL_GSTATE_b_xfer xdf
		cvlit/AGMUTIL_GSTATE_g_xfer xdf cvlit/AGMUTIL_GSTATE_r_xfer xdf
	/AGMUTIL_GSTATE_ht currenthalftone def
	/AGMUTIL_GSTATE_flt currentflat def
	end
}def
/set_gstate
{
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_clr_spc setcolorspace
	AGMUTIL_GSTATE_clr_indx{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 1 sub get
	/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 sub def}repeat setcolor
	AGMUTIL_GSTATE_fnt setfont
	AGMUTIL_GSTATE_lw setlinewidth
	AGMUTIL_GSTATE_lc setlinecap
	AGMUTIL_GSTATE_lj setlinejoin
	AGMUTIL_GSTATE_ml setmiterlimit
	AGMUTIL_GSTATE_da AGMUTIL_GSTATE_do setdash
	AGMUTIL_GSTATE_sa setstrokeadjust
	AGMUTIL_GSTATE_clr_rnd setcolorrendering
	AGMUTIL_GSTATE_op setoverprint
	AGMUTIL_GSTATE_bg cvx setblackgeneration
	AGMUTIL_GSTATE_ucr cvx setundercolorremoval
	AGMUTIL_GSTATE_r_xfer cvx AGMUTIL_GSTATE_g_xfer cvx AGMUTIL_GSTATE_b_xfer cvx
		AGMUTIL_GSTATE_gy_xfer cvx setcolortransfer
	AGMUTIL_GSTATE_ht/HalftoneType get dup 9 eq exch 100 eq or
		{
		currenthalftone/HalftoneType get AGMUTIL_GSTATE_ht/HalftoneType get ne
			{
			 mark AGMUTIL_GSTATE_ht{sethalftone}stopped cleartomark
			}if
		}{
		AGMUTIL_GSTATE_ht sethalftone
		}ifelse
	AGMUTIL_GSTATE_flt setflat
	end
}def
/get_gstate_and_matrix
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_ctm matrix currentmatrix def
	end
	get_gstate
}def
/set_gstate_and_matrix
{
	set_gstate
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_ctm setmatrix
	end
}def
/AGMUTIL_str256 256 string def
/AGMUTIL_src256 256 string def
/AGMUTIL_dst64 64 string def
/AGMUTIL_srcLen nd
/AGMUTIL_ndx nd
/AGMUTIL_cpd nd
/capture_cpd{
	//Adobe_AGM_Utils/AGMUTIL_cpd currentpagedevice ddf
}def
/thold_halftone
{
	level3
		{sethalftone currenthalftone}
		{
			dup/HalftoneType get 3 eq
			{
				sethalftone currenthalftone
			}{
				begin
				Width Height mul{
					Thresholds read{pop}if
				}repeat
				end
				currenthalftone
			}ifelse
		}ifelse
}def 
/rdcmntline
{
	currentfile AGMUTIL_str256 readline pop
	(%)anchorsearch{pop}if
}bdf
/filter_cmyk
{	
	dup type/filetype ne{
		exch()/SubFileDecode filter
	}{
		exch pop
	}
	ifelse
	[
	exch
	{
		AGMUTIL_src256 readstring pop
		dup length/AGMUTIL_srcLen exch def
		/AGMUTIL_ndx 0 def
		AGMCORE_plate_ndx 4 AGMUTIL_srcLen 1 sub{
			1 index exch get
			AGMUTIL_dst64 AGMUTIL_ndx 3 -1 roll put
			/AGMUTIL_ndx AGMUTIL_ndx 1 add def
		}for
		pop
		AGMUTIL_dst64 0 AGMUTIL_ndx getinterval
	}
	bind
	/exec cvx
	]cvx
}bdf
/filter_indexed_devn
{
	cvi Names length mul names_index add Lookup exch get
}bdf
/filter_devn
{	
	4 dict begin
	/srcStr xdf
	/dstStr xdf
	dup type/filetype ne{
		0()/SubFileDecode filter
	}if
	[
	exch
		[
			/devicen_colorspace_dict/AGMCORE_gget cvx/begin cvx
			currentdict/srcStr get/readstring cvx/pop cvx
			/dup cvx/length cvx 0/gt cvx[
				Adobe_AGM_Utils/AGMUTIL_ndx 0/ddf cvx
				names_index Names length currentdict/srcStr get length 1 sub{
					1/index cvx/exch cvx/get cvx
					currentdict/dstStr get/AGMUTIL_ndx/load cvx 3 -1/roll cvx/put cvx
					Adobe_AGM_Utils/AGMUTIL_ndx/AGMUTIL_ndx/load cvx 1/add cvx/ddf cvx
				}for
				currentdict/dstStr get 0/AGMUTIL_ndx/load cvx/getinterval cvx
			]cvx/if cvx
			/end cvx
		]cvx
		bind
		/exec cvx
	]cvx
	end
}bdf
/AGMUTIL_imagefile nd
/read_image_file
{
	AGMUTIL_imagefile 0 setfileposition
	10 dict begin
	/imageDict xdf
	/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
	/imbufIdx 0 def
	/origDataSource imageDict/DataSource get def
	/origMultipleDataSources imageDict/MultipleDataSources get def
	/origDecode imageDict/Decode get def
	/dstDataStr imageDict/Width get colorSpaceElemCnt mul string def
	imageDict/MultipleDataSources known{MultipleDataSources}{false}ifelse
	{
		/imbufCnt imageDict/DataSource get length def
		/imbufs imbufCnt array def
		0 1 imbufCnt 1 sub{
			/imbufIdx xdf
			imbufs imbufIdx imbufLen string put
			imageDict/DataSource get imbufIdx[AGMUTIL_imagefile imbufs imbufIdx get/readstring cvx/pop cvx]cvx put
		}for
		DeviceN_PS2{
			imageDict begin
		 	/DataSource[DataSource/devn_sep_datasource cvx]cvx def
			/MultipleDataSources false def
			/Decode[0 1]def
			end
		}if
	}{
		/imbuf imbufLen string def
		Indexed_DeviceN level3 not and DeviceN_NoneName or{
			/srcDataStrs[imageDict begin
				currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
				{
					Width Decode length 2 div mul cvi string
				}repeat
				end]def		
			imageDict begin
		 	/DataSource[AGMUTIL_imagefile Decode BitsPerComponent false 1/filter_indexed_devn load dstDataStr srcDataStrs devn_alt_datasource/exec cvx]cvx def
			/Decode[0 1]def
			end
		}{
			imageDict/DataSource[1 string dup 0 AGMUTIL_imagefile Decode length 2 idiv string/readstring cvx/pop cvx names_index/get cvx/put cvx]cvx put
			imageDict/Decode[0 1]put
		}ifelse
	}ifelse
	imageDict exch
	load exec
	imageDict/DataSource origDataSource put
	imageDict/MultipleDataSources origMultipleDataSources put
	imageDict/Decode origDecode put	
	end
}bdf
/write_image_file
{
	begin
	{(AGMUTIL_imagefile)(w+)file}stopped{
		false
	}{
		Adobe_AGM_Utils/AGMUTIL_imagefile xddf 
		2 dict begin
		/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
		MultipleDataSources{DataSource 0 get}{DataSource}ifelse type/filetype eq{
			/imbuf imbufLen string def
		}if
		1 1 Height MultipleDataSources not{Decode length 2 idiv mul}if{
			pop
			MultipleDataSources{
			 	0 1 DataSource length 1 sub{
					DataSource type dup
					/arraytype eq{
						pop DataSource exch gx
					}{
						/filetype eq{
							DataSource exch get imbuf readstring pop
						}{
							DataSource exch get
						}ifelse
					}ifelse
					AGMUTIL_imagefile exch writestring
				}for
			}{
				DataSource type dup
				/arraytype eq{
					pop DataSource exec
				}{
					/filetype eq{
						DataSource imbuf readstring pop
					}{
						DataSource
					}ifelse
				}ifelse
				AGMUTIL_imagefile exch writestring
			}ifelse
		}for
		end
		true
	}ifelse
	end
}bdf
/close_image_file
{
	AGMUTIL_imagefile closefile(AGMUTIL_imagefile)deletefile
}def
statusdict/product known userdict/AGMP_current_show known not and{
	/pstr statusdict/product get def
	pstr(HP LaserJet 2200)eq 	
	pstr(HP LaserJet 4000 Series)eq or
	pstr(HP LaserJet 4050 Series )eq or
	pstr(HP LaserJet 8000 Series)eq or
	pstr(HP LaserJet 8100 Series)eq or
	pstr(HP LaserJet 8150 Series)eq or
	pstr(HP LaserJet 5000 Series)eq or
	pstr(HP LaserJet 5100 Series)eq or
	pstr(HP Color LaserJet 4500)eq or
	pstr(HP Color LaserJet 4600)eq or
	pstr(HP LaserJet 5Si)eq or
	pstr(HP LaserJet 1200 Series)eq or
	pstr(HP LaserJet 1300 Series)eq or
	pstr(HP LaserJet 4100 Series)eq or 
	{
 		userdict/AGMP_current_show/show load put
		userdict/show{
		 currentcolorspace 0 get
		 /Pattern eq
		 {false charpath f}
		 {AGMP_current_show}ifelse
		}put
	}if
	currentdict/pstr undef
}if
/consumeimagedata
{
	begin
	AGMIMG_init_common
	currentdict/MultipleDataSources known not
		{/MultipleDataSources false def}if
	MultipleDataSources
		{
		DataSource 0 get type
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width cvi string def
			1 1 Height cvi
				{
				pop
				0 1 DataSource length 1 sub
					{
					DataSource exch get
					flushbuffer readstring pop pop
					}for
				}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or DataSource 0 get xcheck and
			{
			Width Height mul cvi
				{
				0 1 DataSource length 1 sub
					{dup DataSource exch gx length exch 0 ne{pop}if}for
				dup 0 eq
					{pop exit}if
				sub dup 0 le
					{exit}if
				}loop
			pop
			}if		
		}
		{
		/DataSource load type 
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width Decode length 2 idiv mul cvi string def
			1 1 Height{pop DataSource flushbuffer readstring pop pop}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or/DataSource load xcheck and
			{
				Height Width BitsPerComponent mul 8 BitsPerComponent sub add 8 idiv Decode length 2 idiv mul mul
					{
					DataSource length dup 0 eq
						{pop exit}if
					sub dup 0 le
						{exit}if
					}loop
				pop
			}if
		}ifelse
	end
}bdf
/addprocs
{
	 2{/exec load}repeat
	 3 1 roll
	 [5 1 roll]bind cvx
}def
/modify_halftone_xfer
{
	currenthalftone dup length dict copy begin
	 currentdict 2 index known{
	 	1 index load dup length dict copy begin
		currentdict/TransferFunction known{
			/TransferFunction load
		}{
			currenttransfer
		}ifelse
		 addprocs/TransferFunction xdf 
		 currentdict end def
		currentdict end sethalftone
	}{
		currentdict/TransferFunction known{
			/TransferFunction load 
		}{
			currenttransfer
		}ifelse
		addprocs/TransferFunction xdf
		currentdict end sethalftone		
		pop
	}ifelse
}def
/clonearray
{
	dup xcheck exch
	dup length array exch
	Adobe_AGM_Core/AGMCORE_tmp -1 ddf 
	{
	Adobe_AGM_Core/AGMCORE_tmp 2 copy get 1 add ddf 
	dup type/dicttype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get
			exch
			clonedict
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	dup type/arraytype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get exch
			clonearray
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	exch dup
	Adobe_AGM_Core/AGMCORE_tmp get 4 -1 roll put
	}forall
	exch{cvx}if
}bdf
/clonedict
{
	dup length dict
	begin
	{
		dup type/dicttype eq
			{clonedict}if
		dup type/arraytype eq
			{clonearray}if
		def
	}forall
	currentdict
	end
}bdf
/DeviceN_PS2
{
	/currentcolorspace AGMCORE_gget 0 get/DeviceN eq level3 not and
}bdf
/Indexed_DeviceN
{
	/indexed_colorspace_dict AGMCORE_gget dup null ne{
		dup/CSDBase known{
			/CSDBase get/CSD get_res/Names known 
		}{
			pop false
		}ifelse
	}{
		pop false
	}ifelse
}bdf
/DeviceN_NoneName
{	
	/Names where{
		pop
		false Names
		{
			(None)eq or
		}forall
	}{
		false
	}ifelse
}bdf
/DeviceN_PS2_inRip_seps
{
	/AGMCORE_in_rip_sep where
	{
		pop dup type dup/arraytype eq exch/packedarraytype eq or
		{
			dup 0 get/DeviceN eq level3 not and AGMCORE_in_rip_sep and
			{
				/currentcolorspace exch AGMCORE_gput
				false
			}{
				true
			}ifelse
		}{
			true
		}ifelse
	}{
		true
	}ifelse
}bdf
/base_colorspace_type
{
	dup type/arraytype eq{0 get}if
}bdf
/currentdistillerparams where{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
{
	/pdfmark_5{cleartomark}bind def
}{
	/pdfmark_5{pdfmark}bind def
}ifelse
/ReadBypdfmark_5
{
	currentfile exch 0 exch/SubFileDecode filter
	/currentdistillerparams where 
	{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
	{flushfile cleartomark}
	{/PUT pdfmark}ifelse 	
}bdf
/ReadBypdfmark_5_string
{
	2 dict begin
	/makerString exch def string/tmpString exch def
	{
		currentfile tmpString readline not{pop exit}if
		makerString anchorsearch
		{
			pop pop cleartomark exit
		}{
			3 copy/PUT pdfmark_5 pop 2 copy(\n)/PUT pdfmark_5
		}ifelse
	}loop
	end
}bdf
/xpdfm
{
	{
		dup 0 get/Label eq
		{
			aload length[exch 1 add 1 roll/PAGELABEL
		}{
			aload pop
			[{ThisPage}<<5 -2 roll>>/PUT
		}ifelse
		pdfmark_5
	}forall
}bdf
/lmt{
	dup 2 index le{exch}if pop dup 2 index ge{exch}if pop
}bdf
/int{
	dup 2 index sub 3 index 5 index sub div 6 -2 roll sub mul exch pop add exch pop
}bdf
/ds{
	Adobe_AGM_Utils begin
}bdf
/dt{
	currentdict Adobe_AGM_Utils eq{
		end
	}if
}bdf
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_AGM_Core 2.0 0
%%Version: 2.0 0
%%Copyright: Copyright(C)1997-2007 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Core 209 dict dup begin put
/Adobe_AGM_Core_Id/Adobe_AGM_Core_2.0_0 def
/AGMCORE_str256 256 string def
/AGMCORE_save nd
/AGMCORE_graphicsave nd
/AGMCORE_c 0 def
/AGMCORE_m 0 def
/AGMCORE_y 0 def
/AGMCORE_k 0 def
/AGMCORE_cmykbuf 4 array def
/AGMCORE_screen[currentscreen]cvx def
/AGMCORE_tmp 0 def
/AGMCORE_&setgray nd
/AGMCORE_&setcolor nd
/AGMCORE_&setcolorspace nd
/AGMCORE_&setcmykcolor nd
/AGMCORE_cyan_plate nd
/AGMCORE_magenta_plate nd
/AGMCORE_yellow_plate nd
/AGMCORE_black_plate nd
/AGMCORE_plate_ndx nd
/AGMCORE_get_ink_data nd
/AGMCORE_is_cmyk_sep nd
/AGMCORE_host_sep nd
/AGMCORE_avoid_L2_sep_space nd
/AGMCORE_distilling nd
/AGMCORE_composite_job nd
/AGMCORE_producing_seps nd
/AGMCORE_ps_level -1 def
/AGMCORE_ps_version -1 def
/AGMCORE_environ_ok nd
/AGMCORE_CSD_cache 0 dict def
/AGMCORE_currentoverprint false def
/AGMCORE_deltaX nd
/AGMCORE_deltaY nd
/AGMCORE_name nd
/AGMCORE_sep_special nd
/AGMCORE_err_strings 4 dict def
/AGMCORE_cur_err nd
/AGMCORE_current_spot_alias false def
/AGMCORE_inverting false def
/AGMCORE_feature_dictCount nd
/AGMCORE_feature_opCount nd
/AGMCORE_feature_ctm nd
/AGMCORE_ConvertToProcess false def
/AGMCORE_Default_CTM matrix def
/AGMCORE_Default_PageSize nd
/AGMCORE_Default_flatness nd
/AGMCORE_currentbg nd
/AGMCORE_currentucr nd
/AGMCORE_pattern_paint_type 0 def
/knockout_unitsq nd
currentglobal true setglobal
[/CSA/Gradient/Procedure]
{
	/Generic/Category findresource dup length dict copy/Category defineresource pop
}forall
setglobal
/AGMCORE_key_known
{
	where{
		/Adobe_AGM_Core_Id known
	}{
		false
	}ifelse
}ndf
/flushinput
{
	save
	2 dict begin
	/CompareBuffer 3 -1 roll def
	/readbuffer 256 string def
	mark
	{
	currentfile readbuffer{readline}stopped
		{cleartomark mark}
		{
		not
			{pop exit}
		if
		CompareBuffer eq
			{exit}
		if
		}ifelse
	}loop
	cleartomark
	end
	restore
}bdf
/getspotfunction
{
	AGMCORE_screen exch pop exch pop
	dup type/dicttype eq{
		dup/HalftoneType get 1 eq{
			/SpotFunction get
		}{
			dup/HalftoneType get 2 eq{
				/GraySpotFunction get
			}{
				pop
				{
					abs exch abs 2 copy add 1 gt{
						1 sub dup mul exch 1 sub dup mul add 1 sub
					}{
						dup mul exch dup mul add 1 exch sub
					}ifelse
				}bind
			}ifelse
		}ifelse
	}if
}def
/np
{newpath}bdf
/clp_npth
{clip np}def
/eoclp_npth
{eoclip np}def
/npth_clp
{np clip}def
/graphic_setup
{
	/AGMCORE_graphicsave save store
	concat
	0 setgray
	0 setlinecap
	0 setlinejoin
	1 setlinewidth
	[]0 setdash
	10 setmiterlimit
	np
	false setoverprint
	false setstrokeadjust
	//Adobe_AGM_Core/spot_alias gx
	/Adobe_AGM_Image where{
		pop
		Adobe_AGM_Image/spot_alias 2 copy known{
			gx
		}{
			pop pop
		}ifelse
	}if
	/sep_colorspace_dict null AGMCORE_gput
	100 dict begin
	/dictstackcount countdictstack def
	/showpage{}def
	mark
}def
/graphic_cleanup
{
	cleartomark
	dictstackcount 1 countdictstack 1 sub{end}for
	end
	AGMCORE_graphicsave restore
}def
/compose_error_msg
{
	grestoreall initgraphics	
	/Helvetica findfont 10 scalefont setfont
	/AGMCORE_deltaY 100 def
	/AGMCORE_deltaX 310 def
	clippath pathbbox np pop pop 36 add exch 36 add exch moveto
	0 AGMCORE_deltaY rlineto AGMCORE_deltaX 0 rlineto
	0 AGMCORE_deltaY neg rlineto AGMCORE_deltaX neg 0 rlineto closepath
	0 AGMCORE_&setgray
	gsave 1 AGMCORE_&setgray fill grestore 
	1 setlinewidth gsave stroke grestore
	currentpoint AGMCORE_deltaY 15 sub add exch 8 add exch moveto
	/AGMCORE_deltaY 12 def
	/AGMCORE_tmp 0 def
	AGMCORE_err_strings exch get
		{
		dup 32 eq
			{
			pop
			AGMCORE_str256 0 AGMCORE_tmp getinterval
			stringwidth pop currentpoint pop add AGMCORE_deltaX 28 add gt
				{
				currentpoint AGMCORE_deltaY sub exch pop
				clippath pathbbox pop pop pop 44 add exch moveto
				}if
			AGMCORE_str256 0 AGMCORE_tmp getinterval show( )show
			0 1 AGMCORE_str256 length 1 sub
				{
				AGMCORE_str256 exch 0 put
				}for
			/AGMCORE_tmp 0 def
			}{
				AGMCORE_str256 exch AGMCORE_tmp xpt
				/AGMCORE_tmp AGMCORE_tmp 1 add def
			}ifelse
		}forall
}bdf
/AGMCORE_CMYKDeviceNColorspaces[
	[/Separation/None/DeviceCMYK{0 0 0}]
	[/Separation(Black)/DeviceCMYK{0 0 0 4 -1 roll}bind]
	[/Separation(Yellow)/DeviceCMYK{0 0 3 -1 roll 0}bind]
	[/DeviceN[(Yellow)(Black)]/DeviceCMYK{0 0 4 2 roll}bind]
	[/Separation(Magenta)/DeviceCMYK{0 exch 0 0}bind]
	[/DeviceN[(Magenta)(Black)]/DeviceCMYK{0 3 1 roll 0 exch}bind]
	[/DeviceN[(Magenta)(Yellow)]/DeviceCMYK{0 3 1 roll 0}bind]
	[/DeviceN[(Magenta)(Yellow)(Black)]/DeviceCMYK{0 4 1 roll}bind]
	[/Separation(Cyan)/DeviceCMYK{0 0 0}]
	[/DeviceN[(Cyan)(Black)]/DeviceCMYK{0 0 3 -1 roll}bind]
	[/DeviceN[(Cyan)(Yellow)]/DeviceCMYK{0 exch 0}bind]
	[/DeviceN[(Cyan)(Yellow)(Black)]/DeviceCMYK{0 3 1 roll}bind]
	[/DeviceN[(Cyan)(Magenta)]/DeviceCMYK{0 0}]
	[/DeviceN[(Cyan)(Magenta)(Black)]/DeviceCMYK{0 exch}bind]
	[/DeviceN[(Cyan)(Magenta)(Yellow)]/DeviceCMYK{0}]
	[/DeviceCMYK]
]def
/ds{
	Adobe_AGM_Core begin
	/currentdistillerparams where
		{
		pop currentdistillerparams/CoreDistVersion get 5000 lt
			{<</DetectBlends false>>setdistillerparams}if
		}if	
	/AGMCORE_ps_version xdf
	/AGMCORE_ps_level xdf
	errordict/AGM_handleerror known not{
		errordict/AGM_handleerror errordict/handleerror get put
		errordict/handleerror{
			Adobe_AGM_Core begin
			$error/newerror get AGMCORE_cur_err null ne and{
				$error/newerror false put
				AGMCORE_cur_err compose_error_msg
			}if
			$error/newerror true put
			end
			errordict/AGM_handleerror get exec
			}bind put
		}if
	/AGMCORE_environ_ok 
		ps_level AGMCORE_ps_level ge
		ps_version AGMCORE_ps_version ge and 
		AGMCORE_ps_level -1 eq or
	def
	AGMCORE_environ_ok not
		{/AGMCORE_cur_err/AGMCORE_bad_environ def}if
	/AGMCORE_&setgray systemdict/setgray get def
	level2{
		/AGMCORE_&setcolor systemdict/setcolor get def
		/AGMCORE_&setcolorspace systemdict/setcolorspace get def
	}if
	/AGMCORE_currentbg currentblackgeneration def
	/AGMCORE_currentucr currentundercolorremoval def
	/AGMCORE_Default_flatness currentflat def
	/AGMCORE_distilling
		/product where{
			pop systemdict/setdistillerparams known product(Adobe PostScript Parser)ne and
		}{
			false
		}ifelse
	def
	/AGMCORE_GSTATE AGMCORE_key_known not{
		/AGMCORE_GSTATE 21 dict def
		/AGMCORE_tmpmatrix matrix def
		/AGMCORE_gstack 64 array def
		/AGMCORE_gstackptr 0 def
		/AGMCORE_gstacksaveptr 0 def
		/AGMCORE_gstackframekeys 14 def
		/AGMCORE_&gsave/gsave ldf
		/AGMCORE_&grestore/grestore ldf
		/AGMCORE_&grestoreall/grestoreall ldf
		/AGMCORE_&save/save ldf
		/AGMCORE_&setoverprint/setoverprint ldf
		/AGMCORE_gdictcopy{
			begin
			{def}forall
			end
		}def
		/AGMCORE_gput{
			AGMCORE_gstack AGMCORE_gstackptr get
			3 1 roll
			put
		}def
		/AGMCORE_gget{
			AGMCORE_gstack AGMCORE_gstackptr get
			exch
			get
		}def
		/gsave{
			AGMCORE_&gsave
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 64 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/grestore{
			AGMCORE_&grestore
			AGMCORE_gstackptr 1 sub
			dup AGMCORE_gstacksaveptr lt{1 add}if
			dup AGMCORE_gstack exch get dup/AGMCORE_currentoverprint known
				{/AGMCORE_currentoverprint get setoverprint}{pop}ifelse
			/AGMCORE_gstackptr exch store
		}def
		/grestoreall{
			AGMCORE_&grestoreall
			/AGMCORE_gstackptr AGMCORE_gstacksaveptr store 
		}def
		/save{
			AGMCORE_&save
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 64 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			/AGMCORE_gstacksaveptr AGMCORE_gstackptr store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/setoverprint{
			dup/AGMCORE_currentoverprint exch AGMCORE_gput AGMCORE_&setoverprint
		}def	
		0 1 AGMCORE_gstack length 1 sub{
				AGMCORE_gstack exch AGMCORE_gstackframekeys dict put
		}for
	}if
	level3/AGMCORE_&sysshfill AGMCORE_key_known not and
	{
		/AGMCORE_&sysshfill systemdict/shfill get def
		/AGMCORE_&sysmakepattern systemdict/makepattern get def
		/AGMCORE_&usrmakepattern/makepattern load def
	}if
	/currentcmykcolor[0 0 0 0]AGMCORE_gput
	/currentstrokeadjust false AGMCORE_gput
	/currentcolorspace[/DeviceGray]AGMCORE_gput
	/sep_tint 0 AGMCORE_gput
	/devicen_tints[0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]AGMCORE_gput
	/sep_colorspace_dict null AGMCORE_gput
	/devicen_colorspace_dict null AGMCORE_gput
	/indexed_colorspace_dict null AGMCORE_gput
	/currentcolor_intent()AGMCORE_gput
	/customcolor_tint 1 AGMCORE_gput
	/absolute_colorimetric_crd null AGMCORE_gput
	/relative_colorimetric_crd null AGMCORE_gput
	/saturation_crd null AGMCORE_gput
	/perceptual_crd null AGMCORE_gput
	currentcolortransfer cvlit/AGMCore_gray_xfer xdf cvlit/AGMCore_b_xfer xdf
		 cvlit/AGMCore_g_xfer xdf cvlit/AGMCore_r_xfer xdf
	<<
	/MaxPatternItem currentsystemparams/MaxPatternCache get
	>>
	setuserparams
	end
}def
/ps
{
	/setcmykcolor where{
		pop
		Adobe_AGM_Core/AGMCORE_&setcmykcolor/setcmykcolor load put
	}if
	Adobe_AGM_Core begin
	/setcmykcolor
	{
		4 copy AGMCORE_cmykbuf astore/currentcmykcolor exch AGMCORE_gput
		1 sub 4 1 roll
		3{
			3 index add neg dup 0 lt{
				pop 0
			}if
			3 1 roll
		}repeat
		setrgbcolor pop
	}ndf
	/currentcmykcolor
	{
		/currentcmykcolor AGMCORE_gget aload pop
	}ndf
	/setoverprint
	{pop}ndf
	/currentoverprint
	{false}ndf
	/AGMCORE_cyan_plate 1 0 0 0 test_cmyk_color_plate def
	/AGMCORE_magenta_plate 0 1 0 0 test_cmyk_color_plate def
	/AGMCORE_yellow_plate 0 0 1 0 test_cmyk_color_plate def
	/AGMCORE_black_plate 0 0 0 1 test_cmyk_color_plate def
	/AGMCORE_plate_ndx 
		AGMCORE_cyan_plate{
			0
		}{
			AGMCORE_magenta_plate{
				1
			}{
				AGMCORE_yellow_plate{
					2
				}{
					AGMCORE_black_plate{
						3
					}{
						4
					}ifelse
				}ifelse
			}ifelse
		}ifelse
		def
	/AGMCORE_have_reported_unsupported_color_space false def
	/AGMCORE_report_unsupported_color_space
	{
		AGMCORE_have_reported_unsupported_color_space false eq
		{
			(Warning: Job contains content that cannot be separated with on-host methods. This content appears on the black plate, and knocks out all other plates.)==
			Adobe_AGM_Core/AGMCORE_have_reported_unsupported_color_space true ddf
		}if
	}def
	/AGMCORE_composite_job
		AGMCORE_cyan_plate AGMCORE_magenta_plate and AGMCORE_yellow_plate and AGMCORE_black_plate and def
	/AGMCORE_in_rip_sep
		/AGMCORE_in_rip_sep where{
			pop AGMCORE_in_rip_sep
		}{
			AGMCORE_distilling 
			{
				false
			}{
				userdict/Adobe_AGM_OnHost_Seps known{
					false
				}{
					level2{
						currentpagedevice/Separations 2 copy known{
							get
						}{
							pop pop false
						}ifelse
					}{
						false
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	def
	/AGMCORE_producing_seps AGMCORE_composite_job not AGMCORE_in_rip_sep or def
	/AGMCORE_host_sep AGMCORE_producing_seps AGMCORE_in_rip_sep not and def
	/AGM_preserve_spots 
		/AGM_preserve_spots where{
			pop AGM_preserve_spots
		}{
			AGMCORE_distilling AGMCORE_producing_seps or
		}ifelse
	def
	/AGM_is_distiller_preserving_spotimages
	{
		currentdistillerparams/PreserveOverprintSettings known
		{
			currentdistillerparams/PreserveOverprintSettings get
				{
					currentdistillerparams/ColorConversionStrategy known
					{
						currentdistillerparams/ColorConversionStrategy get
						/sRGB ne
					}{
						true
					}ifelse
				}{
					false
				}ifelse
		}{
			false
		}ifelse
	}def
	/convert_spot_to_process where{pop}{
		/convert_spot_to_process
		{
			//Adobe_AGM_Core begin
			dup map_alias{
				/Name get exch pop
			}if
			dup dup(None)eq exch(All)eq or
				{
				pop false
				}{
				AGMCORE_host_sep
				{
					gsave
					1 0 0 0 setcmykcolor currentgray 1 exch sub
					0 1 0 0 setcmykcolor currentgray 1 exch sub
					0 0 1 0 setcmykcolor currentgray 1 exch sub
					0 0 0 1 setcmykcolor currentgray 1 exch sub
					add add add 0 eq
					{
						pop false
					}{
						false setoverprint
						current_spot_alias false set_spot_alias
						1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
						set_spot_alias
						currentgray 1 ne
					}ifelse
					grestore
				}{
					AGMCORE_distilling
					{
						pop AGM_is_distiller_preserving_spotimages not
					}{
						//Adobe_AGM_Core/AGMCORE_name xddf
						false
						//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 0 eq
						AGMUTIL_cpd/OverrideSeparations known and
						{
							AGMUTIL_cpd/OverrideSeparations get
							{
								/HqnSpots/ProcSet resourcestatus
								{
									pop pop pop true
								}if
							}if
						}if					
						{
							AGMCORE_name/HqnSpots/ProcSet findresource/TestSpot gx not
						}{
							gsave
							[/Separation AGMCORE_name/DeviceGray{}]AGMCORE_&setcolorspace
							false
							AGMUTIL_cpd/SeparationColorNames 2 copy known
							{
								get
								{AGMCORE_name eq or}forall
								not
							}{
								pop pop pop true
							}ifelse
							grestore
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			end
		}def
	}ifelse
	/convert_to_process where{pop}{
		/convert_to_process
		{
			dup length 0 eq
				{
				pop false
				}{
				AGMCORE_host_sep
				{
				dup true exch
					{
					dup(Cyan)eq exch
					dup(Magenta)eq 3 -1 roll or exch
					dup(Yellow)eq 3 -1 roll or exch
					dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process and}ifelse
					}
				forall
					{
					true exch
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						(Black)eq or and
						}forall
						not
					}{pop false}ifelse
				}{
				false exch
					{
					/PhotoshopDuotoneList where{pop false}{true}ifelse
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process or}ifelse
						}
						{
						convert_spot_to_process or
						}
					ifelse
					}
				forall
				}ifelse
			}ifelse
		}def
	}ifelse	
	/AGMCORE_avoid_L2_sep_space 
		version cvr 2012 lt 
		level2 and 
		AGMCORE_producing_seps not and
	def
	/AGMCORE_is_cmyk_sep
		AGMCORE_cyan_plate AGMCORE_magenta_plate or AGMCORE_yellow_plate or AGMCORE_black_plate or
	def
	/AGM_avoid_0_cmyk where{
		pop AGM_avoid_0_cmyk
	}{
		AGM_preserve_spots 
		userdict/Adobe_AGM_OnHost_Seps known 
		userdict/Adobe_AGM_InRip_Seps known or
		not and
	}ifelse
	{
		/setcmykcolor[
			{
				4 copy add add add 0 eq currentoverprint and{
					pop 0.0005
				}if
			}/exec cvx
			/AGMCORE_&setcmykcolor load dup type/operatortype ne{
				/exec cvx
			}if
		]cvx def
	}if
	/AGMCORE_IsSeparationAProcessColor
		{
		dup(Cyan)eq exch dup(Magenta)eq exch dup(Yellow)eq exch(Black)eq or or or
		}def
	AGMCORE_host_sep{
		/setcolortransfer
		{
			AGMCORE_cyan_plate{
				pop pop pop
			}{
			 	AGMCORE_magenta_plate{
			 		4 3 roll pop pop pop
			 	}{
			 		AGMCORE_yellow_plate{
			 			4 2 roll pop pop pop
			 		}{
			 			4 1 roll pop pop pop
			 		}ifelse
			 	}ifelse
			}ifelse
			settransfer 
		}	
		def
		/AGMCORE_get_ink_data
			AGMCORE_cyan_plate{
				{pop pop pop}
			}{
			 	AGMCORE_magenta_plate{
			 		{4 3 roll pop pop pop}
			 	}{
			 		AGMCORE_yellow_plate{
			 			{4 2 roll pop pop pop}
			 		}{
			 			{4 1 roll pop pop pop}
			 		}ifelse
			 	}ifelse
			}ifelse
		def
		/AGMCORE_RemoveProcessColorNames
			{
			1 dict begin
			/filtername
				{
				dup/Cyan eq 1 index(Cyan)eq or
					{pop(_cyan_)}if
				dup/Magenta eq 1 index(Magenta)eq or
					{pop(_magenta_)}if
				dup/Yellow eq 1 index(Yellow)eq or
					{pop(_yellow_)}if
				dup/Black eq 1 index(Black)eq or
					{pop(_black_)}if
				}def
			dup type/arraytype eq
				{[exch{filtername}forall]}
				{filtername}ifelse
			end
			}def
		level3{
			/AGMCORE_IsCurrentColor
				{
				dup AGMCORE_IsSeparationAProcessColor
					{
					AGMCORE_plate_ndx 0 eq
						{dup(Cyan)eq exch/Cyan eq or}if
					AGMCORE_plate_ndx 1 eq
						{dup(Magenta)eq exch/Magenta eq or}if
					AGMCORE_plate_ndx 2 eq
						{dup(Yellow)eq exch/Yellow eq or}if
					AGMCORE_plate_ndx 3 eq
						{dup(Black)eq exch/Black eq or}if
					AGMCORE_plate_ndx 4 eq
						{pop false}if
					}{
					gsave
					false setoverprint
					current_spot_alias false set_spot_alias
					1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
					set_spot_alias
					currentgray 1 ne
					grestore
					}ifelse
				}def
			/AGMCORE_filter_functiondatasource
				{	
				5 dict begin
				/data_in xdf
				data_in type/stringtype eq
					{
					/ncomp xdf
					/comp xdf
					/string_out data_in length ncomp idiv string def
					0 ncomp data_in length 1 sub
						{
						string_out exch dup ncomp idiv exch data_in exch ncomp getinterval comp get 255 exch sub put
						}for
					string_out
					}{
					string/string_in xdf
					/string_out 1 string def
					/component xdf
					[
					data_in string_in/readstring cvx
						[component/get cvx 255/exch cvx/sub cvx string_out/exch cvx 0/exch cvx/put cvx string_out]cvx
						[/pop cvx()]cvx/ifelse cvx
					]cvx/ReusableStreamDecode filter
				}ifelse
				end
				}def
			/AGMCORE_separateShadingFunction
				{
				2 dict begin
				/paint? xdf
				/channel xdf
				dup type/dicttype eq
					{
					begin
					FunctionType 0 eq
						{
						/DataSource channel Range length 2 idiv DataSource AGMCORE_filter_functiondatasource def
						currentdict/Decode known
							{/Decode Decode channel 2 mul 2 getinterval def}if
						paint? not
							{/Decode[1 1]def}if
						}if
					FunctionType 2 eq
						{
						paint?
							{
							/C0[C0 channel get 1 exch sub]def
							/C1[C1 channel get 1 exch sub]def
							}{
							/C0[1]def
							/C1[1]def
							}ifelse			
						}if
					FunctionType 3 eq
						{
						/Functions[Functions{channel paint? AGMCORE_separateShadingFunction}forall]def			
						}if
					currentdict/Range known
						{/Range[0 1]def}if
					currentdict
					end}{
					channel get 0 paint? AGMCORE_separateShadingFunction
					}ifelse
				end
				}def
			/AGMCORE_separateShading
				{
				3 -1 roll begin
				currentdict/Function known
					{
					currentdict/Background known
						{[1 index{Background 3 index get 1 exch sub}{1}ifelse]/Background xdf}if
					Function 3 1 roll AGMCORE_separateShadingFunction/Function xdf
					/ColorSpace[/DeviceGray]def
					}{
					ColorSpace dup type/arraytype eq{0 get}if/DeviceCMYK eq
						{
						/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
						}{
						ColorSpace dup 1 get AGMCORE_RemoveProcessColorNames 1 exch put
						}ifelse
					ColorSpace 0 get/Separation eq
						{
							{
								[1/exch cvx/sub cvx]cvx
							}{
								[/pop cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll put
							pop
						}{
							{
								[exch ColorSpace 1 get length 1 sub exch sub/index cvx 1/exch cvx/sub cvx ColorSpace 1 get length 1 add 1/roll cvx ColorSpace 1 get length{/pop cvx}repeat]cvx
							}{
								pop[ColorSpace 1 get length{/pop cvx}repeat cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll bind put
						}ifelse
					ColorSpace 2/DeviceGray put																		
					}ifelse
				end
				}def
			/AGMCORE_separateShadingDict
				{
				dup/ColorSpace get
				dup type/arraytype ne
					{[exch]}if
				dup 0 get/DeviceCMYK eq
					{
					exch begin 
					currentdict
					AGMCORE_cyan_plate
						{0 true}if
					AGMCORE_magenta_plate
						{1 true}if
					AGMCORE_yellow_plate
						{2 true}if
					AGMCORE_black_plate
						{3 true}if
					AGMCORE_plate_ndx 4 eq
						{0 false}if		
					dup not currentoverprint and
						{/AGMCORE_ignoreshade true def}if
					AGMCORE_separateShading
					currentdict
					end exch
					}if
				dup 0 get/Separation eq
					{
					exch begin
					ColorSpace 1 get dup/None ne exch/All ne and
						{
						ColorSpace 1 get AGMCORE_IsCurrentColor AGMCORE_plate_ndx 4 lt and ColorSpace 1 get AGMCORE_IsSeparationAProcessColor not and
							{
							ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
								{
								/ColorSpace
									[
									/Separation
									ColorSpace 1 get
									/DeviceGray
										[
										ColorSpace 3 get/exec cvx
										4 AGMCORE_plate_ndx sub -1/roll cvx
										4 1/roll cvx
										3[/pop cvx]cvx/repeat cvx
										1/exch cvx/sub cvx
										]cvx									
									]def
								}{
								AGMCORE_report_unsupported_color_space
								AGMCORE_black_plate not
									{
									currentdict 0 false AGMCORE_separateShading
									}if
								}ifelse
							}{
							currentdict ColorSpace 1 get AGMCORE_IsCurrentColor
							0 exch 
							dup not currentoverprint and
								{/AGMCORE_ignoreshade true def}if
							AGMCORE_separateShading
							}ifelse	
						}if			
					currentdict
					end exch
					}if
				dup 0 get/DeviceN eq
					{
					exch begin
					ColorSpace 1 get convert_to_process
						{
						ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
							{
							/ColorSpace
								[
								/DeviceN
								ColorSpace 1 get
								/DeviceGray
									[
									ColorSpace 3 get/exec cvx
									4 AGMCORE_plate_ndx sub -1/roll cvx
									4 1/roll cvx
									3[/pop cvx]cvx/repeat cvx
									1/exch cvx/sub cvx
									]cvx									
								]def
							}{
							AGMCORE_report_unsupported_color_space
							AGMCORE_black_plate not
								{
								currentdict 0 false AGMCORE_separateShading
								/ColorSpace[/DeviceGray]def
								}if
							}ifelse
						}{
						currentdict
						false -1 ColorSpace 1 get
							{
							AGMCORE_IsCurrentColor
								{
								1 add
								exch pop true exch exit
								}if
							1 add
							}forall
						exch 
						dup not currentoverprint and
							{/AGMCORE_ignoreshade true def}if
						AGMCORE_separateShading
						}ifelse
					currentdict
					end exch
					}if
				dup 0 get dup/DeviceCMYK eq exch dup/Separation eq exch/DeviceN eq or or not
					{
					exch begin
					ColorSpace dup type/arraytype eq
						{0 get}if
					/DeviceGray ne
						{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate not
							{
							ColorSpace 0 get/CIEBasedA eq
								{
								/ColorSpace[/Separation/_ciebaseda_/DeviceGray{}]def
								}if
							ColorSpace 0 get dup/CIEBasedABC eq exch dup/CIEBasedDEF eq exch/DeviceRGB eq or or
								{
								/ColorSpace[/DeviceN[/_red_/_green_/_blue_]/DeviceRGB{}]def
								}if
							ColorSpace 0 get/CIEBasedDEFG eq
								{
								/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
								}if
							currentdict 0 false AGMCORE_separateShading
							}if
						}if
					currentdict
					end exch
					}if
				pop
				dup/AGMCORE_ignoreshade known
					{
					begin
					/ColorSpace[/Separation(None)/DeviceGray{}]def
					currentdict end
					}if
				}def
			/shfill
				{
				AGMCORE_separateShadingDict 
				dup/AGMCORE_ignoreshade known
					{pop}
					{AGMCORE_&sysshfill}ifelse
				}def
			/makepattern
				{
				exch
				dup/PatternType get 2 eq
					{
					clonedict
					begin
					/Shading Shading AGMCORE_separateShadingDict def
					Shading/AGMCORE_ignoreshade known
					currentdict end exch
					{pop<</PatternType 1/PaintProc{pop}/BBox[0 0 1 1]/XStep 1/YStep 1/PaintType 1/TilingType 3>>}if
					exch AGMCORE_&sysmakepattern
					}{
					exch AGMCORE_&usrmakepattern
					}ifelse
				}def
		}if
	}if
	AGMCORE_in_rip_sep{
		/setcustomcolor
		{
			exch aload pop
			dup 7 1 roll inRip_spot_has_ink not	{
				4{4 index mul 4 1 roll}
				repeat
				/DeviceCMYK setcolorspace
				6 -2 roll pop pop
			}{
				//Adobe_AGM_Core begin
					/AGMCORE_k xdf/AGMCORE_y xdf/AGMCORE_m xdf/AGMCORE_c xdf
				end
				[/Separation 4 -1 roll/DeviceCMYK
				{dup AGMCORE_c mul exch dup AGMCORE_m mul exch dup AGMCORE_y mul exch AGMCORE_k mul}
				]
				setcolorspace
			}ifelse
			setcolor
		}ndf
		/setseparationgray
		{
			[/Separation(All)/DeviceGray{}]setcolorspace_opt
			1 exch sub setcolor
		}ndf
	}{
		/setseparationgray
		{
			AGMCORE_&setgray
		}ndf
	}ifelse
	/findcmykcustomcolor
	{
		5 makereadonlyarray
	}ndf
	/setcustomcolor
	{
		exch aload pop pop
		4{4 index mul 4 1 roll}repeat
		setcmykcolor pop
	}ndf
	/has_color
		/colorimage where{
			AGMCORE_producing_seps{
				pop true
			}{
				systemdict eq
			}ifelse
		}{
			false
		}ifelse
	def
	/map_index
	{
		1 index mul exch getinterval{255 div}forall
	}bdf
	/map_indexed_devn
	{
		Lookup Names length 3 -1 roll cvi map_index
	}bdf
	/n_color_components
	{
		base_colorspace_type
		dup/DeviceGray eq{
			pop 1
		}{
			/DeviceCMYK eq{
				4
			}{
				3
			}ifelse
		}ifelse
	}bdf
	level2{
		/mo/moveto ldf
		/li/lineto ldf
		/cv/curveto ldf
		/knockout_unitsq
		{
			1 setgray
			0 0 1 1 rectfill
		}def
		level2/setcolorspace AGMCORE_key_known not and{
			/AGMCORE_&&&setcolorspace/setcolorspace ldf
			/AGMCORE_ReplaceMappedColor
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					/AGMCORE_SpotAliasAry2 where{
						begin
						dup 0 get dup/Separation eq
						{
							pop
							dup length array copy
							dup dup 1 get
							current_spot_alias
							{
								dup map_alias
								{
									false set_spot_alias
									dup 1 exch setsepcolorspace
									true set_spot_alias
									begin
									/sep_colorspace_dict currentdict AGMCORE_gput
									pop pop	pop
									[
										/Separation Name 
										CSA map_csa
										MappedCSA 
										/sep_colorspace_proc load
									]
									dup Name
									end
								}if
							}if
							map_reserved_ink_name 1 xpt
						}{
							/DeviceN eq 
							{
								dup length array copy
								dup dup 1 get[
									exch{
										current_spot_alias{
											dup map_alias{
												/Name get exch pop
											}if
										}if
										map_reserved_ink_name
									}forall 
								]1 xpt
							}if
						}ifelse
						end
					}if
				}if
			}def
			/setcolorspace
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					dup 0 get/Indexed eq
					{
						AGMCORE_distilling
						{
							/PhotoshopDuotoneList where
							{
								pop false
							}{
								true
							}ifelse
						}{
							true
						}ifelse
						{
							aload pop 3 -1 roll
							AGMCORE_ReplaceMappedColor
							3 1 roll 4 array astore
						}if
					}{
						AGMCORE_ReplaceMappedColor
					}ifelse
				}if
				DeviceN_PS2_inRip_seps{AGMCORE_&&&setcolorspace}if
			}def
		}if	
	}{
		/adj
		{
			currentstrokeadjust{
				transform
				0.25 sub round 0.25 add exch
				0.25 sub round 0.25 add exch
				itransform
			}if
		}def
		/mo{
			adj moveto
		}def
		/li{
			adj lineto
		}def
		/cv{
			6 2 roll adj
			6 2 roll adj
			6 2 roll adj curveto
		}def
		/knockout_unitsq
		{
			1 setgray
			8 8 1[8 0 0 8 0 0]{<ffffffffffffffff>}image
		}def
		/currentstrokeadjust{
			/currentstrokeadjust AGMCORE_gget
		}def
		/setstrokeadjust{
			/currentstrokeadjust exch AGMCORE_gput
		}def
		/setcolorspace
		{
			/currentcolorspace exch AGMCORE_gput
		}def
		/currentcolorspace
		{
			/currentcolorspace AGMCORE_gget
		}def
		/setcolor_devicecolor
		{
			base_colorspace_type
			dup/DeviceGray eq{
				pop setgray
			}{
				/DeviceCMYK eq{
					setcmykcolor
				}{
					setrgbcolor
				}ifelse
			}ifelse
		}def
		/setcolor
		{
			currentcolorspace 0 get
			dup/DeviceGray ne{
				dup/DeviceCMYK ne{
					dup/DeviceRGB ne{
						dup/Separation eq{
							pop
							currentcolorspace 3 gx
							currentcolorspace 2 get
						}{
							dup/Indexed eq{
								pop
								currentcolorspace 3 get dup type/stringtype eq{
									currentcolorspace 1 get n_color_components
									3 -1 roll map_index
								}{
									exec
								}ifelse
								currentcolorspace 1 get
							}{
								/AGMCORE_cur_err/AGMCORE_invalid_color_space def
								AGMCORE_invalid_color_space
							}ifelse
						}ifelse
					}if
				}if
			}if
			setcolor_devicecolor
		}def
	}ifelse
	/sop/setoverprint ldf
	/lw/setlinewidth ldf
	/lc/setlinecap ldf
	/lj/setlinejoin ldf
	/ml/setmiterlimit ldf
	/dsh/setdash ldf
	/sadj/setstrokeadjust ldf
	/gry/setgray ldf
	/rgb/setrgbcolor ldf
	/cmyk[
		/currentcolorspace[/DeviceCMYK]/AGMCORE_gput cvx
		/setcmykcolor load dup type/operatortype ne{/exec cvx}if
	]cvx bdf
	level3 AGMCORE_host_sep not and{
		/nzopmsc{
			6 dict begin
			/kk exch def
			/yy exch def
			/mm exch def
			/cc exch def
			/sum 0 def
			cc 0 ne{/sum sum 2#1000 or def cc}if
			mm 0 ne{/sum sum 2#0100 or def mm}if
			yy 0 ne{/sum sum 2#0010 or def yy}if
			kk 0 ne{/sum sum 2#0001 or def kk}if
			AGMCORE_CMYKDeviceNColorspaces sum get setcolorspace
			sum 0 eq{0}if
			end
			setcolor
		}bdf
	}{
		/nzopmsc/cmyk ldf
	}ifelse
	/sep/setsepcolor ldf
	/devn/setdevicencolor ldf
	/idx/setindexedcolor ldf
	/colr/setcolor ldf
	/csacrd/set_csa_crd ldf
	/sepcs/setsepcolorspace ldf
	/devncs/setdevicencolorspace ldf
	/idxcs/setindexedcolorspace ldf
	/cp/closepath ldf
	/clp/clp_npth ldf
	/eclp/eoclp_npth ldf
	/f/fill ldf
	/ef/eofill ldf
	/@/stroke ldf
	/nclp/npth_clp ldf
	/gset/graphic_setup ldf
	/gcln/graphic_cleanup ldf
	/ct/concat ldf
	/cf/currentfile ldf
	/fl/filter ldf
	/rs/readstring ldf
	/AGMCORE_def_ht currenthalftone def
	/clonedict Adobe_AGM_Utils begin/clonedict load end def
	/clonearray Adobe_AGM_Utils begin/clonearray load end def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
	/getrampcolor
	{
		/indx exch def
		0 1 NumComp 1 sub
		{
			dup
			Samples exch get
			dup type/stringtype eq{indx get}if
			exch
			Scaling exch get aload pop
			3 1 roll
			mul add
		}for
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse
	}bdf
	/sssetbackground{
		aload pop 
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse	
	}bdf
	/RadialShade
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/r2 xdf
		/c2y xdf
		/c2x xdf
		/r1 xdf
		/c1y xdf
		/c1x xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		c1x c2x eq
		{
			c1y c2y lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope c2y c1y sub c2x c1x sub div def
			/theta slope 1 atan def
			c2x c1x lt c2y c1y ge and{/theta theta 180 sub def}if
			c2x c1x lt c2y c1y lt and{/theta theta 180 add def}if
		}ifelse
		gsave
		clippath
		c1x c1y translate
		theta rotate
		-90 rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax xdf
		/xMax xdf
		/yMin xdf
		/xMin xdf
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			/max{2 copy gt{pop}{exch pop}ifelse}bdf
			/min{2 copy lt{pop}{exch pop}ifelse}bdf
			rampdict begin
			40 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			c1x c1y translate
			theta rotate
			-90 rotate
			/c2y c1x c2x sub dup mul c1y c2y sub dup mul add sqrt def
			/c1y 0 def
			/c1x 0 def
			/c2x 0 def
			ext0
			{
				0 getrampcolor
				c2y r2 add r1 sub 0.0001 lt
				{
					c1x c1y r1 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2y r1 add r2 le
					{
						c1x c1y r1 0 360 arc
						fill
					}
					{
						c2x c2y r2 0 360 arc fill
						r1 r2 eq
						{
							/p1x r1 neg def
							/p1y c1y def
							/p2x r1 def
							/p2y c1y def
							p1x p1y moveto p2x p2y lineto p2x yMin lineto p1x yMin lineto
							fill
						}{
							/AA r2 r1 sub c2y div def
							AA -1 eq
							{/theta 89.99 def}
							{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
							ifelse
							/SS1 90 theta add dup sin exch cos div def
							/p1x r1 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
							/p1y p1x SS1 div neg def
							/SS2 90 theta sub dup sin exch cos div def
							/p2x r1 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
							/p2y p2x SS2 div neg def
							r1 r2 gt
							{
								/L1maxX p1x yMin p1y sub SS1 div add def
								/L2maxX p2x yMin p2y sub SS2 div add def
							}{
								/L1maxX 0 def
								/L2maxX 0 def
							}ifelse
							p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
							L1maxX L1maxX p1x sub SS1 mul p1y add lineto
							fill
						}ifelse
					}ifelse
				}ifelse
			}if
		c1x c2x sub dup mul
		c1y c2y sub dup mul
		add 0.5 exp
		0 dtransform
		dup mul exch dup mul add 0.5 exp 72 div
		0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		1 index 1 index lt{exch}if pop
		/hires xdf
		hires mul
		/numpix xdf
		/numsteps NumSamples def
		/rampIndxInc 1 def
		/subsampling false def
		numpix 0 ne
		{
			NumSamples numpix div 0.5 gt
			{
				/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
				/rampIndxInc NumSamples 1 sub numsteps div def
				/subsampling true def
			}if
		}if
		/xInc c2x c1x sub numsteps div def
		/yInc c2y c1y sub numsteps div def
		/rInc r2 r1 sub numsteps div def
		/cx c1x def
		/cy c1y def
		/radius r1 def
		np
		xInc 0 eq yInc 0 eq rInc 0 eq and and
		{
			0 getrampcolor
			cx cy radius 0 360 arc
			stroke
			NumSamples 1 sub getrampcolor
			cx cy radius 72 hires div add 0 360 arc
			0 setlinewidth
			stroke
		}{
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				cx cy radius 0 360 arc
				/cx cx xInc add def
				/cy cy yInc add def
				/radius radius rInc add def
				cx cy radius 360 0 arcn
				eofill
				rampIndxInc add
			}repeat
			pop
		}ifelse
		ext1
		{
			c2y r2 add r1 lt
			{
				c2x c2y r2 0 360 arc
				fill
			}{
				c2y r1 add r2 sub 0.0001 le
				{
					c2x c2y r2 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2x c2y r2 0 360 arc fill
					r1 r2 eq
					{
						/p1x r2 neg def
						/p1y c2y def
						/p2x r2 def
						/p2y c2y def
						p1x p1y moveto p2x p2y lineto p2x yMax lineto p1x yMax lineto
						fill
					}{
						/AA r2 r1 sub c2y div def
						AA -1 eq
						{/theta 89.99 def}
						{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
						ifelse
						/SS1 90 theta add dup sin exch cos div def
						/p1x r2 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
						/p1y c2y p1x SS1 div sub def
						/SS2 90 theta sub dup sin exch cos div def
						/p2x r2 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
						/p2y c2y p2x SS2 div sub def
						r1 r2 lt
						{
							/L1maxX p1x yMax p1y sub SS1 div add def
							/L2maxX p2x yMax p2y sub SS2 div add def
						}{
							/L1maxX 0 def
							/L2maxX 0 def
						}ifelse
						p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
						L1maxX L1maxX p1x sub SS1 mul p1y add lineto
						fill
					}ifelse
				}ifelse
			}ifelse
		}if
		grestore
		grestore
		end
		end
		end
		}ifelse
	}bdf
	/GenStrips
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/y2 xdf
		/x2 xdf
		/y1 xdf
		/x1 xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		x1 x2 eq
		{
			y1 y2 lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope y2 y1 sub x2 x1 sub div def
			/theta slope 1 atan def
			x2 x1 lt y2 y1 ge and{/theta theta 180 sub def}if
			x2 x1 lt y2 y1 lt and{/theta theta 180 add def}if
		}
		ifelse
		gsave
		clippath
		x1 y1 translate
		theta rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax exch def
		/xMax exch def
		/yMin exch def
		/xMin exch def
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			rampdict begin
			20 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			x1 y1 translate
			theta rotate
			/xStart 0 def
			/xEnd x2 x1 sub dup mul y2 y1 sub dup mul add 0.5 exp def
			/ySpan yMax yMin sub def
			/numsteps NumSamples def
			/rampIndxInc 1 def
			/subsampling false def
			xStart 0 transform
			xEnd 0 transform
			3 -1 roll
			sub dup mul
			3 1 roll
			sub dup mul
			add 0.5 exp 72 div
			0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			1 index 1 index lt{exch}if pop
			mul
			/numpix xdf
			numpix 0 ne
			{
				NumSamples numpix div 0.5 gt
				{
					/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
					/rampIndxInc NumSamples 1 sub numsteps div def
					/subsampling true def
				}if
			}if
			ext0
			{
				0 getrampcolor
				xMin xStart lt
				{
					xMin yMin xMin neg ySpan rectfill
				}if
			}if
			/xInc xEnd xStart sub numsteps div def
			/x xStart def
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				x yMin xInc ySpan rectfill
				/x x xInc add def
				rampIndxInc add
			}repeat
			pop
			ext1{
				xMax xEnd gt
				{
					xEnd yMin xMax xEnd sub ySpan rectfill
				}if
			}if
			grestore
			grestore
			end
			end
			end
		}ifelse
	}bdf
}def
/pt
{
	end
}def
/dt{
}def
/pgsv{
	//Adobe_AGM_Core/AGMCORE_save save put
}def
/pgrs{
	//Adobe_AGM_Core/AGMCORE_save get restore
}def
systemdict/findcolorrendering known{
	/findcolorrendering systemdict/findcolorrendering get def
}if
systemdict/setcolorrendering known{
	/setcolorrendering systemdict/setcolorrendering get def
}if
/test_cmyk_color_plate
{
	gsave
	setcmykcolor currentgray 1 ne
	grestore
}def
/inRip_spot_has_ink
{
	dup//Adobe_AGM_Core/AGMCORE_name xddf
	convert_spot_to_process not
}def
/map255_to_range
{
	1 index sub
	3 -1 roll 255 div mul add
}def
/set_csa_crd
{
	/sep_colorspace_dict null AGMCORE_gput
	begin
		CSA get_csa_by_name setcolorspace_opt
		set_crd
	end
}
def
/map_csa
{
	currentdict/MappedCSA known{MappedCSA null ne}{false}ifelse
	{pop}{get_csa_by_name/MappedCSA xdf}ifelse
}def
/setsepcolor
{
	/sep_colorspace_dict AGMCORE_gget begin
		dup/sep_tint exch AGMCORE_gput
		TintProc
	end
}def
/setdevicencolor
{
	/devicen_colorspace_dict AGMCORE_gget begin
		Names length copy
		Names length 1 sub -1 0
		{
			/devicen_tints AGMCORE_gget 3 1 roll xpt
		}for
		TintProc
	end
}def
/sep_colorspace_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	currentdict/Components known{
		Components aload pop 
		TintMethod/Lab eq{
			2{AGMCORE_tmp mul NComponents 1 roll}repeat
			LMax sub AGMCORE_tmp mul LMax add NComponents 1 roll
		}{
			TintMethod/Subtractive eq{
				NComponents{
					AGMCORE_tmp mul NComponents 1 roll
				}repeat
			}{
				NComponents{
					1 sub AGMCORE_tmp mul 1 add NComponents 1 roll
				}repeat
			}ifelse
		}ifelse
	}{
		ColorLookup AGMCORE_tmp ColorLookup length 1 sub mul round cvi get
		aload pop
	}ifelse
	end
}def
/sep_colorspace_gray_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	GrayLookup AGMCORE_tmp GrayLookup length 1 sub mul round cvi get
	end
}def
/sep_proc_name
{
	dup 0 get 
	dup/DeviceRGB eq exch/DeviceCMYK eq or level2 not and has_color not and{
		pop[/DeviceGray]
		/sep_colorspace_gray_proc
	}{
		/sep_colorspace_proc
	}ifelse
}def
/setsepcolorspace
{
	current_spot_alias{
		dup begin
			Name map_alias{
				exch pop
			}if
		end
	}if
	dup/sep_colorspace_dict exch AGMCORE_gput
	begin
	CSA map_csa
	/AGMCORE_sep_special Name dup()eq exch(All)eq or store
	AGMCORE_avoid_L2_sep_space{
		[/Indexed MappedCSA sep_proc_name 255 exch 
			{255 div}/exec cvx 3 -1 roll[4 1 roll load/exec cvx]cvx 
		]setcolorspace_opt
		/TintProc{
			255 mul round cvi setcolor
		}bdf
	}{
		MappedCSA 0 get/DeviceCMYK eq 
		currentdict/Components known and 
		AGMCORE_sep_special not and{
			/TintProc[
				Components aload pop Name findcmykcustomcolor 
				/exch cvx/setcustomcolor cvx
			]cvx bdf
		}{
 			AGMCORE_host_sep Name(All)eq and{
 				/TintProc{
					1 exch sub setseparationgray 
				}bdf
 			}{
				AGMCORE_in_rip_sep MappedCSA 0 get/DeviceCMYK eq and 
				AGMCORE_host_sep or
				Name()eq and{
					/TintProc[
						MappedCSA sep_proc_name exch 0 get/DeviceCMYK eq{
							cvx/setcmykcolor cvx
						}{
							cvx/setgray cvx
						}ifelse
					]cvx bdf
				}{
					AGMCORE_producing_seps MappedCSA 0 get dup/DeviceCMYK eq exch/DeviceGray eq or and AGMCORE_sep_special not and{
	 					/TintProc[
							/dup cvx
							MappedCSA sep_proc_name cvx exch
							0 get/DeviceGray eq{
								1/exch cvx/sub cvx 0 0 0 4 -1/roll cvx
							}if
							/Name cvx/findcmykcustomcolor cvx/exch cvx
							AGMCORE_host_sep{
								AGMCORE_is_cmyk_sep
								/Name cvx 
								/AGMCORE_IsSeparationAProcessColor load/exec cvx
								/not cvx/and cvx 
							}{
								Name inRip_spot_has_ink not
							}ifelse
							[
		 						/pop cvx 1
							]cvx/if cvx
							/setcustomcolor cvx
						]cvx bdf
 					}{
						/TintProc{setcolor}bdf
						[/Separation Name MappedCSA sep_proc_name load]setcolorspace_opt
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	}ifelse
	set_crd
	setsepcolor
	end
}def
/additive_blend
{
 	3 dict begin
 	/numarrays xdf
 	/numcolors xdf
 	0 1 numcolors 1 sub
 		{
 		/c1 xdf
 		1
 		0 1 numarrays 1 sub
 			{
			1 exch add/index cvx
 			c1/get cvx/mul cvx
 			}for
 		numarrays 1 add 1/roll cvx 
 		}for
 	numarrays[/pop cvx]cvx/repeat cvx
 	end
}def
/subtractive_blend
{
	3 dict begin
	/numarrays xdf
	/numcolors xdf
	0 1 numcolors 1 sub
		{
		/c1 xdf
		1 1
		0 1 numarrays 1 sub
			{
			1 3 3 -1 roll add/index cvx 
			c1/get cvx/sub cvx/mul cvx
			}for
		/sub cvx
		numarrays 1 add 1/roll cvx
		}for
	numarrays[/pop cvx]cvx/repeat cvx
	end
}def
/exec_tint_transform
{
	/TintProc[
		/TintTransform cvx/setcolor cvx
	]cvx bdf
	MappedCSA setcolorspace_opt
}bdf
/devn_makecustomcolor
{
	2 dict begin
	/names_index xdf
	/Names xdf
	1 1 1 1 Names names_index get findcmykcustomcolor
	/devicen_tints AGMCORE_gget names_index get setcustomcolor
	Names length{pop}repeat
	end
}bdf
/setdevicencolorspace
{
	dup/AliasedColorants known{false}{true}ifelse 
	current_spot_alias and{
		7 dict begin
		/names_index 0 def
		dup/names_len exch/Names get length def
		/new_names names_len array def
		/new_LookupTables names_len array def
		/alias_cnt 0 def
		dup/Names get
		{
			dup map_alias{
				exch pop
				dup/ColorLookup known{
					dup begin
					new_LookupTables names_index ColorLookup put
					end
				}{
					dup/Components known{
						dup begin
						new_LookupTables names_index Components put
						end
					}{
						dup begin
						new_LookupTables names_index[null null null null]put
						end
					}ifelse
				}ifelse
				new_names names_index 3 -1 roll/Name get put
				/alias_cnt alias_cnt 1 add def 
			}{
				/name xdf				
				new_names names_index name put
				dup/LookupTables known{
					dup begin
					new_LookupTables names_index LookupTables names_index get put
					end
				}{
					dup begin
					new_LookupTables names_index[null null null null]put
					end
				}ifelse
			}ifelse
			/names_index names_index 1 add def 
		}forall
		alias_cnt 0 gt{
			/AliasedColorants true def
			/lut_entry_len new_LookupTables 0 get dup length 256 ge{0 get length}{length}ifelse def
			0 1 names_len 1 sub{
				/names_index xdf
				new_LookupTables names_index get dup length 256 ge{0 get length}{length}ifelse lut_entry_len ne{
					/AliasedColorants false def
					exit
				}{
					new_LookupTables names_index get 0 get null eq{
						dup/Names get names_index get/name xdf
						name(Cyan)eq name(Magenta)eq name(Yellow)eq name(Black)eq
						or or or not{
							/AliasedColorants false def
							exit
						}if
					}if
				}ifelse
			}for
			lut_entry_len 1 eq{
				/AliasedColorants false def
			}if
			AliasedColorants{
				dup begin
				/Names new_names def
				/LookupTables new_LookupTables def
				/AliasedColorants true def
				/NComponents lut_entry_len def
				/TintMethod NComponents 4 eq{/Subtractive}{/Additive}ifelse def
				/MappedCSA TintMethod/Additive eq{/DeviceRGB}{/DeviceCMYK}ifelse def
				currentdict/TTTablesIdx known not{
					/TTTablesIdx -1 def
				}if
				end
			}if
		}if
		end
	}if
	dup/devicen_colorspace_dict exch AGMCORE_gput
	begin
	currentdict/AliasedColorants known{
		AliasedColorants
	}{
		false
	}ifelse
	dup not{
		CSA map_csa
	}if
	/TintTransform load type/nulltype eq or{
		/TintTransform[
			0 1 Names length 1 sub
				{
				/TTTablesIdx TTTablesIdx 1 add def
				dup LookupTables exch get dup 0 get null eq
					{
					1 index
					Names exch get
					dup(Cyan)eq
						{
						pop exch
						LookupTables length exch sub
						/index cvx
						0 0 0
						}
						{
						dup(Magenta)eq
							{
							pop exch
							LookupTables length exch sub
							/index cvx
							0/exch cvx 0 0
							}{
							(Yellow)eq
								{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 3 -1/roll cvx 0
								}{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 0 4 -1/roll cvx
								}ifelse
							}ifelse
						}ifelse
					5 -1/roll cvx/astore cvx
					}{
					dup length 1 sub
					LookupTables length 4 -1 roll sub 1 add
					/index cvx/mul cvx/round cvx/cvi cvx/get cvx
					}ifelse
					Names length TTTablesIdx add 1 add 1/roll cvx
				}for
			Names length[/pop cvx]cvx/repeat cvx
			NComponents Names length
 			TintMethod/Subtractive eq
 				{
 				subtractive_blend
 				}{
 				additive_blend
 				}ifelse
		]cvx bdf
	}if
	AGMCORE_host_sep{
		Names convert_to_process{
			exec_tint_transform
		}
		{	
			currentdict/AliasedColorants known{
				AliasedColorants not
			}{
				false
			}ifelse
			5 dict begin
			/AvoidAliasedColorants xdf
			/painted? false def
			/names_index 0 def
			/names_len Names length def
			AvoidAliasedColorants{
				/currentspotalias current_spot_alias def
				false set_spot_alias
			}if
			Names{
				AGMCORE_is_cmyk_sep{
					dup(Cyan)eq AGMCORE_cyan_plate and exch
					dup(Magenta)eq AGMCORE_magenta_plate and exch
					dup(Yellow)eq AGMCORE_yellow_plate and exch
					(Black)eq AGMCORE_black_plate and or or or{
						/devicen_colorspace_dict AGMCORE_gget/TintProc[
							Names names_index/devn_makecustomcolor cvx
						]cvx ddf
						/painted? true def
					}if
					painted?{exit}if
				}{
					0 0 0 0 5 -1 roll findcmykcustomcolor 1 setcustomcolor currentgray 0 eq{
					/devicen_colorspace_dict AGMCORE_gget/TintProc[
						Names names_index/devn_makecustomcolor cvx
					]cvx ddf
					/painted? true def
					exit
					}if
				}ifelse
				/names_index names_index 1 add def
			}forall
			AvoidAliasedColorants{
				currentspotalias set_spot_alias
			}if
			painted?{
				/devicen_colorspace_dict AGMCORE_gget/names_index names_index put
			}{
				/devicen_colorspace_dict AGMCORE_gget/TintProc[
					names_len[/pop cvx]cvx/repeat cvx 1/setseparationgray cvx
 					0 0 0 0/setcmykcolor cvx
				]cvx ddf
			}ifelse
			end
		}ifelse
	}
	{
		AGMCORE_in_rip_sep{
			Names convert_to_process not
		}{
			level3
		}ifelse
		{
			[/DeviceN Names MappedCSA/TintTransform load]setcolorspace_opt
			/TintProc level3 not AGMCORE_in_rip_sep and{
				[
					Names/length cvx[/pop cvx]cvx/repeat cvx
				]cvx bdf
			}{
				{setcolor}bdf
			}ifelse
		}{
			exec_tint_transform
		}ifelse
	}ifelse
	set_crd
	/AliasedColorants false def
	end
}def
/setindexedcolorspace
{
	dup/indexed_colorspace_dict exch AGMCORE_gput
	begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				currentdict devncs
			}{
				1 currentdict sepcs
			}ifelse
			AGMCORE_host_sep{
				4 dict begin
				/compCnt/Names where{pop Names length}{1}ifelse def
				/NewLookup HiVal 1 add string def
				0 1 HiVal{
					/tableIndex xdf
					Lookup dup type/stringtype eq{
						compCnt tableIndex map_index
					}{
						exec
					}ifelse
					/Names where{
						pop setdevicencolor
					}{
						setsepcolor
					}ifelse
					currentgray
					tableIndex exch
					255 mul cvi 
					NewLookup 3 1 roll put
				}for
				[/Indexed currentcolorspace HiVal NewLookup]setcolorspace_opt
				end
			}{
				level3
				{
					currentdict/Names known{
						[/Indexed[/DeviceN Names MappedCSA/TintTransform load]HiVal Lookup]setcolorspace_opt
					}{
						[/Indexed[/Separation Name MappedCSA sep_proc_name load]HiVal Lookup]setcolorspace_opt
					}ifelse
				}{
				[/Indexed MappedCSA HiVal
					[
					currentdict/Names known{
						Lookup dup type/stringtype eq
							{/exch cvx CSDBase/CSD get_res/Names get length dup/mul cvx exch/getinterval cvx{255 div}/forall cvx}
							{/exec cvx}ifelse
							/TintTransform load/exec cvx
					}{
						Lookup dup type/stringtype eq
							{/exch cvx/get cvx 255/div cvx}
							{/exec cvx}ifelse
							CSDBase/CSD get_res/MappedCSA get sep_proc_name exch pop/load cvx/exec cvx
					}ifelse
					]cvx
				]setcolorspace_opt
				}ifelse
			}ifelse
			end
			set_crd
		}
		{
			CSA map_csa
			AGMCORE_host_sep level2 not and{
				0 0 0 0 setcmykcolor
			}{
				[/Indexed MappedCSA 
				level2 not has_color not and{
					dup 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or{
						pop[/DeviceGray]
					}if
					HiVal GrayLookup
				}{
					HiVal 
					currentdict/RangeArray known{
						{
							/indexed_colorspace_dict AGMCORE_gget begin
							Lookup exch 
							dup HiVal gt{
								pop HiVal
							}if
							NComponents mul NComponents getinterval{}forall
							NComponents 1 sub -1 0{
								RangeArray exch 2 mul 2 getinterval aload pop map255_to_range
								NComponents 1 roll
							}for
							end
						}bind
					}{
						Lookup
					}ifelse
				}ifelse
				]setcolorspace_opt
				set_crd
			}ifelse
		}ifelse
	end
}def
/setindexedcolor
{
	AGMCORE_host_sep{
		/indexed_colorspace_dict AGMCORE_gget
		begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				map_indexed_devn
				devn
			}
			{
				Lookup 1 3 -1 roll map_index
				sep
			}ifelse
			end
		}{
			Lookup MappedCSA/DeviceCMYK eq{4}{1}ifelse 3 -1 roll
			map_index
			MappedCSA/DeviceCMYK eq{setcmykcolor}{setgray}ifelse
		}ifelse
		end
	}{
		level3 not AGMCORE_in_rip_sep and/indexed_colorspace_dict AGMCORE_gget/CSDBase known and{
			/indexed_colorspace_dict AGMCORE_gget/CSDBase get/CSD get_res begin
			map_indexed_devn
			devn
			end
		}
		{
			setcolor
		}ifelse
	}ifelse
}def
/ignoreimagedata
{
	currentoverprint not{
		gsave
		dup clonedict begin
		1 setgray
		/Decode[0 1]def
		/DataSource<FF>def
		/MultipleDataSources false def
		/BitsPerComponent 8 def
		currentdict end
		systemdict/image gx
		grestore
		}if
	consumeimagedata
}def
/add_res
{
	dup/CSD eq{
		pop 
		//Adobe_AGM_Core begin
		/AGMCORE_CSD_cache load 3 1 roll put
		end
	}{
		defineresource pop
	}ifelse
}def
/del_res
{
	{
		aload pop exch
		dup/CSD eq{
			pop 
			{//Adobe_AGM_Core/AGMCORE_CSD_cache get exch undef}forall
		}{
			exch
			{1 index undefineresource}forall
			pop
		}ifelse
	}forall
}def
/get_res
{
	dup/CSD eq{
		pop
		dup type dup/nametype eq exch/stringtype eq or{
			AGMCORE_CSD_cache exch get
		}if
	}{
		findresource
	}ifelse
}def
/get_csa_by_name
{
	dup type dup/nametype eq exch/stringtype eq or{
		/CSA get_res
	}if
}def
/paintproc_buf_init
{
	/count get 0 0 put
}def
/paintproc_buf_next
{
	dup/count get dup 0 get
	dup 3 1 roll
	1 add 0 xpt
	get				
}def
/cachepaintproc_compress
{
	5 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	/string_size 16000 def
	/readbuffer string_size string def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	/LZWFilter 
	{
		exch
		dup length 0 eq{
			pop
		}{
			ppdict dup length 1 sub 3 -1 roll put
		}ifelse
		{string_size}{0}ifelse string
	}/LZWEncode filter def
	{		
		ReadFilter readbuffer readstring
		exch LZWFilter exch writestring
		not{exit}if
	}loop
	LZWFilter closefile
	ppdict				
	end
}def
/cachepaintproc
{
	2 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	{
		ReadFilter 16000 string readstring exch
		ppdict dup length 1 sub 3 -1 roll put
		not{exit}if
	}loop
	ppdict dup dup length 1 sub()put					
	end	
}def
/make_pattern
{
	exch clonedict exch
	dup matrix currentmatrix matrix concatmatrix 0 0 3 2 roll itransform
	exch 3 index/XStep get 1 index exch 2 copy div cvi mul sub sub
	exch 3 index/YStep get 1 index exch 2 copy div cvi mul sub sub
	matrix translate exch matrix concatmatrix
			 1 index begin
		BBox 0 get XStep div cvi XStep mul/xshift exch neg def
		BBox 1 get YStep div cvi YStep mul/yshift exch neg def
		BBox 0 get xshift add
		BBox 1 get yshift add
		BBox 2 get xshift add
		BBox 3 get yshift add
		4 array astore
		/BBox exch def
		[xshift yshift/translate load null/exec load]dup
		3/PaintProc load put cvx/PaintProc exch def
		end
	gsave 0 setgray
	makepattern
	grestore
}def
/set_pattern
{
	dup/PatternType get 1 eq{
		dup/PaintType get 1 eq{
			currentoverprint sop[/DeviceGray]setcolorspace 0 setgray
		}if
	}if
	setpattern
}def
/setcolorspace_opt
{
	dup currentcolorspace eq{pop}{setcolorspace}ifelse
}def
/updatecolorrendering
{
	currentcolorrendering/RenderingIntent known{
		currentcolorrendering/RenderingIntent get
	}
	{
		Intent/AbsoluteColorimetric eq 
		{
			/absolute_colorimetric_crd AGMCORE_gget dup null eq
		}
		{
			Intent/RelativeColorimetric eq
			{
				/relative_colorimetric_crd AGMCORE_gget dup null eq
			}
			{
				Intent/Saturation eq
				{
					/saturation_crd AGMCORE_gget dup null eq
				}
				{
					/perceptual_crd AGMCORE_gget dup null eq
				}ifelse
			}ifelse
		}ifelse
		{
			pop null	
		}
		{
			/RenderingIntent known{null}{Intent}ifelse
		}ifelse
	}ifelse
	Intent ne{
		Intent/ColorRendering{findresource}stopped
		{
			pop pop systemdict/findcolorrendering known
			{
 				Intent findcolorrendering
 				{
 					/ColorRendering findresource true exch
 				}
 				{
 					/ColorRendering findresource
					product(Xerox Phaser 5400)ne
					exch
 				}ifelse
				dup Intent/AbsoluteColorimetric eq 
				{
					/absolute_colorimetric_crd exch AGMCORE_gput
				}
				{
					Intent/RelativeColorimetric eq
					{
						/relative_colorimetric_crd exch AGMCORE_gput
					}
					{
						Intent/Saturation eq
						{
							/saturation_crd exch AGMCORE_gput
						}
						{
							Intent/Perceptual eq
							{
								/perceptual_crd exch AGMCORE_gput
							}
							{
								pop
							}ifelse
						}ifelse
					}ifelse
				}ifelse
				1 index{exch}{pop}ifelse
			}
			{false}ifelse
		}
		{true}ifelse
		{
			dup begin
			currentdict/TransformPQR known{
				currentdict/TransformPQR get aload pop
				3{{}eq 3 1 roll}repeat or or
			}
			{true}ifelse
			currentdict/MatrixPQR known{
				currentdict/MatrixPQR get aload pop
				1.0 eq 9 1 roll 0.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 1.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 0.0 eq 9 1 roll 1.0 eq
				and and and and and and and and
			}
			{true}ifelse
			end
			or
			{
				clonedict begin
				/TransformPQR[
					{4 -1 roll 3 get dup 3 1 roll sub 5 -1 roll 3 get 3 -1 roll sub div
					3 -1 roll 3 get 3 -1 roll 3 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 4 get dup 3 1 roll sub 5 -1 roll 4 get 3 -1 roll sub div
					3 -1 roll 4 get 3 -1 roll 4 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 5 get dup 3 1 roll sub 5 -1 roll 5 get 3 -1 roll sub div
					3 -1 roll 5 get 3 -1 roll 5 get dup 4 1 roll sub mul add}bind
				]def
				/MatrixPQR[0.8951 -0.7502 0.0389 0.2664 1.7135 -0.0685 -0.1614 0.0367 1.0296]def
				/RangePQR[-0.3227950745 2.3229645538 -1.5003771057 3.5003465881 -0.1369979095 2.136967392]def
				currentdict end
			}if
			setcolorrendering_opt
		}if		
	}if
}def
/set_crd
{
	AGMCORE_host_sep not level2 and{
		currentdict/ColorRendering known{
			ColorRendering/ColorRendering{findresource}stopped not{setcolorrendering_opt}if
		}{
			currentdict/Intent known{
				updatecolorrendering
			}if
		}ifelse
		currentcolorspace dup type/arraytype eq
			{0 get}if
		/DeviceRGB eq
			{
			currentdict/UCR known
				{/UCR}{/AGMCORE_currentucr}ifelse
			load setundercolorremoval
			currentdict/BG known 
				{/BG}{/AGMCORE_currentbg}ifelse
			load setblackgeneration
			}if
	}if
}def
/set_ucrbg
{
	dup null eq {pop /AGMCORE_currentbg load}{/Procedure get_res}ifelse
	dup currentblackgeneration eq {pop}{setblackgeneration}ifelse
	dup null eq {pop /AGMCORE_currentucr load}{/Procedure get_res}ifelse
	dup currentundercolorremoval eq {pop}{setundercolorremoval}ifelse
}def
/setcolorrendering_opt
{
	dup currentcolorrendering eq{
		pop
	}{
		product(HP Color LaserJet 2605)anchorsearch{
			pop pop pop
		}{
			pop
			clonedict
			begin
				/Intent Intent def
				currentdict
			end
			setcolorrendering
		}ifelse
	}ifelse
}def
/cpaint_gcomp
{
	convert_to_process//Adobe_AGM_Core/AGMCORE_ConvertToProcess xddf
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get not
	{
		(%end_cpaint_gcomp)flushinput
	}if
}def
/cpaint_gsep
{
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get
	{	
		(%end_cpaint_gsep)flushinput
	}if
}def
/cpaint_gend
{np}def
/T1_path
{
	currentfile token pop currentfile token pop mo
	{
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 exch rlineto 
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 rlineto
	}loop
}def
/T1_gsave
	level3
	{/clipsave}
	{/gsave}ifelse
	load def
/T1_grestore
	level3
	{/cliprestore}
	{/grestore}ifelse 
	load def
/set_spot_alias_ary
{
	dup inherit_aliases
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry xddf
}def
/set_spot_normalization_ary
{
	dup inherit_aliases
	dup length
	/AGMCORE_SpotAliasAry where{pop AGMCORE_SpotAliasAry length add}if
	array
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry2 xddf
	/AGMCORE_SpotAliasAry where{
		pop
		AGMCORE_SpotAliasAry2 0 AGMCORE_SpotAliasAry putinterval
		AGMCORE_SpotAliasAry length
	}{0}ifelse
	AGMCORE_SpotAliasAry2 3 1 roll exch putinterval
	true set_spot_alias
}def
/inherit_aliases
{
	{dup/Name get map_alias{/CSD put}{pop}ifelse}forall
}def
/set_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias 3 -1 roll put
	}{
		pop
	}ifelse
}def
/current_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias get
	}{
		false
	}ifelse
}def
/map_alias
{
	/AGMCORE_SpotAliasAry2 where{
		begin
			/AGMCORE_name xdf
			false	
			AGMCORE_SpotAliasAry2{
				dup/Name get AGMCORE_name eq{
					/CSD get/CSD get_res
					exch pop true
					exit
				}{
					pop
				}ifelse
			}forall
		end
	}{
		pop false
	}ifelse
}bdf
/spot_alias
{
	true set_spot_alias
	/AGMCORE_&setcustomcolor AGMCORE_key_known not{
		//Adobe_AGM_Core/AGMCORE_&setcustomcolor/setcustomcolor load put
	}if
	/customcolor_tint 1 AGMCORE_gput
	//Adobe_AGM_Core begin
	/setcustomcolor
	{
		//Adobe_AGM_Core begin
		dup/customcolor_tint exch AGMCORE_gput
		1 index aload pop pop 1 eq exch 1 eq and exch 1 eq and exch 1 eq and not
		current_spot_alias and{1 index 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/sep_colorspace_dict AGMCORE_gget null ne
			{/sep_colorspace_dict AGMCORE_gget/ForeignContent known not}{false}ifelse
			3 1 roll 2 index{
				exch pop/sep_tint AGMCORE_gget exch
			}if
			mark 3 1 roll
			setsepcolorspace
			counttomark 0 ne{
				setsepcolor
			}if
			pop
			not{/sep_tint 1.0 AGMCORE_gput/sep_colorspace_dict AGMCORE_gget/ForeignContent true put}if
			pop
			true set_spot_alias
		}{
			AGMCORE_&setcustomcolor
		}ifelse
		end
	}bdf
	end
}def
/begin_feature
{
	Adobe_AGM_Core/AGMCORE_feature_dictCount countdictstack put
	count Adobe_AGM_Core/AGMCORE_feature_opCount 3 -1 roll put
	{Adobe_AGM_Core/AGMCORE_feature_ctm matrix currentmatrix put}if
}def
/end_feature
{
	2 dict begin
	/spd/setpagedevice load def
	/setpagedevice{get_gstate spd set_gstate}def
	stopped{$error/newerror false put}if
	end
	count Adobe_AGM_Core/AGMCORE_feature_opCount get sub dup 0 gt{{pop}repeat}{pop}ifelse
	countdictstack Adobe_AGM_Core/AGMCORE_feature_dictCount get sub dup 0 gt{{end}repeat}{pop}ifelse
	{Adobe_AGM_Core/AGMCORE_feature_ctm get setmatrix}if
}def
/set_negative
{
	//Adobe_AGM_Core begin
	/AGMCORE_inverting exch def
	level2{
		currentpagedevice/NegativePrint known AGMCORE_distilling not and{
			currentpagedevice/NegativePrint get//Adobe_AGM_Core/AGMCORE_inverting get ne{
				true begin_feature true{
						<</NegativePrint//Adobe_AGM_Core/AGMCORE_inverting get>>setpagedevice
				}end_feature
			}if
			/AGMCORE_inverting false def
		}if
	}if
	AGMCORE_inverting{
		[{1 exch sub}/exec load dup currenttransfer exch]cvx bind settransfer
 		AGMCORE_distilling{
 			erasepage
 		}{
 			gsave np clippath 1/setseparationgray where{pop setseparationgray}{setgray}ifelse
 			/AGMIRS_&fill where{pop AGMIRS_&fill}{fill}ifelse grestore
 		}ifelse
	}if
	end
}def
/lw_save_restore_override{
	/md where{
		pop
		md begin
		initializepage
		/initializepage{}def
		/pmSVsetup{}def
		/endp{}def
		/pse{}def
		/psb{}def
		/orig_showpage where
			{pop}
			{/orig_showpage/showpage load def}
		ifelse
		/showpage{orig_showpage gR}def
		end
	}if
}def
/pscript_showpage_override{
	/NTPSOct95 where
	{
		begin
		showpage
		save
		/showpage/restore load def
		/restore{exch pop}def
		end
	}if
}def
/driver_media_override
{
	/md where{
		pop
		md/initializepage known{
			md/initializepage{}put
		}if
		md/rC known{
			md/rC{4{pop}repeat}put
		}if
	}if
	/mysetup where{
		/mysetup[1 0 0 1 0 0]put
	}if
	Adobe_AGM_Core/AGMCORE_Default_CTM matrix currentmatrix put
	level2
		{Adobe_AGM_Core/AGMCORE_Default_PageSize currentpagedevice/PageSize get put}if
}def
/capture_mysetup
{
	/Pscript_Win_Data where{
		pop
		Pscript_Win_Data/mysetup known{
			Adobe_AGM_Core/save_mysetup Pscript_Win_Data/mysetup get put
		}if
	}if
}def
/restore_mysetup
{
	/Pscript_Win_Data where{
		pop
		Pscript_Win_Data/mysetup known{
			Adobe_AGM_Core/save_mysetup known{
				Pscript_Win_Data/mysetup Adobe_AGM_Core/save_mysetup get put
				Adobe_AGM_Core/save_mysetup undef
			}if
		}if
	}if
}def
/driver_check_media_override
{
 	/PrepsDict where
 		{pop}
		{
		Adobe_AGM_Core/AGMCORE_Default_CTM get matrix currentmatrix ne
		Adobe_AGM_Core/AGMCORE_Default_PageSize get type/arraytype eq
			{
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 0 get currentpagedevice/PageSize get 0 get eq and
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 1 get currentpagedevice/PageSize get 1 get eq and
			}if
			{
			Adobe_AGM_Core/AGMCORE_Default_CTM get setmatrix
			}if
		}ifelse
}def
AGMCORE_err_strings begin
	/AGMCORE_bad_environ(Environment not satisfactory for this job. Ensure that the PPD is correct or that the PostScript level requested is supported by this printer. )def
	/AGMCORE_color_space_onhost_seps(This job contains colors that will not separate with on-host methods. )def
	/AGMCORE_invalid_color_space(This job contains an invalid color space. )def
end
/set_def_ht
{AGMCORE_def_ht sethalftone}def
/set_def_flat
{AGMCORE_Default_flatness setflat}def
end
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_CoolType_Core 2.31 0
%%Copyright: Copyright 1997-2006 Adobe Systems Incorporated. All Rights Reserved.
%%Version: 2.31 0
10 dict begin
/Adobe_CoolType_Passthru currentdict def
/Adobe_CoolType_Core_Defined userdict/Adobe_CoolType_Core known def
Adobe_CoolType_Core_Defined
	{/Adobe_CoolType_Core userdict/Adobe_CoolType_Core get def}
if
userdict/Adobe_CoolType_Core 70 dict dup begin put
/Adobe_CoolType_Version 2.31 def
/Level2?
	systemdict/languagelevel known dup
		{pop systemdict/languagelevel get 2 ge}
	if def
Level2? not
	{
	/currentglobal false def
	/setglobal/pop load def
	/gcheck{pop false}bind def
	/currentpacking false def
	/setpacking/pop load def
	/SharedFontDirectory 0 dict def
	}
if
currentpacking
true setpacking
currentglobal false setglobal
userdict/Adobe_CoolType_Data 2 copy known not
	{2 copy 10 dict put}
if
get
	 begin
	/@opStackCountByLevel 32 dict def
	/@opStackLevel 0 def
	/@dictStackCountByLevel 32 dict def
	/@dictStackLevel 0 def
	 end
setglobal
currentglobal true setglobal
userdict/Adobe_CoolType_GVMFonts known not
	{userdict/Adobe_CoolType_GVMFonts 10 dict put}
if
setglobal
currentglobal false setglobal
userdict/Adobe_CoolType_LVMFonts known not
	{userdict/Adobe_CoolType_LVMFonts 10 dict put}
if
setglobal
/ct_VMDictPut
	{
	dup gcheck{Adobe_CoolType_GVMFonts}{Adobe_CoolType_LVMFonts}ifelse
	3 1 roll put
	}bind def
/ct_VMDictUndef
	{
	dup Adobe_CoolType_GVMFonts exch known
		{Adobe_CoolType_GVMFonts exch undef}
		{
			dup Adobe_CoolType_LVMFonts exch known
			{Adobe_CoolType_LVMFonts exch undef}
			{pop}
			ifelse
		}ifelse
	}bind def
/ct_str1 1 string def
/ct_xshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			_ct_x _ct_y moveto
			0
			rmoveto
		}
		ifelse
		/_ct_i _ct_i 1 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/ct_yshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			_ct_x _ct_y moveto
			0 exch
			rmoveto
		}
		ifelse
		/_ct_i _ct_i 1 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/ct_xyshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			{_ct_na _ct_i 1 add get}stopped 
			{pop pop pop}
			{
				_ct_x _ct_y moveto
				rmoveto
			}
			ifelse
		}
		ifelse
		/_ct_i _ct_i 2 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/xsh{{@xshow}stopped{Adobe_CoolType_Data begin ct_xshow end}if}bind def
/ysh{{@yshow}stopped{Adobe_CoolType_Data begin ct_yshow end}if}bind def
/xysh{{@xyshow}stopped{Adobe_CoolType_Data begin ct_xyshow end}if}bind def
currentglobal true setglobal
/ct_T3Defs
{
/BuildChar
{
	1 index/Encoding get exch get
	1 index/BuildGlyph get exec
}bind def
/BuildGlyph
{
	exch begin
	GlyphProcs exch get exec
	end
}bind def
}bind def
setglobal
/@_SaveStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@vmState currentglobal def false setglobal
		@opStackCountByLevel
		@opStackLevel
		2 copy known not
			{
			2 copy
			3 dict dup/args
			7 index
			5 add array put
			put get
			}
			{
			get dup/args get dup length 3 index lt
				{
				dup length 5 add array exch
				1 index exch 0 exch putinterval
				1 index exch/args exch put
				}
				{pop}
			ifelse
			}
		ifelse
			begin
			count 1 sub
			1 index lt
				{pop count}
			if
			dup/argCount exch def
			dup 0 gt
				{
				args exch 0 exch getinterval 
			astore pop
				}
				{pop}
			ifelse
			count
			/restCount exch def
			end
		/@opStackLevel @opStackLevel 1 add def
		countdictstack 1 sub
		@dictStackCountByLevel exch @dictStackLevel exch put
		/@dictStackLevel @dictStackLevel 1 add def
		@vmState setglobal
		end
	}bind def
/@_RestoreStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@opStackLevel @opStackLevel 1 sub def
		@opStackCountByLevel @opStackLevel get
			begin
			count restCount sub dup 0 gt
				{{pop}repeat}
				{pop}
			ifelse
			args 0 argCount getinterval{}forall
			end
		/@dictStackLevel @dictStackLevel 1 sub def
		@dictStackCountByLevel @dictStackLevel get
		end
	countdictstack exch sub dup 0 gt
		{{end}repeat}
		{pop}
	ifelse
	}bind def
/@_PopStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@opStackLevel @opStackLevel 1 sub def
		/@dictStackLevel @dictStackLevel 1 sub def
		end
	}bind def
/@Raise
	{
	exch cvx exch errordict exch get exec
	stop
	}bind def
/@ReRaise
	{
	cvx $error/errorname get errordict exch get exec
	stop
	}bind def
/@Stopped
	{
	0 @#Stopped
	}bind def
/@#Stopped
	{
	@_SaveStackLevels
	stopped
		{@_RestoreStackLevels true}
		{@_PopStackLevels false}
	ifelse
	}bind def
/@Arg
	{
	Adobe_CoolType_Data
		begin
		@opStackCountByLevel @opStackLevel 1 sub get
		begin
		args exch
		argCount 1 sub exch sub get
		end
		end
	}bind def
currentglobal true setglobal
/CTHasResourceForAllBug
	Level2?
		{
		1 dict dup
				/@shouldNotDisappearDictValue true def
				Adobe_CoolType_Data exch/@shouldNotDisappearDict exch put
				begin
				count @_SaveStackLevels
					{(*){pop stop}128 string/Category resourceforall}
				stopped pop
				@_RestoreStackLevels
				currentdict Adobe_CoolType_Data/@shouldNotDisappearDict get dup 3 1 roll ne dup 3 1 roll
					{
						 /@shouldNotDisappearDictValue known
								{
										 {
												end
												currentdict 1 index eq
													{pop exit}
												if
										 }
									 loop
								}
						 if
					}
					{
						 pop
						 end
					}
				ifelse
		}
		{false}
	ifelse
	def
true setglobal
/CTHasResourceStatusBug
	Level2?
		{
		mark
			{/steveamerige/Category resourcestatus}
		stopped
			{cleartomark true}
			{cleartomark currentglobal not}
		ifelse
		}
		{false}
	ifelse
	def
setglobal
/CTResourceStatus
		{
		mark 3 1 roll
		/Category findresource
			begin
			({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec
				{cleartomark false}
				{{3 2 roll pop true}{cleartomark false}ifelse}
			ifelse
			end
		}bind def
/CTWorkAroundBugs
	{
	Level2?
		{
		/cid_PreLoad/ProcSet resourcestatus
			{
			pop pop
			currentglobal
			mark
				{
				(*)
					{
					dup/CMap CTHasResourceStatusBug
						{CTResourceStatus}
						{resourcestatus}
					ifelse
						{
						pop dup 0 eq exch 1 eq or
							{
							dup/CMap findresource gcheck setglobal
							/CMap undefineresource
							}
							{
							pop CTHasResourceForAllBug
								{exit}
								{stop}
							ifelse
							}
						ifelse
						}
						{pop}
					ifelse
					}
				128 string/CMap resourceforall
				}
			stopped
				{cleartomark}
			stopped pop
			setglobal
			}
		if
		}
	if
	}bind def
/ds
	{
	Adobe_CoolType_Core
		begin
		CTWorkAroundBugs
		/mo/moveto load def
		/nf/newencodedfont load def
		/msf{makefont setfont}bind def
		/uf{dup undefinefont ct_VMDictUndef}bind def
		/ur/undefineresource load def
		/chp/charpath load def
		/awsh/awidthshow load def
		/wsh/widthshow load def
		/ash/ashow load def
		/@xshow/xshow load def
		/@yshow/yshow load def
		/@xyshow/xyshow load def
		/@cshow/cshow load def
		/sh/show load def
		/rp/repeat load def
		/.n/.notdef def
		end
		currentglobal false setglobal
	 userdict/Adobe_CoolType_Data 2 copy known not
		 {2 copy 10 dict put}
		if
		get
		begin
		/AddWidths? false def
		/CC 0 def
		/charcode 2 string def
		/@opStackCountByLevel 32 dict def
		/@opStackLevel 0 def
		/@dictStackCountByLevel 32 dict def
		/@dictStackLevel 0 def
		/InVMFontsByCMap 10 dict def
		/InVMDeepCopiedFonts 10 dict def
		end
		setglobal
	}bind def
/dt
	{
	currentdict Adobe_CoolType_Core eq
		{end}
	if
	}bind def
/ps
	{
	Adobe_CoolType_Core begin
	Adobe_CoolType_GVMFonts begin
	Adobe_CoolType_LVMFonts begin
	SharedFontDirectory begin
	}bind def
/pt
	{
	end
	end
	end
	end
	}bind def
/unload
	{
	systemdict/languagelevel known
		{
		systemdict/languagelevel get 2 ge
			{
			userdict/Adobe_CoolType_Core 2 copy known
				{undef}
				{pop pop}
			ifelse
			}
		if
		}
	if
	}bind def
/ndf
	{
	1 index where
		{pop pop pop}
		{dup xcheck{bind}if def}
	ifelse
	}def
/findfont systemdict
	begin
	userdict
		begin
		/globaldict where{/globaldict get begin}if
			dup where pop exch get
		/globaldict where{pop end}if
		end
	end
Adobe_CoolType_Core_Defined
	{/systemfindfont exch def}
	{
	/findfont 1 index def
	/systemfindfont exch def
	}
ifelse
/undefinefont
	{pop}ndf
/copyfont
	{
	currentglobal 3 1 roll
	1 index gcheck setglobal
	dup null eq{0}{dup length}ifelse
	2 index length add 1 add dict
		begin
		exch
			{
			1 index/FID eq
				{pop pop}
				{def}
			ifelse
			}
		forall
		dup null eq
			{pop}
			{{def}forall}
		ifelse
		currentdict
		end
	exch setglobal
	}bind def
/copyarray
	{
	currentglobal exch
	dup gcheck setglobal
	dup length array copy
	exch setglobal
	}bind def
/newencodedfont
	{
	currentglobal
		{
		SharedFontDirectory 3 index known
			{SharedFontDirectory 3 index get/FontReferenced known}
			{false}
		ifelse
		}
		{
		FontDirectory 3 index known
			{FontDirectory 3 index get/FontReferenced known}
			{
			SharedFontDirectory 3 index known
				{SharedFontDirectory 3 index get/FontReferenced known}
				{false}
			ifelse
			}
		ifelse
		}
	ifelse
	dup
		{
		3 index findfont/FontReferenced get
		2 index dup type/nametype eq
			{findfont}
		if ne
			{pop false}
		if
		}
	if
	dup
		{
		1 index dup type/nametype eq
			{findfont}
		 if
		dup/CharStrings known
			{
			/CharStrings get length
			4 index findfont/CharStrings get length
			ne
				{
				pop false
				}
			if 
			}
			{pop}
			ifelse
		}
	if
		{
		pop
		1 index findfont
		/Encoding get exch
		0 1 255
			{2 copy get 3 index 3 1 roll put}
		for
		pop pop pop
		}
		{
		currentglobal
	 4 1 roll
		dup type/nametype eq
		 {findfont}
	 if
	 dup gcheck setglobal
		dup dup maxlength 2 add dict
			begin
			exch
				{
				1 index/FID ne
				2 index/Encoding ne and
					{def}
					{pop pop}
				ifelse
				}
			forall
			/FontReferenced exch def
			/Encoding exch dup length array copy def
			/FontName 1 index dup type/stringtype eq{cvn}if def dup
			currentdict
			end
		definefont ct_VMDictPut
		setglobal
		}
	ifelse
	}bind def
/SetSubstituteStrategy
	{
	$SubstituteFont
		begin
		dup type/dicttype ne
			{0 dict}
		if
		currentdict/$Strategies known
			{
			exch $Strategies exch 
			2 copy known
				{
				get
				2 copy maxlength exch maxlength add dict
					begin
					{def}forall
					{def}forall
					currentdict
					dup/$Init known
						{dup/$Init get exec}
					if
					end
				/$Strategy exch def
				}
				{pop pop pop}
			ifelse
			}
			{pop pop}
		ifelse
		end
	}bind def
/scff
	{
	$SubstituteFont
		begin
		dup type/stringtype eq
			{dup length exch}
			{null}
		ifelse
		/$sname exch def
		/$slen exch def
		/$inVMIndex
			$sname null eq
				{
				1 index $str cvs
				dup length $slen sub $slen getinterval cvn
				}
				{$sname}
			ifelse def
		end
		{findfont}
	@Stopped
		{
		dup length 8 add string exch
		1 index 0(BadFont:)putinterval
		1 index exch 8 exch dup length string cvs putinterval cvn
			{findfont}
		@Stopped
			{pop/Courier findfont}
		if
		}
	if
	$SubstituteFont
		begin
		/$sname null def
		/$slen 0 def
		/$inVMIndex null def
		end
	}bind def
/isWidthsOnlyFont
	{
	dup/WidthsOnly known
		{pop pop true}
		{
		dup/FDepVector known
			{/FDepVector get{isWidthsOnlyFont dup{exit}if}forall}
			{
			dup/FDArray known
				{/FDArray get{isWidthsOnlyFont dup{exit}if}forall}
				{pop}
			ifelse
			}
		ifelse
		}
	ifelse
	}bind def
/ct_StyleDicts 4 dict dup begin
		 /Adobe-Japan1 4 dict dup begin
					 Level2?
								{
								/Serif
								/HeiseiMin-W3-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiMin-W3}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiMin-W3/CIDFont resourcestatus
								{pop pop/HeiseiMin-W3}
								{/Ryumin-Light}
								ifelse
							}
							{/Ryumin-Light}
							ifelse
								}
								ifelse
								def
								/SansSerif
								/HeiseiKakuGo-W5-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiKakuGo-W5}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiKakuGo-W5/CIDFont resourcestatus
								{pop pop/HeiseiKakuGo-W5}
								{/GothicBBB-Medium}
								ifelse
							}
							{/GothicBBB-Medium}
							ifelse
								}
								ifelse
								def
								/HeiseiMaruGo-W4-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiMaruGo-W4}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiMaruGo-W4/CIDFont resourcestatus
								{pop pop/HeiseiMaruGo-W4}
								{
									/Jun101-Light-RKSJ-H/Font resourcestatus
									{pop pop/Jun101-Light}
									{SansSerif}
									ifelse
								}
								ifelse
							}
							{
								/Jun101-Light-RKSJ-H/Font resourcestatus
								{pop pop/Jun101-Light}
								{SansSerif}
								ifelse
							}
							ifelse
								}
								ifelse
								/RoundSansSerif exch def
								/Default Serif def
								}
								{
								/Serif/Ryumin-Light def
								/SansSerif/GothicBBB-Medium def
								{
								(fonts/Jun101-Light-83pv-RKSJ-H)status
								}stopped
								{pop}{
										 {pop pop pop pop/Jun101-Light}
										 {SansSerif}
										 ifelse
										 /RoundSansSerif exch def
								}ifelse
								/Default Serif def
								}
					 ifelse
		 end
		 def
		 /Adobe-Korea1 4 dict dup begin
					/Serif/HYSMyeongJo-Medium def
					/SansSerif/HYGoThic-Medium def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
		 /Adobe-GB1 4 dict dup begin
					/Serif/STSong-Light def
					/SansSerif/STHeiti-Regular def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
		 /Adobe-CNS1 4 dict dup begin
					/Serif/MKai-Medium def
					/SansSerif/MHei-Medium def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
end
def
Level2?{currentglobal true setglobal}if
/ct_BoldRomanWidthProc 
	{
	stringwidth 1 index 0 ne{exch .03 add exch}if setcharwidth
	0 0
	}bind def
/ct_Type0WidthProc 
	{
	 dup stringwidth 0 0 moveto 
	 2 index true charpath pathbbox
	 0 -1 
	 7 index 2 div .88 
	 setcachedevice2
	 pop
	0 0
	}bind def
/ct_Type0WMode1WidthProc 
	{
	 dup stringwidth 
	 pop 2 div neg -0.88
	2 copy
	moveto 
	0 -1
	 5 -1 roll true charpath pathbbox
	 setcachedevice
	}bind def
/cHexEncoding
[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12
/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25
/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38
/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B
/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E
/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71
/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84
/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97
/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA
/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD
/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0
/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3
/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6
/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def
/ct_BoldBaseFont 
	 11 dict begin
		/FontType 3 def
		/FontMatrix[1 0 0 1 0 0]def
		/FontBBox[0 0 1 1]def
		/Encoding cHexEncoding def 
		/_setwidthProc/ct_BoldRomanWidthProc load def
		/_bcstr1 1 string def
		/BuildChar
		{
			exch begin
				_basefont setfont
				_bcstr1 dup 0 4 -1 roll put
				dup 
				_setwidthProc
				3 copy 
				moveto				
				show
				_basefonto setfont
				moveto
				show
			end
		}bind def
		 currentdict
	 end 
def
systemdict/composefont known
{
/ct_DefineIdentity-H
{
	/Identity-H/CMap resourcestatus
	{
		pop pop
	}
	{
		/CIDInit/ProcSet findresource begin
		 12 dict begin
		 begincmap
		 /CIDSystemInfo 3 dict dup begin
			 /Registry(Adobe)def
			 /Ordering(Identity)def
			 /Supplement 0 def
		 end def
		 /CMapName/Identity-H def
		 /CMapVersion 1.000 def
		 /CMapType 1 def
		 1 begincodespacerange
		 <0000><FFFF>
		 endcodespacerange
		 1 begincidrange
		 <0000><FFFF>0
		 endcidrange
		 endcmap
		 CMapName currentdict/CMap defineresource pop
		 end
		 end
	 }
	 ifelse
}
def
/ct_BoldBaseCIDFont 
	 11 dict begin
		/CIDFontType 1 def
		/CIDFontName/ct_BoldBaseCIDFont def
		/FontMatrix[1 0 0 1 0 0]def
		/FontBBox[0 0 1 1]def
		/_setwidthProc/ct_Type0WidthProc load def
		/_bcstr2 2 string def
		/BuildGlyph
		{
			exch begin		 
				_basefont setfont
				_bcstr2 1 2 index 256 mod put
				_bcstr2 0 3 -1 roll 256 idiv put
				_bcstr2 dup _setwidthProc		 
				3 copy 
				moveto
				show
				_basefonto setfont
				moveto
				show
			end
		}bind def
		 currentdict
	 end 
def
}if
Level2?{setglobal}if
/ct_CopyFont{
	{
		1 index/FID ne 2 index/UniqueID ne and
		{def}{pop pop}ifelse
	}forall
}bind def
/ct_Type0CopyFont 
{
	exch
	dup length dict
	begin
	ct_CopyFont
	[
	exch
	FDepVector 
	{
		 dup/FontType get 0 eq
		{	
		1 index ct_Type0CopyFont 
		/_ctType0 exch definefont
		}
		{
		/_ctBaseFont exch
		2 index exec
		}
		 ifelse 
		 exch
	}
	forall 
	pop
	]				
	/FDepVector exch def
	currentdict
	end
}bind def
/ct_MakeBoldFont
{
	 dup/ct_SyntheticBold known
	{
		dup length 3 add dict begin 
		ct_CopyFont 
		/ct_StrokeWidth .03 0 FontMatrix idtransform pop def 
		/ct_SyntheticBold true def
		currentdict 
		end 
		definefont
	}
	{
		dup dup length 3 add dict
		begin
			ct_CopyFont
			/PaintType 2 def
			/StrokeWidth .03 0 FontMatrix idtransform pop def
			/dummybold currentdict
		end
		definefont
		dup/FontType get dup 9 ge exch 11 le and 
		{
			ct_BoldBaseCIDFont
			dup length 3 add dict copy begin
			dup/CIDSystemInfo get/CIDSystemInfo exch def
			ct_DefineIdentity-H
			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont
			/_basefont exch def
			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont
			/_basefonto exch def
			currentdict
			end
			/CIDFont defineresource
		}
		{
			ct_BoldBaseFont
			dup length 3 add dict copy begin
			/_basefont exch def
			/_basefonto exch def
			currentdict
			end
			definefont
		}
		ifelse
	}
	ifelse
}bind def
/ct_MakeBold{
	1 index 
	1 index
	findfont
	currentglobal 5 1 roll
	dup gcheck setglobal
		dup
		 /FontType get 0 eq
			{
				dup/WMode known{dup/WMode get 1 eq}{false}ifelse
				version length 4 ge
				and
					{version 0 4 getinterval cvi 2015 ge}
					{true}
				ifelse 
					{/ct_Type0WidthProc}
					{/ct_Type0WMode1WidthProc}
				ifelse
				ct_BoldBaseFont/_setwidthProc 3 -1 roll load put
						{ct_MakeBoldFont}ct_Type0CopyFont definefont
			}
			{
				dup/_fauxfont known not 1 index/SubstMaster known not and
				{
					 ct_BoldBaseFont/_setwidthProc /ct_BoldRomanWidthProc load put
					 ct_MakeBoldFont 
				}
				{
				2 index 2 index eq
					{exch pop	}
					{
						dup length dict begin
						ct_CopyFont
						currentdict
						end
						definefont 
					}
				ifelse
				}
			ifelse
			}
		 ifelse
		 pop pop pop
		 setglobal
}bind def
/?str1 256 string def
/?set
	{
	$SubstituteFont
		begin
		/$substituteFound false def
		/$fontname 1 index def
		/$doSmartSub false def
		end
	dup
	 findfont
	$SubstituteFont
		begin
		$substituteFound
			{false}
			{
			dup/FontName known
				{
				dup/FontName get $fontname eq
				1 index/DistillerFauxFont known not and
				/currentdistillerparams where
					{pop false 2 index isWidthsOnlyFont not and}
				if
				}
				{false}
			ifelse
			}
		ifelse
		exch pop
		/$doSmartSub true def
		end
		{
		5 1 roll pop pop pop pop
		findfont
		}
		{
		1 index
		findfont
		dup/FontType get 3 eq
		{
			6 1 roll pop pop pop pop pop false
		}
		{pop true}
		ifelse
		{
		$SubstituteFont
		begin
		pop pop
		/$styleArray 1 index def
		/$regOrdering 2 index def
		pop pop
		0 1 $styleArray length 1 sub
		{
			$styleArray exch get
			ct_StyleDicts $regOrdering
			2 copy known
			{
				get
				exch 2 copy known not
				{pop/Default}
				if
				get
				dup type/nametype eq
				{
				?str1 cvs length dup 1 add exch
				?str1 exch(-)putinterval
				exch dup length exch ?str1 exch 3 index exch putinterval
				add ?str1 exch 0 exch getinterval cvn
				}
				{
				pop pop/Unknown
				}
				ifelse
			}
			{
				pop pop pop pop/Unknown
			}
			ifelse
		}
		for
		end
		findfont 
		}if
		}
	ifelse
	currentglobal false setglobal 3 1 roll
	null copyfont definefont pop
	setglobal
	}bind def
setpacking
userdict/$SubstituteFont 25 dict put
1 dict
	begin
	/SubstituteFont
		dup $error exch 2 copy known
			{get}
			{pop pop{pop/Courier}bind}
		ifelse def
	/currentdistillerparams where dup
		{
		pop pop
		currentdistillerparams/CannotEmbedFontPolicy 2 copy known
			{get/Error eq}
			{pop pop false}
		ifelse
		}
	if not
		{
		countdictstack array dictstack 0 get
			begin
			userdict
				begin
				$SubstituteFont
					begin
					/$str 128 string def
					/$fontpat 128 string def
					/$slen 0 def
					/$sname null def
					/$match false def
					/$fontname null def
					/$substituteFound false def
					/$inVMIndex null def
					/$doSmartSub true def
					/$depth 0 def
					/$fontname null def
					/$italicangle 26.5 def
					/$dstack null def
					/$Strategies 10 dict dup
						begin
						/$Type3Underprint
							{
							currentglobal exch false setglobal
							11 dict
								begin
								/UseFont exch
									$WMode 0 ne
										{
										dup length dict copy
										dup/WMode $WMode put
										/UseFont exch definefont
										}
									if def
								/FontName $fontname dup type/stringtype eq{cvn}if def
								/FontType 3 def
								/FontMatrix[.001 0 0 .001 0 0]def
								/Encoding 256 array dup 0 1 255{/.notdef put dup}for pop def
								/FontBBox[0 0 0 0]def
								/CCInfo 7 dict dup
									begin
									/cc null def
									/x 0 def
									/y 0 def
									end def
								/BuildChar
									{
									exch
										begin
										CCInfo
											begin
											1 string dup 0 3 index put exch pop
											/cc exch def
											UseFont 1000 scalefont setfont
											cc stringwidth/y exch def/x exch def
											x y setcharwidth
											$SubstituteFont/$Strategy get/$Underprint get exec
											0 0 moveto cc show
											x y moveto
											end
										end
									}bind def
								currentdict
								end
							exch setglobal
							}bind def
						/$GetaTint
							2 dict dup
								begin
								/$BuildFont
									{
									dup/WMode known
										{dup/WMode get}
										{0}
									ifelse
									/$WMode exch def
									$fontname exch
									dup/FontName known
										{
										dup/FontName get
										dup type/stringtype eq{cvn}if
										}
										{/unnamedfont}
									ifelse
									exch
									Adobe_CoolType_Data/InVMDeepCopiedFonts get
									1 index/FontName get known
										{
										pop
										Adobe_CoolType_Data/InVMDeepCopiedFonts get
										1 index get
										null copyfont
										}
										{$deepcopyfont}
									ifelse
									exch 1 index exch/FontBasedOn exch put
									dup/FontName $fontname dup type/stringtype eq{cvn}if put
									definefont
									Adobe_CoolType_Data/InVMDeepCopiedFonts get
										begin
										dup/FontBasedOn get 1 index def
										end
									}bind def
								/$Underprint
									{
									gsave
									x abs y abs gt
										{/y 1000 def}
										{/x -1000 def 500 120 translate}
									ifelse
									Level2?
										{
										[/Separation(All)/DeviceCMYK{0 0 0 1 pop}]
										setcolorspace
										}
										{0 setgray}
									ifelse
									10 setlinewidth
									x .8 mul
									[7 3]
										{
										y mul 8 div 120 sub x 10 div exch moveto
										0 y 4 div neg rlineto
										dup 0 rlineto
										0 y 4 div rlineto
										closepath
										gsave
										Level2?
											{.2 setcolor}
											{.8 setgray}
										ifelse
										fill grestore
										stroke
										}
									forall
									pop
									grestore
									}bind def
								end def
						/$Oblique
							1 dict dup
								begin
								/$BuildFont
									{
									currentglobal exch dup gcheck setglobal
									null copyfont
										begin
										/FontBasedOn
										currentdict/FontName known
											{
											FontName
											dup type/stringtype eq{cvn}if
											}
											{/unnamedfont}
										ifelse
										def
										/FontName $fontname dup type/stringtype eq{cvn}if def
										/currentdistillerparams where
											{pop}
											{
											/FontInfo currentdict/FontInfo known
												{FontInfo null copyfont}
												{2 dict}
											ifelse
											dup
												begin
												/ItalicAngle $italicangle def
												/FontMatrix FontMatrix
												[1 0 ItalicAngle dup sin exch cos div 1 0 0]
												matrix concatmatrix readonly
												end
											4 2 roll def
											def
											}
										ifelse
										FontName currentdict
										end
									definefont
									exch setglobal
									}bind def
								end def
						/$None
							1 dict dup
								begin
								/$BuildFont{}bind def
								end def
						end def
					/$Oblique SetSubstituteStrategy
					/$findfontByEnum
						{
						dup type/stringtype eq{cvn}if
						dup/$fontname exch def
						$sname null eq
							{$str cvs dup length $slen sub $slen getinterval}
							{pop $sname}
						ifelse
						$fontpat dup 0(fonts/*)putinterval exch 7 exch putinterval
						/$match false def
						$SubstituteFont/$dstack countdictstack array dictstack put
						mark
							{
							$fontpat 0 $slen 7 add getinterval
								{/$match exch def exit}
							$str filenameforall
							}
						stopped
							{
							cleardictstack
							currentdict
							true
							$SubstituteFont/$dstack get
								{
								exch
									{
									1 index eq
										{pop false}
										{true}
									ifelse
									}
									{begin false}
								ifelse
								}
							forall
							pop
							}
						if
						cleartomark
						/$slen 0 def
						$match false ne
							{$match(fonts/)anchorsearch pop pop cvn}
							{/Courier}
						ifelse
						}bind def
					/$ROS 1 dict dup
						begin
						/Adobe 4 dict dup
							begin
							/Japan1 [/Ryumin-Light/HeiseiMin-W3
										 /GothicBBB-Medium/HeiseiKakuGo-W5
										 /HeiseiMaruGo-W4/Jun101-Light]def
							/Korea1 [/HYSMyeongJo-Medium/HYGoThic-Medium]def
							/GB1	 [/STSong-Light/STHeiti-Regular]def
							/CNS1	[/MKai-Medium/MHei-Medium]def
							end def
						end def
					/$cmapname null def
					/$deepcopyfont
						{
						dup/FontType get 0 eq
							{
							1 dict dup/FontName/copied put copyfont
								begin
								/FDepVector FDepVector copyarray
								0 1 2 index length 1 sub
									{
									2 copy get $deepcopyfont
									dup/FontName/copied put
									/copied exch definefont
									3 copy put pop pop
									}
								for
								def
								currentdict
								end
							}
							{$Strategies/$Type3Underprint get exec}
						ifelse
						}bind def
					/$buildfontname
						{
						dup/CIDFont findresource/CIDSystemInfo get
							begin
							Registry length Ordering length Supplement 8 string cvs
							3 copy length 2 add add add string
							dup 5 1 roll dup 0 Registry putinterval
							dup 4 index(-)putinterval
							dup 4 index 1 add Ordering putinterval
							4 2 roll add 1 add 2 copy(-)putinterval
							end
						1 add 2 copy 0 exch getinterval $cmapname $fontpat cvs exch
						anchorsearch
							{pop pop 3 2 roll putinterval cvn/$cmapname exch def}
							{pop pop pop pop pop}
						ifelse
						length
						$str 1 index(-)putinterval 1 add
						$str 1 index $cmapname $fontpat cvs putinterval
						$cmapname length add
						$str exch 0 exch getinterval cvn
						}bind def
					/$findfontByROS
						{
						/$fontname exch def
						$ROS Registry 2 copy known
							{
							get Ordering 2 copy known
								{get}
								{pop pop[]}
							ifelse
							}
							{pop pop[]}
						ifelse
						false exch
							{
							dup/CIDFont resourcestatus
								{
								pop pop
								save
								1 index/CIDFont findresource
								dup/WidthsOnly known
									{dup/WidthsOnly get}
									{false}
								ifelse
								exch pop
								exch restore
									{pop}
									{exch pop true exit}
								ifelse
								}
								{pop}
							ifelse
							}
						forall
							{$str cvs $buildfontname}
							{
							false(*)
								{
								save exch
								dup/CIDFont findresource
								dup/WidthsOnly known
									{dup/WidthsOnly get not}
									{true}
								ifelse
								exch/CIDSystemInfo get
								dup/Registry get Registry eq
								exch/Ordering get Ordering eq and and
									{exch restore exch pop true exit}
									{pop restore}
								ifelse
								}
							$str/CIDFont resourceforall
								{$buildfontname}
								{$fontname $findfontByEnum}
							ifelse
							}
						ifelse
						}bind def
					end
				end
				currentdict/$error known currentdict/languagelevel known and dup
					{pop $error/SubstituteFont known}
				if
				dup
					{$error}
					{Adobe_CoolType_Core}
				ifelse
				begin
					{
					/SubstituteFont
					/CMap/Category resourcestatus
						{
						pop pop
						{
						$SubstituteFont
							begin
							/$substituteFound true def
							dup length $slen gt
							$sname null ne or
							$slen 0 gt and
								{
								$sname null eq
									{dup $str cvs dup length $slen sub $slen getinterval cvn}
									{$sname}
								ifelse
								Adobe_CoolType_Data/InVMFontsByCMap get
								1 index 2 copy known
									{
									get
									false exch
										{
										pop
										currentglobal
											{
											GlobalFontDirectory 1 index known
												{exch pop true exit}
												{pop}
											ifelse
											}
											{
											FontDirectory 1 index known
												{exch pop true exit}
												{
												GlobalFontDirectory 1 index known
													{exch pop true exit}
													{pop}
												ifelse
												}
											ifelse
											}
										ifelse
										}
									forall
									}
									{pop pop false}
								ifelse
									{
									exch pop exch pop
									}
									{
									dup/CMap resourcestatus
										{
										pop pop
										dup/$cmapname exch def
										/CMap findresource/CIDSystemInfo get{def}forall
										$findfontByROS
										}
										{
										128 string cvs
										dup(-)search
											{
											3 1 roll search
												{
												3 1 roll pop
													{dup cvi}
												stopped
													{pop pop pop pop pop $findfontByEnum}
													{
													4 2 roll pop pop
													exch length
													exch
													2 index length
													2 index
													sub
													exch 1 sub -1 0
														{
														$str cvs dup length
														4 index
														0
														4 index
														4 3 roll add
														getinterval
														exch 1 index exch 3 index exch
														putinterval
														dup/CMap resourcestatus
															{
															pop pop
															4 1 roll pop pop pop
															dup/$cmapname exch def
															/CMap findresource/CIDSystemInfo get{def}forall
															$findfontByROS
															true exit
															}
															{pop}
														ifelse
														}
													for
													dup type/booleantype eq
														{pop}
														{pop pop pop $findfontByEnum}
													ifelse
													}
												ifelse
												}
												{pop pop pop $findfontByEnum}
											ifelse
											}
											{pop pop $findfontByEnum}
										ifelse
										}
									ifelse
									}
								ifelse
								}
								{//SubstituteFont exec}
							ifelse
							/$slen 0 def
							end
						}
						}
						{
						{
						$SubstituteFont
							begin
							/$substituteFound true def
							dup length $slen gt
							$sname null ne or
							$slen 0 gt and
								{$findfontByEnum}
								{//SubstituteFont exec}
							ifelse
							end
						}
						}
					ifelse
					bind readonly def
					Adobe_CoolType_Core/scfindfont/systemfindfont load put
					}
					{
					/scfindfont
						{
						$SubstituteFont
							begin
							dup systemfindfont
							dup/FontName known
								{dup/FontName get dup 3 index ne}
								{/noname true}
							ifelse
							dup
								{
								/$origfontnamefound 2 index def
								/$origfontname 4 index def/$substituteFound true def
								}
							if
							exch pop
								{
								$slen 0 gt
								$sname null ne
								3 index length $slen gt or and
									{
									pop dup $findfontByEnum findfont
									dup maxlength 1 add dict
										begin
											{1 index/FID eq{pop pop}{def}ifelse}
										forall
										currentdict
										end
									definefont
									dup/FontName known{dup/FontName get}{null}ifelse
									$origfontnamefound ne
										{
										$origfontname $str cvs print
										( substitution revised, using )print
										dup/FontName known
											{dup/FontName get}{(unspecified font)}
										ifelse
										$str cvs print(.\n)print
										}
									if
									}
									{exch pop}
								ifelse
								}
								{exch pop}
							ifelse
							end
						}bind def
					}
				ifelse
				end
			end
		Adobe_CoolType_Core_Defined not
			{
			Adobe_CoolType_Core/findfont
				{
				$SubstituteFont
					begin
					$depth 0 eq
						{
						/$fontname 1 index dup type/stringtype ne{$str cvs}if def
						/$substituteFound false def
						}
					if
					/$depth $depth 1 add def
					end
				scfindfont
				$SubstituteFont
					begin
					/$depth $depth 1 sub def
					$substituteFound $depth 0 eq and
						{
						$inVMIndex null ne
							{dup $inVMIndex $AddInVMFont}
						if
						$doSmartSub
							{
							currentdict/$Strategy known
								{$Strategy/$BuildFont get exec}
							if
							}
						if
						}
					if
					end
				}bind put
			}
		if
		}
	if
	end
/$AddInVMFont
	{
	exch/FontName 2 copy known
		{
		get
		1 dict dup begin exch 1 index gcheck def end exch
		Adobe_CoolType_Data/InVMFontsByCMap get exch
		$DictAdd
		}
		{pop pop pop}
	ifelse
	}bind def
/$DictAdd
	{
	2 copy known not
		{2 copy 4 index length dict put}
	if
	Level2? not
		{
		2 copy get dup maxlength exch length 4 index length add lt
		2 copy get dup length 4 index length add exch maxlength 1 index lt
			{
			2 mul dict
				begin
				2 copy get{forall}def
				2 copy currentdict put
				end
			}
			{pop}
		ifelse
		}
	if
	get
		begin
			{def}
		forall
		end
	}bind def
end
end
%%EndResource
currentglobal true setglobal
%%BeginResource: procset Adobe_CoolType_Utility_MAKEOCF 1.23 0
%%Copyright: Copyright 1987-2006 Adobe Systems Incorporated.
%%Version: 1.23 0
systemdict/languagelevel known dup
	{currentglobal false setglobal}
	{false}
ifelse
exch
userdict/Adobe_CoolType_Utility 2 copy known
	{2 copy get dup maxlength 27 add dict copy}
	{27 dict}
ifelse put
Adobe_CoolType_Utility
	begin
	/@eexecStartData
		 <BAB431EA07F209EB8C4348311481D9D3F76E3D15246555577D87BC510ED54E
		 118C39697FA9F6DB58128E60EB8A12FA24D7CDD2FA94D221FA9EC8DA3E5E6A1C
		 4ACECC8C2D39C54E7C946031DD156C3A6B4A09AD29E1867A>def
	/@recognizeCIDFont null def
	/ct_Level2? exch def
	/ct_Clone? 1183615869 internaldict dup
			/CCRun known not
			exch/eCCRun known not
			ct_Level2? and or def
ct_Level2?
	{globaldict begin currentglobal true setglobal}
if
	/ct_AddStdCIDMap
		ct_Level2?
			{{
				mark
				Adobe_CoolType_Utility/@recognizeCIDFont currentdict put
					{
					((Hex)57 StartData
					 0615 1e27 2c39 1c60 d8a8 cc31 fe2b f6e0
					 7aa3 e541 e21c 60d8 a8c9 c3d0 6d9e 1c60
					 d8a8 c9c2 02d7 9a1c 60d8 a849 1c60 d8a8
					 cc36 74f4 1144 b13b 77)0()/SubFileDecode filter cvx exec
					}
				stopped
					{
					 cleartomark
					 Adobe_CoolType_Utility/@recognizeCIDFont get
					 countdictstack dup array dictstack
					 exch 1 sub -1 0
						 {
						 2 copy get 3 index eq
								{1 index length exch sub 1 sub{end}repeat exit}
								{pop}
						 ifelse
						 }
					 for
					 pop pop
					 Adobe_CoolType_Utility/@eexecStartData get eexec
					}
					{cleartomark}
				ifelse
			}}
			{{
				Adobe_CoolType_Utility/@eexecStartData get eexec
			}}
		ifelse bind def
userdict/cid_extensions known
dup{cid_extensions/cid_UpdateDB known and}if
	{
	 cid_extensions
	 begin
	/cid_GetCIDSystemInfo
		{
		 1 index type/stringtype eq
			{exch cvn exch}
		 if
		 cid_extensions
			 begin
			 dup load 2 index known
				{
				 2 copy
				 cid_GetStatusInfo
				 dup null ne
					{
					 1 index load
					 3 index get
					 dup null eq
						 {pop pop cid_UpdateDB}
						 {
						 exch
						 1 index/Created get eq
							 {exch pop exch pop}
							 {pop cid_UpdateDB}
						 ifelse
						 }
					 ifelse
					}
					{pop cid_UpdateDB}
				 ifelse
				}
				{cid_UpdateDB}
			 ifelse
			 end
		}bind def
	 end
	}
if
ct_Level2?
	{end setglobal}
if
	/ct_UseNativeCapability? systemdict/composefont known def
	/ct_MakeOCF 35 dict def
	/ct_Vars 25 dict def
	/ct_GlyphDirProcs 6 dict def
	/ct_BuildCharDict 15 dict dup
		begin
		/charcode 2 string def
		/dst_string 1500 string def
		/nullstring()def
		/usewidths? true def
		end def
	ct_Level2?{setglobal}{pop}ifelse
	ct_GlyphDirProcs
		begin
		/GetGlyphDirectory
			{
			systemdict/languagelevel known
				{pop/CIDFont findresource/GlyphDirectory get}
				{
				1 index/CIDFont findresource/GlyphDirectory
				get dup type/dicttype eq
					{
					dup dup maxlength exch length sub 2 index lt
						{
						dup length 2 index add dict copy 2 index
						/CIDFont findresource/GlyphDirectory 2 index put
						}
					if
					}
				if
				exch pop exch pop
				}
			ifelse
			+
			}def
		/+
			{
			systemdict/languagelevel known
				{
				currentglobal false setglobal
				3 dict begin
					/vm exch def
				}
				{1 dict begin}
			ifelse
			/$ exch def
			systemdict/languagelevel known
				{
				vm setglobal
				/gvm currentglobal def
				$ gcheck setglobal
				}
			if
			?{$ begin}if
			}def
		/?{$ type/dicttype eq}def
		/|{
			userdict/Adobe_CoolType_Data known
				{
			Adobe_CoolType_Data/AddWidths? known
				{
				 currentdict Adobe_CoolType_Data
					begin
					 begin
						AddWidths?
								{
								Adobe_CoolType_Data/CC 3 index put
								?{def}{$ 3 1 roll put}ifelse
								CC charcode exch 1 index 0 2 index 256 idiv put
								1 index exch 1 exch 256 mod put
								stringwidth 2 array astore
								currentfont/Widths get exch CC exch put
								}
								{?{def}{$ 3 1 roll put}ifelse}
							ifelse
					end
				end
				}
				{?{def}{$ 3 1 roll put}ifelse}	ifelse
				}
				{?{def}{$ 3 1 roll put}ifelse}
			ifelse
			}def
		/!
			{
			?{end}if
			systemdict/languagelevel known
				{gvm setglobal}
			if
			end
			}def
		/:{string currentfile exch readstring pop}executeonly def
		end
	ct_MakeOCF
		begin
		/ct_cHexEncoding
		[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12
		/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25
		/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38
		/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B
		/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E
		/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71
		/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84
		/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97
		/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA
		/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD
		/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0
		/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3
		/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6
		/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def
		/ct_CID_STR_SIZE 8000 def
		/ct_mkocfStr100 100 string def
		/ct_defaultFontMtx[.001 0 0 .001 0 0]def
		/ct_1000Mtx[1000 0 0 1000 0 0]def
		/ct_raise{exch cvx exch errordict exch get exec stop}bind def
		/ct_reraise
			{cvx $error/errorname get(Error: )print dup(						 )cvs print
					errordict exch get exec stop
			}bind def
		/ct_cvnsi
			{
			1 index add 1 sub 1 exch 0 4 1 roll
				{
				2 index exch get
				exch 8 bitshift
				add
				}
			for
			exch pop
			}bind def
		/ct_GetInterval
			{
			Adobe_CoolType_Utility/ct_BuildCharDict get
				begin
				/dst_index 0 def
				dup dst_string length gt
					{dup string/dst_string exch def}
				if
				1 index ct_CID_STR_SIZE idiv
				/arrayIndex exch def
				2 index arrayIndex get
				2 index
				arrayIndex ct_CID_STR_SIZE mul
				sub
					{
					dup 3 index add 2 index length le
						{
						2 index getinterval
						dst_string dst_index 2 index putinterval
						length dst_index add/dst_index exch def
						exit
						}
						{
						1 index length 1 index sub
						dup 4 1 roll
						getinterval
						dst_string dst_index 2 index putinterval
						pop dup dst_index add/dst_index exch def
						sub
						/arrayIndex arrayIndex 1 add def
						2 index dup length arrayIndex gt
							 {arrayIndex get}
							 {
							 pop
							 exit
							 }
						ifelse
						0
						}
					ifelse
					}
				loop
				pop pop pop
				dst_string 0 dst_index getinterval
				end
			}bind def
		ct_Level2?
			{
			/ct_resourcestatus
			currentglobal mark true setglobal
				{/unknowninstancename/Category resourcestatus}
			stopped
				{cleartomark setglobal true}
				{cleartomark currentglobal not exch setglobal}
			ifelse
				{
					{
					mark 3 1 roll/Category findresource
						begin
						ct_Vars/vm currentglobal put
						({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec
							{cleartomark false}
							{{3 2 roll pop true}{cleartomark false}ifelse}
						ifelse
						ct_Vars/vm get setglobal
						end
					}
				}
				{{resourcestatus}}
			ifelse bind def
			/CIDFont/Category ct_resourcestatus
				{pop pop}
				{
				currentglobal true setglobal
				/Generic/Category findresource
				dup length dict copy
				dup/InstanceType/dicttype put
				/CIDFont exch/Category defineresource pop
				setglobal
				}
			ifelse
			ct_UseNativeCapability?
				{
				/CIDInit/ProcSet findresource begin
				12 dict begin
				begincmap
				/CIDSystemInfo 3 dict dup begin
				 /Registry(Adobe)def
				 /Ordering(Identity)def
				 /Supplement 0 def
				end def
				/CMapName/Identity-H def
				/CMapVersion 1.000 def
				/CMapType 1 def
				1 begincodespacerange
				<0000><FFFF>
				endcodespacerange
				1 begincidrange
				<0000><FFFF>0
				endcidrange
				endcmap
				CMapName currentdict/CMap defineresource pop
				end
				end
				}
			if
			}
			{
			/ct_Category 2 dict begin
			/CIDFont 10 dict def
			/ProcSet	2 dict def
			currentdict
			end
			def
			/defineresource
				{
				ct_Category 1 index 2 copy known
					{
					get
					dup dup maxlength exch length eq
						{
						dup length 10 add dict copy
						ct_Category 2 index 2 index put
						}
					if
					3 index 3 index put
					pop exch pop
					}
					{pop pop/defineresource/undefined ct_raise}
				ifelse
				}bind def
			/findresource
				{
				ct_Category 1 index 2 copy known
					{
					get
					2 index 2 copy known
						{get 3 1 roll pop pop}
						{pop pop/findresource/undefinedresource ct_raise}
					ifelse
					}
					{pop pop/findresource/undefined ct_raise}
				ifelse
				}bind def
			/resourcestatus
				{
				ct_Category 1 index 2 copy known
					{
					get
					2 index known
					exch pop exch pop
						{
						0 -1 true
						}
						{
						false
						}
					ifelse
					}
					{pop pop/findresource/undefined ct_raise}
				ifelse
				}bind def
			/ct_resourcestatus/resourcestatus load def
			}
		ifelse
		/ct_CIDInit 2 dict
			begin
			/ct_cidfont_stream_init
				{
					{
					dup(Binary)eq
						{
						pop
						null
						currentfile
						ct_Level2?
							{
								{cid_BYTE_COUNT()/SubFileDecode filter}
							stopped
								{pop pop pop}
							if
							}
						if
						/readstring load
						exit
						}
					if
					dup(Hex)eq
						{
						pop
						currentfile
						ct_Level2?
							{
								{null exch/ASCIIHexDecode filter/readstring}
							stopped
								{pop exch pop(>)exch/readhexstring}
							if
							}
							{(>)exch/readhexstring}
						ifelse
						load
						exit
						}
					if
					/StartData/typecheck ct_raise
					}
				loop
				cid_BYTE_COUNT ct_CID_STR_SIZE le
					{
					2 copy cid_BYTE_COUNT string exch exec
					pop
					1 array dup
					3 -1 roll
					0 exch put
					}
					{
					cid_BYTE_COUNT ct_CID_STR_SIZE div ceiling cvi
					dup array exch 2 sub 0 exch 1 exch
						{
						2 copy
						5 index
						ct_CID_STR_SIZE
						string
						6 index exec
						pop
						put
						pop
						}
					for
					2 index
					cid_BYTE_COUNT ct_CID_STR_SIZE mod string
					3 index exec
					pop
					1 index exch
					1 index length 1 sub
					exch put
					}
				ifelse
				cid_CIDFONT exch/GlyphData exch put
				2 index null eq
					{
					pop pop pop
					}
					{
					pop/readstring load
					1 string exch
						{
						3 copy exec
						pop
						dup length 0 eq
							{
							pop pop pop pop pop
							true exit
							}
						if
						4 index
						eq
							{
							pop pop pop pop
							false exit
							}
						if
						}
					loop
					pop
					}
				ifelse
				}bind def
			/StartData
				{
				mark
					{
					currentdict
					dup/FDArray get 0 get/FontMatrix get
					0 get 0.001 eq
						{
						dup/CDevProc known not
							{
							/CDevProc 1183615869 internaldict/stdCDevProc 2 copy known
								{get}
								{
								pop pop
								{pop pop pop pop pop 0 -1000 7 index 2 div 880}
								}
							ifelse
							def
							}
						if
						}
						{
						/CDevProc
							{
							 pop pop pop pop pop
							 0
							 1 cid_temp/cid_CIDFONT get
							/FDArray get 0 get
							/FontMatrix get 0 get div
							 7 index 2 div
							 1 index 0.88 mul
							}def
						}
					ifelse
					/cid_temp 15 dict def
					cid_temp
						begin
						/cid_CIDFONT exch def
						3 copy pop
						dup/cid_BYTE_COUNT exch def 0 gt
							{
							ct_cidfont_stream_init
							FDArray
								{
								/Private get
								dup/SubrMapOffset known
									{
									begin
									/Subrs SubrCount array def
									Subrs
									SubrMapOffset
									SubrCount
									SDBytes
									ct_Level2?
										{
										currentdict dup/SubrMapOffset undef
										dup/SubrCount undef
										/SDBytes undef
										}
									if
									end
									/cid_SD_BYTES exch def
									/cid_SUBR_COUNT exch def
									/cid_SUBR_MAP_OFFSET exch def
									/cid_SUBRS exch def
									cid_SUBR_COUNT 0 gt
										{
										GlyphData cid_SUBR_MAP_OFFSET cid_SD_BYTES ct_GetInterval
										0 cid_SD_BYTES ct_cvnsi
										0 1 cid_SUBR_COUNT 1 sub
											{
											exch 1 index
											1 add
											cid_SD_BYTES mul cid_SUBR_MAP_OFFSET add
											GlyphData exch cid_SD_BYTES ct_GetInterval
											0 cid_SD_BYTES ct_cvnsi
											cid_SUBRS 4 2 roll
											GlyphData exch
											4 index
											1 index
											sub
											ct_GetInterval
											dup length string copy put
											}
										for
										pop
										}
									if
									}
									{pop}
								ifelse
								}
							forall
							}
						if
						cleartomark pop pop
						end
					CIDFontName currentdict/CIDFont defineresource pop
					end end
					}
				stopped
					{cleartomark/StartData ct_reraise}
				if
				}bind def
			currentdict
			end def
		/ct_saveCIDInit
			{
			/CIDInit/ProcSet ct_resourcestatus
				{true}
				{/CIDInitC/ProcSet ct_resourcestatus}
			ifelse
				{
				pop pop
				/CIDInit/ProcSet findresource
				ct_UseNativeCapability?
					{pop null}
					{/CIDInit ct_CIDInit/ProcSet defineresource pop}
				ifelse
				}
				{/CIDInit ct_CIDInit/ProcSet defineresource pop null}
			ifelse
			ct_Vars exch/ct_oldCIDInit exch put
			}bind def
		/ct_restoreCIDInit
			{
			ct_Vars/ct_oldCIDInit get dup null ne
				{/CIDInit exch/ProcSet defineresource pop}
				{pop}
			ifelse
			}bind def
		/ct_BuildCharSetUp
			{
			1 index
				begin
				CIDFont
					begin
					Adobe_CoolType_Utility/ct_BuildCharDict get
						begin
						/ct_dfCharCode exch def
						/ct_dfDict exch def
						CIDFirstByte ct_dfCharCode add
						dup CIDCount ge
							{pop 0}
						if
						/cid exch def
							{
							GlyphDirectory cid 2 copy known
								{get}
								{pop pop nullstring}
							ifelse
							dup length FDBytes sub 0 gt
								{
								dup
								FDBytes 0 ne
									{0 FDBytes ct_cvnsi}
									{pop 0}
								ifelse
								/fdIndex exch def
								dup length FDBytes sub FDBytes exch getinterval
								/charstring exch def
								exit
								}
								{
								pop
								cid 0 eq
									{/charstring nullstring def exit}
								if
								/cid 0 def
								}
							ifelse
							}
						loop
			}def
		/ct_SetCacheDevice
			{
			0 0 moveto
			dup stringwidth
			3 -1 roll
			true charpath
			pathbbox
			0 -1000
			7 index 2 div 880
			setcachedevice2
			0 0 moveto
			}def
		/ct_CloneSetCacheProc
			{
			1 eq
				{
				stringwidth
				pop -2 div -880
				0 -1000 setcharwidth
				moveto
				}
				{
				usewidths?
					{
					currentfont/Widths get cid
					2 copy known
						{get exch pop aload pop}
						{pop pop stringwidth}
					ifelse
					}
					{stringwidth}
				ifelse
				setcharwidth
				0 0 moveto
				}
			ifelse
			}def
		/ct_Type3ShowCharString
			{
			ct_FDDict fdIndex 2 copy known
				{get}
				{
				currentglobal 3 1 roll
				1 index gcheck setglobal
				ct_Type1FontTemplate dup maxlength dict copy
					begin
					FDArray fdIndex get
					dup/FontMatrix 2 copy known
						{get}
						{pop pop ct_defaultFontMtx}
					ifelse
					/FontMatrix exch dup length array copy def
					/Private get
					/Private exch def
					/Widths rootfont/Widths get def
					/CharStrings 1 dict dup/.notdef
						<d841272cf18f54fc13>dup length string copy put def
					currentdict
					end
				/ct_Type1Font exch definefont
				dup 5 1 roll put
				setglobal
				}
			ifelse
			dup/CharStrings get 1 index/Encoding get
			ct_dfCharCode get charstring put
			rootfont/WMode 2 copy known
				{get}
				{pop pop 0}
			ifelse
			exch
			1000 scalefont setfont
			ct_str1 0 ct_dfCharCode put
			ct_str1 exch ct_dfSetCacheProc
			ct_SyntheticBold
				{
				currentpoint
				ct_str1 show
				newpath
				moveto
				ct_str1 true charpath
				ct_StrokeWidth setlinewidth
				stroke
				}
				{ct_str1 show}
			ifelse
			}def
		/ct_Type4ShowCharString
			{
			ct_dfDict ct_dfCharCode charstring
			FDArray fdIndex get
			dup/FontMatrix get dup ct_defaultFontMtx ct_matrixeq not
				{ct_1000Mtx matrix concatmatrix concat}
				{pop}
			ifelse
			/Private get
			Adobe_CoolType_Utility/ct_Level2? get not
				{
				ct_dfDict/Private
				3 -1 roll
					{put}
				1183615869 internaldict/superexec get exec
				}
			if
			1183615869 internaldict
			Adobe_CoolType_Utility/ct_Level2? get
				{1 index}
				{3 index/Private get mark 6 1 roll}
			ifelse
			dup/RunInt known
				{/RunInt get}
				{pop/CCRun}
			ifelse
			get exec
			Adobe_CoolType_Utility/ct_Level2? get not
				{cleartomark}
			if
			}bind def
		/ct_BuildCharIncremental
			{
				{
				Adobe_CoolType_Utility/ct_MakeOCF get begin
				ct_BuildCharSetUp
				ct_ShowCharString
				}
			stopped
				{stop}
			if
			end
			end
			end
			end
			}bind def
		/BaseFontNameStr(BF00)def
		/ct_Type1FontTemplate 14 dict
			begin
			/FontType 1 def
			/FontMatrix [0.001 0 0 0.001 0 0]def
			/FontBBox [-250 -250 1250 1250]def
			/Encoding ct_cHexEncoding def
			/PaintType 0 def
			currentdict
			end def
		/BaseFontTemplate 11 dict
			begin
			/FontMatrix [0.001 0 0 0.001 0 0]def
			/FontBBox [-250 -250 1250 1250]def
			/Encoding ct_cHexEncoding def
			/BuildChar/ct_BuildCharIncremental load def
			ct_Clone?
				{
				/FontType 3 def
				/ct_ShowCharString/ct_Type3ShowCharString load def
				/ct_dfSetCacheProc/ct_CloneSetCacheProc load def
				/ct_SyntheticBold false def
				/ct_StrokeWidth 1 def
				}
				{
				/FontType 4 def
				/Private 1 dict dup/lenIV 4 put def
				/CharStrings 1 dict dup/.notdef<d841272cf18f54fc13>put def
				/PaintType 0 def
				/ct_ShowCharString/ct_Type4ShowCharString load def
				}
			ifelse
			/ct_str1 1 string def
			currentdict
			end def
		/BaseFontDictSize BaseFontTemplate length 5 add def
		/ct_matrixeq
			{
			true 0 1 5
				{
				dup 4 index exch get exch 3 index exch get eq and
				dup not
					{exit}
				if
				}
			for
			exch pop exch pop
			}bind def
		/ct_makeocf
			{
			15 dict
				begin
				exch/WMode exch def
				exch/FontName exch def
				/FontType 0 def
				/FMapType 2 def
			dup/FontMatrix known
				{dup/FontMatrix get/FontMatrix exch def}
				{/FontMatrix matrix def}
			ifelse
				/bfCount 1 index/CIDCount get 256 idiv 1 add
					dup 256 gt{pop 256}if def
				/Encoding
					256 array 0 1 bfCount 1 sub{2 copy dup put pop}for
					bfCount 1 255{2 copy bfCount put pop}for
					def
				/FDepVector bfCount dup 256 lt{1 add}if array def
				BaseFontTemplate BaseFontDictSize dict copy
					begin
					/CIDFont exch def
					CIDFont/FontBBox known
						{CIDFont/FontBBox get/FontBBox exch def}
					if
					CIDFont/CDevProc known
						{CIDFont/CDevProc get/CDevProc exch def}
					if
					currentdict
					end
				BaseFontNameStr 3(0)putinterval
				0 1 bfCount dup 256 eq{1 sub}if
					{
					FDepVector exch
					2 index BaseFontDictSize dict copy
						begin
						dup/CIDFirstByte exch 256 mul def
						FontType 3 eq
							{/ct_FDDict 2 dict def}
						if
						currentdict
						end
					1 index 16
					BaseFontNameStr 2 2 getinterval cvrs pop
					BaseFontNameStr exch definefont
					put
					}
				for
				ct_Clone?
					{/Widths 1 index/CIDFont get/GlyphDirectory get length dict def}
				if
				FontName
				currentdict
				end
			definefont
			ct_Clone?
				{
				gsave
				dup 1000 scalefont setfont
				ct_BuildCharDict
					begin
					/usewidths? false def
					currentfont/Widths get
						begin
						exch/CIDFont get/GlyphDirectory get
							{
							pop
							dup charcode exch 1 index 0 2 index 256 idiv put
							1 index exch 1 exch 256 mod put
							stringwidth 2 array astore def
							}
						forall
						end
					/usewidths? true def
					end
				grestore
				}
				{exch pop}
			ifelse
			}bind def
		currentglobal true setglobal
		/ct_ComposeFont
			{
			ct_UseNativeCapability?
				{				
				2 index/CMap ct_resourcestatus
					{pop pop exch pop}
					{
					/CIDInit/ProcSet findresource
						begin
						12 dict
							begin
							begincmap
							/CMapName 3 index def
							/CMapVersion 1.000 def
							/CMapType 1 def
							exch/WMode exch def
							/CIDSystemInfo 3 dict dup
								begin
								/Registry(Adobe)def
								/Ordering
								CMapName ct_mkocfStr100 cvs
								(Adobe-)search
									{
									pop pop
									(-)search
										{
										dup length string copy
										exch pop exch pop
										}
										{pop(Identity)}
									ifelse
									}
									{pop (Identity)}
								ifelse
								def
								/Supplement 0 def
								end def
							1 begincodespacerange
							<0000><FFFF>
							endcodespacerange
							1 begincidrange
							<0000><FFFF>0
							endcidrange
							endcmap
							CMapName currentdict/CMap defineresource pop
							end
						end
					}
				ifelse
				composefont
				}
				{
				3 2 roll pop
				0 get/CIDFont findresource
				ct_makeocf
				}
			ifelse
			}bind def
			setglobal
		/ct_MakeIdentity
			{
			ct_UseNativeCapability?
				{
				1 index/CMap ct_resourcestatus
					{pop pop}
					{
					/CIDInit/ProcSet findresource begin
					12 dict begin
					begincmap
					/CMapName 2 index def
					/CMapVersion 1.000 def
					/CMapType 1 def
					/CIDSystemInfo 3 dict dup
						begin
						/Registry(Adobe)def
						/Ordering
						CMapName ct_mkocfStr100 cvs
						(Adobe-)search
							{
							pop pop
							(-)search
								{dup length string copy exch pop exch pop}
								{pop(Identity)}
							ifelse
							}
							{pop(Identity)}
						ifelse
						def
						/Supplement 0 def
						end def
					1 begincodespacerange
					<0000><FFFF>
					endcodespacerange
					1 begincidrange
					<0000><FFFF>0
					endcidrange
					endcmap
					CMapName currentdict/CMap defineresource pop
					end
					end
					}
				ifelse
				composefont
				}
				{
				exch pop
				0 get/CIDFont findresource
				ct_makeocf
				}
			ifelse
			}bind def
		currentdict readonly pop
		end
	end
%%EndResource
setglobal
%%BeginResource: procset Adobe_CoolType_Utility_T42 1.0 0
%%Copyright: Copyright 1987-2004 Adobe Systems Incorporated.
%%Version: 1.0 0
userdict/ct_T42Dict 15 dict put
ct_T42Dict begin
/Is2015?
{
 version
 cvi
 2015
 ge
}bind def
/AllocGlyphStorage
{
 Is2015?
 {	
	pop
 }
 {
	{string}forall
 }ifelse
}bind def
/Type42DictBegin
{
25 dict begin
 /FontName exch def
 /CharStrings 256 dict 
begin
	 /.notdef 0 def
	 currentdict 
end def
 /Encoding exch def
 /PaintType 0 def
 /FontType 42 def
 /FontMatrix[1 0 0 1 0 0]def
 4 array astore cvx/FontBBox exch def
 /sfnts
}bind def
/Type42DictEnd 
{
 currentdict dup/FontName get exch definefont end
ct_T42Dict exch
dup/FontName get exch put
}bind def
/RD{string currentfile exch readstring pop}executeonly def
/PrepFor2015
{
Is2015?
{		 
	/GlyphDirectory 
	 16
	 dict def
	 sfnts 0 get
	 dup
	 2 index
	(glyx)
	 putinterval
	 2 index 
	(locx)
	 putinterval
	 pop
	 pop
}
{
	 pop
	 pop
}ifelse			
}bind def
/AddT42Char
{
Is2015?
{
	/GlyphDirectory get 
	begin
	def
	end
	pop
	pop
}
{
	/sfnts get
	4 index
	get
	3 index
 2 index
	putinterval
	pop
	pop
	pop
	pop
}ifelse
}bind def
/T0AddT42Mtx2
{
/CIDFont findresource/Metrics2 get begin def end
}bind def
end
%%EndResource
currentglobal true setglobal
%%BeginFile: MMFauxFont.prc
%%Copyright: Copyright 1987-2001 Adobe Systems Incorporated. 
%%All Rights Reserved.
userdict /ct_EuroDict 10 dict put
ct_EuroDict begin
/ct_CopyFont 
{
    { 1 index /FID ne {def} {pop pop} ifelse} forall
} def
/ct_GetGlyphOutline
{
   gsave
   initmatrix newpath
   exch findfont dup 
   length 1 add dict 
   begin 
		ct_CopyFont 
		/Encoding Encoding dup length array copy 
		dup
		4 -1 roll
		0 exch put   
		def
		currentdict
   end
   /ct_EuroFont exch definefont
   1000 scalefont setfont
   0 0 moveto
   [
       <00> stringwidth 
       <00> false charpath
       pathbbox
       [
       {/m cvx} {/l cvx} {/c cvx} {/cp cvx} pathforall
   grestore
   counttomark 8 add
}
def
/ct_MakeGlyphProc
{
   ] cvx
   /ct_PSBuildGlyph cvx
   ] cvx
} def
/ct_PSBuildGlyph 
{ 
 	gsave 
	8 -1 roll pop 
	7 1 roll 
        6 -2 roll ct_FontMatrix transform 6 2 roll
        4 -2 roll ct_FontMatrix transform 4 2 roll
        ct_FontMatrix transform 
	currentdict /PaintType 2 copy known {get 2 eq}{pop pop false} ifelse  
	dup  9 1 roll 
	{  
		currentdict /StrokeWidth 2 copy known  
		{   
			get 2 div   
			0 ct_FontMatrix dtransform pop
			5 1 roll  
			4 -1 roll 4 index sub   
			4 1 roll   
			3 -1 roll 4 index sub  
			3 1 roll   
			exch 4 index add exch  
			4 index add  
			5 -1 roll pop  
		}  
		{	 
			pop pop 
		}  
		ifelse  
	}       
    if  
	setcachedevice  
        ct_FontMatrix concat
        ct_PSPathOps begin 
		exec 
	end 
	{  
		currentdict /StrokeWidth 2 copy known  
			{ get }  
			{ pop pop 0 }  
  	    ifelse  
		setlinewidth stroke  
	}  
	{   
	    fill  
	}  
	ifelse  
    grestore
} def 
/ct_PSPathOps 4 dict dup begin 
	/m {moveto} def 
	/l {lineto} def 
	/c {curveto} def 
	/cp {closepath} def 
end 
def 
/ct_matrix1000 [1000 0 0 1000 0 0] def
/ct_AddGlyphProc  
{
   2 index findfont dup length 4 add dict 
   begin 
	ct_CopyFont 
	/CharStrings CharStrings dup length 1 add dict copy
      begin
         3 1 roll def  
         currentdict 
      end 
      def
      /ct_FontMatrix ct_matrix1000 FontMatrix matrix concatmatrix def
      /ct_PSBuildGlyph /ct_PSBuildGlyph load def
      /ct_PSPathOps /ct_PSPathOps load def
      currentdict
   end
   definefont pop
}
def
systemdict /languagelevel known
{
	/ct_AddGlyphToPrinterFont {
		2 copy
		ct_GetGlyphOutline 3 add -1 roll restore 
		ct_MakeGlyphProc 
		ct_AddGlyphProc
	} def
}
{
	/ct_AddGlyphToPrinterFont {
	    pop pop restore
		Adobe_CTFauxDict /$$$FONTNAME get
		/Euro
		Adobe_CTFauxDict /$$$SUBSTITUTEBASE get
		ct_EuroDict exch get
		ct_AddGlyphProc
	} def
} ifelse
/AdobeSansMM 
{ 
556 0 24 -19 541 703 
	{ 
	541 628 m 
	510 669 442 703 354 703 c 
	201 703 117 607 101 444 c 
	50 444 l 
	25 372 l 
	97 372 l 
	97 301 l 
	49 301 l 
	24 229 l 
	103 229 l 
	124 67 209 -19 350 -19 c 
	435 -19 501 25 509 32 c 
	509 131 l 
	492 105 417 60 343 60 c 
	267 60 204 127 197 229 c 
	406 229 l 
	430 301 l 
	191 301 l 
	191 372 l 
	455 372 l 
	479 444 l 
	194 444 l 
	201 531 245 624 348 624 c 
	433 624 484 583 509 534 c 
	cp 
	556 0 m 
	}
ct_PSBuildGlyph
} def
/AdobeSerifMM 
{ 
500 0 10 -12 484 692 
	{ 
	347 298 m 
	171 298 l 
	170 310 170 322 170 335 c 
	170 362 l 
	362 362 l 
	374 403 l 
	172 403 l 
	184 580 244 642 308 642 c 
	380 642 434 574 457 457 c 
	481 462 l 
	474 691 l 
	449 691 l 
	433 670 429 657 410 657 c 
	394 657 360 692 299 692 c 
	204 692 94 604 73 403 c 
	22 403 l 
	10 362 l 
	70 362 l 
	69 352 69 341 69 330 c 
	69 319 69 308 70 298 c 
	22 298 l 
	10 257 l 
	73 257 l 
	97 57 216 -12 295 -12 c 
	364 -12 427 25 484 123 c 
	458 142 l 
	425 101 384 37 316 37 c 
	256 37 189 84 173 257 c 
	335 257 l 
	cp 
	500 0 m 
	} 
ct_PSBuildGlyph 
} def 
end		
%%EndFile
setglobal
Adobe_CoolType_Core begin /$Oblique SetSubstituteStrategy end
%%BeginResource: procset Adobe_AGM_Image 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2006 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Image 71 dict dup begin put
/Adobe_AGM_Image_Id/Adobe_AGM_Image_1.0_0 def
/nd{
	null def
}bind def
/AGMIMG_&image nd
/AGMIMG_&colorimage nd
/AGMIMG_&imagemask nd
/AGMIMG_mbuf()def
/AGMIMG_ybuf()def
/AGMIMG_kbuf()def
/AGMIMG_c 0 def
/AGMIMG_m 0 def
/AGMIMG_y 0 def
/AGMIMG_k 0 def
/AGMIMG_tmp nd
/AGMIMG_imagestring0 nd
/AGMIMG_imagestring1 nd
/AGMIMG_imagestring2 nd
/AGMIMG_imagestring3 nd
/AGMIMG_imagestring4 nd
/AGMIMG_imagestring5 nd
/AGMIMG_cnt nd
/AGMIMG_fsave nd
/AGMIMG_colorAry nd
/AGMIMG_override nd
/AGMIMG_name nd
/AGMIMG_maskSource nd
/AGMIMG_flushfilters nd
/invert_image_samples nd
/knockout_image_samples	nd
/img nd
/sepimg nd
/devnimg nd
/idximg nd
/ds
{
	Adobe_AGM_Core begin
	Adobe_AGM_Image begin
	/AGMIMG_&image systemdict/image get def
	/AGMIMG_&imagemask systemdict/imagemask get def
	/colorimage where{
		pop
		/AGMIMG_&colorimage/colorimage ldf
	}if
	end
	end
}def
/ps
{
	Adobe_AGM_Image begin
	/AGMIMG_ccimage_exists{/customcolorimage where 
		{
			pop
			/Adobe_AGM_OnHost_Seps where
			{
			pop false
			}{
			/Adobe_AGM_InRip_Seps where
				{
				pop false
				}{
					true
				}ifelse
			}ifelse
			}{
			false
		}ifelse 
	}bdf
	level2{
		/invert_image_samples
		{
			Adobe_AGM_Image/AGMIMG_tmp Decode length ddf
			/Decode[Decode 1 get Decode 0 get]def
		}def
		/knockout_image_samples
		{
			Operator/imagemask ne{
				/Decode[1 1]def
			}if
		}def
	}{	
		/invert_image_samples
		{
			{1 exch sub}currenttransfer addprocs settransfer
		}def
		/knockout_image_samples
		{
			{pop 1}currenttransfer addprocs settransfer
		}def
	}ifelse
	/img/imageormask ldf
	/sepimg/sep_imageormask ldf
	/devnimg/devn_imageormask ldf
	/idximg/indexed_imageormask ldf
	/_ctype 7 def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
}def
/pt
{
	end
}def
/dt
{
}def
/AGMIMG_flushfilters
{
	dup type/arraytype ne
		{1 array astore}if
	dup 0 get currentfile ne
		{dup 0 get flushfile}if
		{
		dup type/filetype eq
			{
			dup status 1 index currentfile ne and
				{closefile}
				{pop}
			ifelse
			}{pop}ifelse
		}forall
}def
/AGMIMG_init_common
{
	currentdict/T known{/ImageType/T ldf currentdict/T undef}if
	currentdict/W known{/Width/W ldf currentdict/W undef}if
	currentdict/H known{/Height/H ldf currentdict/H undef}if
	currentdict/M known{/ImageMatrix/M ldf currentdict/M undef}if
	currentdict/BC known{/BitsPerComponent/BC ldf currentdict/BC undef}if
	currentdict/D known{/Decode/D ldf currentdict/D undef}if
	currentdict/DS known{/DataSource/DS ldf currentdict/DS undef}if
	currentdict/O known{
		/Operator/O load 1 eq{
			/imagemask
		}{
			/O load 2 eq{
				/image 
			}{
				/colorimage
			}ifelse
		}ifelse
		def
		currentdict/O undef
	}if
	currentdict/HSCI known{/HostSepColorImage/HSCI ldf currentdict/HSCI undef}if
	currentdict/MD known{/MultipleDataSources/MD ldf currentdict/MD undef}if
	currentdict/I known{/Interpolate/I ldf currentdict/I undef}if
	currentdict/SI known{/SkipImageProc/SI ldf currentdict/SI undef}if
	/DataSource load xcheck not{
		DataSource type/arraytype eq{
			DataSource 0 get type/filetype eq{
				/_Filters DataSource def
				currentdict/MultipleDataSources known not{
					/DataSource DataSource dup length 1 sub get def 
				}if
			}if
		}if
		currentdict/MultipleDataSources known not{
			/MultipleDataSources DataSource type/arraytype eq{
				DataSource length 1 gt
			}
			{false}ifelse def
		}if
	}if
	/NComponents Decode length 2 div def
	currentdict/SkipImageProc known not{/SkipImageProc{false}def}if
}bdf
/imageormask_sys
{
	begin
		AGMIMG_init_common
		save mark
		level2{
			currentdict
			Operator/imagemask eq{
				AGMIMG_&imagemask
			}{
				use_mask{
					process_mask AGMIMG_&image
				}{
					AGMIMG_&image
				}ifelse
			}ifelse
		}{
			Width Height
			Operator/imagemask eq{
				Decode 0 get 1 eq Decode 1 get 0 eq	and
				ImageMatrix/DataSource load
				AGMIMG_&imagemask
			}{
				BitsPerComponent ImageMatrix/DataSource load
				AGMIMG_&image
			}ifelse
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
		cleartomark restore
	end
}def
/overprint_plate
{
	currentoverprint{
		0 get dup type/nametype eq{
			dup/DeviceGray eq{
				pop AGMCORE_black_plate not
			}{
				/DeviceCMYK eq{
					AGMCORE_is_cmyk_sep not
				}if
			}ifelse
		}{
			false exch
			{
				 AGMOHS_sepink eq or
			}forall
			not
		}ifelse
	}{
		pop false
	}ifelse
}def
/process_mask
{
	level3{
		dup begin
		/ImageType 1 def
		end
		4 dict begin
			/DataDict exch def
			/ImageType 3 def
			/InterleaveType 3 def
			/MaskDict 9 dict begin
				/ImageType 1 def
				/Width DataDict dup/MaskWidth known{/MaskWidth}{/Width}ifelse get def
				/Height DataDict dup/MaskHeight known{/MaskHeight}{/Height}ifelse get def
				/ImageMatrix[Width 0 0 Height neg 0 Height]def
				/NComponents 1 def
				/BitsPerComponent 1 def
				/Decode DataDict dup/MaskD known{/MaskD}{[1 0]}ifelse get def
				/DataSource Adobe_AGM_Core/AGMIMG_maskSource get def
			currentdict end def
		currentdict end
	}if
}def
/use_mask
{
	dup/Mask known	{dup/Mask get}{false}ifelse
}def
/imageormask
{
	begin
		AGMIMG_init_common
		SkipImageProc{
			currentdict consumeimagedata
		}
		{
			save mark
			level2 AGMCORE_host_sep not and{
				currentdict
				Operator/imagemask eq DeviceN_PS2 not and{
					imagemask
				}{
					AGMCORE_in_rip_sep currentoverprint and currentcolorspace 0 get/DeviceGray eq and{
						[/Separation/Black/DeviceGray{}]setcolorspace
						/Decode[Decode 1 get Decode 0 get]def
					}if
					use_mask{
						process_mask image
					}{
						DeviceN_NoneName DeviceN_PS2 Indexed_DeviceN level3 not and or or AGMCORE_in_rip_sep and 
						{
							Names convert_to_process not{
								2 dict begin
								/imageDict xdf
								/names_index 0 def
								gsave
								imageDict write_image_file{
									Names{
										dup(None)ne{
											[/Separation 3 -1 roll/DeviceGray{1 exch sub}]setcolorspace
											Operator imageDict read_image_file
											names_index 0 eq{true setoverprint}if
											/names_index names_index 1 add def
										}{
											pop
										}ifelse
									}forall
									close_image_file
								}if
								grestore
								end
							}{
								Operator/imagemask eq{
									imagemask
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/imagemask eq{
								imagemask
							}{
								image
							}ifelse
						}ifelse
					}ifelse
				}ifelse
			}{
				Width Height
				Operator/imagemask eq{
					Decode 0 get 1 eq Decode 1 get 0 eq	and
					ImageMatrix/DataSource load
					/Adobe_AGM_OnHost_Seps where{
						pop imagemask
					}{
						currentgray 1 ne{
							currentdict imageormask_sys
						}{
							currentoverprint not{
								1 AGMCORE_&setgray
								currentdict imageormask_sys
							}{
								currentdict ignoreimagedata
							}ifelse				 		
						}ifelse
					}ifelse
				}{
					BitsPerComponent ImageMatrix 
					MultipleDataSources{
						0 1 NComponents 1 sub{
							DataSource exch get
						}for
					}{
						/DataSource load
					}ifelse
					Operator/colorimage eq{
						AGMCORE_host_sep{
							MultipleDataSources level2 or NComponents 4 eq and{
								AGMCORE_is_cmyk_sep{
									MultipleDataSources{
										/DataSource DataSource 0 get xcheck
											{
											[
											DataSource 0 get/exec cvx
											DataSource 1 get/exec cvx
											DataSource 2 get/exec cvx
											DataSource 3 get/exec cvx
											/AGMCORE_get_ink_data cvx
											]cvx
											}{
											DataSource aload pop AGMCORE_get_ink_data
											}ifelse def
									}{
										/DataSource 
										Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
										/DataSource load
										filter_cmyk 0()/SubFileDecode filter def
									}ifelse
									/Decode[Decode 0 get Decode 1 get]def
									/MultipleDataSources false def
									/NComponents 1 def
									/Operator/image def
									invert_image_samples
						 			1 AGMCORE_&setgray
									currentdict imageormask_sys
								}{
									currentoverprint not Operator/imagemask eq and{
 			 							1 AGMCORE_&setgray
 			 							currentdict imageormask_sys
 			 						}{
 			 							currentdict ignoreimagedata
 			 						}ifelse
								}ifelse
							}{	
								MultipleDataSources NComponents AGMIMG_&colorimage						
							}ifelse
						}{
							true NComponents colorimage
						}ifelse
					}{
						Operator/image eq{
							AGMCORE_host_sep{
								/DoImage true def
								currentdict/HostSepColorImage known{HostSepColorImage not}{false}ifelse
								{
									AGMCORE_black_plate not Operator/imagemask ne and{
										/DoImage false def
										currentdict ignoreimagedata
					 				}if
								}if
						 		1 AGMCORE_&setgray
								DoImage
									{currentdict imageormask_sys}if
							}{
								use_mask{
									process_mask image
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/knockout eq{
								pop pop pop pop pop
								currentcolorspace overprint_plate not{
									knockout_unitsq
								}if
							}if
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			cleartomark restore
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/sep_imageormask
{
 	/sep_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_avoid_L2_sep_space{
			/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
		}if
 		AGMIMG_ccimage_exists 
		MappedCSA 0 get/DeviceCMYK eq and
		currentdict/Components known and 
		Name()ne and 
		Name(All)ne and 
		Operator/image eq and
		AGMCORE_producing_seps not and
		level2 not and
		{
			Width Height BitsPerComponent ImageMatrix 
			[
			/DataSource load/exec cvx
			{
				0 1 2 index length 1 sub{
					1 index exch
					2 copy get 255 xor put
				}for
			}/exec cvx
			]cvx bind
			MappedCSA 0 get/DeviceCMYK eq{
				Components aload pop
			}{
				0 0 0 Components aload pop 1 exch sub
			}ifelse
			Name findcmykcustomcolor
			customcolorimage
		}{
			AGMCORE_producing_seps not{
				level2{
 					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne AGMCORE_avoid_L2_sep_space not and currentcolorspace 0 get/Separation ne and{
						[/Separation Name MappedCSA sep_proc_name exch dup 0 get 15 string cvs(/Device)anchorsearch{pop pop 0 get}{pop}ifelse exch load]setcolorspace_opt
						/sep_tint AGMCORE_gget setcolor
					}if
					currentdict imageormask
				}{
					currentdict
					Operator/imagemask eq{
						imageormask
					}{
						sep_imageormask_lev1
					}ifelse
				}ifelse
 			}{
				AGMCORE_host_sep{
					Operator/knockout eq{
						currentdict/ImageMatrix get concat
						knockout_unitsq
					}{
						currentgray 1 ne{
 							AGMCORE_is_cmyk_sep Name(All)ne and{
 								level2{
 									Name AGMCORE_IsSeparationAProcessColor 
 									{
 										Operator/imagemask eq{
 											//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
 												/sep_tint AGMCORE_gget 1 exch sub AGMCORE_&setcolor
 											}if
 										}{
											invert_image_samples
 										}ifelse
	 								}{
	 									//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
	 										[/Separation Name[/DeviceGray]
	 										{
	 											sep_colorspace_proc AGMCORE_get_ink_data
												1 exch sub
	 										}bind
											]AGMCORE_&setcolorspace
											/sep_tint AGMCORE_gget AGMCORE_&setcolor
										}if
 									}ifelse
 									currentdict imageormask_sys
	 							}{
	 								currentdict
									Operator/imagemask eq{
										imageormask_sys
									}{
										sep_image_lev1_sep
									}ifelse
	 							}ifelse
 							}{
 								Operator/imagemask ne{
									invert_image_samples
 								}if
		 						currentdict imageormask_sys
 							}ifelse
 						}{
 							currentoverprint not Name(All)eq or Operator/imagemask eq and{
								currentdict imageormask_sys 
								}{
								currentoverprint not
									{
 									gsave 
 									knockout_unitsq
 									grestore
									}if
								currentdict consumeimagedata 
		 					}ifelse
 						}ifelse
		 			}ifelse
 				}{
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
						currentcolorspace 0 get/Separation ne{
							[/Separation Name MappedCSA sep_proc_name exch 0 get exch load]setcolorspace_opt
							/sep_tint AGMCORE_gget setcolor
						}if
					}if
					currentoverprint 
					MappedCSA 0 get/DeviceCMYK eq and 
					Name AGMCORE_IsSeparationAProcessColor not and
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{Name inRip_spot_has_ink not and}{false}ifelse 
					Name(All)ne and{
						imageormask_l2_overprint
					}{
						currentdict imageormask
 					}ifelse
				}ifelse
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
}def
/colorSpaceElemCnt
{
	mark currentcolor counttomark dup 2 add 1 roll cleartomark
}bdf
/devn_sep_datasource
{
	1 dict begin
	/dataSource xdf
	[
		0 1 dataSource length 1 sub{
			dup currentdict/dataSource get/exch cvx/get cvx/exec cvx
			/exch cvx names_index/ne cvx[/pop cvx]cvx/if cvx
		}for
	]cvx bind
	end
}bdf		
/devn_alt_datasource
{
	11 dict begin
	/convProc xdf
	/origcolorSpaceElemCnt xdf
	/origMultipleDataSources xdf
	/origBitsPerComponent xdf
	/origDecode xdf
	/origDataSource xdf
	/dsCnt origMultipleDataSources{origDataSource length}{1}ifelse def
	/DataSource origMultipleDataSources
		{
			[
			BitsPerComponent 8 idiv origDecode length 2 idiv mul string
			0 1 origDecode length 2 idiv 1 sub
				{
				dup 7 mul 1 add index exch dup BitsPerComponent 8 idiv mul exch
				origDataSource exch get 0()/SubFileDecode filter
				BitsPerComponent 8 idiv string/readstring cvx/pop cvx/putinterval cvx
				}for 
			]bind cvx
		}{origDataSource}ifelse 0()/SubFileDecode filter def		
	[
		origcolorSpaceElemCnt string
		0 2 origDecode length 2 sub
			{
			dup origDecode exch get dup 3 -1 roll 1 add origDecode exch get exch sub 2 BitsPerComponent exp 1 sub div
			1 BitsPerComponent 8 idiv{DataSource/read cvx/not cvx{0}/if cvx/mul cvx}repeat/mul cvx/add cvx
			}for
		/convProc load/exec cvx
		origcolorSpaceElemCnt 1 sub -1 0
			{
			/dup cvx 2/add cvx/index cvx
			3 1/roll cvx/exch cvx 255/mul cvx/cvi cvx/put cvx
			}for
	]bind cvx 0()/SubFileDecode filter
	end
}bdf
/devn_imageormask
{
 	/devicen_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	2 dict begin
	dup
	/srcDataStrs[3 -1 roll begin
		AGMIMG_init_common
		currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
		{
			Width Decode length 2 div mul cvi
			{
				dup 65535 gt{1 add 2 div cvi}{exit}ifelse
			}loop
			string
		}repeat
		end]def
	/dstDataStr srcDataStrs 0 get length string def
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_producing_seps not{
			level3 not{
				Operator/imagemask ne{
					/DataSource[[
						DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
						colorSpaceElemCnt/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
						devn_alt_datasource 1/string cvx/readstring cvx/pop cvx]cvx colorSpaceElemCnt 1 sub{dup}repeat]def				
					/MultipleDataSources true def
					/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				}if
			}if
			currentdict imageormask
 		}{
			AGMCORE_host_sep{
				Names convert_to_process{
					CSA get_csa_by_name 0 get/DeviceCMYK eq{
						/DataSource
							Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
							DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
							4/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
							devn_alt_datasource
						filter_cmyk 0()/SubFileDecode filter def
						/MultipleDataSources false def
						/Decode[1 0]def
						/DeviceGray setcolorspace
			 			currentdict imageormask_sys
 					}{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate{
							/DataSource
								DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
								CSA get_csa_by_name 0 get/DeviceRGB eq{3}{1}ifelse/devicen_colorspace_dict AGMCORE_gget/TintTransform get
								devn_alt_datasource
							/MultipleDataSources false def
							/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				 			currentdict imageormask_sys
				 		}{
	 						gsave 
	 						knockout_unitsq
	 						grestore
							currentdict consumeimagedata 
						}ifelse
 					}ifelse
				}
				{	
					/devicen_colorspace_dict AGMCORE_gget/names_index known{
	 					Operator/imagemask ne{
	 						MultipleDataSources{
		 						/DataSource[DataSource devn_sep_datasource/exec cvx]cvx def
								/MultipleDataSources false def
	 						}{
								/DataSource/DataSource load dstDataStr srcDataStrs 0 get filter_devn def
	 						}ifelse
							invert_image_samples
	 					}if
			 			currentdict imageormask_sys
	 				}{
	 					currentoverprint not Operator/imagemask eq and{
							currentdict imageormask_sys 
							}{
							currentoverprint not
								{
	 							gsave 
	 							knockout_unitsq
	 							grestore
								}if
							currentdict consumeimagedata 
			 			}ifelse
	 				}ifelse
	 			}ifelse
 			}{
				currentdict imageormask
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
	end
}def
/imageormask_l2_overprint
{
	currentdict
	currentcmykcolor add add add 0 eq{
		currentdict consumeimagedata
	}{
		level3{			
			currentcmykcolor 
			/AGMIMG_k xdf 
			/AGMIMG_y xdf 
			/AGMIMG_m xdf 
			/AGMIMG_c xdf
			Operator/imagemask eq{
				[/DeviceN[
				AGMIMG_c 0 ne{/Cyan}if
				AGMIMG_m 0 ne{/Magenta}if
				AGMIMG_y 0 ne{/Yellow}if
				AGMIMG_k 0 ne{/Black}if
				]/DeviceCMYK{}]setcolorspace
				AGMIMG_c 0 ne{AGMIMG_c}if
				AGMIMG_m 0 ne{AGMIMG_m}if
				AGMIMG_y 0 ne{AGMIMG_y}if
				AGMIMG_k 0 ne{AGMIMG_k}if
				setcolor			
			}{	
				/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
				[/Indexed 				
					[
						/DeviceN[
							AGMIMG_c 0 ne{/Cyan}if
							AGMIMG_m 0 ne{/Magenta}if
							AGMIMG_y 0 ne{/Yellow}if
							AGMIMG_k 0 ne{/Black}if
						]
						/DeviceCMYK{
							AGMIMG_k 0 eq{0}if
							AGMIMG_y 0 eq{0 exch}if
							AGMIMG_m 0 eq{0 3 1 roll}if
							AGMIMG_c 0 eq{0 4 1 roll}if						
						}
					]
					255
					{
						255 div 
						mark exch
						dup	dup dup
						AGMIMG_k 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 1 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_y 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 2 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_m 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 3 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_c 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						counttomark 1 add -1 roll pop
					}
				]setcolorspace
			}ifelse
			imageormask_sys
		}{
	write_image_file{
		currentcmykcolor
		0 ne{
			[/Separation/Black/DeviceGray{}]setcolorspace
			gsave
			/Black
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 1 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Yellow/DeviceGray{}]setcolorspace
			gsave
			/Yellow
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 2 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Magenta/DeviceGray{}]setcolorspace
			gsave
			/Magenta
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 3 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Cyan/DeviceGray{}]setcolorspace
			gsave
			/Cyan 
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
				close_image_file
			}{
				imageormask
			}ifelse
		}ifelse
	}ifelse
}def
/indexed_imageormask
{
	begin
		AGMIMG_init_common
		save mark 
 		currentdict
 		AGMCORE_host_sep{
			Operator/knockout eq{
				/indexed_colorspace_dict AGMCORE_gget dup/CSA known{
					/CSA get get_csa_by_name
				}{
					/Names get
				}ifelse
				overprint_plate not{
					knockout_unitsq
				}if
			}{
				Indexed_DeviceN{
					/devicen_colorspace_dict AGMCORE_gget dup/names_index known exch/Names get convert_to_process or{
			 			indexed_image_lev2_sep
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}{
		 			AGMCORE_is_cmyk_sep{
						Operator/imagemask eq{
							imageormask_sys
						}{
							level2{
								indexed_image_lev2_sep
							}{
								indexed_image_lev1_sep
							}ifelse
						}ifelse
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}ifelse
			}ifelse
 		}{
			level2{
				Indexed_DeviceN{
					/indexed_colorspace_dict AGMCORE_gget begin
				}{
					/indexed_colorspace_dict AGMCORE_gget dup null ne
					{
						begin
						currentdict/CSDBase known{CSDBase/CSD get_res/MappedCSA get}{CSA}ifelse
						get_csa_by_name 0 get/DeviceCMYK eq ps_level 3 ge and ps_version 3015.007 lt and
						AGMCORE_in_rip_sep and{
							[/Indexed[/DeviceN[/Cyan/Magenta/Yellow/Black]/DeviceCMYK{}]HiVal Lookup]
							setcolorspace
						}if
						end
					}
					{pop}ifelse
				}ifelse
				imageormask
				Indexed_DeviceN{
					end
				}if
			}{
				Operator/imagemask eq{
					imageormask
				}{
					indexed_imageormask_lev1
				}ifelse
			}ifelse
 		}ifelse
		cleartomark restore
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/indexed_image_lev2_sep
{
	/indexed_colorspace_dict AGMCORE_gget begin
	begin
		Indexed_DeviceN not{
			currentcolorspace 
			dup 1/DeviceGray put
			dup 3
			currentcolorspace 2 get 1 add string
			0 1 2 3 AGMCORE_get_ink_data 4 currentcolorspace 3 get length 1 sub
			{
			dup 4 idiv exch currentcolorspace 3 get exch get 255 exch sub 2 index 3 1 roll put
			}for 
			put	setcolorspace
		}if
		currentdict 
		Operator/imagemask eq{
			AGMIMG_&imagemask
		}{
			use_mask{
				process_mask AGMIMG_&image
			}{
				AGMIMG_&image
			}ifelse
		}ifelse
	end end
}def
 /OPIimage
 {
 	dup type/dicttype ne{
 		10 dict begin
 			/DataSource xdf
 			/ImageMatrix xdf
 			/BitsPerComponent xdf
 			/Height xdf
 			/Width xdf
 			/ImageType 1 def
 			/Decode[0 1 def]
 			currentdict
 		end
 	}if
 	dup begin
 		/NComponents 1 cdndf
 		/MultipleDataSources false cdndf
 		/SkipImageProc{false}cdndf
 		/Decode[
 				0 
 				currentcolorspace 0 get/Indexed eq{
 					2 BitsPerComponent exp 1 sub
 				}{
 					1
 				}ifelse
 		]cdndf
 		/Operator/image cdndf
 	end
 	/sep_colorspace_dict AGMCORE_gget null eq{
 		imageormask
 	}{
 		gsave
 		dup begin invert_image_samples end
 		sep_imageormask
 		grestore
 	}ifelse
 }def
/cachemask_level2
{
	3 dict begin
	/LZWEncode filter/WriteFilter xdf
	/readBuffer 256 string def
	/ReadFilter
		currentfile
		0(%EndMask)/SubFileDecode filter
		/ASCII85Decode filter
		/RunLengthDecode filter
	def
	{
		ReadFilter readBuffer readstring exch
		WriteFilter exch writestring
		not{exit}if
	}loop
	WriteFilter closefile
	end
}def
/spot_alias
{
	/mapto_sep_imageormask 
	{
		dup type/dicttype ne{
			12 dict begin
				/ImageType 1 def
				/DataSource xdf
				/ImageMatrix xdf
				/BitsPerComponent xdf
				/Height xdf
				/Width xdf
				/MultipleDataSources false def
		}{
			begin
		}ifelse
				/Decode[/customcolor_tint AGMCORE_gget 0]def
				/Operator/image def
				/SkipImageProc{false}def
				currentdict 
			end
		sep_imageormask
	}bdf
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_colorAry xddf
		/customcolor_tint AGMCORE_gget
		<<
			/Name AGMIMG_colorAry 4 get
			/CSA[/DeviceCMYK]
			/TintMethod/Subtractive
			/TintProc null
			/MappedCSA null
			/NComponents 4 
			/Components[AGMIMG_colorAry aload pop pop]
		>>
		setsepcolorspace
		mapto_sep_imageormask
	}ndf
	Adobe_AGM_Image/AGMIMG_&customcolorimage/customcolorimage load put
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_override false put
		current_spot_alias{dup 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/customcolor_tint AGMCORE_gget exch setsepcolorspace
			pop
			mapto_sep_imageormask
			true set_spot_alias
		}{
			//Adobe_AGM_Image/AGMIMG_&customcolorimage get exec
		}ifelse			
	}bdf
}def
/snap_to_device
{
	6 dict begin
	matrix currentmatrix
	dup 0 get 0 eq 1 index 3 get 0 eq and
	1 index 1 get 0 eq 2 index 2 get 0 eq and or exch pop
	{
		1 1 dtransform 0 gt exch 0 gt/AGMIMG_xSign? exch def/AGMIMG_ySign? exch def
		0 0 transform
		AGMIMG_ySign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		AGMIMG_xSign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		itransform/AGMIMG_llY exch def/AGMIMG_llX exch def
		1 1 transform
		AGMIMG_ySign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		AGMIMG_xSign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		itransform/AGMIMG_urY exch def/AGMIMG_urX exch def			
		[AGMIMG_urX AGMIMG_llX sub 0 0 AGMIMG_urY AGMIMG_llY sub AGMIMG_llX AGMIMG_llY]concat
	}{
	}ifelse
	end
}def
level2 not{
	/colorbuf
	{
		0 1 2 index length 1 sub{
			dup 2 index exch get 
			255 exch sub 
			2 index 
			3 1 roll 
			put
		}for
	}def
	/tint_image_to_color
	{
		begin
			Width Height BitsPerComponent ImageMatrix 
			/DataSource load
		end
		Adobe_AGM_Image begin
			/AGMIMG_mbuf 0 string def
			/AGMIMG_ybuf 0 string def
			/AGMIMG_kbuf 0 string def
			{
				colorbuf dup length AGMIMG_mbuf length ne
					{
					dup length dup dup
					/AGMIMG_mbuf exch string def
					/AGMIMG_ybuf exch string def
					/AGMIMG_kbuf exch string def
					}if
				dup AGMIMG_mbuf copy AGMIMG_ybuf copy AGMIMG_kbuf copy pop
			}
			addprocs
			{AGMIMG_mbuf}{AGMIMG_ybuf}{AGMIMG_kbuf}true 4 colorimage	
		end
	}def			
	/sep_imageormask_lev1
	{
		begin
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{
					255 mul round cvi GrayLookup exch get
				}currenttransfer addprocs settransfer
				currentdict imageormask
			}{
				/sep_colorspace_dict AGMCORE_gget/Components known{
					MappedCSA 0 get/DeviceCMYK eq{
						Components aload pop
					}{
						0 0 0 Components aload pop 1 exch sub
					}ifelse
					Adobe_AGM_Image/AGMIMG_k xddf 
					Adobe_AGM_Image/AGMIMG_y xddf 
					Adobe_AGM_Image/AGMIMG_m xddf 
					Adobe_AGM_Image/AGMIMG_c xddf 
					AGMIMG_y 0.0 eq AGMIMG_m 0.0 eq and AGMIMG_c 0.0 eq and{
						{AGMIMG_k mul 1 exch sub}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						currentcolortransfer
						{AGMIMG_k mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_y mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_m mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_c mul 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer
						currentdict tint_image_to_color
					}ifelse
				}{
					MappedCSA 0 get/DeviceGray eq{
						{255 mul round cvi ColorLookup exch get 0 get}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						MappedCSA 0 get/DeviceCMYK eq{
							currentcolortransfer
							{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}{
							currentcolortransfer
							{pop 1}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}ifelse
					}ifelse
				}ifelse
			}ifelse
		end
	}def
	/sep_image_lev1_sep
	{
		begin
			/sep_colorspace_dict AGMCORE_gget/Components known{
				Components aload pop
				Adobe_AGM_Image/AGMIMG_k xddf 
				Adobe_AGM_Image/AGMIMG_y xddf 
				Adobe_AGM_Image/AGMIMG_m xddf 
				Adobe_AGM_Image/AGMIMG_c xddf 
				{AGMIMG_c mul 1 exch sub}
				{AGMIMG_m mul 1 exch sub}
				{AGMIMG_y mul 1 exch sub}
				{AGMIMG_k mul 1 exch sub}
			}{
				{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}
			}ifelse
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end
	}def
	/indexed_imageormask_lev1
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			currentdict
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{HiVal mul round cvi GrayLookup exch get HiVal div}currenttransfer addprocs settransfer
				imageormask
			}{
				MappedCSA 0 get/DeviceGray eq{
					{HiVal mul round cvi Lookup exch get HiVal div}currenttransfer addprocs settransfer
					imageormask
				}{
					MappedCSA 0 get/DeviceCMYK eq{
						currentcolortransfer
						{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}{
						currentcolortransfer
						{pop 1}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 2 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 1 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 		Lookup exch get HiVal div}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}ifelse
				}ifelse
			}ifelse
		end end
	}def
	/indexed_image_lev1_sep
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end end
	}def
}if
end
systemdict/setpacking known
{setpacking}if
%%EndResource
currentdict Adobe_AGM_Utils eq {end} if
%%EndProlog
%%BeginSetup
Adobe_AGM_Utils begin
2 2010 Adobe_AGM_Core/ds gx
Adobe_CoolType_Core/ds get exec
Adobe_AGM_Image/ds gx
currentdict Adobe_AGM_Utils eq {end} if
%%EndSetup
%%Page: 1 1
%%EndPageComments
%%BeginPageSetup
%ADOBeginClientInjection: PageSetup Start "AI11EPS"
%AI12_RMC_Transparency: Balance=75 RasterRes=300 GradRes=150 Text=0 Stroke=1 Clip=1 OP=0
%ADOEndClientInjection: PageSetup Start "AI11EPS"
Adobe_AGM_Utils begin
Adobe_AGM_Core/ps gx
Adobe_AGM_Utils/capture_cpd gx
Adobe_CoolType_Core/ps get exec
Adobe_AGM_Image/ps gx
%ADOBeginClientInjection: PageSetup End "AI11EPS"
/currentdistillerparams where{pop currentdistillerparams /CoreDistVersion get 5000 lt} {true} ifelse{ userdict /AI11_PDFMark5 /cleartomark load putuserdict /AI11_ReadMetadata_PDFMark5 {flushfile cleartomark } bind put}{ userdict /AI11_PDFMark5 /pdfmark load putuserdict /AI11_ReadMetadata_PDFMark5 {/PUT pdfmark} bind put } ifelse[/NamespacePush AI11_PDFMark5[/_objdef {ai_metadata_stream_123} /type /stream /OBJ AI11_PDFMark5[{ai_metadata_stream_123}currentfile 0 (%  &&end XMP packet marker&&)/SubFileDecode filter AI11_ReadMetadata_PDFMark5<?xpacket begin="﻿" id="W5M0MpCehiHzreSzNTczkc9d"?>
<x:xmpmeta xmlns:x="adobe:ns:meta/" x:xmptk="Adobe XMP Core 6.0-c004 79.164570, 2020/11/18-15:51:46        ">
 <rdf:RDF xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#">
  <rdf:Description rdf:about=""
    xmlns:dc="http://purl.org/dc/elements/1.1/"
    xmlns:xmp="http://ns.adobe.com/xap/1.0/"
    xmlns:xmpGImg="http://ns.adobe.com/xap/1.0/g/img/"
    xmlns:xmpMM="http://ns.adobe.com/xap/1.0/mm/"
    xmlns:stRef="http://ns.adobe.com/xap/1.0/sType/ResourceRef#"
    xmlns:stEvt="http://ns.adobe.com/xap/1.0/sType/ResourceEvent#"
    xmlns:illustrator="http://ns.adobe.com/illustrator/1.0/"
    xmlns:xmpTPg="http://ns.adobe.com/xap/1.0/t/pg/"
    xmlns:stDim="http://ns.adobe.com/xap/1.0/sType/Dimensions#"
    xmlns:xmpG="http://ns.adobe.com/xap/1.0/g/"
    xmlns:pdf="http://ns.adobe.com/pdf/1.3/"
   dc:format="application/postscript"
   dc:headline="Sand castle parts. Cartoon kids fortress constructions on the beach, building house sandcastle constructor summer season. Vector isolated set"
   xmp:MetadataDate="2023-02-17T18:09:48+02:00"
   xmp:ModifyDate="2023-02-17T18:09:50.274+02:00"
   xmp:CreateDate="2023-02-17T18:09:48+02:00"
   xmp:CreatorTool="Adobe Illustrator 25.2 (Windows)"
   xmpMM:InstanceID="xmp.iid:a93bd767-a89a-7448-9a2a-7cd9b6532d0a"
   xmpMM:DocumentID="xmp.did:a93bd767-a89a-7448-9a2a-7cd9b6532d0a"
   xmpMM:OriginalDocumentID="uuid:5D20892493BFDB11914A8590D31508C8"
   xmpMM:RenditionClass="proof:pdf"
   illustrator:StartupProfile="Print"
   illustrator:CreatorSubTool="Adobe Illustrator"
   xmpTPg:HasVisibleOverprint="False"
   xmpTPg:HasVisibleTransparency="True"
   xmpTPg:NPages="1"
   pdf:Producer="Adobe PDF library 15.00">
   <dc:title>
    <rdf:Alt>
     <rdf:li xml:lang="x-default">Sand castle parts. Cartoon kids fortress constructions on the beach, building house sandcastle constructor summer season. Vector isolated set</rdf:li>
    </rdf:Alt>
   </dc:title>
   <dc:description>
    <rdf:Alt>
     <rdf:li xml:lang="x-default">Sand castle parts. Cartoon kids fortress constructions on the beach, building house sandcastle constructor summer season. Vector isolated set of element sculpt architecture illustration</rdf:li>
    </rdf:Alt>
   </dc:description>
   <dc:creator>
    <rdf:Seq>
     <rdf:li>Lenovo</rdf:li>
    </rdf:Seq>
   </dc:creator>
   <dc:subject>
    <rdf:Bag>
     <rdf:li>element</rdf:li>
     <rdf:li> sculpt</rdf:li>
     <rdf:li> architecture</rdf:li>
     <rdf:li> recreation</rdf:li>
     <rdf:li> sandbox</rdf:li>
     <rdf:li> construction</rdf:li>
     <rdf:li> tower</rdf:li>
     <rdf:li> generator</rdf:li>
     <rdf:li> summertime</rdf:li>
     <rdf:li> fantasy</rdf:li>
     <rdf:li> outdoor</rdf:li>
     <rdf:li> activities</rdf:li>
     <rdf:li> background</rdf:li>
     <rdf:li> preschool</rdf:li>
     <rdf:li> collection</rdf:li>
     <rdf:li> play</rdf:li>
     <rdf:li> sea</rdf:li>
     <rdf:li> illustration</rdf:li>
     <rdf:li> set</rdf:li>
     <rdf:li> object</rdf:li>
     <rdf:li> coast</rdf:li>
     <rdf:li> game</rdf:li>
     <rdf:li> isolated</rdf:li>
     <rdf:li> cartoon</rdf:li>
     <rdf:li> decorative</rdf:li>
     <rdf:li> city</rdf:li>
     <rdf:li> house</rdf:li>
     <rdf:li> build</rdf:li>
     <rdf:li> sandy</rdf:li>
     <rdf:li> fortress</rdf:li>
     <rdf:li> coastline</rdf:li>
     <rdf:li> castle</rdf:li>
     <rdf:li> vector</rdf:li>
     <rdf:li> sand</rdf:li>
     <rdf:li> design</rdf:li>
     <rdf:li> detail</rdf:li>
     <rdf:li> handmade</rdf:li>
     <rdf:li> building</rdf:li>
     <rdf:li> roughness</rdf:li>
     <rdf:li> color</rdf:li>
     <rdf:li> sandcastle</rdf:li>
     <rdf:li> figure</rdf:li>
     <rdf:li> simple</rdf:li>
     <rdf:li> stairs</rdf:li>
     <rdf:li> fragment</rdf:li>
     <rdf:li> piece</rdf:li>
     <rdf:li> casual</rdf:li>
     <rdf:li> diy</rdf:li>
     <rdf:li> creative</rdf:li>
    </rdf:Bag>
   </dc:subject>
   <xmp:Thumbnails>
    <rdf:Alt>
     <rdf:li
      xmpGImg:width="208"
      xmpGImg:height="256"
      xmpGImg:format="JPEG"
      xmpGImg:image="/9j/4AAQSkZJRgABAgEASABIAAD/7QAsUGhvdG9zaG9wIDMuMAA4QklNA+0AAAAAABAASAAAAAEA&#xA;AQBIAAAAAQAB/+4ADkFkb2JlAGTAAAAAAf/bAIQABgQEBAUEBgUFBgkGBQYJCwgGBggLDAoKCwoK&#xA;DBAMDAwMDAwQDA4PEA8ODBMTFBQTExwbGxscHx8fHx8fHx8fHwEHBwcNDA0YEBAYGhURFRofHx8f&#xA;Hx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8f/8AAEQgBAADQAwER&#xA;AAIRAQMRAf/EAaIAAAAHAQEBAQEAAAAAAAAAAAQFAwIGAQAHCAkKCwEAAgIDAQEBAQEAAAAAAAAA&#xA;AQACAwQFBgcICQoLEAACAQMDAgQCBgcDBAIGAnMBAgMRBAAFIRIxQVEGE2EicYEUMpGhBxWxQiPB&#xA;UtHhMxZi8CRygvElQzRTkqKyY3PCNUQnk6OzNhdUZHTD0uIIJoMJChgZhJRFRqS0VtNVKBry4/PE&#xA;1OT0ZXWFlaW1xdXl9WZ2hpamtsbW5vY3R1dnd4eXp7fH1+f3OEhYaHiImKi4yNjo+Ck5SVlpeYmZ&#xA;qbnJ2en5KjpKWmp6ipqqusra6voRAAICAQIDBQUEBQYECAMDbQEAAhEDBCESMUEFURNhIgZxgZEy&#xA;obHwFMHR4SNCFVJicvEzJDRDghaSUyWiY7LCB3PSNeJEgxdUkwgJChgZJjZFGidkdFU38qOzwygp&#xA;0+PzhJSktMTU5PRldYWVpbXF1eX1RlZmdoaWprbG1ub2R1dnd4eXp7fH1+f3OEhYaHiImKi4yNjo&#xA;+DlJWWl5iZmpucnZ6fkqOkpaanqKmqq6ytrq+v/aAAwDAQACEQMRAD8A9U4q7FXYq7FXYq7FWPeb&#xA;btlSG1RiOdXkA7gbLX6a5rtfkoCLsNDj3MkB5TvGi1R7RifTnTki9ua+A91rlOgyVPh72/XY7hxd&#xA;zMM27qHYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYqw/VZBdX8sg3U&#xA;HgnyXbNFqMnHMl3OCPDABLyzWl7b3KDeNg1PEA7j6RlMZ8Mge5v4eKJj3s/jdZEV0NVcBlPiDuM6&#xA;IGxYdARRpvCh2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KoTVLn6vZuw+2&#xA;3wJ822zH1OXggT1bsGPikGMqm1KdNt80btrQ99H8CnwNPvwSbMZZF5ZvPWsfQY/vLc8f9id1/pm3&#xA;0OXihXUOs1uPhnfem+ZzhOxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxVj2&#xA;rXX1i84KaxQbV8XPXNNrMvHOhyDtNNj4Y2eZQlMxW9D3q1gNNiDscjJnj5rNGvWsrtJHNUPwy07q&#xA;e/0dct02Xw5g9F1OLjjTNwQQCDUHcHOgBdC7FVC7u47aMO+5JoqjqcpzZhjFlsx4jM0F1rcx3MCz&#xA;R/ZbqD1BHUHJY8gnGwjJjMDRVcsYOxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KoHVb76vD&#xA;6cZ/fybL7Du2Ymrz8EaH1FyNPi4jZ5BIUQKtB8yfE5pnZktkAih6YVU7kVgf/PvgKYc0tytyGS+X&#xA;NTEkYs5T+8Qfuie6+H0Zt9DqLHAefR1WtwUeIck8JABJNANyc2JNOAGN3t2bu4aQf3S/DEPbufpz&#xA;RajN4kr6O2xY+CNdVukX/wBVv3gkNIZztXoGPQ/wyzR5+CXCeRXU4eOFjmGTZuXUuxV2KuxV2Kux&#xA;V2KuxV2KuxV2KuxV2KuxV2KuxVCXmpRWxKULS0qF7b+OY2fVRht1b8WAz36JFLI8sjSOau3U5p5z&#xA;MjZdlGIAoLAdq5Fk0WA8fuOBaUbh3ZOCIxr1NKYCziB1Qn1eb+Q5GmziDYSeIiQAqVNQw7EYRY3Q&#xA;SDsnEutzXVisHHhM54yOOhUdSMzcmsM4cPXq4cdKITvohwoC8RsKUFMxW5B3y0kVvEfqyEm3HyZN&#xA;oWo/W7Xg5rPFQN4kdmzd6PPxxo8w6nV4eCVjkUyzLcV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2Ku&#xA;xVBalpi3cT8HMNwRRJgAaEdKqdjmPm00Z79W/DnMPMPNbjWNahnkhaccomZGIRKVU0NKrmklGjT0&#xA;MccCAa5qR13WP9//APCJ/TAy8GHc1+ndZ/5aP+EX+mK+DDud+nNa/wCWj/hF/pivgw7lOXXNeAqt&#xA;xXxHBf6YEjDDuXWWr67e3K24mAVt5G4j4VHU9MCzxQiLpl1tGQvI9SKKD2UZIODIq2Fgh75axq3g&#xA;f15GTZjO6lp949ndJMu4Gzr4qeoyeHKccrCc2ITjTNopUljWSM8kcAqfY50EZCQsOhlEg0V2SQ7F&#xA;XYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq8l1NP8Acld/8ZpP+JnOey/Ufe9RhPoHuCF9IVB7jINl&#xA;u9PFbd6eK27huRitsi0XS1gjMrrSSShf5Dov8TjTi5cl7JvhcdohuQINFHUU64ErLleUD+wr92JT&#xA;HmluVuQn/lrUeLGykOzVMJPj3X6c2egz16D8HXa3DfrHxZFm1dY7FXYq7FXYq7FXYq7FXYq7FXYq&#xA;7FXYq7FXYq8Ts9ZkvptWkukEb2V5cRuVrxKKxYNvXt1znsn1F6mMajGu4MT0/wA+6nPq0Sz2ka6d&#xA;cSLGgWvqoHNFYmtD132yNOScIrzT3zf5hn0aCBbWFZbu5LenzrwVUpyJoQf2hiGvHDiQnlDzTear&#xA;cyWWoQpHcInqxyR1CuoIBFCTuK4lOTGI7hk+hxalf6/KBCsej2NBJO4JaaYqDwj7cUr8Rp12xcfL&#xA;ICPmWaAACgxcJ21f7MUtch7/AHHAtNOw4kUJqOlDioCXG2kLBjGeQ6GmQpyOMLkjuEYMqsGU1Ugd&#xA;CMIsG2JIOzMNMvxd24LDjMopKh238R7HN9p84yR8+rpc+Hgl5IzMhodirsVdirsVdirsVdirsVdi&#xA;rsVdirsVdirwu0h4nzLt9q6uD94Oc7k+ovVjlD3BhlnaUmtDTpLD/wATXIW5cuRZJ57g9SfT9uiT&#xA;/rixtowdUD5RtuGvxmn+6Jf1pjbPN9LMvLmvak/mG50Y8PqkZdom4/GpoHIrXfdji4mbFHh4urMO&#xA;E/8Avwf8D/bh3cSw0VuQNnB+jHdNh3G6/nX7sd1sNcbv+ZfuwbrcVB7m5RirUBHtgssxAFb9cn8R&#xA;92PEngDKtGtUS1juKlpJUBbwFd6AZutJhEYiXUh1GqyEyMegTDMxxXYq7FXYq7FXYq7FXYq7FXYq&#xA;7FXYq7FXYq8VgSjeYPe4n/Uc5yf1H3vVDlD3Bi1tEOVsf+LIf+JrlTly6p75vj5XNj/qT/riyUmj&#xA;T8ihPLcdNcj/AOMMv60wBnm+lOfLaU863Tf6/wDybXCObRm/ugz3JuvdiqE1HWNK0yNZNQvIbRX+&#xA;wZnVOVOvGp3+jFlGBlyC+0vrK/gFxZXMdzATT1IWWRT4iq1xUxI5hbexfCHH7Ox+WRkGeMoPINrN&#xA;9K/45tt/xjX9WdFp/wC7j7nQ6j6z70VlzS7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXkaaddRzaw&#xA;kqBGuLib0gSDUGoBNK5zkx6j73pxMERruDHrfQNX5wBrfiFeMsxdKAKwJOxJ7eGVUXKlmjvum3mL&#xA;Tby7ktZLeP1BEJFdeSg/GUIPxEfyZKQacMwLtD6Jo+oQamtxPF6cSRutSykksVpQKW8MADLLkiY0&#xA;E00PTbyLzTPdNH/o8gYrICO6KKUrXt4YQN2rLMHHXVl7c+S8QOP7Vck4TeFDwnzZBNqvmfU7i8Yy&#xA;CG4kt4EqaLHCxRQPurgt3OECMBXcm35ZLcab5pS2hci0vo5BNETtyjXmrfMUp9ONterAML7nrkzg&#xA;fAVJDDc9hiXWRCW5W5DNNGljl0yAowYKvBvZl2IzoNLIHGKdFqYkZDaNzIaHYq7FXYq7FXYq7FXY&#xA;q7FXYq7FXYq7FXYq801Brv6/c0UU9V6f8EffOcy3xH3vR4gOAe5Q5Xn8g/z+nIbtlRdyvP5B/n9O&#xA;O61F3K8/kH+f047rUUZpLXBvBzUBeJ3whryAUndck47R+7FXkGoQg6vqZ8b24/5OtlRLuIfSPcEf&#xA;5QiC+a7A/wCTN/ybOGPNr1P92XqDUKkEVBHTJurCVZW5KeeXdZ022sngnmEcolc0IJ2J9gc2uj1E&#xA;IwomnXavTzlOwNqZIjo6K6EMjCqsNwQc2QIIsOtIo0W8KHYq7FXYq7FXYq7FXYq7FXYq7FXYqpXV&#xA;1BawNNM3FF+8nwHvkJzERZZwgZGg8+upRJNLMFPxszBe+5rnPzlZJd9CNABYOnSntkWTeFXYFVrA&#xA;xxzAn4VofxxYzshMfrFvy5c96U70xsNfCXfWoP5/14bXhKT3HlryvcXEtxJAfVmYvIVlmQFm6nij&#xA;KN/lkdm4ZsgFfqVLDQvLlhdC6tYeM6gqrtJLJQN1pzZgMIpE8mSQopobmCh+P9eG2rhKVfWYP5v1&#xA;5Xbk8JQgIMzEdCSRiy6M90jUbAWFtCZ0EoRUKEgHl0pm80+eHABe7otRhnxk1smmZjiOxV2KuxV2&#xA;KuxV2KuxV2KuxV2KtMaKT4DAeSQxi5uLi5rHOecX2qH+b5ZoZ5py2JdvDHGO45pfcaeWcGGiim4N&#xA;euVU3Rn3qkNlCsYEihn7nFBkVtzYRSRgRqoYGu+NJjMhbb2ITkZgGJ6DFZT7lVYYR8SoAfcYosrC&#xA;W7og9xilQkcgkAUp3piyCqjTFAfRU1HXbfAjbvb5TH/dC7fLFaHe3Wb/AHwv4Yrt3pTWX/fC/hlb&#xA;k7d6ilfUaooanbwwqUZHiwL0GK7tZqelKjlhUAEE0+XXOljkjLkXnZY5R5hVybB2KuxV2KuxV2Ku&#xA;xV2KuxV2KuIqKYqxfWlOmsh4PLFJWjKPs07HNJqcBxnyLttPPxPIpX+mo/8AfEv3D+uYtuV4Xm79&#xA;NRf74l+4f1xtfB8wtGtwgACGSg9h/XG0+Ce9x1uH/fMn3D+uNr4J71p1uH/fUn3D+uPEvgnvU21q&#xA;A/sP+H9ceJl4Jbtp1vJCiKygCpY9MQUSjwo36qePH1Wp0pXGmvj8mxbMBQTPt7nGl4/J31d/9/P9&#xA;+NLxeSVfV3/38/35XTk8XkhuLeoyhtwftdcLK0bF08MWspjpBCajbsTRQ+7H3y/TGsg97RqBcCzQ&#xA;MrfZIPyzoAXREN4UOxV2KuxV2KuxV2KuxV2KuxVL9fAOkXNfAf8AEhmPq/7suRpf7wMG7/xzRO7c&#xA;zBRU18Nt8VAbxVrfFW8VQN1FwfkB8LfryJDbApvotBZn/XP6hkotGbmj64Wp1cVdXFUprlbkqMoH&#xA;qKfHCUxVo8CCq4oTfyy9NRIrQMjClepqDmdoD+8+Dha4ej4sqzdOodirsVdirsVdirsVdirsVdiq&#xA;X6//AMci5+Q/4kMx9V/dlyNL/eB5drnmEaXf6XaegZTqU3pF+VAg5KtehrvIPxzR07+GPiBPc7V/&#xA;MI0/WNNsDAZBfsUaUNThuFXbv8Tb+2NLDHYJ7mr/AMxG18x2OkehzW7Qs0/KnE/Fx2pv9g1xWOO4&#xA;kum8whPM8Gh+gSJYjK1xypRgCwXj4UQ13xpRj9PE2PMY/wAUHQzAaej6guK/tU5FePhx74r4fp4l&#xA;kWvifzDf6GYCPqsImWctUMSEJFKbU9VafTgI2TwVESZHox/0Q/65/UMYtGbmjq4Wp1cVdXFUrU/E&#xA;PnkHJTwUAAGwHQZY4juW9Pp9sbWnVxtUtuZH9VipqQaDemQJLkQApP8AyrI7LcqzEqChAJ6E8q/q&#xA;zZ9nEni+Dru0ABXxT7Nm652KuxV2KuxV2KuxV2KuxVL9f/45Fz8h/wASGY+q/uy5Gl/vA8g81wiT&#xA;WdAb+S4r/wAlYc0VvR4fpl+O9rzJCH8xaK/8kg/5OLja4vok7V4Q3nPTJP5YwPxkxtYf3ZdPCD58&#xA;t5fCGn/JN8bUf3TXoj/Hol/4qI/5JDG1/wAk1awgeeNUl/mtqf8ACQY2k/3Y9/62X6SaWp/1j+oY&#xA;xcXLzRnLC1u5Yq7liq+3iiEEbBF58QeRG9SK4AFkTav8wK98LBpuAFSBt7Yrugrs8ZaLsKA0yJbo&#xA;ckX5ft4LjUOEyB1CM3E9K7D+OZOigJTotGrmYwsMsht4IFKwxrGpNSFFN83cIRjsBTp5TMuZtUyT&#xA;F2KuxV2KuxV2KuxV2KuxVL9f/wCORc/If8SGY+q/uy5Gl/vA8t1y0uJ9R0uSKMukUtZGHRRzjap+&#xA;hDmhL0OKQEZNavZ3Muq6dKiF0jeruBstHDb+GwxKccgIlu+s7iTzDZTpGTCiUaQdBx5Vr/wQxPNE&#xA;JDgIdLZ3B8zw3IjJhEe8n7I+FlpXxqwx6qJDw6aNlc/4n+temfQEdfU7bpxp8641uniHh01FaXC+&#xA;Yr65aMiF4KLJ2JKxig/4A4rxDgA8090xqWx/1j/DCGjLzRfPC1u54qrxBSlSKnFiVQMAKDYDpih1&#xA;agVO/tUYqhb2R04lGYE12qe2AtmMWt0xFub+COapWRgHFd/lXJ4ICUwCueXDAkM0tdNsbVy8EQRm&#xA;FC25NPprm9x4IQNxDpJ5pz2JROWtTsVdirsVdirsVdirsVdirsVS/wAwf8ce5/1R/wASGY+q/uy5&#xA;Gl/vAwUk1FOnfNE7tWitZ5V5ItV6VqBhYmQDprOaNebr8IPUH+mNJEgsiiklbigqeuKk0rGwugPs&#xA;fiMaRxhBsjcXAqxYGi96nsMDMFF2en3cUPF0ANa0qMQGM5gldIGjYq4oRhYhWggZ15Fdj03piglV&#xA;KtGBtQYsebl5N07YqsuPXSIsg3HX5YlMatLzNJM6qTyc/ZHTIN9AMptU8uWsqSx8jKnRm5Hfxp0z&#xA;aYzp4Gxz+Lq8njzFHknsUiSxrJGeSMKqRmyjIEWHXyiQaKCm13TIpGjaX4lNDRSRX5gZjy1eMGrb&#xA;46WZF0r2WoWl6rG3flwIDAggivTrlmPNGf0teTFKHNEZa1uxV2KuxV2KuxV2KuxVL/MH/HHuf9Uf&#xA;8SGY+q/uy5Gl/vAwOuaN3ib6YQbXbqCcWjJzRLorqVYVU9RhYgrYreGIkxqFJ6nFSSV4INaHp1xQ&#xA;pC1tw/MIOVa198DLiKrhYqcttDKeTrUjatSP1YGQkQuAVQFXYDag7YocyqwoRUYVWhAoPEb4pdQl&#xA;QGpUjcdsCqC21vG3NUCkd/DGmXES0DJVuVKV+GnhiuyvHqV9DGI4piqDoNtq/PLo55xFA7NcsMJG&#xA;yEvkLlqncHqT1rlJbgn3lBTS7amxMYB9xy/rmy7PH1fB1+v/AIfiyLNk692KuxV2KuxV2KuxV2Kp&#xA;d5iNNFuv9Uf8SGY+q/uy5Gk/vAwDnmjd7S+G4dCCrsgbrQkYoMVdtSCEAys1TvQnb8cFoGO1R9Si&#xA;jWvqlz4K1T+vG2IxkqjajbLGX9UsevEMa/dXG18Mrl1G0MXqGUjavAseXypXG0HGbXQ6lZyR8zJw&#xA;PdWYg/rxtBxkNQalZShiZDHQ0o7EV9xvjYTLHIOi1KxeR15lOPR2YgN8t8bCnHIBsalYmcxczQD+&#xA;85Hj99cbC+HKrafUdPWZY+ZYN1kDEqPma42FGOVW6bUdPiKDmZOR3KMTT5742FEJF1xf6fEnIOZC&#xA;TTijEn9eJIWMJF0t5pyRGQSc9tkVjyNfauOyiMrUWv7Joiy1DUqAW3+7BbIQNtWjG8YRwKXkNf3Y&#xA;+1thjEyNBM6iLLP4oYYU4RIsaD9lQAPwzo4xERQedlIk2V+SQ7FXYq7FXYq7FXYq4kAEnYDqcVYj&#xA;rnm3T7qwmtLdJC8lFEjABaAg1G5PbwzWajVxlExDtdPopxkJGmJmY9t/pzXOzpr1pf5R9/8AZgTQ&#xA;TSFC0KE9SoP4YWgndd6RxW2mhYkUNAOu1a4Ftv0fbCtu9EeGK20ltU0pyJO22BTJc0NtEwSUF5ju&#xA;IIhyenifD6cNKCS0La3nVjDRwv24yKOv+sp3xpeIjmt+rJ/KPuGCl4m/qyfyj7hjS8TX1aL+RfuG&#xA;NJ4i0bSIinAfQKY0vGUFNatG1D0PQ5EhtjK048nJTWkP/Fb/AKsy9B/eOJrz+7Z7m8dE7FXYq7FX&#xA;Yq7FWLPcTlgeTHkdzXpnPHJLvdyIRR1lqhgQpIDIK1U16ffmVg1fAKO7j5dPxGxsh72/aaUvyKIa&#xA;Kq1yrNnM5XybcWERFJVf6fFcwGNAsb9VenT7sociEyChLDR1tXd5CsjN0oNh4nfA2Ty2qzRwkEcV&#xA;PY7DFiCW4IeMMa1rxUCvjQYqTuv4YotpVBFR0PTFW/TxW3eiWIoeIG7H2xW0Bqes2djZSXcs4tbC&#xA;MHndEVkkoKlYF79OuLOMCTXM9363l17+ZupalqcNlpCHTtOeSjcTW4m95JOor4L95wkbOfDTAby3&#xA;P2Jh5V/Me4b0bbzDV5KhYtTiAWZK9BIAKOPH+OEhryaf+b8npMc4fgJGQtJtDcp/dSkbUP8AK/tk&#xA;XDI/HcrKASVIoy/aU9RixLfp4rbvTxW1pt0IKlRQ7n540vEh7Z3s7iVojRuDIrDYjlQV+7DjmYk0&#xA;zyREwLV7e5uCd5X/AOCOHjl3sDAdzILHW/Tt1jlRnZdg9eo7dczsOt4Y0RbgZdLcrCFluppZWkLk&#xA;cjUCp29sxJ5ZSJNt8cYApE2Oovblg9ZFbtXofpy7T6owu9w1ZsAly2avtQe4cFKoijZa9T9GDPqT&#xA;M7bBOHAIjfdZp88/1qGrEVYBhWoocGnyS4xuyzQHCUp8w6hc6RffV1tTNEyho5S/Cteo+y3TI6jD&#xA;4cq6N+lAyxu6KVf4quf+WD/kt/zZlFuT+WHf9jv8VXPX9H/8lh/zTja/lh/O+xb/AIquf+rf/wAl&#xA;f+bMbX8sP532LT5puD/x4H/kZ/zZgtP5cd6Hk8yvUj6lxJ3Px/8ANuNsxp/NkNo3q2kMtOPONW49&#xA;aVANMLiSFEhV44odxxVphQdKk7Ae+KhKtc1SysLGW5vJOFjCeL78TNL2jB/l8cW3HEk0Of3PHdTv&#xA;tV8xajcXd7e2wVYJFt7dH/dxJSlFWn3nEl2cICAoO8peWWGrWkz3dsW5clQSVagBPSnXJWjJOg6H&#xA;y631pI/r9pX1AtfV96eGNpM9uTKNK1C60XWruCe8tp9JuJ2a4tWl3XkxPJKj4XFfp/HA0ThxCx9T&#xA;0OBhPFGY5RNyQSWlyN/UjIrQnuRgIcLl+lXhdJgKijr2wBjIUrccLF3HFUn1S4a2EswXnQgca0rU&#xA;gdaHI9XIxxuggoNbnpy+qih6Vk/5tws5YR3opfMcw/49B/yM/wCbMLA4B3rx5lkBr9TFf+Mv/NmK&#xA;PAHeu/xRJ/yx/wDJT/mzFfy473f4of8A5ZP+Sn/NuKPy/myDyrNJqTSXEkJgjgZeBryDsa13ov2a&#xA;D78ztHh4jxHo4OtPAOEb2i/OcavpK1FSJVIP0NmTrvo+LR2eayfBgzR8SPh+E9W8M07ugV3oDCji&#xA;a9A8ug4/jXFeJv0BivEozWqSpyXqtaH5YCyjKmS2C0sbcf8AFSf8RGEOJP6ir0xYuphQoSFwCFNX&#xA;J9NG926n6BgZh5X57uNR1a5vbaCJv0fZenDaLt8TK372SnufwGAl2WniIizzKReW/KmqTSXMjWre&#xA;msEgWtAC5Gw3OG23JlATbQvLerR6vbSSWroiPVmNAAAD74teTJGuaEi8ra0LhFNo9Q4FdqdfGuLI&#xA;5Y1zVtV8tau2p3brauyPM7KwoQQzEjviiGSNDdnHlcarbyDTLmJlhFvDLaSVBCTRxqrpt/NT/OuL&#xA;h5uE+oMhlPGVJ02Eg5U9+4yJ2LVHcUjOScA5NFIrX55K2qlwoQCDUHocVSTWU5QzD/KH/EhkXJxd&#xA;EJ6A6UyTLid6AxXid6AxXiaEBqa9O2K8TfoDFeJ6PoaKmj2aqKD0lNB4kVOb7T/3Y9zz2pN5Je9B&#xA;+bRXSx/xlX9RyjXf3fxbtD9fwYdxzUO3dxxV4/eXnmV7q4nGq3aH1HZUSVlQUY0AQHjT2w2HZCEa&#xA;5PWLKRpLO2eU1lkjRmNOrFQT0yLr5Dcq7J8J+WKLTmyH+hwf8Y0/4iMIaJ8yr0wsWsVS+9uGhsZL&#xA;hftxQzzr/rKpIyIbQLNe54Va29wdNvzxcg+mWND/ADd8jbuTVhOvLFnc/V5zFG+9tMWKg9/GmFqy&#xA;kbe9FeXrWca1aFUaofsD0oa/hixykcJQcNndC6jAjf1Q4oKHlyr99a4syRSvrNpcfpa85o9TM53B&#xA;rQsadfbFjjI4QmcSXtt5k0qV0kDotqDzBBoVVXG/04Ws0YH4vRZwPSoP2JHA+RNcZOBDmr2hDQcT&#xA;vQ0I/HEMZ81enh0yTBJdTH7ub/W/42ytycfRT45NCS+cZbuDy5dyWkrQXB9NElTZlDyojUPY8WOL&#xA;bhAMhbDfJ9xrq+Y7OO41C5uLeb1ElimkaRSBE7jZiaHkoxtyc0RwnZ6ZxxcF3HFXoGj/APHLtf8A&#xA;jEv6s32n/ux7nRZ/rPvQPmv/AI5Y/wCMq/qOUa7+7+Ldofr+DEM1Dt3Yq83msZB6ytGwcM4K0Na1&#xA;OVuyBeg2SMlnAjCjLGgIPYhQMm66R3KsRihOLIf6HB/xjT/iIwhpnzKtTCxWOp+I124kcf44EgpX&#xA;qZI0m5KmjC0uCCOoPE4BybY/V8Q8btr6/wD0fef6RIT+7oSxJHxdjkHbmIsJ95c1LUltZKXUtPq0&#xA;tAXJp8qnCC05YRvl1ROh6jqX6Wtg11KylqFWdmBBB7E4gscsI8J2QsWqar9YR/rc1eYP22pWvhWm&#xA;NsjCNclbVdS1M6ndUu5gBK6gK7AABiBsDjaIQjwjZGPqOpSazp4e5k4sLXkoYgHkFLVA23rhthwR&#xA;ETt3s+m/u3/4yt+rDJwYc/gusT8TL4iuCK5EZTJtSSaj/dS/P/jbK3Kh0UyQCBQ75JilnmiJpdDu&#xA;EVSx5RMQBXZZVYn6AK4ltwn1Bjmg2brrlm4Q0RpGY06D0nWp+lgMiHJyn0lmzMqirGgyTggN7Yqz&#xA;7SP+OXa/8Yl/Vm/0/wDdj3Ohz/WfegfNf/HLH/GVf1HKNd/d/Fv0P1/Bh5FSNyKeGad27eKuxV2K&#xA;tFlUVJoBitJxZf7xwf8AGNP+IjCGifMqhVi4Iaijqvjii23+w3yOKhKtRYrpdww6i0nIruPsnB0b&#xA;o/V8Q8jttSuP0fdjjH+x+wo6t4AUyt2xgLDIPLWsXcdrIAkX+88n+61HTfsBkgWjNjBPxROiatdD&#xA;VLf4Id2oaRIDuCOoAOILHLjHCUNFrV39aSX04a8w1PSTrWvWlfxwWzOIUq6pq90dRufgh2kZRWJC&#xA;aKaDcgnthJYwxjhCLm1e6m1ewDJEAwtwaRqT8VGNCakfaxtgMYET8WaTf3b/APGVv1ZKThx5rbRq&#xA;Tr71GAJnyTDJtCR6h/cSfMfryty4cwpCeEivMZK0cJb9WL+dfvGNrRd6sX86/eMbWi2XjPVh94xR&#xA;Rd6ifzD7xitM/wBI/wCOXa/8Yl/Vm/0/92Pc6HP9Z96R3couJZGIPByfhPhmmy5OKRLssceEAIaN&#xA;I1Skajjv1r1+kZU2nzaSERghI1odzuT+sYqTa2O2hid5FiVWfdyWP8RtikyJ2ttbSETGcRL6jCha&#xA;p/V0xpeI1TbWds0yzNGDIuynf9XTGkcZqlbCxdirUn2G+RwJHNKtRIGl3BIqBaT1Hj8J8MHRuj9X&#xA;xDyO2ubYWF2Pqif7r/af+b3JP45W7cxNjdkPlq8sktZOVjG3+jyb83/iWwguPmib59URot3aDVLf&#xA;/QoxViAQ0m1Qd/iZhhBRlieE7oeK9svrSP8AUI+PMNx5ydK1p9qn4YLZGBrmq6pd2Z1G5IsY/wC8&#xA;YGrybkGhOzAb4koxxPCN0XNeWkmr2PCyjjJFvQ8nqK0I6FRtXww21iJETv3szm/u3/4yt+rJScOP&#xA;NQSglR96qcizPKkx+swUryydtHAUBHJwk5U5DwOQBbiLC6B7aAMIoAvI1O5P68NoMSeZVbaOEyPL&#xA;FAqs/wBtix+fgcIYyJ5ErxaR+uZvST1SKFuR/VSmGkcW1W57OJ5VlaJeafZNT+qlMaQJ0KWzWEcx&#xA;UuqnjuOv8MaSJ0mOi/6LfAsxZZF9IL4FiKH8My9Hk4Z79dnG1MeKHu3UiCDQ7EdRmK2tYq7FWiVI&#xA;oaUwJdzT+YffitLWeJlKlxQ++KQC0kkSrx9RSB03HTFSC368P84+/G14SskuIfTajVJBAAwEpETa&#xA;B1FK6RcOR8AtZwxHXdTj0bI/V8Q8itjpv1C7qJa/u+6/zZW7c3YZB5bbSBaSeos5P1eToV/swhx8&#xA;3FfTmidFOlfpS3qs/wBrbdetDTsMRSMvFwnkh4jo/wBZSqz+nzHdPs1x2ZHiroqamdJ/SNzRZ/7x&#xA;q7p1rv2PfE0jHxcI5IyU6SdWsPRWYGlvxqVp24169qYdmscXCbrqzO4RljaopWQkfIjJScKHNDZB&#xA;tdirjyqKUp3xV2KouykQKykgGtd8nFqyBXpFz5ggMepr1GFhvyX8lPcffiim6jxwqrWalruEKK/G&#xA;p28AanLcAuY97VlNRPuf/9k="/>
    </rdf:Alt>
   </xmp:Thumbnails>
   <xmpMM:DerivedFrom
    stRef:instanceID="xmp.iid:f2b29506-bb3a-4358-9973-eb49c6d09137"
    stRef:documentID="xmp.did:f2b29506-bb3a-4358-9973-eb49c6d09137"
    stRef:originalDocumentID="uuid:5D20892493BFDB11914A8590D31508C8"
    stRef:renditionClass="proof:pdf"/>
   <xmpMM:History>
    <rdf:Seq>
     <rdf:li
      stEvt:action="saved"
      stEvt:instanceID="xmp.iid:df1b4794-538b-41ca-abb3-652f1acab45d"
      stEvt:when="2022-12-22T12:47:07+02:00"
      stEvt:softwareAgent="Adobe Illustrator 27.0 (Macintosh)"
      stEvt:changed="/"/>
     <rdf:li
      stEvt:action="saved"
      stEvt:instanceID="xmp.iid:f2b29506-bb3a-4358-9973-eb49c6d09137"
      stEvt:when="2022-12-22T13:34:36+02:00"
      stEvt:softwareAgent="Adobe Illustrator 27.0 (Macintosh)"
      stEvt:changed="/"/>
     <rdf:li
      stEvt:action="converted"
      stEvt:parameters="from application/postscript to application/vnd.adobe.illustrator"/>
     <rdf:li
      stEvt:action="converted"
      stEvt:parameters="from application/postscript to application/vnd.adobe.illustrator"/>
     <rdf:li
      stEvt:action="saved"
      stEvt:instanceID="xmp.iid:a93bd767-a89a-7448-9a2a-7cd9b6532d0a"
      stEvt:when="2023-02-17T18:09:48+02:00"
      stEvt:softwareAgent="Adobe Illustrator 25.2 (Windows)"
      stEvt:changed="/"/>
    </rdf:Seq>
   </xmpMM:History>
   <xmpTPg:MaxPageSize
    stDim:w="800.567417"
    stDim:h="992.417800"
    stDim:unit="Pixels"/>
   <xmpTPg:PlateNames>
    <rdf:Seq>
     <rdf:li>Cyan</rdf:li>
     <rdf:li>Magenta</rdf:li>
     <rdf:li>Yellow</rdf:li>
     <rdf:li>Black</rdf:li>
    </rdf:Seq>
   </xmpTPg:PlateNames>
   <xmpTPg:SwatchGroups>
    <rdf:Seq>
     <rdf:li>
      <rdf:Description
       xmpG:groupName="Default Swatch Group"
       xmpG:groupType="0">
      <xmpG:Colorants>
       <rdf:Seq>
        <rdf:li
         xmpG:swatchName="White"
         xmpG:mode="RGB"
         xmpG:type="PROCESS"
         xmpG:red="255"
         xmpG:green="255"
         xmpG:blue="255"/>
        <rdf:li
         xmpG:swatchName="Black"
         xmpG:mode="RGB"
         xmpG:type="PROCESS"
         xmpG:red="29"
         xmpG:green="29"
         xmpG:blue="27"/>
        <rdf:li
         xmpG:swatchName="C=0 M=0 Y=0 K=100"
         xmpG:mode="RGB"
         xmpG:type="PROCESS"
         xmpG:red="29"
         xmpG:green="29"
         xmpG:blue="27"/>
       </rdf:Seq>
      </xmpG:Colorants>
      </rdf:Description>
     </rdf:li>
    </rdf:Seq>
   </xmpTPg:SwatchGroups>
  </rdf:Description>
 </rdf:RDF>
</x:xmpmeta>
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                        
<?xpacket end="w"?>%  &&end XMP packet marker&&[{ai_metadata_stream_123}<</Type /Metadata /Subtype /XML>>/PUT AI11_PDFMark5[/Document1 dict begin /Metadata {ai_metadata_stream_123} defcurrentdict end /BDC AI11_PDFMark5
%ADOEndClientInjection: PageSetup End "AI11EPS"
%%EndPageSetup
1  -1  scale 0 -992.418 translate
pgsv
[1 0 0 1 0 0 ]ct
gsave
np
gsave
0 0 mo
0 992.418 li
800.567 992.418 li
800.567 0 li
cp
clp
157.696 455.326 mo
140.624 455.326 li
137.758 455.326 135.433 453.002 135.433 450.135 cv
135.433 445.444 li
135.433 442.577 133.108 440.253 130.242 440.253 cv
113.71 440.253 li
113.71 433.491 li
113.71 429.853 116.66 426.903 120.299 426.903 cv
120.449 426.903 li
124.088 426.903 127.038 423.952 127.038 420.314 cv
127.038 206.323 li
127.038 202.684 124.088 199.734 120.449 199.734 cv
120.299 199.734 li
117.009 199.734 114.282 197.322 113.789 194.17 cv
113.822 194.17 li
113.942 194.935 114.191 195.653 114.553 196.308 cv
252.493 199.655 li
256.823 199.76 261.017 201.189 264.512 203.749 cv
277.199 213.046 li
278.218 213.793 279.353 214.344 280.515 214.841 cv
286.301 217.315 290.593 222.179 292.416 228.01 cv
274.715 256.377 li
274.401 256.879 274.086 257.382 273.77 257.883 cv
273.362 257.734 272.874 257.623 272.296 257.561 cv
272.296 257.561 272.012 257.542 271.568 257.542 cv
269.97 257.542 266.295 257.791 266.266 260.09 cv
260.064 262.046 255.49 268.82 255.49 276.876 cv
255.49 359.548 li
255.49 361.066 256.424 362.322 257.639 362.536 cv
257.759 362.557 257.882 362.568 258.007 362.568 cv
270.105 362.568 li
270.105 383.535 li
127.038 383.535 li
127.038 395.835 li
270.105 395.835 li
270.105 440.253 li
238.058 440.253 li
235.192 440.253 232.868 442.577 232.868 445.444 cv
232.868 450.135 li
232.868 452.012 231.872 453.657 230.379 454.568 cv
208.614 454.931 li
206.735 454.15 205.413 452.297 205.413 450.135 cv
205.413 445.444 li
205.413 442.577 203.09 440.253 200.223 440.253 cv
168.078 440.253 li
165.211 440.253 162.887 442.577 162.887 445.444 cv
162.887 450.135 li
162.887 453.002 160.563 455.326 157.696 455.326 cv
211.164 434.016 mo
211.164 434.016 204.772 434.81 208.886 438.14 cv
209.618 438.733 210.39 438.976 211.113 438.976 cv
214.188 438.977 216.401 434.582 211.164 434.016 cv
143.822 432.018 mo
143.111 432.018 141.144 432.169 142.608 433.943 cv
142.847 434.232 143.142 434.35 143.444 434.35 cv
144.719 434.351 146.129 432.248 144.061 432.025 cv
144.061 432.025 143.967 432.018 143.822 432.018 cv
218.579 430.229 mo
217.867 430.229 215.9 430.38 217.364 432.154 cv
217.603 432.443 217.898 432.561 218.2 432.561 cv
219.476 432.562 220.885 430.459 218.817 430.236 cv
218.817 430.236 218.724 430.229 218.579 430.229 cv
153.966 421.443 mo
151.802 421.443 145.815 421.902 150.271 427.3 cv
150.999 428.181 151.897 428.541 152.817 428.542 cv
156.698 428.543 160.989 422.143 154.692 421.462 cv
154.692 421.462 154.409 421.443 153.966 421.443 cv
253.629 404.091 mo
252.206 404.091 248.275 404.392 251.203 407.939 cv
251.681 408.518 252.271 408.755 252.876 408.755 cv
255.426 408.756 258.245 404.55 254.107 404.103 cv
254.107 404.103 253.921 404.091 253.629 404.091 cv
209.764 370.478 mo
209.764 370.478 205.198 370.478 208.103 372.83 cv
208.583 373.218 209.042 373.376 209.448 373.376 cv
211.086 373.376 211.87 370.81 209.764 370.478 cv
154.722 361.815 mo
154.321 362.367 154.388 363.175 155.439 364.359 cv
156.483 365.533 157.499 365.987 158.383 365.987 cv
160.184 365.987 161.439 364.103 161.271 362.568 cv
180.274 362.568 li
180.274 362.568 li
180.275 362.568 li
181.665 362.568 182.791 361.216 182.791 359.548 cv
182.791 359.548 li
182.791 359.548 182.791 359.548 182.791 359.548 cv
182.791 276.876 li
182.791 276.876 li
182.791 275.191 182.591 273.563 182.218 272.023 cv
185.168 271.875 186.551 266.662 182.326 266.662 cv
182.326 266.662 181.235 266.662 180.175 266.919 cv
177.56 262.446 173.229 259.521 168.33 259.521 cv
160.343 259.521 153.868 267.291 153.868 276.876 cv
153.868 298.21 li
153.756 298.172 153.633 298.141 153.499 298.12 cv
153.499 298.12 148.933 298.12 151.839 300.471 cv
152.319 300.86 152.777 301.018 153.183 301.018 cv
153.434 301.018 153.665 300.958 153.868 300.855 cv
153.868 359.548 li
153.868 360.451 154.198 361.261 154.722 361.815 cv
127.038 259.52 mo
127.038 362.577 li
134.771 362.577 li
135.358 362.577 135.867 361.996 136.151 361.134 cv
136.303 360.673 136.39 360.132 136.39 359.556 cv
136.39 276.893 li
136.39 276.893 li
136.39 267.29 132.218 259.52 127.038 259.52 cv
204.376 362.536 mo
204.52 362.557 204.667 362.568 204.817 362.568 cv
233.485 362.568 li
233.635 362.568 233.782 362.557 233.926 362.536 cv
235.385 362.322 236.506 361.066 236.506 359.548 cv
236.506 359.548 li
236.506 359.548 236.506 359.548 236.506 359.548 cv
236.506 295.858 li
236.907 295.427 237.234 294.924 237.435 294.422 cv
237.862 293.355 237.72 292.288 236.506 291.905 cv
236.506 276.876 li
236.506 276.876 li
236.506 267.291 228.735 259.521 219.151 259.521 cv
219.151 259.521 li
219.15 259.521 li
217.631 259.521 216.157 259.716 214.753 260.083 cv
215.055 259.331 214.794 258.413 213.592 258.223 cv
213.592 258.223 209.026 258.223 211.932 260.575 cv
212.089 260.702 212.244 260.805 212.396 260.885 cv
206.167 263.52 201.797 269.687 201.797 276.876 cv
201.797 359.548 li
201.797 361.066 202.917 362.322 204.376 362.536 cv
191.92 360.474 mo
191.41 360.474 190.583 360.595 190.395 361.347 cv
190.335 361.589 190.637 361.683 191.092 361.683 cv
191.899 361.683 193.186 361.388 193.796 361.092 cv
194.406 360.796 194.337 360.501 192.434 360.501 cv
192.401 360.501 192.367 360.501 192.332 360.501 cv
192.332 360.501 192.161 360.474 191.92 360.474 cv
260.707 241.763 mo
260.707 241.763 254.637 241.763 259.072 244.122 cv
259.819 244.52 260.468 244.681 261.004 244.681 cv
263.289 244.681 263.539 241.763 260.707 241.763 cv
179.597 232.399 mo
179.223 232.399 178.617 232.52 178.478 233.272 cv
178.434 233.514 178.655 233.609 178.989 233.609 cv
179.58 233.609 180.523 233.313 180.97 233.017 cv
181.417 232.722 181.367 232.426 179.971 232.426 cv
179.947 232.426 179.923 232.426 179.898 232.426 cv
179.898 232.426 179.773 232.399 179.597 232.399 cv
258.837 225.024 mo
258.837 225.024 254.271 225.024 257.177 227.376 cv
257.657 227.764 258.115 227.922 258.521 227.922 cv
260.159 227.922 260.943 225.356 258.837 225.024 cv
173.267 219.111 mo
172.858 219.111 169.796 219.198 170.502 221.846 cv
170.998 223.707 171.903 224.392 172.855 224.392 cv
174.182 224.392 175.602 223.06 176.135 221.728 cv
176.667 220.396 176.313 219.063 174.093 219.063 cv
173.854 219.063 173.594 219.079 173.311 219.111 cv
173.311 219.111 173.296 219.111 173.267 219.111 cv
191.518 201.339 mo
191.518 201.339 186.953 201.339 189.858 203.691 cv
190.338 204.08 190.797 204.238 191.203 204.238 cv
192.842 204.238 193.625 201.672 191.518 201.339 cv
false sop
/0 
[/DeviceRGB] /CSA add_res
level3{
gsave
clp
[1.5481e-14 -252.824 252.824 1.5481e-14 219.141 451.336 ]ct
/0 
<<
/ShadingType 2 
/ColorSpace /0 /CSA get_res
/Coords [0 0 1 0 ]
/Domain [0 1 ]
/Extend[ true true]
/Function
<<
/Domain[0 1 ] 
/FunctionType 3
/Functions [
<<
/Domain[0 1 ] 
/FunctionType 2
/C0 [.952941 .745098 .564706 ]
/C1 [.952941 .745098 .564706 ]
/N 1 
>>
<<
/Domain[0 1 ] 
/FunctionType 2
/C0 [.952941 .745098 .564706 ]
/C1 [.901961 .603922 .458824 ]
/N 2.33779 
>>
]
/Bounds [1.89999e-07 ]
/Encode [0 1 0 1 ]
>>
>>/Gradient add_res /0 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[1.5481e-14 -252.824 252.824 1.5481e-14 219.141 451.336 ]ct
clp
/0 {
/0 /CSA get_res setcolorspace
<<
/NumSamples 256 
/NumComp 3 
/Scaling[[.00392157 0 ][.00392157 0 ][.00392157 0 ]]
/Samples[
<~oCDJCo()ABo()ABo()ABo()ABo()ABo()ABo()ABo()ABo()ABo()ABo()ABo()ABo()ABo()ABo()AB
o()ABo()ABo()ABo()ABo()ABo()>@naZ/>naZ/>naZ/>naZ/>naZ/>naZ/>naZ/=nF5r:nF5r:nF5r:
nF5r:nF5r:nF,i7n*f`6n*f`6n*f`6n*f`5mdBN2mdBN2mdBN2mdBN1mHs<.mHs<.mHs<.m-O**m-O**
m-O**m-F!'lg*m&lg*m&lK[["lK[["lK[[!l07Hsl07Hsl0.?pkih6okih6nkND$kkND$kk2tggk2tgg
~>
<~^:h4n]tM+m]tM+m]tM+m]tM+m]tM+m]tM+m]tM+m]tM+m]tM+m]tM+m]tM+m]tM+m]tM+m]Y(ni]Y(ni
]Y(ni]Y(ni]Y(nh]=Y\e]=Y\e]=Y\e]=PSb]"5Ja]"5Ja]",A^\[f8]\[f8\\@B&Y\@B&X\$riU\$riU
[^NWQ[^NWP[C*EM[C*BK['[3I['R*FZa7!DZEgdAZE^[>Z*CO;Yct@8YHP.5YHG%2Y-"h.Xf\\+XK8M(
X/i;$WiE)!WMukrW2QYnVl-GjVP^5fV5:#bUnjf]USFTYU8"?TTqS-PTV%jKT:VXGSXl=AS=H(<S!oe7
~>
<~OH5H`O,o?_O,o?_O,o?_O,o?_O,o?_O,o?_O,o?_O,o?_O,o?_O,o?_O,o?_O,o?_O,o?_O,o?_O,o?^
NfK-[NfK-[NfK-[NfK-[NfK-[NfB$XNK&pWNK&pWNK&pWNJrgTN/W^SN/W^SN/W[QMi3LOMi3LOMi*CL
MMd:KMMd:JM2@(GM2@(GLkpkCLkpkCLkgb@LPLY?LPCP<L5(G;KnY57KnY56KS5#3KS+o0K7ef/JqAT+
JqAQ)JUrB'J:N0#J:E&uIt)rsIXZ`pI=6NlI=-EiI!g9fH[C'bH?sm_H$O[\G^+IXGB\7TG'8%PF`hhL
~>
]
>>
0 0 1 0 []true true []
/DeviceRGB
GenStrips
} /Gradient add_res /0 /Gradient get_res exec grestore
}if
np
227.677 455.326 mo
219.141 455.326 li
210.604 455.326 li
209.899 455.326 209.227 455.186 208.614 454.931 cv
230.379 454.568 li
229.592 455.049 228.667 455.326 227.677 455.326 cv
level3{
gsave
clp
[1.5481e-14 -252.824 252.824 1.5481e-14 219.141 451.336 ]ct
/1 
<<
/ShadingType 2 
/ColorSpace /0 /CSA get_res
/Coords [0 0 1 0 ]
/Domain [0 1 ]
/Extend[ true true]
/Function
<<
/Domain[0 1 ] 
/FunctionType 3
/Functions [
<<
/Domain[0 1 ] 
/Range[0 1 0 1 0 1 ] 
/FunctionType 0
/Order 1 
/DataSource <~m]1a'X*j?9I."%_m]1a'X*j?9I."%_m]1a'X*j?9I."%_m]1a'X*j?9I."%_m]1a'X*j?9I."%_m]1a'
X*j?9I."%_m]1a'X*j?9I."%_m]1a'X*j?9I."%_m]1a'X*j?9I."%_m]1a'X*j?9I."%_m]1a'X*j?9
I."%_m]1a'X*j?9I."%_m]1a'X*j?9I."%_m]1a'X*j?9I."%_m]1a'X*j?9I."%_m]1a'X*j?9I."%_
~>
/BitsPerSample 8 
/Encode [0 63 ]
/Decode [0 1 0 1 0 1 ]
/Size [64 ]
>>
<<
/Domain[0 1 ] 
/Range[0 1 0 1 0 1 ] 
/FunctionType 0
/Order 1 
/DataSource <~m]1a'X*j?9I."%_m]1a'X*j?9I."%_m]1a'X*j?9I.""^m](X%WdF06Hg[n\mAbO#WdF-5HgRh[mAbO#
WI+$3HgReYmAP?uW-[g.HL.PTm&,-qVKqO*GjM8Ol_SgkUj)."GO)#IlCrIeU35apFm>ZBlCi=aTQKFj
FQoB<kacbXST<qaET`g1kF-AQR;_5TDW[=(k*KuIQ>P`KCupmsjHF?>P%s$=C#b7fif@d4Nb@=0B&SYZ
~>
/BitsPerSample 8 
/Encode [0 63 ]
/Decode [0 1 0 1 0 1 ]
/Size [64 ]
>>
]
/Bounds [1.89999e-07 ]
/Encode [0 1 0 1 ]
>>
>>/Gradient add_res /1 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[1.5481e-14 -252.824 252.824 1.5481e-14 219.141 451.336 ]ct
clp
/1 {
/0 /CSA get_res setcolorspace
<<
/NumSamples 256 
/NumComp 3 
/Scaling[[.00392157 0 ][.00392157 0 ][.00392157 0 ]]
/Samples[
<~mHs<.mHs<.mHs<.mHs<.mHs<.mHs<.mHs<.mHs<.mHs<.mHs<.mHs<.mHs<.mHs<.mHs<.mHs<.mHs<.
mHs9,m-O**m-O**m-O**m-O**m-O**m-O**m-O**m-O**m-O**m-O'(lg*m&lg*m&lg*m&lg*m&lg*m&
lg*m%lK[["lK[["lK[["lK[[!l07Hsl07Hsl07Hsl07Hsl07Hrkih6okih6okih6nkND$kkND$kkND$j
k2tggk2tggk2tggjlPUcjlPUcjlPUcjQ,C_jQ,C_jQ,C_j5]1[j5]1[io8tWio8tWiSibSiSibSi8EPO
~>
<~WiE)!WiE)!WiE)!WiE)!WiE)!WiE)!WiE)!WiE)!WiE)!WiE)!WiE)!Wi;tsWMukrWMukrWMukrWMukr
WMukrWMukrWMukrWMukrWMukrWMuhpW2QYnW2QYnW2QVlVl-GjVl-DhVP^5fVP^5fVP^2dV5:#bV59u`
Unjf^Unjf]USFTYU8"BVU8"BUTqS0RTqS0QTV.sNTV.sNTV.sMT:_aISt;OESXl=AS=H+>S=H+=S"#n9
R[T\6R@0J2R$a8.Q^=&*Q^=&*QBmi&Q'IW"Pa%DsPEV2oP*1ukOcb`eO,o?_NfK-[NfK-[NK&mUMi3LO
~>
<~H[C*dH[C*dH[C*dH[C*dH[C*dH[C*dH[C*dH[C*dH[C*dH[C*dH[C*dH[C*dH[:!aH?sm`H?sm`H?sm`
H?sm`H?sm`H?sm`H?sm`H?sm`H?sm`H?sm`H?sj^H$O[\H$O[\H$O[\H$OXZG^+IXG^+IXG^+FVGB\7T
GB\7SG'8%PG'8%PG'8%OF`hhLF`hhKFEDVHFEDVGF)uDDF)uDDF)uDDF)uDCEcQ2?EH,u<EH,u;E,]c7
Df9Q4Df9Q4DJj?0D/F-,D/F-,D/F-,Ci!p(CMR^$C2.KuBk_9qBk_9qBP;'mB4kjiB4kjiAnGXeAS#Fa
~>
]
>>
0 0 1 0 []true true []
/DeviceRGB
GenStrips
} /Gradient add_res /1 /Gradient get_res exec grestore
}if
np
292.416 228.01 mo
290.593 222.179 286.301 217.315 280.515 214.841 cv
279.353 214.344 278.218 213.793 277.199 213.046 cv
264.512 203.749 li
261.017 201.189 256.823 199.76 252.493 199.655 cv
114.553 196.308 li
114.191 195.653 113.942 194.935 113.822 194.17 cv
313.533 194.17 li
292.416 228.01 li
271.288 194.363 mo
269.866 194.363 265.933 194.664 268.86 198.212 cv
269.338 198.791 269.928 199.028 270.533 199.028 cv
273.083 199.028 275.903 194.823 271.765 194.376 cv
271.765 194.376 271.579 194.363 271.288 194.363 cv
level3{
gsave
clp
[1.5481e-14 -252.824 252.824 1.5481e-14 219.141 451.336 ]ct
/1 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[1.5481e-14 -252.824 252.824 1.5481e-14 219.141 451.336 ]ct
clp
/1 /Gradient get_res exec grestore
}if
np
313.533 194.17 mo
113.822 194.17 li
113.789 194.17 li
110.687 194.17 li
106.291 194.17 102.727 190.606 102.727 186.21 cv
102.727 184.557 li
102.727 180.161 106.291 176.598 110.687 176.598 cv
112.546 176.598 114.359 175.976 115.785 174.783 cv
168.559 130.636 198.789 30.889 205.73 5.80782 cv
206.683 2.36392 209.82 .000745325 213.393 .000745325 cv
219.141 .000745325 li
219.144 .000745325 li
219.324 .0306544 227.519 1.4364 227.519 9.54711 cv
242.799 146.703 li
245.309 164.326 235.946 178.105 219.678 178.97 cv
181.173 181.019 li
300.288 179.517 li
300.311 179.517 300.334 179.517 300.357 179.517 cv
303.311 179.517 305.713 181.912 305.713 184.875 cv
305.713 186.997 li
305.713 189.932 303.352 192.321 300.416 192.354 cv
139.659 194.169 li
313.534 194.169 li
313.533 194.17 li
156.878 177.25 mo
156.58 177.25 154.334 177.305 154.851 178.991 cv
155.215 180.176 155.878 180.612 156.575 180.612 cv
157.548 180.612 158.588 179.764 158.978 178.916 cv
159.369 178.068 159.109 177.22 157.483 177.22 cv
157.308 177.22 157.118 177.23 156.911 177.25 cv
156.911 177.25 156.9 177.25 156.878 177.25 cv
193.49 54.1242 mo
193.483 54.1277 li
180.795 88.2556 160.791 132.149 133.604 162.571 cv
133.577 162.63 li
164.699 126.986 li
173.046 109.853 193.49 54.1242 193.49 54.1242 cv
212.788 126.105 mo
211.365 126.105 207.434 126.406 210.361 129.953 cv
210.839 130.533 211.429 130.769 212.034 130.769 cv
214.584 130.769 217.404 126.565 213.266 126.117 cv
213.266 126.117 213.08 126.105 212.788 126.105 cv
200.299 119.638 mo
200.299 119.638 195.733 119.638 198.639 121.99 cv
199.119 122.378 199.577 122.536 199.983 122.536 cv
201.621 122.536 202.405 119.97 200.299 119.638 cv
219.643 120.217 mo
219.262 120.217 218.645 120.39 218.505 121.473 cv
218.46 121.821 218.685 121.957 219.025 121.957 cv
219.627 121.957 220.588 121.531 221.043 121.106 cv
221.498 120.68 221.446 120.255 220.025 120.255 cv
220.001 120.255 219.976 120.255 219.95 120.255 cv
219.95 120.255 219.823 120.217 219.643 120.217 cv
192.376 83.0318 mo
190.092 83.0318 189.842 85.9488 192.674 85.9488 cv
192.674 85.9488 198.744 85.9488 194.309 83.5901 cv
193.561 83.1928 192.913 83.0318 192.376 83.0318 cv
323.784 175.653 mo
323.329 175.409 322.898 175.118 322.497 174.783 cv
290.629 148.125 266.98 101.189 251.717 62.6659 cv
266.98 101.19 290.628 148.123 322.497 174.783 cv
322.898 175.118 323.329 175.409 323.784 175.653 cv
251.706 62.6379 mo
251.705 62.634 251.7 62.6235 251.699 62.6196 cv
251.702 62.6274 251.703 62.6301 251.706 62.6379 cv
level3{
gsave
clp
[1.03813e-14 -169.54 169.54 1.03813e-14 219.141 193.643 ]ct
/2 
<<
/ShadingType 2 
/ColorSpace /0 /CSA get_res
/Coords [0 0 1 0 ]
/Domain [0 1 ]
/Extend[ true true]
/Function
<<
/Domain[0 1 ] 
/FunctionType 3
/Functions [
<<
/Domain[0 1 ] 
/FunctionType 2
/C0 [1 .85098 .658824 ]
/C1 [.952941 .745098 .564706 ]
/N 4.97729 
>>
]
/Bounds []
/Encode [0 1 ]
>>
>>/Gradient add_res /2 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[1.03813e-14 -169.54 169.54 1.03813e-14 219.141 193.643 ]ct
clp
/2 {
/0 /CSA get_res setcolorspace
<<
/NumSamples 256 
/NumComp 3 
/Scaling[[.00392157 0 ][.00392157 0 ][.00392157 0 ]]
/Samples[
<~s8N#srr2orrr2orrr2orrr2orrr2orrr2orrr2orrr2orrr2orrr2orrr2orrr2orrr2orrr2orrr2or
rr2orrr2orrr2orrr2orrr2orrr2orrr2orrr2orrr2orrr2orrr2orrr2orrr2orrr2orrr2orrr2or
rr2orrr2orrr2orrr2orrr2orrr2orrr2orrVc]nrVc]nrVc]nrVc]nrVc]nrVc]mr;?Kjr;?Kjr;?Kj
r;?Hhqtp9fqtp9fqtp6dqYL'bqYL'aq>'j^q>'j]q"XXZq"XUXp\4FVp@e4Rp@e1Pp%A"Mo^qeJoCMSF
~>
<~g"=s0f\"j/f\"j/f\"j/f\"j/f\"j/f\"j/f\"j/f\"j/f\"j/f\"j/f\"j/f\"j/f\"j/f\"j/f\"j/
f\"j/f\"j/f\"j/f\"j/f\"j/f\"j/f\"j/f\"j/f\"j/f\"j/f\"j/f\"j/f\"j/f\"j/f\"j/f\"j/
f\"j/f[na,f@SX+f@SX+f@SX+f@SX+f%/F'f%/F'f%/F'f%&=$e^`4#e^`4"eC<!teC<!se'ldpe'lan
daHRldF$@hdEp7ed*U+bcd0n^cHa\Zc-=JVbfn8RbK@uMaiVZGaN2EB`l?$;`Pod6_o'@._83t'^q[Xu
~>
<~W2HPkVl-GjVl-GjVl-GjVl-GjVl-GjVl-GjVl-GjVl-GjVl-GjVl-GjVl-GjVl-GjVl-GjVl-GjVl-Gj
Vl-GjVl-GjVl-GjVl-GjVl-GjVl-GjVl-GjVl-GjVl-GjVl-GjVl-GjVl-GjVl-GjVl-GjVl-GjVl-Gj
Vl-GjVl-GjVP^5fVP^5fVP^5fVP^5fVP^5fV5:#bV5:#bV5:#bV50o_Unjf^Unjf]USFTZUSFTYU8"BV
U8"?TTqS0RTV.sNTV.pLT:_aISt;OESXl=AS=H+=S"#n9R[TY4R@'A/Q^=&)QBmf$Q'@MsPEV/mOcb`e
~>
]
>>
0 0 1 0 []true true []
/DeviceRGB
GenStrips
} /Gradient add_res /2 /Gradient get_res exec grestore
}if
np
270.105 395.835 mo
127.038 395.835 li
127.038 383.535 li
270.105 383.535 li
270.105 395.835 li
level3{
gsave
clp
[1.5481e-14 -252.824 252.824 1.5481e-14 219.141 451.336 ]ct
/1 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[1.5481e-14 -252.824 252.824 1.5481e-14 219.141 451.336 ]ct
clp
/1 /Gradient get_res exec grestore
}if
np
324.803 176.109 mo
324.454 175.981 324.113 175.829 323.784 175.653 cv
324.113 175.829 324.454 175.981 324.803 176.109 cv
324.803 176.109 li
251.717 62.6659 mo
251.714 62.6581 251.709 62.6457 251.706 62.6379 cv
251.711 62.6496 251.713 62.6542 251.717 62.6659 cv
251.699 62.6196 mo
241.698 37.3697 235.299 15.7368 232.551 5.80782 cv
231.598 2.36392 228.462 .000745325 224.889 .000745325 cv
219.144 .000745325 li
219.142 .000413083 219.141 .000248442 219.141 .000248442 cv
224.889 .000248442 li
228.463 .000248442 231.597 2.36019 232.551 5.80484 cv
235.298 15.7336 241.695 37.3641 251.699 62.6196 cv
.980392 .901961 .862745 rgb
f
313.534 194.169 mo
139.659 194.169 li
300.416 192.354 li
303.352 192.321 305.713 189.932 305.713 186.997 cv
305.713 184.875 li
305.713 181.912 303.311 179.517 300.357 179.517 cv
300.334 179.517 300.311 179.517 300.288 179.517 cv
181.173 181.019 li
219.678 178.97 li
235.946 178.105 245.309 164.326 242.799 146.703 cv
227.519 9.54711 li
227.519 1.4364 219.324 .0306544 219.144 .000745325 cv
224.889 .000745325 li
228.462 .000745325 231.598 2.36392 232.551 5.80782 cv
235.299 15.7368 241.698 37.3697 251.699 62.6196 cv
251.7 62.6235 251.705 62.634 251.706 62.6379 cv
251.709 62.6457 251.714 62.6581 251.717 62.6659 cv
266.98 101.189 290.629 148.125 322.497 174.783 cv
322.898 175.118 323.329 175.409 323.784 175.653 cv
324.113 175.829 324.454 175.981 324.803 176.109 cv
313.534 194.169 li
258.837 156.365 mo
258.837 156.365 254.271 156.365 257.177 158.717 cv
257.657 159.106 258.115 159.263 258.521 159.264 cv
260.159 159.264 260.943 156.698 258.837 156.365 cv
255.435 109.28 mo
255.435 109.28 250.921 109.841 253.826 112.193 cv
254.343 112.612 254.888 112.783 255.399 112.784 cv
257.57 112.784 259.133 109.68 255.435 109.28 cv
249.829 101.594 mo
247.664 101.594 241.679 102.053 246.135 107.452 cv
246.862 108.334 247.76 108.694 248.681 108.694 cv
252.562 108.694 256.852 102.294 250.556 101.614 cv
250.556 101.614 250.272 101.594 249.829 101.594 cv
level3{
gsave
clp
[1.03813e-14 -169.54 169.54 1.03813e-14 219.141 193.643 ]ct
/3 
<<
/ShadingType 2 
/ColorSpace /0 /CSA get_res
/Coords [0 0 1 0 ]
/Domain [0 1 ]
/Extend[ true true]
/Function
<<
/Domain[0 1 ] 
/FunctionType 3
/Functions [
<<
/Domain[0 1 ] 
/Range[0 1 0 1 0 1 ] 
/FunctionType 0
/Order 1 
/DataSource <~qS\Nm`0'o7Oo!"YqS\Nm`0'o7Oo!"YqS\Nm`0'o7Oo!"YqS\Nm`0'o7Oo!"YqS\Nm`0'o7Oo!"YqS\Nm
`0'o7Oo!"YqS\Nm`0'o7Oo!"YqS\Nm_iX`4OSZkVqSSEk_iX]3OSQeUq8/6h_N4N0O86YRq8&*e_2e<+
NqgDLpqMg`^Q&!%NVC/GpUuO[]o2TsMY=]?ot-(R\qp!gL\/'2o<sDF[=n+WKCQ:"nZdZ7YCQ)DIdX7a
~>
/BitsPerSample 8 
/Encode [0 63 ]
/Decode [0 1 0 1 0 1 ]
/Size [64 ]
>>
]
/Bounds []
/Encode [0 1 ]
>>
>>/Gradient add_res /3 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[1.03813e-14 -169.54 169.54 1.03813e-14 219.141 193.643 ]ct
clp
/3 {
/0 /CSA get_res setcolorspace
<<
/NumSamples 256 
/NumComp 3 
/Scaling[[.00392157 0 ][.00392157 0 ][.00392157 0 ]]
/Samples[
<~q>'j^q>'j^q>'j^q>'j^q>'j^q>'j^q>'j^q>'j^q>'j^q>'j^q>'j^q>'j^q>'j^q>'j^q>'j^q>'j^
q>'j^q>'j^q>'j^q>'j^q>'j^q>'j^q>'j^q>'j^q>'j^q>'j^q>'j^q>'j^q>'j^q>'j^q>'j^q>'j^
q>'j^q>'j^q>'j]q"XXZq"XXZq"XXZq"XXZq"XXZq"XXZq"XXZq"XXYp\4FVp\4FVp\4FVp\4FUp@e4R
p@e4Rp@e4Rp@e4Rp%A"Np%A"No^qeJo^qeJoCMSFoCMSFo()ABo()ABnaZ/>nF5r:nF5r:n*f`6mdBN2
~>
<~_o'C0_o'C0_o'C0_o'C0_o'C0_o'C0_o'C0_o'C0_o'C0_o'C0_o'C0_o'C0_o'C0_o'C0_o'C0_o'C0
_o'C0_o'C0_o'C0_o'C0_o'C0_o'C0_o'C0_o'C0_o'C0_o'C0_o'C0_o'C0_o'C0_o'@._SX1,_SX1,
_SX1,_SX1,_SX1,_SX1,_SX1+_83t(_83t(_83t(_83t'^qdb$^qdb#^V@Ou^V@Ot^:q=q^:q=p]tM+m
]tM+m]Y(ni]Y(ni]=Y\e]=Y\e]"5Ja\[f5[\$riU[^NWQ[C*EM['[0GZEgdAZEga?Yct=7Y-+n/XK8J'
~>
<~OH>QcOH>QcOH>QcOH>QcOH>QcOH>QcOH>QcOH>QcOH>QcOH>QcOH>QcOH>QcOH>QcOH>QcOH>QcOH>Qc
OH>QcOH>QcOH>QcOH>QcOH>QcOH>QcOH>QcOH>QcOH>QcOH>QcOH>QcOH>QcOH>QcOH>NaO,o?_O,o?_
O,o?_O,o?_O,o?_O,o?_O,o?_O,o?^NfK-[NfK-[NfK-ZNK&pWNK&pWNK&pVN/W^SN/W^SN/W^SN/W^R
Mi3LOMi3LOMMd:KM2@(GM2@(GLkpkCLPLY?L5(G;L5(G;KnY25K7ef/JqAT+JUrB'J:N0#It)orI=6Kj
~>
]
>>
0 0 1 0 []true true []
/DeviceRGB
GenStrips
} /Gradient add_res /3 /Gradient get_res exec grestore
}if
np
133.577 162.63 mo
133.604 162.571 li
160.791 132.149 180.795 88.2556 193.483 54.1277 cv
193.49 54.1242 li
193.49 54.1242 173.046 109.853 164.699 126.986 cv
133.577 162.63 li
level3{
gsave
clp
[1.03813e-14 -169.54 169.54 1.03813e-14 219.141 193.643 ]ct
/3 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[1.03813e-14 -169.54 169.54 1.03813e-14 219.141 193.643 ]ct
clp
/3 /Gradient get_res exec grestore
}if
np
158.383 365.987 mo
157.499 365.987 156.483 365.533 155.439 364.359 cv
154.388 363.175 154.321 362.367 154.722 361.815 cv
155.078 362.191 155.525 362.449 156.017 362.536 cv
156.137 362.557 156.26 362.568 156.385 362.568 cv
161.271 362.568 li
161.439 364.103 160.184 365.987 158.383 365.987 cv
level3{
gsave
clp
[1.5481e-14 -252.824 252.824 1.5481e-14 219.141 451.336 ]ct
/1 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[1.5481e-14 -252.824 252.824 1.5481e-14 219.141 451.336 ]ct
clp
/1 /Gradient get_res exec grestore
}if
np
252.876 408.755 mo
252.271 408.755 251.681 408.518 251.203 407.939 cv
248.275 404.392 252.206 404.091 253.629 404.091 cv
253.921 404.091 254.107 404.103 254.107 404.103 cv
258.245 404.55 255.426 408.756 252.876 408.755 cv
level3{
gsave
clp
[1.5481e-14 -252.824 252.824 1.5481e-14 219.141 451.336 ]ct
/1 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[1.5481e-14 -252.824 252.824 1.5481e-14 219.141 451.336 ]ct
clp
/1 /Gradient get_res exec grestore
}if
np
218.2 432.561 mo
217.898 432.561 217.603 432.443 217.364 432.154 cv
215.9 430.38 217.867 430.229 218.579 430.229 cv
218.724 430.229 218.817 430.236 218.817 430.236 cv
220.885 430.459 219.476 432.562 218.2 432.561 cv
level3{
gsave
clp
[1.5481e-14 -252.824 252.824 1.5481e-14 219.141 451.336 ]ct
/1 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[1.5481e-14 -252.824 252.824 1.5481e-14 219.141 451.336 ]ct
clp
/1 /Gradient get_res exec grestore
}if
np
143.444 434.35 mo
143.142 434.35 142.847 434.232 142.608 433.943 cv
141.144 432.169 143.111 432.018 143.822 432.018 cv
143.967 432.018 144.061 432.025 144.061 432.025 cv
146.129 432.248 144.719 434.351 143.444 434.35 cv
level3{
gsave
clp
[1.5481e-14 -252.824 252.824 1.5481e-14 219.141 451.336 ]ct
/1 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[1.5481e-14 -252.824 252.824 1.5481e-14 219.141 451.336 ]ct
clp
/1 /Gradient get_res exec grestore
}if
np
266.266 260.09 mo
266.295 257.791 269.97 257.542 271.568 257.542 cv
272.012 257.542 272.296 257.561 272.296 257.561 cv
272.874 257.623 273.362 257.734 273.77 257.883 cv
273.365 258.523 272.958 259.162 272.547 259.8 cv
271.705 259.617 270.838 259.521 269.952 259.521 cv
268.678 259.521 267.443 259.719 266.266 260.09 cv
level3{
gsave
clp
[1.5481e-14 -252.824 252.824 1.5481e-14 219.141 451.336 ]ct
/1 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[1.5481e-14 -252.824 252.824 1.5481e-14 219.141 451.336 ]ct
clp
/1 /Gradient get_res exec grestore
}if
np
152.817 428.542 mo
151.897 428.541 150.999 428.181 150.271 427.3 cv
145.815 421.902 151.802 421.443 153.966 421.443 cv
154.409 421.443 154.692 421.462 154.692 421.462 cv
160.989 422.143 156.698 428.543 152.817 428.542 cv
level3{
gsave
clp
[1.5481e-14 -252.824 252.824 1.5481e-14 219.141 451.336 ]ct
/1 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[1.5481e-14 -252.824 252.824 1.5481e-14 219.141 451.336 ]ct
clp
/1 /Gradient get_res exec grestore
}if
np
211.113 438.976 mo
210.39 438.976 209.618 438.733 208.886 438.14 cv
204.772 434.81 211.164 434.016 211.164 434.016 cv
216.401 434.582 214.188 438.977 211.113 438.976 cv
level3{
gsave
clp
[1.5481e-14 -252.824 252.824 1.5481e-14 219.141 451.336 ]ct
/1 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[1.5481e-14 -252.824 252.824 1.5481e-14 219.141 451.336 ]ct
clp
/1 /Gradient get_res exec grestore
}if
np
248.681 108.694 mo
247.76 108.694 246.862 108.334 246.135 107.452 cv
241.679 102.053 247.664 101.594 249.829 101.594 cv
250.272 101.594 250.556 101.614 250.556 101.614 cv
256.852 102.294 252.562 108.694 248.681 108.694 cv
level3{
gsave
clp
[1.03813e-14 -169.54 169.54 1.03813e-14 219.141 193.643 ]ct
/4 
<<
/ShadingType 2 
/ColorSpace /0 /CSA get_res
/Coords [0 0 1 0 ]
/Domain [0 1 ]
/Extend[ true true]
/Function
<<
/Domain[0 1 ] 
/FunctionType 3
/Functions [
<<
/Domain[0 1 ] 
/Range[0 1 0 1 0 1 ] 
/FunctionType 0
/Order 1 
/DataSource <~os&r<Z$l;MIJ'jnos&r<Z$l;MIJ'jnos&r<Z$l;MIJ'jnos&r<Z$l;MIJ'jnos&r<Z$l;MIJ'jnos&r<
Z$l;MIJ'jnos&r<Z$l;MIJ'jnos&r<Y^H,JI.a^korri:Y^H)II.XXjoWNZ7YC#oFHh=LgoWEQ5Y']cB
Hh4@co;m90XEsH<HLe+^nu@!+Wd+'6GO_\Wn>UU#W-.R+FRQ&Jm\FsmUN5aqEU9B<m%A:_So3h`D<[L)
~>
/BitsPerSample 8 
/Encode [0 63 ]
/Decode [0 1 0 1 0 1 ]
/Size [64 ]
>>
]
/Bounds []
/Encode [0 1 ]
>>
>>/Gradient add_res /4 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[1.03813e-14 -169.54 169.54 1.03813e-14 219.141 193.643 ]ct
clp
/4 {
/0 /CSA get_res setcolorspace
<<
/NumSamples 256 
/NumComp 3 
/Scaling[[.00392157 0 ][.00392157 0 ][.00392157 0 ]]
/Samples[
<~o^qeJo^qeJo^qeJo^qeJo^qeJo^qeJo^qeJo^qeJo^qeJo^qeJo^qeJo^qeJo^qeJo^qeJo^qeJo^qeJ
o^qeJo^qeJo^qeJo^qeJo^qeJo^qeJo^qeJo^qeJo^qeJo^qeJo^qeJo^qeJo^qeJo^qeJo^qeJo^qeJ
o^qeJo^qeJo^qeIoCMSFoCMSFoCMSFoCMSFoCMSFoCMSFoCMSFoCMSEo()ABo()ABo()ABo()AAnaZ/>
naZ/>naZ/>naZ/>nF5r:nF5r:n*f`6n*f`6mdBN2mdBN2mHs<.mHs<.m-O**lg*m&lg*m&lK[["l07Hs
~>
<~Yct@9Yct@9Yct@9Yct@9Yct@9Yct@9Yct@9Yct@9Yct@9Yct@9Yct@9Yct@9Yct@9Yct@9Yct@9Yct@9
Yct@9Yct@9Yct@9Yct@9Yct@9Yct@9Yct@9Yct@9Yct@9Yct@9Yct@9Yct@9Yct@9Yct=7YHP.5YHP.5
YHP.5YHP.5YHP.5YHP.5YHP.4Y-+q1Y-+q1Y-+q1Y-+q0Xf\_-Xf\_,XK8M)XK8M(X/i;%X/i;$WiE)!
WiE)!WMukrWMukrWMukrWMukrW2QYnVl-DhV5:#bUnjf^USFTZU8"?TTV.sNTV.sNT:_^HSXl:@S"#k8
~>
<~I!g<hI!g<hI!g<hI!g<hI!g<hI!g<hI!g<hI!g<hI!g<hI!g<hI!g<hI!g<hI!g<hI!g<hI!g<hI!g<h
I!g<hI!g<hI!g<hI!g<hI!g<hI!g<hI!g<hI!g<hI!g<hI!g<hI!g<hI!g<hI!g<hI!g9fH[C*dH[C*d
H[C*dH[C*dH[C*dH[C*dH[C*dH[C*cH?sm`H?sm`H?sm`H?sm`H?sm`H?sm_H$O[\H$O[\H$O[\H$O[[
G^+IXG^+IXGB\7TG'8%PG'8%PF`hhLFEDVHF)uDDF)uDDF)uABEH,u<E,]c8Df9Q4DJj?0D/F-,Ci!m&
~>
]
>>
0 0 1 0 []true true []
/DeviceRGB
GenStrips
} /Gradient add_res /4 /Gradient get_res exec grestore
}if
np
255.399 112.784 mo
254.888 112.783 254.343 112.612 253.826 112.193 cv
250.921 109.841 255.435 109.28 255.435 109.28 cv
259.133 109.68 257.57 112.784 255.399 112.784 cv
level3{
gsave
clp
[1.03813e-14 -169.54 169.54 1.03813e-14 219.141 193.643 ]ct
/4 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[1.03813e-14 -169.54 169.54 1.03813e-14 219.141 193.643 ]ct
clp
/4 /Gradient get_res exec grestore
}if
np
209.448 373.376 mo
209.042 373.376 208.583 373.218 208.103 372.83 cv
205.198 370.478 209.764 370.478 209.764 370.478 cv
211.87 370.81 211.086 373.376 209.448 373.376 cv
level3{
gsave
clp
[1.5481e-14 -252.824 252.824 1.5481e-14 219.141 451.336 ]ct
/1 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[1.5481e-14 -252.824 252.824 1.5481e-14 219.141 451.336 ]ct
clp
/1 /Gradient get_res exec grestore
}if
np
153.183 301.018 mo
152.777 301.018 152.319 300.86 151.839 300.471 cv
148.933 298.12 153.499 298.12 153.499 298.12 cv
153.633 298.141 153.756 298.172 153.868 298.21 cv
153.868 300.855 li
153.665 300.958 153.434 301.018 153.183 301.018 cv
level3{
gsave
clp
[1.5481e-14 -252.824 252.824 1.5481e-14 219.141 451.336 ]ct
/1 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[1.5481e-14 -252.824 252.824 1.5481e-14 219.141 451.336 ]ct
clp
/1 /Gradient get_res exec grestore
}if
np
258.521 159.264 mo
258.115 159.263 257.657 159.106 257.177 158.717 cv
254.271 156.365 258.837 156.365 258.837 156.365 cv
260.943 156.698 260.159 159.264 258.521 159.264 cv
level3{
gsave
clp
[1.03813e-14 -169.54 169.54 1.03813e-14 219.141 193.643 ]ct
/4 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[1.03813e-14 -169.54 169.54 1.03813e-14 219.141 193.643 ]ct
clp
/4 /Gradient get_res exec grestore
}if
np
191.092 361.683 mo
190.637 361.683 190.335 361.589 190.395 361.347 cv
190.583 360.595 191.41 360.474 191.92 360.474 cv
192.161 360.474 192.332 360.501 192.332 360.501 cv
192.367 360.501 192.401 360.501 192.434 360.501 cv
194.337 360.501 194.406 360.796 193.796 361.092 cv
193.186 361.388 191.899 361.683 191.092 361.683 cv
level3{
gsave
clp
[1.5481e-14 -252.824 252.824 1.5481e-14 219.141 451.336 ]ct
/1 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[1.5481e-14 -252.824 252.824 1.5481e-14 219.141 451.336 ]ct
clp
/1 /Gradient get_res exec grestore
}if
np
236.506 295.858 mo
236.506 291.905 li
237.72 292.288 237.862 293.355 237.435 294.422 cv
237.234 294.924 236.907 295.427 236.506 295.858 cv
level3{
gsave
clp
[1.5481e-14 -252.824 252.824 1.5481e-14 219.141 451.336 ]ct
/1 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[1.5481e-14 -252.824 252.824 1.5481e-14 219.141 451.336 ]ct
clp
/1 /Gradient get_res exec grestore
}if
np
212.034 130.769 mo
211.429 130.769 210.839 130.533 210.361 129.953 cv
207.434 126.406 211.365 126.105 212.788 126.105 cv
213.08 126.105 213.266 126.117 213.266 126.117 cv
217.404 126.565 214.584 130.769 212.034 130.769 cv
level3{
gsave
clp
[1.03813e-14 -169.54 169.54 1.03813e-14 219.141 193.643 ]ct
/3 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[1.03813e-14 -169.54 169.54 1.03813e-14 219.141 193.643 ]ct
clp
/3 /Gradient get_res exec grestore
}if
np
199.983 122.536 mo
199.577 122.536 199.119 122.378 198.639 121.99 cv
195.733 119.638 200.299 119.638 200.299 119.638 cv
202.405 119.97 201.621 122.536 199.983 122.536 cv
level3{
gsave
clp
[1.03813e-14 -169.54 169.54 1.03813e-14 219.141 193.643 ]ct
/3 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[1.03813e-14 -169.54 169.54 1.03813e-14 219.141 193.643 ]ct
clp
/3 /Gradient get_res exec grestore
}if
np
219.025 121.957 mo
218.685 121.957 218.46 121.821 218.505 121.473 cv
218.645 120.39 219.262 120.217 219.643 120.217 cv
219.823 120.217 219.95 120.255 219.95 120.255 cv
219.976 120.255 220.001 120.255 220.025 120.255 cv
221.446 120.255 221.498 120.68 221.043 121.106 cv
220.588 121.531 219.627 121.957 219.025 121.957 cv
level3{
gsave
clp
[1.03813e-14 -169.54 169.54 1.03813e-14 219.141 193.643 ]ct
/3 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[1.03813e-14 -169.54 169.54 1.03813e-14 219.141 193.643 ]ct
clp
/3 /Gradient get_res exec grestore
}if
np
172.855 224.392 mo
171.903 224.392 170.998 223.707 170.502 221.846 cv
169.796 219.198 172.858 219.111 173.267 219.111 cv
173.296 219.111 173.311 219.111 173.311 219.111 cv
173.594 219.079 173.854 219.063 174.093 219.063 cv
176.313 219.063 176.667 220.396 176.135 221.728 cv
175.602 223.06 174.182 224.392 172.855 224.392 cv
level3{
gsave
clp
[1.5481e-14 -252.824 252.824 1.5481e-14 219.141 451.336 ]ct
/1 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[1.5481e-14 -252.824 252.824 1.5481e-14 219.141 451.336 ]ct
clp
/1 /Gradient get_res exec grestore
}if
np
182.218 272.023 mo
181.77 270.176 181.074 268.456 180.175 266.919 cv
181.235 266.662 182.326 266.662 182.326 266.662 cv
186.551 266.662 185.168 271.875 182.218 272.023 cv
level3{
gsave
clp
[1.5481e-14 -252.824 252.824 1.5481e-14 219.141 451.336 ]ct
/1 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[1.5481e-14 -252.824 252.824 1.5481e-14 219.141 451.336 ]ct
clp
/1 /Gradient get_res exec grestore
}if
np
261.004 244.681 mo
260.468 244.681 259.819 244.52 259.072 244.122 cv
254.637 241.763 260.707 241.763 260.707 241.763 cv
263.539 241.763 263.289 244.681 261.004 244.681 cv
level3{
gsave
clp
[1.5481e-14 -252.824 252.824 1.5481e-14 219.141 451.336 ]ct
/1 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[1.5481e-14 -252.824 252.824 1.5481e-14 219.141 451.336 ]ct
clp
/1 /Gradient get_res exec grestore
}if
np
270.533 199.028 mo
269.928 199.028 269.338 198.791 268.86 198.212 cv
265.933 194.664 269.866 194.363 271.288 194.363 cv
271.579 194.363 271.765 194.376 271.765 194.376 cv
275.903 194.823 273.083 199.028 270.533 199.028 cv
level3{
gsave
clp
[1.5481e-14 -252.824 252.824 1.5481e-14 219.141 451.336 ]ct
/5 
<<
/ShadingType 2 
/ColorSpace /0 /CSA get_res
/Coords [0 0 1 0 ]
/Domain [0 1 ]
/Extend[ true true]
/Function
<<
/Domain[0 1 ] 
/FunctionType 3
/Functions [
<<
/Domain[0 1 ] 
/Range[0 1 0 1 0 1 ] 
/FunctionType 0
/Order 1 
/DataSource <~l'cDPRVV/VC[%:'l'cDPRVV/VC[%:'l'cDPRVV/VC[%:'l'cDPRVV/VC[%:'l'cDPRVV/VC[%:'l'cDP
RVV/VC[%:'l'cDPRVV/VC[%:'l'cDPRVV/VC[%:'l'cDPRVV/VC[%:'l'cDPRVV/VC[%:'l'cDPRVV/V
C[%:'l'cDPRVV/VC[%:'l'cDPRVV/VC[%:'l'cDPRVV/VC[%:'l'cDPRVV/VC[%:'l'cDPRVV/VC[%:'
~>
/BitsPerSample 8 
/Encode [0 63 ]
/Decode [0 1 0 1 0 1 ]
/Size [64 ]
>>
<<
/Domain[0 1 ] 
/Range[0 1 0 1 0 1 ] 
/FunctionType 0
/Order 1 
/DataSource <~l'cDPRVV/VC[%:'l'cDPRVV/VC[%:'l'cDPRVV/VC[%7&l'Z;NR;1uSC?_.$ka?2LR;1rRC?V(#ka?2L
QtkiPC?V%!ka6)JQtb`MC$1grkEflFQ>#HIB]kXok*9TAP\9-BBBGCijcX6;P%Ea;A`]%bjcO*7OC[F5
AE8e]j,RU/Nah%.@H*5Sieq7)MI>D"?f?iKiJ:k"LL/qo?/^KBi.YCnKNm>c>Mk!8hLSkeJ6C]W=P\C,
~>
/BitsPerSample 8 
/Encode [0 63 ]
/Decode [0 1 0 1 0 1 ]
/Size [64 ]
>>
]
/Bounds [1.89999e-07 ]
/Encode [0 1 0 1 ]
>>
>>/Gradient add_res /5 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[1.5481e-14 -252.824 252.824 1.5481e-14 219.141 451.336 ]ct
clp
/5 {
/0 /CSA get_res setcolorspace
<<
/NumSamples 256 
/NumComp 3 
/Scaling[[.00392157 0 ][.00392157 0 ][.00392157 0 ]]
/Samples[
<~kih6okih6okih6okih6okih6okih6okih6okih6okih6okih6okih6okih6okih6okih6okih6okih6o
kih3mkND$kkND$kkND$kkND$kkND$kkND$kkND$kkND$kkND$kkND!ik2tggk2tggk2tggk2tggk2tgg
k2tgfjlPUcjlPUcjlPUcjlPUbjQ,C_jQ,C_jQ,C_jQ,C_jQ,C^j5]1[j5]1[j5]1Zio8tWio8tWio8tV
iSibSiSibSiSibSi8EPOi8EPOi8EPOi8EPOi8EPOi8EPOhr!>Khr!>KhVR,GhVR,Gh;-oCh;-oCgt^]?
~>
<~R@0J2R@0J2R@0J2R@0J2R@0J2R@0J2R@0J2R@0J2R@0J2R@0J2R@0J2R@'A/R$a8.R$a8.R$a8.R$a8.
R$a8.R$a8.R$a8.R$a8.R$a8.R$a5,Q^=&*Q^=&*Q^=&*Q^=&*Q^=#(QBmi&QBmi&QBmf$Q'IW"Q'ISu
Pa%DsPa%DrPEV2nP*1ukP*1ujOcbcgOcbcfOH>QcOH>QcOH>QbO,o?^NfK-[NfK-ZNK&pWNK&pVN/W^R
Mi3LOMMd:KM2@(GLkpkCLkpkCLPLY?L5(G;KnY57KS5#3KS5#3K7ec-JUrB'J:N0#J:N0#It)orI=6Nl
~>
<~C2.KuC2.KuC2.KuC2.KuC2.KuC2.KuC2.KuC2.KuC2.KuC2.KuC2.KuC2.KuC2%BrBk_9qBk_9qBk_9q
Bk_9qBk_9qBk_9qBk_9qBk_9qBk_9qBk_9qBk_6oBP;'mBP;'mBP;'mBP;$kB4kjiB4kjiB4kjiB4kji
B4kjhAnGXeAnGXeAnGXdAS#FaAS#F`A7T4]A7T4\@q0"Y@q0"Y@q0"Y@q0"X@U`eT@:<SQ@:<SP?smAM
?smAM?smAM?XI/I?=$rE?=$rE?=$rE?!U`A>[1N=>?b<9>$>*5>$>*5>$>*5=]nm1=]nm1=BJ[-='&I)
~>
]
>>
0 0 1 0 []true true []
/DeviceRGB
GenStrips
} /Gradient add_res /5 /Gradient get_res exec grestore
}if
np
212.396 260.885 mo
212.244 260.805 212.089 260.702 211.932 260.575 cv
209.026 258.223 213.592 258.223 213.592 258.223 cv
214.794 258.413 215.055 259.331 214.753 260.083 cv
213.943 260.295 213.155 260.564 212.396 260.885 cv
212.396 260.885 li
level3{
gsave
clp
[1.5481e-14 -252.824 252.824 1.5481e-14 219.141 451.336 ]ct
/1 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[1.5481e-14 -252.824 252.824 1.5481e-14 219.141 451.336 ]ct
clp
/1 /Gradient get_res exec grestore
}if
np
258.521 227.922 mo
258.115 227.922 257.657 227.764 257.177 227.376 cv
254.271 225.024 258.837 225.024 258.837 225.024 cv
260.943 225.356 260.159 227.922 258.521 227.922 cv
level3{
gsave
clp
[1.5481e-14 -252.824 252.824 1.5481e-14 219.141 451.336 ]ct
/1 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[1.5481e-14 -252.824 252.824 1.5481e-14 219.141 451.336 ]ct
clp
/1 /Gradient get_res exec grestore
}if
np
191.203 204.238 mo
190.797 204.238 190.338 204.08 189.858 203.691 cv
186.953 201.339 191.518 201.339 191.518 201.339 cv
193.625 201.672 192.842 204.238 191.203 204.238 cv
level3{
gsave
clp
[1.5481e-14 -252.824 252.824 1.5481e-14 219.141 451.336 ]ct
/1 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[1.5481e-14 -252.824 252.824 1.5481e-14 219.141 451.336 ]ct
clp
/1 /Gradient get_res exec grestore
}if
np
178.989 233.609 mo
178.655 233.609 178.434 233.514 178.478 233.272 cv
178.617 232.52 179.223 232.399 179.597 232.399 cv
179.773 232.399 179.898 232.426 179.898 232.426 cv
179.923 232.426 179.947 232.426 179.971 232.426 cv
181.367 232.426 181.417 232.722 180.97 233.017 cv
180.523 233.313 179.58 233.609 178.989 233.609 cv
level3{
gsave
clp
[1.5481e-14 -252.824 252.824 1.5481e-14 219.141 451.336 ]ct
/1 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[1.5481e-14 -252.824 252.824 1.5481e-14 219.141 451.336 ]ct
clp
/1 /Gradient get_res exec grestore
}if
np
156.575 180.612 mo
155.878 180.612 155.215 180.176 154.851 178.991 cv
154.334 177.305 156.58 177.25 156.878 177.25 cv
156.9 177.25 156.911 177.25 156.911 177.25 cv
157.118 177.23 157.308 177.22 157.483 177.22 cv
159.109 177.22 159.369 178.068 158.978 178.916 cv
158.588 179.764 157.548 180.612 156.575 180.612 cv
level3{
gsave
clp
[1.03813e-14 -169.54 169.54 1.03813e-14 219.141 193.643 ]ct
/3 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[1.03813e-14 -169.54 169.54 1.03813e-14 219.141 193.643 ]ct
clp
/3 /Gradient get_res exec grestore
}if
np
192.674 85.9488 mo
189.842 85.9488 190.092 83.0318 192.376 83.0318 cv
192.913 83.0318 193.561 83.1928 194.309 83.5901 cv
198.744 85.9488 192.674 85.9488 192.674 85.9488 cv
level3{
gsave
clp
[1.03813e-14 -169.54 169.54 1.03813e-14 219.141 193.643 ]ct
/3 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[1.03813e-14 -169.54 169.54 1.03813e-14 219.141 193.643 ]ct
clp
/3 /Gradient get_res exec grestore
}if
np
233.926 362.536 mo
235.385 362.322 236.506 361.066 236.506 359.548 cv
236.506 359.548 li
236.506 361.066 235.385 362.322 233.926 362.536 cv
204.376 362.536 mo
202.917 362.322 201.797 361.066 201.797 359.548 cv
201.797 276.876 li
201.797 269.687 206.167 263.52 212.396 260.885 cv
212.396 260.885 li
206.168 263.52 201.797 269.687 201.797 276.876 cv
201.797 359.548 li
201.797 361.066 202.917 362.322 204.376 362.536 cv
230.83 360.833 mo
207.473 360.833 li
206.113 360.833 205.012 359.731 205.012 358.373 cv
205.012 281.665 li
205.012 273.856 211.342 267.526 219.15 267.526 cv
219.151 267.526 li
226.96 267.526 233.291 273.856 233.291 281.665 cv
233.291 358.373 li
233.291 359.731 232.189 360.833 230.83 360.833 cv
level3{
gsave
clp
[5.33227e-15 -87.0827 87.0827 5.33227e-15 219.151 355.131 ]ct
/6 
<<
/ShadingType 2 
/ColorSpace /0 /CSA get_res
/Coords [0 0 1 0 ]
/Domain [0 1 ]
/Extend[ true true]
/Function
<<
/Domain[0 1 ] 
/FunctionType 3
/Functions [
<<
/Domain[0 1 ] 
/FunctionType 2
/C0 [.847059 .509804 .341176 ]
/C1 [.847059 .509804 .341176 ]
/N 1 
>>
<<
/Domain[0 1 ] 
/FunctionType 2
/C0 [.847059 .509804 .341176 ]
/C1 [.690196 .321569 .219608 ]
/N 2.06553 
>>
<<
/Domain[0 1 ] 
/FunctionType 2
/C0 [.690196 .321569 .219608 ]
/C1 [.690196 .321569 .219608 ]
/N 1 
>>
]
/Bounds [1.89999e-07 .998385 ]
/Encode [0 1 0 1 0 1 ]
>>
>>/Gradient add_res /6 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[5.33227e-15 -87.0827 87.0827 5.33227e-15 219.151 355.131 ]ct
clp
/6 {
/0 /CSA get_res setcolorspace
<<
/NumSamples 256 
/NumComp 3 
/Scaling[[.00392157 0 ][.00392157 0 ][.00392157 0 ]]
/Samples[
<~f[na,f@SX+f@SX+f@SX+f@SX+f@SX+f@SX+f@SX+f@SX+f@SX+f@SX*f%/F'f%/F'f%/F'f%/F'e^`4#
e^`4#e^`4#e^W*ueC<!teC<!te'ldpe'ldpe'landaHRldaHRkdF$@hdF$=fd*U.dd*U+bcd0q`cd'h]
cHa_[c-=MXc-4DUbfn;SbKJ)PbK@uMb0%iJaiVZGaN2HDaN)?Aa2Z-=`l?!:`Pog7`5KU3_o'C0_SX1,
_83t(^qdb$^V@Ou^:q=q]tM+m]Y(ni]=Y\d]"5J`\[f5[\@B#W\$i`R[^ENN['[3HZa7!DZEga?Z*:I:
~>
<~Jq8K(JUrB'JUrB'JUrB'JUrB'JUrB'JUrB'JUrB'JUrB'JUrB'J:N0#J:N0#J:N0#J:N0"It)rtIt)rt
It)rsIXZ`pIXZ`pIXQWmI=6NlI=6KjI!g<hI!g9fH[C*dH[:!aH?sm`H$O[\H$OXZG^+IXGB\7TGB\4R
G'8%OF`hhLFEDVHFE;MEF)uABEcQ2?EH,u;E,]c7Df9Q4DJj?0D/F-,Ci!p(CMR^#C2.KtBk_9pBP;$k
B4kggAn>ObARo=^@q0"X@U`eT@:<PO?sd8J?=$rD?!U]?>[(E:>$>'3=]ed.='&I(<`W4#<)cgq;c6Lk
~>
<~=&r@&<`W7%<`W7%<`W7%<`W7%<`W7%<`W7%<`W7%<`W7%<`W7%<`W7%<`W7%<`N."<E3%!<E3%!<E3%!
<E3%!<)cgr<)cgr<)cgr<)cgq;c?Un;c?Un;c?Um;GpCj;GpCj;Gp@h;,L1f;,L1f:f'tb:f'tb:esk_
:JXb^:JOY[:/4PZ:/+GW9he>V9MA,R9MA,Q91qoN91qlL8kM]J8P)KF8P)HD84Z9B7n6'>7n6$<7Rfj:
77BX6779O36psC06UO4-6:+"*5s[e&5sR\#5X7Ou5<h=q5!D.n4Ztqj4?P_g4$,Mc3]];_3B9)[3&ilW
~>
]
>>
0 0 1 0 []true true []
/DeviceRGB
GenStrips
} /Gradient add_res /6 /Gradient get_res exec grestore
}if
np
257.639 362.536 mo
256.424 362.322 255.49 361.066 255.49 359.548 cv
255.49 276.876 li
255.49 268.82 260.064 262.046 266.266 260.09 cv
267.443 259.719 268.678 259.521 269.952 259.521 cv
270.838 259.521 271.705 259.617 272.547 259.8 cv
272.547 259.8 li
271.705 259.617 270.838 259.521 269.952 259.521 cv
261.965 259.521 255.49 267.291 255.49 276.876 cv
255.49 359.548 li
255.49 361.066 256.424 362.322 257.639 362.536 cv
270.105 360.833 mo
260.22 360.833 li
259.088 360.833 258.17 359.731 258.17 358.373 cv
258.17 287.976 li
259.418 289.05 261.041 289.699 262.816 289.699 cv
262.978 289.699 li
263.536 289.699 264.079 289.763 264.6 289.884 cv
266.782 290.395 268.573 291.913 269.473 293.918 cv
269.487 293.918 li
269.884 294.806 270.105 295.79 270.105 296.825 cv
270.105 360.833 li
258.994 276.458 mo
260.34 272.384 263.217 269.238 266.774 268.046 cv
264.422 271.077 261.866 273.93 258.994 276.458 cv
level3{
gsave
clp
[5.33227e-15 -87.0827 87.0827 5.33227e-15 269.952 355.131 ]ct
/6 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[5.33227e-15 -87.0827 87.0827 5.33227e-15 269.952 355.131 ]ct
clp
/6 /Gradient get_res exec grestore
}if
np
311.243 259.52 mo
311.243 362.577 li
303.511 362.577 li
302.611 362.577 301.891 361.21 301.891 359.555 cv
301.891 276.893 li
301.891 267.29 306.064 259.52 311.243 259.52 cv
level3{
gsave
clp
[5.3323e-15 -87.0832 87.0832 5.3323e-15 306.568 355.131 ]ct
/6 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[5.3323e-15 -87.0832 87.0832 5.3323e-15 306.568 355.131 ]ct
clp
/6 /Gradient get_res exec grestore
}if
np
180.275 362.568 mo
180.274 362.568 li
181.665 362.568 182.791 361.216 182.791 359.548 cv
182.791 359.548 li
182.791 361.216 181.665 362.568 180.275 362.568 cv
156.017 362.536 mo
155.525 362.449 155.078 362.191 154.722 361.815 cv
154.198 361.261 153.868 360.451 153.868 359.548 cv
153.868 300.855 li
153.868 298.21 li
153.868 276.876 li
153.868 267.291 160.343 259.521 168.33 259.521 cv
173.229 259.521 177.56 262.446 180.175 266.919 cv
181.074 268.456 181.77 270.176 182.218 272.023 cv
182.591 273.563 182.791 275.191 182.791 276.876 cv
182.791 276.876 li
182.791 267.291 176.316 259.521 168.33 259.521 cv
160.343 259.521 153.868 267.291 153.868 276.876 cv
153.868 359.548 li
153.868 361.066 154.802 362.322 156.017 362.536 cv
178.063 360.833 mo
158.598 360.833 li
157.465 360.833 156.547 359.731 156.547 358.373 cv
156.547 281.665 li
156.547 273.856 161.822 267.526 168.33 267.526 cv
174.838 267.526 180.113 273.856 180.113 281.665 cv
180.113 358.373 li
180.113 359.731 179.195 360.833 178.063 360.833 cv
level3{
gsave
clp
[5.33227e-15 -87.0827 87.0827 5.33227e-15 168.33 355.131 ]ct
/6 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[5.33227e-15 -87.0827 87.0827 5.33227e-15 168.33 355.131 ]ct
clp
/6 /Gradient get_res exec grestore
}if
np
134.771 362.577 mo
127.038 362.577 li
127.038 259.52 li
132.218 259.52 136.39 267.29 136.39 276.893 cv
136.39 276.893 li
136.39 267.29 132.218 259.52 127.038 259.52 cv
127.038 267.526 li
131.258 267.526 134.656 273.854 134.656 281.677 cv
134.656 358.372 li
134.656 359.72 134.071 360.833 133.338 360.833 cv
127.038 360.833 li
127.038 362.576 li
134.771 362.576 li
135.358 362.576 135.867 361.996 136.151 361.134 cv
135.867 361.996 135.358 362.577 134.771 362.577 cv
level3{
gsave
clp
[5.3323e-15 -87.0832 87.0832 5.3323e-15 131.714 355.131 ]ct
/6 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[5.3323e-15 -87.0832 87.0832 5.3323e-15 131.714 355.131 ]ct
clp
/6 /Gradient get_res exec grestore
}if
np
214.753 260.084 mo
214.753 260.083 li
216.157 259.716 217.631 259.521 219.15 259.521 cv
219.151 259.521 li
217.631 259.521 216.157 259.717 214.753 260.084 cv
level3{
gsave
clp
[1.5481e-14 -252.824 252.824 1.5481e-14 219.141 451.336 ]ct
/7 
<<
/ShadingType 2 
/ColorSpace /0 /CSA get_res
/Coords [0 0 1 0 ]
/Domain [0 1 ]
/Extend[ true true]
/Function
<<
/Domain[0 1 ] 
/FunctionType 3
/Functions [
<<
/Domain[0 1 ] 
/Range[0 1 0 1 0 1 ] 
/FunctionType 0
/Order 1 
/DataSource <~h2l+%OCI%-@bm,Th2l+%OCI%-@bm,Th2l+%OCI%-@bm,Th2l+%OCI%-@bm,Th2l+%OCI%-@bm,Th2l+%
OCI%-@bm,Th2l+%OCI%-@bm,Th2l+%OCI%-@bm,Th2l+%OCI%-@bm,Th2l+%OCI%-@bm,Th2l+%OCI%-
@bm,Th2l+%OCI%-@bm,Th2l+%OCI%-@bm,Th2l+%OCI%-@bm,Th2l+%OCI%-@bm,Th2l+%OCI%-@bm,T
~>
/BitsPerSample 8 
/Encode [0 63 ]
/Decode [0 1 0 1 0 1 ]
/Size [64 ]
>>
<<
/Domain[0 1 ] 
/Range[0 1 0 1 0 1 ] 
/FunctionType 0
/Order 1 
/DataSource <~h2l+%OCI%-@bm,Th2l+%OCI%-@bm,Th2l+%OCI%-@bm)Sh2c"#O($k*@GQuQglGn!Na^_'@GHlNgl>dt
NaUY&@,-cMgl5^sNF:M"@,$WIgPfLoMdP4s?JCBEg5B:kMI,"n?J:6Afn`qeLg8Vg>hOm;fnWhcL0N>b
>M4[5fS!G\KNd#\=kA7-f7@&UJQUKR=4Vk&ep^ZMIT=pH<RlIre9b-DHW/C=;q#thdWeX;G>Zb1:sjD]
~>
/BitsPerSample 8 
/Encode [0 63 ]
/Decode [0 1 0 1 0 1 ]
/Size [64 ]
>>
]
/Bounds [1.89999e-07 ]
/Encode [0 1 0 1 ]
>>
>>/Gradient add_res /7 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[1.5481e-14 -252.824 252.824 1.5481e-14 219.141 451.336 ]ct
clp
/7 {
/0 /CSA get_res setcolorspace
<<
/NumSamples 256 
/NumComp 3 
/Scaling[[.00392157 0 ][.00392157 0 ][.00392157 0 ]]
/Samples[
<~gt^]?gt^]?gt^]?gt^]?gt^]?gt^]?gt^]?gt^]?gt^]?gt^]?gt^]?gt^]?gt^]?gt^]?gt^]?gt^]?
gt^Z=gY:K;gY:K;gY:K;gY:K;gY:K;gY:K;gY:K;gY:K;gY:K;gY:H9g=k97g=k97g=k97g=k97g=k97
g=k96g"G'3g"G'3g"G'3g"G'2f\"j/f\"j/f\"j/f\"j/f\"j/f\"j/f\"j/f\"j.f@SX+f@SX+f@SX*
f%/F'f%/F'f%/F'e^`4#e^`4#e^`4#eC<!teC<!teC<!te'ldpe'ldpdaHRldaHRldF$@hdF$@hd*U.d
~>
<~O,o?_O,o?_O,o?_O,o?_O,o?_O,o?_O,o?_O,o?_O,o?_O,o?_O,o?_O,f6\NfK-[NfK-[NfK-[NfK-[
NfK-[NfK*YNK&pWNK&pWNK&pWNK&pWNK&pWNK&pWNK&mUN/W^SN/W[QMi3LOMi3LOMi3IMMMd:KMMd:K
MMd:KMMd:JM2@(FLkpkCLkpkBLPLY?LPLY>L5(G;L5(G;L5(G:KnY56KS5#2K7ef/K7ef/K7ef.JqAT*
JUrB'J:N0#J:N0#It)rtIXZ`pI=6NlI=6NlI!g<hH[C*dH?sm`H?sj^G^+IXGB\7TGB\7TG'8"NFEDVH
~>
<~@:<SQ@:<SQ@:<SQ@:<SQ@:<SQ@:<SQ@:<SQ@:<SQ@:<SQ@:<SQ@:<SQ@:<SQ@:3JN?smAM?smAM?smAM
?smAM?smAM?smAM?sm>K?XI/I?XI/I?XI/I?XI/I?XI/I?XI/I?XI/I?XI,G?=$rE?=$rE?=$oC?!U`A
?!U`A?!U`A?!U`A?!U`@>[1N=>[1N<>?b<9>?b<9>?b<9>?b<8>$>*5>$>*4=]nm1=]nm1=]nm0=BJ[,
='&I)='&I)='&I)<`W7%<`W7%<E3%!<)cgr<)cgr;c?Un;GpCj;GpCj;GpCj;,L1f:f'tb:f'tb:JXb^
~>
]
>>
0 0 1 0 []true true []
/DeviceRGB
GenStrips
} /Gradient add_res /7 /Gradient get_res exec grestore
}if
np
212.396 260.885 mo
213.155 260.564 213.943 260.295 214.753 260.083 cv
214.753 260.084 li
213.943 260.295 213.155 260.564 212.396 260.885 cv
level3{
gsave
clp
[1.5481e-14 -252.824 252.824 1.5481e-14 219.141 451.336 ]ct
/8 
<<
/ShadingType 2 
/ColorSpace /0 /CSA get_res
/Coords [0 0 1 0 ]
/Domain [0 1 ]
/Extend[ true true]
/Function
<<
/Domain[0 1 ] 
/FunctionType 3
/Functions [
<<
/Domain[0 1 ] 
/Range[0 1 0 1 0 1 ] 
/FunctionType 0
/Order 1 
/DataSource <~fn!,UJQ1<R<7uh%fn!,UJQ1<R<7uh%fn!,UJQ1<R<7uh%fn!,UJQ1<R<7uh%fn!,UJQ1<R<7uh%fn!,U
JQ1<R<7uh%fn!,UJQ1<R<7uh%fn!,UJQ1<R<7uh%fn!,UJQ1<R<7uh%fn!,UJQ1<R<7uh%fn!,UJQ1<R
<7uh%fn!,UJQ1<R<7uh%fn!,UJQ1<R<7uh%fn!,UJQ1<R<7uh%fn!,UJQ1<R<7uh%fn!,UJQ1<R<7uh%
~>
/BitsPerSample 8 
/Encode [0 63 ]
/Decode [0 1 0 1 0 1 ]
/Size [64 ]
>>
<<
/Domain[0 1 ] 
/Range[0 1 0 1 0 1 ] 
/FunctionType 0
/Order 1 
/DataSource <~fn!,UJQ1<R<7uh%fn!,UJQ1<R<7uh%fn!,UJQ1<R<7uh%fn!)TJQ(6Q;qZ_#fRZuRJQ(3P;qQY"fRZuR
J5b*N;qQV!fRHiPIoFsJ;qHIrf7$WLIT"dH;:g4nepUEHHr8IA;:^(jeU(-CHV`1<:XsbeeTt$@Gu)q7
:XjVads"O8G>6P0:""/XdWJ73FA(#&9@7fRd;hn,E_=\u8^MEJcYlA#Db/2k8'c!Ac>6"rCIZQ`7EoO8
~>
/BitsPerSample 8 
/Encode [0 63 ]
/Decode [0 1 0 1 0 1 ]
/Size [64 ]
>>
]
/Bounds [1.89999e-07 ]
/Encode [0 1 0 1 ]
>>
>>/Gradient add_res /8 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[1.5481e-14 -252.824 252.824 1.5481e-14 219.141 451.336 ]ct
clp
/8 {
/0 /CSA get_res setcolorspace
<<
/NumSamples 256 
/NumComp 3 
/Scaling[[.00392157 0 ][.00392157 0 ][.00392157 0 ]]
/Samples[
<~f\"j/f\"j/f\"j/f\"j/f\"j/f\"j/f\"j/f\"j/f\"j/f\"j/f\"j/f\"j/f\"j/f\"j/f\"j/f\"j/
f\"g-f@SX+f@SX+f@SX+f@SX+f@SX+f@SX+f@SX+f@SX+f@SX+f@SU)f%/F'f%/F'f%/F'f%/F'f%/F'
f%/F&e^`4#e^`4#e^`4#e^`4"eC<!teC<!teC<!teC<!teC<!se'ldpe'ldpe'ldodaHRldaHRldaHRk
dF$@hdF$@hdF$@hd*U.dd*U.dd*U.dcd0q`cd0q`cd0q`cHa_\cHa_\cHa_\cHa_\c-=MXc-=MXbfn;T
~>
<~J:N0#J:N0#J:N0#J:N0#J:N0#J:N0#J:N0#J:N0#J:N0#J:N0#J:N0#J:N0#J:N0#J:N0#J:N0#J:N0#
J:N0#J:N0#J:N0#J:N0#J:N0#J:N-!It)rtIt)rtIt)orIXZ`pIXZ]nI=6NlI=6NlI=6NlI=6NlI=6Kj
I!g<hI!g<gH[C*cH?sm`H?sm`H?sm`H?sm_H$O[\H$O[\H$O[[G^+IWGB\7TGB\7SG'8%PG'8%OF`hhK
FEDVHFEDVHF)uDDEcQ2@EcQ2@EH,u<EH,u<E,]c8Df9Q4DJj?0DJj<.Ci!p(CMR^$CMR^$C2.KuBk_9q
~>
<~;c?Un;c?Un;c?Un;c?Un;c?Un;c?Un;c?Un;c?Un;c?Un;c?Un;c?Un;c?Un;c6Lk;GpCj;GpCj;GpCj
;GpCj;GpCj;GpCj;GpCj;GpCj;GpCj;GpCj;GpCj;GpCj;GpCj;GpCj;Gp@h;,L1f;,L1f;,L.d:f'tb
:f'tb:f'tb:f'tb:f'ta:JXb^:JXb]:/4PZ:/4PZ:/4PZ:/4PZ:/4PZ:/4PY9he>U9MA,R9MA,R9MA,Q
91qoN91qoN8kM]J8kM]J8kM]J8kM]J8P)KF84Z9B84Z9B7n6'>7n6'>7Rfj:7Rfj:7Rfj:77BX66psF2
~>
]
>>
0 0 1 0 []true true []
/DeviceRGB
GenStrips
} /Gradient add_res /8 /Gradient get_res exec grestore
}if
np
233.485 362.568 mo
204.817 362.568 li
204.667 362.568 204.52 362.557 204.376 362.536 cv
202.917 362.322 201.797 361.066 201.797 359.548 cv
201.797 276.876 li
201.797 269.687 206.168 263.52 212.396 260.885 cv
213.155 260.564 213.943 260.295 214.753 260.084 cv
216.157 259.717 217.631 259.521 219.151 259.521 cv
219.151 259.521 li
228.735 259.521 236.506 267.291 236.506 276.876 cv
236.506 359.548 li
236.506 361.066 235.385 362.322 233.926 362.536 cv
233.782 362.557 233.635 362.568 233.485 362.568 cv
219.15 267.526 mo
211.342 267.526 205.012 273.856 205.012 281.665 cv
205.012 358.373 li
205.012 359.731 206.113 360.833 207.473 360.833 cv
230.83 360.833 li
232.189 360.833 233.291 359.731 233.291 358.373 cv
233.291 281.665 li
233.291 273.856 226.96 267.526 219.151 267.526 cv
219.15 267.526 li
level3{
gsave
clp
[5.33227e-15 -87.0827 87.0827 5.33227e-15 219.151 355.131 ]ct
/9 
<<
/ShadingType 2 
/ColorSpace /0 /CSA get_res
/Coords [0 0 1 0 ]
/Domain [0 1 ]
/Extend[ true true]
/Function
<<
/Domain[0 1 ] 
/FunctionType 3
/Functions [
<<
/Domain[0 1 ] 
/Range[0 1 0 1 0 1 ] 
/FunctionType 0
/Order 1 
/DataSource <~`F:pJ@QVP<42kYj`F:pJ@QVP<42kYj`F:pJ@QVP<42kYj`F:pJ@QVP<42kYj`F:pJ@QVP<42kYj`F:pJ
@QVP<42kYj`F:pJ@QVP<42kYj`F:pJ@QVP<42kYj`F:pJ@QVP<42kYj`F:pJ@QVP<42kYj`F:pJ@QVP<
42kYj`F:pJ@QVP<42kYj`F:pJ@QVP<42kYj`F:pJ@QVP<42kYj`F:pJ@QVP<42kYj`F:pJ@QVP<42kYj
~>
/BitsPerSample 8 
/Encode [0 63 ]
/Decode [0 1 0 1 0 1 ]
/Size [64 ]
>>
<<
/Domain[0 1 ] 
/Range[0 1 0 1 0 1 ] 
/FunctionType 0
/Order 1 
/DataSource <~`F:pJ@QVP<42kYj`F:pJ@QVP<42kYj`*tgH@QMG:3lGJg`*k^E@62;73l>Ae_dGOB?ol/33l55a_-]4=
?TGo/35Ai[^g/q7>r]T(35/WW^0EV1>;s3!2S<3O]3.&(=Z3lp27cmI\Q:Vu<]%<e1q-I@[T#&k;_kaY
1:0q7ZV`H_:bf4N0X4D,YYHjT9J<PB0!.buX@b(F8M$l4/#c#hW(&;774P0&.A]B\Ud?K)5UW6j-_NXM
~>
/BitsPerSample 8 
/Encode [0 63 ]
/Decode [0 1 0 1 0 1 ]
/Size [64 ]
>>
<<
/Domain[0 1 ] 
/Range[0 1 0 1 0 1 ] 
/FunctionType 0
/Order 1 
/DataSource <~TKX]q4slpd-D3OLTKX]q4slpd-D3OLTKX]q4slpd-D3OLTKX]q4slpd-D3OLTKX]q4slpd-D3OLTKX]q
4slpd-D3OLTKX]q4slpd-D3OLTKX]q4slpd-D3OLTKX]q4slpd-D3OLTKX]q4slpd-D3OLTKX]q4slpd
-D3OLTKX]q4slpd-D3OLTKX]q4slpd-D3OLTKX]q4slpd-D3OLTKX]q4slpd-D3OLTKX]q4slpd-D3OL
~>
/BitsPerSample 8 
/Encode [0 63 ]
/Decode [0 1 0 1 0 1 ]
/Size [64 ]
>>
]
/Bounds [1.89999e-07 .998385 ]
/Encode [0 1 0 1 0 1 ]
>>
>>/Gradient add_res /9 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[5.33227e-15 -87.0827 87.0827 5.33227e-15 219.151 355.131 ]ct
clp
/9 {
/0 /CSA get_res setcolorspace
<<
/NumSamples 256 
/NumComp 3 
/Scaling[[.00392157 0 ][.00392157 0 ][.00392157 0 ]]
/Samples[
<~`5KU4`5KU4`5KU4`5KU4`5KU4`5KU4`5KU4`5KU4`5BL1_o'C0_o'C0_o'C0_o'C0_ns:-_SX1,_SX1,
_SX1,_SO()_83t(_83t(_83q&^qdb$^qd_"^V@Ou^V@Ou^V@Ls^:q=q^:q:o]tM+m]tM(k]Y(kg]=Y\e
]=YYc]"5Ja]"5Ja]"5G_\[f8\\@B&Y\@B&X\$riT[^NWP[C*EM[C*EL['[3HZa7!DZEgd@Z*CR<Yct@9
Yct@8YHP.4Y-+q0Xf\_,XK8M(X/i;%WiE)!WMukrW2QYnVl-DhV5:#bV5:#bUnjf^USFTZU8"?TTV.sN
~>
<~@:<SQ@:<SQ@:<SQ@:<SQ@:<SQ@:<SQ@:<SQ@:<SQ@:<SQ@:<SQ@:<SQ@:<SQ@:3JN?smAM?smAM?smAM
?sd8J?XI/I?XI,G?=$rE?=$rE?=$rE?=$rE?=$oC?!U]?>[1N=>[1K;>?b<9>?b<9>?b97>$>*5>$>'3
=]nj/=BJ[-=BJ[-=BJX+='&I(<`W7$<E3%!<E3$u<)cgq;c?Um;GpCi;,L1f;,L1e:f'ta:JXb]:/4PZ
:/4PY9h\5R91qoN91qoM8kM]I8P)KF84Z9B7n6'>7Rfj:77BX66psF26UO4.6:+"*5s[b$5<h@s5<h=q
~>
<~3]];_3]];_3]];_3]];_3]];_3]];_3]];_3]];_3]];_3]T2\3B9)[3B9)[3B9)[3B9)[3B9)[3B9)[
3B9)[3B9)[3B9)[3B9&Y3&ilW3&ilW3&iiU2`EZS2`EZS2`EZS2`EZS2`EZS2`EWQ2E!HO2E!EM2)R6K
2)R6K2)R6K2)R3I1c.$G1c.$F1G^gC1G^gC1G^gB1,:U?1,:U>0ekC;0ekC;0ekC:0JG170JG160/"t2
/hSb//hSb//hSb./M/P*/1`>'/1`>'.k<,#.Olnt.Olnt.Olnt.4H\p-n$Jl-n$Jl-RU8h-71&d-71&d
~>
]
>>
0 0 1 0 []true true []
/DeviceRGB
GenStrips
} /Gradient add_res /9 /Gradient get_res exec grestore
}if
np
270.105 362.568 mo
258.007 362.568 li
257.882 362.568 257.759 362.557 257.639 362.536 cv
256.424 362.322 255.49 361.066 255.49 359.548 cv
255.49 276.876 li
255.49 267.291 261.965 259.521 269.952 259.521 cv
270.838 259.521 271.705 259.617 272.547 259.8 cv
270.726 262.62 268.827 265.401 266.774 268.046 cv
263.217 269.238 260.34 272.384 258.994 276.458 cv
258.74 276.682 258.484 276.903 258.225 277.121 cv
256.675 278.429 255.689 280.385 255.689 282.572 cv
255.689 284.732 256.651 286.669 258.17 287.976 cv
258.17 358.373 li
258.17 359.731 259.088 360.833 260.22 360.833 cv
270.105 360.833 li
270.105 362.568 li
level3{
gsave
clp
[5.33227e-15 -87.0827 87.0827 5.33227e-15 269.952 355.131 ]ct
/9 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[5.33227e-15 -87.0827 87.0827 5.33227e-15 269.952 355.131 ]ct
clp
/9 /Gradient get_res exec grestore
}if
np
180.274 362.568 mo
161.271 362.568 li
156.385 362.568 li
156.26 362.568 156.137 362.557 156.017 362.536 cv
154.802 362.322 153.868 361.066 153.868 359.548 cv
153.868 276.876 li
153.868 267.291 160.343 259.521 168.33 259.521 cv
176.316 259.521 182.791 267.291 182.791 276.876 cv
182.791 359.548 li
182.791 361.216 181.665 362.568 180.274 362.568 cv
168.33 267.526 mo
161.822 267.526 156.547 273.856 156.547 281.665 cv
156.547 358.373 li
156.547 359.731 157.465 360.833 158.598 360.833 cv
178.063 360.833 li
179.195 360.833 180.113 359.731 180.113 358.373 cv
180.113 281.665 li
180.113 273.856 174.838 267.526 168.33 267.526 cv
level3{
gsave
clp
[5.33227e-15 -87.0827 87.0827 5.33227e-15 168.33 355.131 ]ct
/9 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[5.33227e-15 -87.0827 87.0827 5.33227e-15 168.33 355.131 ]ct
clp
/9 /Gradient get_res exec grestore
}if
np
136.151 361.134 mo
136.303 360.673 136.39 360.132 136.39 359.555 cv
136.39 276.893 li
136.39 276.893 li
136.39 359.556 li
136.39 360.132 136.303 360.673 136.151 361.134 cv
level3{
gsave
clp
[1.5481e-14 -252.824 252.824 1.5481e-14 219.141 451.336 ]ct
/7 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[1.5481e-14 -252.824 252.824 1.5481e-14 219.141 451.336 ]ct
clp
/7 /Gradient get_res exec grestore
}if
np
134.771 362.576 mo
127.038 362.576 li
127.038 360.833 li
133.338 360.833 li
134.071 360.833 134.656 359.72 134.656 358.372 cv
134.656 281.677 li
134.656 273.854 131.258 267.526 127.038 267.526 cv
127.038 259.52 li
132.218 259.52 136.39 267.29 136.39 276.893 cv
136.39 359.555 li
136.39 360.132 136.303 360.673 136.151 361.134 cv
135.867 361.996 135.358 362.576 134.771 362.576 cv
level3{
gsave
clp
[5.3323e-15 -87.0832 87.0832 5.3323e-15 131.714 355.131 ]ct
/9 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[5.3323e-15 -87.0832 87.0832 5.3323e-15 131.714 355.131 ]ct
clp
/9 /Gradient get_res exec grestore
}if
np
484.004 528.994 mo
470.163 528.994 li
469.328 528.994 li
469.328 495.873 li
473.436 495.873 li
476.408 495.873 478.816 498.282 478.816 501.252 cv
478.816 523.807 li
478.816 526.672 481.139 528.994 484.004 528.994 cv
578.323 501.252 mo
578.323 498.282 575.914 495.873 572.943 495.873 cv
562.572 495.873 li
557.711 495.873 li
481.725 495.873 li
547.095 493.97 li
548.63 493.925 550.072 493.229 551.062 492.054 cv
551.882 491.081 552.331 489.851 552.331 488.578 cv
552.331 490.493 li
552.331 493.465 554.739 495.873 557.711 495.873 cv
572.943 495.873 li
575.914 495.873 578.323 498.282 578.323 501.252 cv
578.323 501.252 li
521.813 429.697 mo
521.536 429.653 521.251 429.63 520.961 429.63 cv
505.728 429.63 li
486.663 429.63 li
487.298 428.792 487.465 428.178 487.354 427.729 cv
493.852 427.507 li
495.555 427.448 497.173 426.746 498.378 425.54 cv
499.64 424.279 500.349 422.568 500.349 420.784 cv
500.349 424.251 li
500.349 427.223 502.757 429.63 505.728 429.63 cv
520.961 429.63 li
521.251 429.63 521.536 429.653 521.813 429.697 cv
482.933 429.63 mo
469.328 429.63 li
469.328 428.344 li
482.092 427.908 li
482.076 428.476 482.417 429.117 482.933 429.63 cv
479.632 396.508 mo
469.328 396.508 li
469.328 394.241 li
470.525 393.989 471.63 393.394 472.504 392.522 cv
473.69 391.335 474.357 389.725 474.357 388.047 cv
474.357 391.13 li
474.357 394.066 476.709 396.453 479.632 396.508 cv
level3{
gsave
clp
[73.0252 0 0 73.0252 469.241 446.191 ]ct
/10 
<<
/ShadingType 2 
/ColorSpace /0 /CSA get_res
/Coords [0 0 1 0 ]
/Domain [0 1 ]
/Extend[ true true]
/Function
<<
/Domain[0 1 ] 
/FunctionType 3
/Functions [
<<
/Domain[0 1 ] 
/FunctionType 2
/C0 [.952941 .745098 .564706 ]
/C1 [.952941 .745098 .564706 ]
/N 1 
>>
<<
/Domain[0 1 ] 
/FunctionType 2
/C0 [1 .85098 .658824 ]
/C1 [.952941 .745098 .564706 ]
/N 2.18495 
>>
]
/Bounds [1.89999e-07 ]
/Encode [0 1 1 0 ]
>>
>>/Gradient add_res /10 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[73.0252 0 0 73.0252 469.241 446.191 ]ct
clp
/10 {
/0 /CSA get_res setcolorspace
<<
/NumSamples 256 
/NumComp 3 
/Scaling[[.00392157 0 ][.00392157 0 ][.00392157 0 ]]
/Samples[
<~oCMSFoCMSFoCMVHo^qeJo^qeJo_%nMp%A"Np%A"Np@e4Rp@e4Rp@e4Rp\4FVp\4FVp\4FVq"XXZq"XXZ
q"XXZq"X[\q>'j^q>'j^q>'j^q>0saqYL'bqYL'bqYL'bqYL*dqtp9fqtp9fqtp9fqtp9fqu$Bir;?Kj
r;?Kjr;?Kjr;?Kjr;?KjrVc]nrVc]nrVc]nrVc]nrVc]nrVc]nrVc]nrVc`prr2orrr2orrr2orrr2or
rr2orrr2orrr2orrr2orrr2orrr2orrr2orrr2orrr2orrr2orrr2orrr2orrr2orrr2orrr2orrr2or
~>
<~^:q=q^;%Ft^VIY#^qde&_83t)_SX1-_o'C0`5KU4`5T^7`Pog9`l?$<a2c6@a2l?CaN2HEaiVZHai_cK
b0%lMbKJ)PbKS2Sbfn;Tc-=MXc-=MYcHa_\cHab^cd0q`cd0tbd*U.dd*U1fdF$@hdF$CjdaHRldaHRl
e'ldpe'ldpe'lgreC<!teC<!teC<%!e^`4#e^`4#e^`4$f%/F'f%/F'f%/F'f%/F(f@SX+f@SX+f@SX+
f@SX+f@SX+f\"j/f\"j/f\"j/f\"j/f\"j/f\"j/f\"j/f\"j/f\"j/f\"j/f\"j/f\"j/f\"j/f\"j/
~>
<~OH>QcOHGZfOcbfiP*1ukPEV2oPE_;rPa%GuQ'IW"QBmi&QBml(Q^=&*R$a8.R$a;0R@0J2R[T\6R[T\7
S"#n:S"#q<S=H+>S=Q4ASXl=BSXuFESt;OFStDXIT:_aJT:_dLTV.sNTV.sOTqS0RTqS0RTq\9UU8"BV
U8"BVUSFTZUSFTZUSFTZUnjf^Unjf^Unjf^Unji`V5:#bV5:#bV5:#bV5:&dVP^5fVP^5fVP^5fVP^5f
VP^5fVPg>iVl-GjVl-GjVl-GjVl-GjVl-GjVl-GjVl-GjVl-GjVl-GjVl-GjVl-GjVl-GjVl-GjVl-Gj
~>
]
>>
0 0 1 0 []true true []
/DeviceRGB
GenStrips
} /Gradient add_res /10 /Gradient get_res exec grestore
}if
np
531.305 462.736 mo
528.527 462.525 526.34 460.204 526.34 457.373 cv
526.34 435.01 li
526.34 432.329 524.379 430.106 521.813 429.697 cv
524.379 430.106 526.34 432.328 526.34 435.009 cv
526.34 457.372 li
526.34 460.204 528.527 462.525 531.305 462.736 cv
500.348 401.784 mo
500.292 398.861 497.906 396.509 494.97 396.509 cv
479.736 396.509 li
479.702 396.509 479.667 396.509 479.632 396.508 cv
479.736 396.508 li
487.266 396.508 li
494.97 396.508 li
497.906 396.508 500.292 398.861 500.348 401.784 cv
474.322 368.149 mo
474.029 365.584 471.931 363.567 469.328 363.399 cv
469.328 363.399 li
471.93 363.566 474.029 365.583 474.322 368.149 cv
.980392 .901961 .862745 rgb
f
583.702 528.994 mo
484.004 528.994 li
481.139 528.994 478.816 526.672 478.816 523.807 cv
478.816 501.252 li
478.816 498.282 476.408 495.873 473.436 495.873 cv
469.328 495.873 li
469.328 429.63 li
482.933 429.63 li
483.493 430.188 484.261 430.595 485.003 430.595 cv
485.531 430.595 486.046 430.389 486.463 429.883 cv
486.534 429.797 486.601 429.712 486.663 429.63 cv
505.728 429.63 li
520.961 429.63 li
521.251 429.63 521.536 429.653 521.813 429.697 cv
524.379 430.106 526.34 432.329 526.34 435.01 cv
526.34 457.373 li
526.34 460.204 528.527 462.525 531.305 462.736 cv
531.441 462.747 531.58 462.752 531.719 462.752 cv
546.952 462.752 li
549.923 462.752 552.331 465.16 552.331 468.131 cv
552.331 488.578 li
552.331 489.851 551.882 491.081 551.062 492.054 cv
550.072 493.229 548.63 493.925 547.095 493.97 cv
481.725 495.873 li
557.711 495.873 li
562.572 495.873 li
572.943 495.873 li
575.914 495.873 578.323 498.282 578.323 501.252 cv
578.323 523.615 li
578.323 523.615 li
578.323 526.586 580.73 528.994 583.702 528.994 cv
512.994 519.346 mo
511.776 519.346 511.732 519.604 512.122 519.862 cv
512.512 520.12 513.336 520.378 513.851 520.378 cv
514.143 520.378 514.336 520.295 514.297 520.084 cv
514.177 519.428 513.648 519.323 513.321 519.323 cv
513.167 519.323 513.059 519.346 513.059 519.346 cv
513.037 519.346 513.015 519.346 512.994 519.346 cv
499.482 485.092 mo
496.253 485.441 497.618 488.151 499.514 488.151 cv
499.96 488.151 500.435 488.001 500.887 487.636 cv
503.423 485.582 499.482 485.092 499.482 485.092 cv
491.074 473.679 mo
490.687 473.679 490.439 473.696 490.439 473.696 cv
484.942 474.289 488.688 479.876 492.077 479.876 cv
492.881 479.876 493.665 479.562 494.3 478.792 cv
498.189 474.079 492.964 473.679 491.074 473.679 cv
532.628 471.148 mo
531.208 471.148 530.981 471.889 531.322 472.629 cv
531.663 473.369 532.571 474.109 533.42 474.109 cv
534.029 474.109 534.607 473.729 534.925 472.695 cv
535.376 471.223 533.417 471.175 533.156 471.175 cv
533.138 471.175 533.128 471.175 533.128 471.175 cv
532.947 471.157 532.78 471.148 532.628 471.148 cv
469.328 428.344 mo
469.328 396.508 li
479.632 396.508 li
479.667 396.509 479.702 396.509 479.736 396.509 cv
494.97 396.509 li
497.906 396.509 500.292 398.861 500.348 401.784 cv
500.348 401.819 500.349 401.854 500.349 401.888 cv
500.349 420.784 li
500.349 422.568 499.64 424.279 498.378 425.54 cv
497.173 426.746 495.555 427.448 493.852 427.507 cv
487.354 427.729 li
487.085 426.647 485.198 426.522 484.344 426.522 cv
484.089 426.522 483.927 426.533 483.927 426.533 cv
482.624 426.674 482.111 427.241 482.092 427.908 cv
469.328 428.344 li
495.248 420.876 mo
493.409 421.167 494.093 423.407 495.523 423.407 cv
495.878 423.407 496.278 423.269 496.697 422.93 cv
499.233 420.876 495.248 420.876 495.248 420.876 cv
478.025 421.415 mo
476.784 421.415 476.74 421.786 477.137 422.158 cv
477.534 422.529 478.373 422.901 478.898 422.901 cv
479.195 422.901 479.392 422.782 479.353 422.478 cv
479.23 421.533 478.691 421.382 478.358 421.382 cv
478.202 421.382 478.091 421.415 478.091 421.415 cv
478.068 421.415 478.047 421.415 478.025 421.415 cv
469.328 394.241 mo
469.328 363.399 li
471.931 363.567 474.029 365.584 474.322 368.149 cv
474.345 368.352 474.357 368.558 474.357 368.767 cv
474.357 388.047 li
474.357 389.725 473.69 391.335 472.504 392.522 cv
471.63 393.394 470.525 393.989 469.328 394.241 cv
level3{
gsave
clp
[73.0252 0 0 73.0252 469.241 446.191 ]ct
/11 
<<
/ShadingType 2 
/ColorSpace /0 /CSA get_res
/Coords [0 0 1 0 ]
/Domain [0 1 ]
/Extend[ true true]
/Function
<<
/Domain[0 1 ] 
/FunctionType 3
/Functions [
<<
/Domain[0 1 ] 
/Range[0 1 0 1 0 1 ] 
/FunctionType 0
/Order 1 
/DataSource <~m]1a'X*j?9I."%_m]1a'X*j?9I."%_m]1a'X*j?9I."%_m]1a'X*j?9I."%_m]1a'X*j?9I."%_m]1a'
X*j?9I."%_m]1a'X*j?9I."%_m]1a'X*j?9I."%_m]1a'X*j?9I."%_m]1a'X*j?9I."%_m]1a'X*j?9
I."%_m]1a'X*j?9I."%_m]1a'X*j?9I."%_m]1a'X*j?9I."%_m]1a'X*j?9I."%_m]1a'X*j?9I."%_
~>
/BitsPerSample 8 
/Encode [0 63 ]
/Decode [0 1 0 1 0 1 ]
/Size [64 ]
>>
<<
/Domain[0 1 ] 
/Range[0 1 0 1 0 1 ] 
/FunctionType 0
/Order 1 
/DataSource <~qS\Nm`0'o7Oo!"YqS\Nm`0'o7Oo!"YqS\Nm`0'o7OnutWqSSEk_iX`4OSQeUq88<i_N=T1O86YRq8/3g
_N4N/O86VPq8&*d^lJ3*NqgDLpqMg`^Q&$'NVC/HpV)X]]o;^!N;(#Dp:ZCX]o)NrMY=]?p:H1S\r$*k
M"S<7osokM\;0^cL\/'1o<sDF[>"4[L%;U(o!<u>Z\.eSK(6-tnZdZ7Y^u;IJFKaln#h-.Xa]]>II=.`
~>
/BitsPerSample 8 
/Encode [0 63 ]
/Decode [0 1 0 1 0 1 ]
/Size [64 ]
>>
]
/Bounds [1.89999e-07 ]
/Encode [0 1 1 0 ]
>>
>>/Gradient add_res /11 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[73.0252 0 0 73.0252 469.241 446.191 ]ct
clp
/11 {
/0 /CSA get_res setcolorspace
<<
/NumSamples 256 
/NumComp 3 
/Scaling[[.00392157 0 ][.00392157 0 ][.00392157 0 ]]
/Samples[
<~mHs<.mI'E1mdBN2mdKW5n*f`6n*f`6n*oi9nF5r:nF5r:nF?&=naZ/>naZ/>nac8Ao()ABo()ABo(2JE
oCMSFoCMSFoCMVHo^qeJo^qeJo^qeJo^qhLp%A"Np%A"Np%A"Np%A"Np%A%Pp@e4Rp@e4Rp@e4Rp@e4R
p@e4Sp\4FVp\4FVp\4FVp\4FVp\4FVp\4FWq"XXZq"XXZq"XXZq"XXZq"XXZq"XXZq"XXZq"XXZq"XXZ
q"XXZq>'j^q>'j^q>'j^q>'j^q>'j^q>'j^q>'j^q>'j^q>'j^q>'j^q>'j^q>'j^q>'j^q>'j^q>'j^
~>
<~WiN2$X/rD(XKAV,Xfeh0Y-+q1Y-5%4YHY78Yd(I<Z*L[@ZEgdAZEgdAZEpmDZa@*H['[3I['d<L[C3NP
[^NWQ[^NZS\$rlW\@B&Y\@B)[\[f8]\[f;_]"5Mc]=Y\e]=Y_g]Y(ni]Y(ni]Y(ni]Y(ni]Y(qk]tM+m
]tM+n^:q=q^:q=q^:q=r^V@Ou^V@Ou^V@P!^qdb$^qdb$^qdb%_83t(_83t(_83t(_83t(_83t)_SX1,
_SX1,_SX1,_SX1,_SX1,_SX1,_o'C0_o'C0_o'C0_o'C0_o'C0_o'C0_o'C0_o'C0_o'C0_o'C0_o'C0
~>
<~H[L3gI!pEkI=6NlI=?WoIXcisIt3'"J:N0#J:N0#J:W9&JV&K*JqAT+JqJ].K7no2KS5#3KS>,6KnY57
KnY89L5(G;L5(G;L5(J=LPLY?LPL\ALkpkCLkpnEM2@(GM2@(GM2@+IMMd:KMMd=MMi3LOMi3OQN/W^S
N/W^SN/W^SN/W^SN/W^SN/W^TNK&pWNK&pWNK&pWNK&pXNfK-[NfK-[NfK-[NfK-[NfK-\O,o?_O,o?_
O,o?_O,o?_O,o?_O,o?_O,o?_OH>QcOH>QcOH>QcOH>QcOH>QcOH>QcOH>QcOH>QcOH>QcOH>QcOH>Qc
~>
]
>>
0 0 1 0 []true true []
/DeviceRGB
GenStrips
} /Gradient add_res /11 /Gradient get_res exec grestore
}if
np
492.077 479.876 mo
488.688 479.876 484.942 474.289 490.439 473.696 cv
490.439 473.696 490.687 473.679 491.074 473.679 cv
492.964 473.679 498.189 474.079 494.3 478.792 cv
493.665 479.562 492.881 479.876 492.077 479.876 cv
level3{
gsave
clp
[73.0252 0 0 73.0252 469.241 446.191 ]ct
/12 
<<
/ShadingType 2 
/ColorSpace /0 /CSA get_res
/Coords [0 0 1 0 ]
/Domain [0 1 ]
/Extend[ true true]
/Function
<<
/Domain[0 1 ] 
/FunctionType 3
/Functions [
<<
/Domain[0 1 ] 
/Range[0 1 0 1 0 1 ] 
/FunctionType 0
/Order 1 
/DataSource <~l'cDPRVV/VC[%:'l'cDPRVV/VC[%:'l'cDPRVV/VC[%:'l'cDPRVV/VC[%:'l'cDPRVV/VC[%:'l'cDP
RVV/VC[%:'l'cDPRVV/VC[%:'l'cDPRVV/VC[%:'l'cDPRVV/VC[%:'l'cDPRVV/VC[%:'l'cDPRVV/V
C[%:'l'cDPRVV/VC[%:'l'cDPRVV/VC[%:'l'cDPRVV/VC[%:'l'cDPRVV/VC[%:'l'cDPRVV/VC[%:'
~>
/BitsPerSample 8 
/Encode [0 63 ]
/Decode [0 1 0 1 0 1 ]
/Size [64 ]
>>
<<
/Domain[0 1 ] 
/Range[0 1 0 1 0 1 ] 
/FunctionType 0
/Order 1 
/DataSource <~os&r<Z$l;MIJ'jnos&r<Z$l;MIJ'jnos&r<Z$l;MIJ'glorri:Y^H,JI.XXjoWW`8YC,uGHh=LgoWNW6
YC#oEHh=IfoWEQ4XaBZAHh4@co;m90XEsK>HLe+_nuI*-Wd408H1It[nZ$j(Wd"!5GO_\WnYp^$W-7[/
Fmu;On>CBsVKD:'FRQ&Jm\FsmUN>juF7#]Bm@eOeTlKFmE9s9:m%A:_T5X%eDX3m3lCDeWS8IM[D!@C(
~>
/BitsPerSample 8 
/Encode [0 63 ]
/Decode [0 1 0 1 0 1 ]
/Size [64 ]
>>
]
/Bounds [1.89999e-07 ]
/Encode [0 1 1 0 ]
>>
>>/Gradient add_res /12 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[73.0252 0 0 73.0252 469.241 446.191 ]ct
clp
/12 {
/0 /CSA get_res setcolorspace
<<
/NumSamples 256 
/NumComp 3 
/Scaling[[.00392157 0 ][.00392157 0 ][.00392157 0 ]]
/Samples[
<~kih6okiq?rl07Hsl0@R!lK[["lK[["lKdd%lg*m&lg*m&lg4!)m-O**m-O**m-X3-mHs<.mHs<.mI'E1
mdBN2mdBN2mdBQ4n*f`6n*f`6n*f`6n*fc8nF5r:nF5r:nF5r:nF5r:nF5u<naZ/>naZ/>naZ/>naZ/>
naZ/?o()ABo()ABo()ABo()ABo()ABo()ACoCMSFoCMSFoCMSFoCMSFoCMSFoCMSFoCMSFoCMSFoCMSF
oCMSFo^qeJo^qeJo^qeJo^qeJo^qeJo^qeJo^qeJo^qeJo^qeJo^qeJo^qeJo^qeJo^qeJo^qeJo^qeJ
~>
<~R@9S5R[]e9S"-"=S=Q4ASXl=BSXuFEStDXIT:hjMTV.sNTV.sNTV.sNTV8'QTq\9UU8"BVU8+KYUSO]]
Unjf^Unji`V5:&dVP^5fVP^8hVl-GjVl-JlW2Q\pWMukrWMukrWMukrWMukrWMukrWMukrWMuntWiE)!
WiE)"X/i;%X/i;%X/i;&XK8M)XK8M)XK8M*Xf\_-Xf\_-Xf\_.Y-+q1Y-+q1Y-+q1Y-+q1Y-+q2YHP.5
YHP.5YHP.5YHP.5YHP.5YHP.5Yct@9Yct@9Yct@9Yct@9Yct@9Yct@9Yct@9Yct@9Yct@9Yct@9Yct@9
~>
<~C27U#CM[g'Ci!p(Ci+$+D/F-,D/O6/DJj?0DJj?0DJsH3DfBZ7E,]c8E,fl;EH6)?EcQ2@EcZ;CF)uDD
F)uDDF)uDDF)uDDF)uGFFEDVHFEDYJF`hhLF`hkNG'8%PG'8%PG'8(RGB\7TGB\:VG^+IXG^+LZH$O[\
H$O[\H$O[\H$O[\H$O[\H$O[]H?sm`H?sm`H?sm`H?sm`H?sm`H?sm`H?sm`H?sm`H?smaH[C*dH[C*d
H[C*dH[C*dH[C*dH[C*dH[C*dI!g<hI!g<hI!g<hI!g<hI!g<hI!g<hI!g<hI!g<hI!g<hI!g<hI!g<h
~>
]
>>
0 0 1 0 []true true []
/DeviceRGB
GenStrips
} /Gradient add_res /12 /Gradient get_res exec grestore
}if
np
499.514 488.151 mo
497.618 488.151 496.253 485.441 499.482 485.092 cv
499.482 485.092 503.423 485.582 500.887 487.636 cv
500.435 488.001 499.96 488.151 499.514 488.151 cv
level3{
gsave
clp
[73.0252 0 0 73.0252 469.241 446.191 ]ct
/12 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[73.0252 0 0 73.0252 469.241 446.191 ]ct
clp
/12 /Gradient get_res exec grestore
}if
np
486.663 429.63 mo
482.933 429.63 li
482.417 429.117 482.076 428.476 482.092 427.908 cv
487.354 427.729 li
487.465 428.178 487.298 428.792 486.663 429.63 cv
level3{
gsave
clp
[73.0252 0 0 73.0252 469.241 446.191 ]ct
/11 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[73.0252 0 0 73.0252 469.241 446.191 ]ct
clp
/11 /Gradient get_res exec grestore
}if
np
485.003 430.595 mo
484.261 430.595 483.493 430.188 482.933 429.63 cv
486.663 429.63 li
486.601 429.712 486.534 429.797 486.463 429.883 cv
486.046 430.389 485.531 430.595 485.003 430.595 cv
482.092 427.908 mo
482.111 427.241 482.624 426.674 483.927 426.533 cv
483.927 426.533 484.089 426.522 484.344 426.522 cv
485.198 426.522 487.085 426.647 487.354 427.729 cv
482.092 427.908 li
level3{
gsave
clp
[73.0252 0 0 73.0252 469.241 446.191 ]ct
/12 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[73.0252 0 0 73.0252 469.241 446.191 ]ct
clp
/12 /Gradient get_res exec grestore
}if
np
495.523 423.407 mo
494.093 423.407 493.409 421.167 495.248 420.876 cv
495.248 420.876 499.233 420.876 496.697 422.93 cv
496.278 423.269 495.878 423.407 495.523 423.407 cv
level3{
gsave
clp
[73.0252 0 0 73.0252 469.241 446.191 ]ct
/12 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[73.0252 0 0 73.0252 469.241 446.191 ]ct
clp
/12 /Gradient get_res exec grestore
}if
np
478.898 422.901 mo
478.373 422.901 477.534 422.529 477.137 422.158 cv
476.74 421.786 476.784 421.415 478.025 421.415 cv
478.047 421.415 478.068 421.415 478.091 421.415 cv
478.091 421.415 478.202 421.382 478.358 421.382 cv
478.691 421.382 479.23 421.533 479.353 422.478 cv
479.392 422.782 479.195 422.901 478.898 422.901 cv
level3{
gsave
clp
[73.0252 0 0 73.0252 469.241 446.191 ]ct
/12 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[73.0252 0 0 73.0252 469.241 446.191 ]ct
clp
/12 /Gradient get_res exec grestore
}if
np
513.851 520.378 mo
513.336 520.378 512.512 520.12 512.122 519.862 cv
511.732 519.604 511.776 519.346 512.994 519.346 cv
513.015 519.346 513.037 519.346 513.059 519.346 cv
513.059 519.346 513.167 519.323 513.321 519.323 cv
513.648 519.323 514.177 519.428 514.297 520.084 cv
514.336 520.295 514.143 520.378 513.851 520.378 cv
level3{
gsave
clp
[73.0252 0 0 73.0252 469.241 446.191 ]ct
/12 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[73.0252 0 0 73.0252 469.241 446.191 ]ct
clp
/12 /Gradient get_res exec grestore
}if
np
533.42 474.109 mo
532.571 474.109 531.663 473.369 531.322 472.629 cv
530.981 471.889 531.208 471.148 532.628 471.148 cv
532.78 471.148 532.947 471.157 533.128 471.175 cv
533.128 471.175 533.138 471.175 533.156 471.175 cv
533.417 471.175 535.376 471.223 534.925 472.695 cv
534.607 473.729 534.029 474.109 533.42 474.109 cv
level3{
gsave
clp
[73.0252 0 0 73.0252 469.241 446.191 ]ct
/12 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[73.0252 0 0 73.0252 469.241 446.191 ]ct
clp
/12 /Gradient get_res exec grestore
}if
np
352.937 657.711 mo
351.616 656.752 350.757 655.195 350.757 653.438 cv
350.757 648.669 li
350.757 645.754 348.394 643.392 345.478 643.392 cv
320.242 643.392 li
320.242 502.881 li
320.242 502.881 li
320.242 498.62 322.888 494.977 326.626 493.504 cv
326.724 493.466 326.822 493.429 326.921 493.394 cv
328.95 492.667 330.34 490.798 330.363 488.643 cv
330.43 482.781 li
330.948 482.781 li
335.062 482.781 338.773 481.059 341.402 478.296 cv
434.307 478.296 li
434.606 595.145 li
434.281 595.206 433.947 595.238 433.604 595.238 cv
418.372 595.238 li
415.4 595.238 412.992 597.646 412.992 600.616 cv
412.992 622.98 li
412.992 625.95 410.585 628.359 407.613 628.359 cv
392.381 628.359 li
389.409 628.359 387.001 630.767 387.001 633.738 cv
387.001 643.392 li
383.946 643.392 li
383.943 643.392 li
381.028 643.392 378.666 645.754 378.666 648.669 cv
378.666 653.438 li
378.666 654.766 378.175 655.98 377.364 656.908 cv
352.937 657.711 li
434.284 469.322 mo
375.401 469.322 li
375.257 468.348 374.309 467.444 372.405 467.444 cv
372.405 467.444 366.494 467.444 367.863 469.322 cv
345.343 469.322 li
345.364 469.002 345.375 468.679 345.375 468.353 cv
345.375 457.628 li
434.254 457.628 li
434.284 469.322 li
383.222 459.981 mo
383.222 459.981 376.565 459.981 380.802 463.41 cv
381.502 463.977 382.171 464.207 382.763 464.207 cv
385.151 464.207 386.293 460.466 383.222 459.981 cv
434.231 448.655 mo
345.375 448.655 li
345.375 445.444 li
345.375 442.577 343.051 440.253 340.184 440.253 cv
308.04 440.253 li
305.173 440.253 302.848 442.577 302.848 445.444 cv
302.848 448.655 li
275.394 448.655 li
275.394 445.444 li
275.394 442.577 273.07 440.253 270.203 440.253 cv
270.105 440.253 li
270.105 395.835 li
270.105 383.535 li
270.105 362.568 li
270.105 360.833 li
270.105 296.825 li
270.105 295.79 269.884 294.806 269.487 293.918 cv
396.991 297.494 li
406.81 297.769 414.978 305.125 416.277 314.861 cv
416.588 317.188 417.306 319.442 418.396 321.521 cv
431.699 346.855 li
433.206 349.726 433.994 352.921 433.994 356.163 cv
434.031 370.64 li
433.605 370.483 433.089 370.365 432.473 370.298 cv
432.473 370.298 425.89 371.116 430.126 374.545 cv
430.88 375.156 431.674 375.406 432.419 375.406 cv
433.004 375.406 433.56 375.251 434.042 374.995 cv
434.178 427.987 li
270.105 427.987 li
270.105 436.962 li
434.201 436.962 li
434.231 448.655 li
294.977 406.753 mo
294.38 406.753 289.916 406.834 290.944 409.291 cv
291.668 411.019 292.987 411.655 294.375 411.655 cv
296.311 411.655 298.382 410.418 299.158 409.182 cv
299.935 407.945 299.418 406.709 296.181 406.709 cv
295.833 406.709 295.454 406.723 295.042 406.753 cv
295.042 406.753 295.019 406.753 294.977 406.753 cv
349.512 410.282 mo
349.583 410.285 349.656 410.287 349.728 410.287 cv
389.737 410.287 li
389.81 410.287 389.882 410.285 389.954 410.282 cv
392.18 410.169 393.952 408.327 393.952 406.073 cv
393.952 406.073 li
393.952 406.072 393.952 406.072 393.952 406.072 cv
393.952 361.134 li
393.952 361.134 li
393.952 361.003 393.951 360.873 393.949 360.743 cv
393.938 360.078 393.901 359.42 393.838 358.77 cv
393.817 358.554 393.793 358.339 393.767 358.125 cv
392.285 346.169 382.089 336.915 369.732 336.915 cv
356.487 336.915 345.726 347.547 345.517 360.743 cv
345.515 360.873 345.514 361.003 345.514 361.134 cv
345.514 406.073 li
345.514 408.327 347.285 410.169 349.512 410.282 cv
335.675 381.579 mo
335.119 381.579 334.22 381.832 334.015 383.409 cv
333.949 383.917 334.278 384.116 334.774 384.116 cv
335.651 384.116 337.052 383.495 337.716 382.875 cv
338.379 382.255 338.305 381.634 336.234 381.634 cv
336.198 381.634 336.161 381.635 336.123 381.635 cv
336.123 381.635 335.937 381.579 335.675 381.579 cv
424.296 359.092 mo
421.139 359.092 412.415 359.761 418.911 367.632 cv
419.972 368.917 421.281 369.442 422.623 369.442 cv
428.283 369.444 434.539 360.112 425.357 359.12 cv
425.357 359.12 424.944 359.092 424.296 359.092 cv
299.321 354.214 mo
298.726 354.214 294.258 354.342 295.287 358.202 cv
296.01 360.916 297.33 361.915 298.718 361.915 cv
300.654 361.915 302.724 359.973 303.501 358.03 cv
304.278 356.088 303.762 354.145 300.525 354.145 cv
300.177 354.145 299.798 354.168 299.386 354.215 cv
299.386 354.215 299.363 354.214 299.321 354.214 cv
394.915 319.141 mo
394.915 319.141 386.064 319.141 392.531 322.58 cv
393.621 323.16 394.567 323.394 395.349 323.395 cv
398.68 323.395 399.045 319.141 394.915 319.141 cv
405.732 311.677 mo
405.732 311.677 399.075 311.677 403.312 315.107 cv
404.012 315.673 404.68 315.903 405.272 315.903 cv
407.661 315.903 408.804 312.162 405.732 311.677 cv
339.073 299.871 mo
339.073 299.871 332.416 299.871 336.652 303.3 cv
337.352 303.867 338.021 304.097 338.614 304.097 cv
341.002 304.097 342.145 300.356 339.073 299.871 cv
469.328 296.756 mo
469.366 292.852 472.541 289.698 476.455 289.698 cv
262.978 289.698 li
263.537 289.698 264.08 289.763 264.6 289.884 cv
264.079 289.763 263.536 289.699 262.978 289.699 cv
262.816 289.699 li
261.041 289.699 259.418 289.05 258.17 287.976 cv
256.651 286.669 255.689 284.732 255.689 282.572 cv
255.689 280.385 256.675 278.429 258.225 277.121 cv
258.484 276.903 258.74 276.682 258.994 276.458 cv
261.866 273.93 264.422 271.077 266.774 268.046 cv
268.827 265.401 270.726 262.62 272.547 259.8 cv
272.547 259.8 li
272.958 259.162 273.365 258.523 273.77 257.883 cv
274.086 257.382 274.401 256.879 274.715 256.377 cv
292.416 228.01 li
313.533 194.17 li
313.534 194.169 li
324.803 176.109 li
324.803 176.109 li
364.89 111.87 li
366.006 110.081 367.867 109.186 369.729 109.186 cv
371.474 109.186 373.219 109.973 374.351 111.547 cv
373.225 109.981 371.493 109.208 369.757 109.208 cv
369.202 109.208 368.646 109.287 368.109 109.444 cv
368.113 109.444 368.147 109.439 368.209 109.439 cv
368.833 109.439 372.252 109.921 374.99 120.053 cv
377.617 129.771 398.255 237.071 403.656 265.22 cv
404.335 268.758 401.668 272.028 398.065 272.114 cv
316.289 274.068 li
469.486 274.068 li
473.594 274.068 477.633 275.121 481.217 277.129 cv
474.447 271.402 469.412 263.896 464.719 256.374 cv
374.568 111.871 li
374.568 111.871 li
374.568 111.871 li
464.719 256.374 li
469.412 263.896 474.447 271.402 481.217 277.129 cv
482.762 278.436 483.743 280.389 483.743 282.572 cv
483.743 286.507 480.553 289.699 476.617 289.699 cv
476.455 289.699 li
472.541 289.699 469.366 292.852 469.328 296.756 cv
362.877 122.765 mo
277.872 258.988 li
319.445 204.059 li
362.877 122.765 li
332.146 247.077 mo
332.146 247.077 325.489 247.077 329.726 250.506 cv
330.426 251.073 331.095 251.303 331.687 251.303 cv
334.075 251.303 335.218 247.562 332.146 247.077 cv
361.024 226.568 mo
358.95 226.568 353.214 227.008 357.483 232.18 cv
358.18 233.025 359.041 233.37 359.922 233.37 cv
363.641 233.371 367.753 227.239 361.72 226.587 cv
361.72 226.587 361.448 226.568 361.024 226.568 cv
372.523 162.3 mo
372.523 162.3 365.866 162.3 370.103 165.73 cv
370.803 166.296 371.472 166.526 372.064 166.526 cv
374.453 166.527 375.595 162.785 372.523 162.3 cv
level3{
gsave
clp
[3.01787e-14 492.856 -492.856 3.01787e-14 369.716 161.448 ]ct
/2 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[3.01787e-14 492.856 -492.856 3.01787e-14 369.716 161.448 ]ct
clp
/2 /Gradient get_res exec grestore
}if
np
434.201 436.962 mo
270.105 436.962 li
270.105 427.987 li
434.178 427.987 li
434.201 436.962 li
level3{
gsave
clp
[3.01787e-14 492.856 -492.856 3.01787e-14 369.716 161.448 ]ct
/3 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[3.01787e-14 492.856 -492.856 3.01787e-14 369.716 161.448 ]ct
clp
/3 /Gradient get_res exec grestore
}if
np
434.254 457.628 mo
345.375 457.628 li
345.375 448.655 li
434.231 448.655 li
434.254 457.628 li
297.658 455.326 mo
280.585 455.326 li
277.719 455.326 275.394 453.002 275.394 450.135 cv
275.394 448.655 li
302.848 448.655 li
302.848 450.135 li
302.848 453.002 300.524 455.326 297.658 455.326 cv
level3{
gsave
clp
[3.01787e-14 492.856 -492.856 3.01787e-14 369.716 161.448 ]ct
/3 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[3.01787e-14 492.856 -492.856 3.01787e-14 369.716 161.448 ]ct
clp
/3 /Gradient get_res exec grestore
}if
np
434.307 478.296 mo
341.402 478.296 li
343.656 475.927 345.113 472.792 345.343 469.322 cv
367.863 469.322 li
368.169 469.742 368.84 470.256 370.021 470.885 cv
371.111 471.464 372.056 471.699 372.838 471.699 cv
374.634 471.699 375.568 470.462 375.401 469.322 cv
434.284 469.322 li
434.307 478.296 li
level3{
gsave
clp
[3.01787e-14 492.856 -492.856 3.01787e-14 369.716 161.448 ]ct
/3 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[3.01787e-14 492.856 -492.856 3.01787e-14 369.716 161.448 ]ct
clp
/3 /Gradient get_res exec grestore
}if
np
389.954 410.282 mo
392.18 410.169 393.952 408.327 393.952 406.072 cv
393.952 406.073 li
393.952 408.327 392.18 410.169 389.954 410.282 cv
349.512 410.282 mo
347.285 410.169 345.514 408.327 345.514 406.073 cv
345.514 361.134 li
345.514 361.003 345.515 360.873 345.517 360.743 cv
345.515 360.873 345.514 361.003 345.514 361.134 cv
345.514 406.072 li
345.514 408.327 347.285 410.169 349.512 410.282 cv
386.031 407.867 mo
353.433 407.867 li
351.537 407.867 350 406.329 350 404.433 cv
350 367.818 li
350 356.92 358.834 348.085 369.732 348.085 cv
380.631 348.085 389.466 356.92 389.466 367.818 cv
389.466 404.433 li
389.466 406.329 387.929 407.867 386.031 407.867 cv
393.838 358.77 mo
393.817 358.554 393.793 358.339 393.767 358.125 cv
393.793 358.339 393.817 358.554 393.838 358.77 cv
level3{
gsave
clp
[4.2107e-15 -68.766 68.766 4.2107e-15 369.733 408.444 ]ct
/6 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[4.2107e-15 -68.766 68.766 4.2107e-15 369.733 408.444 ]ct
clp
/6 /Gradient get_res exec grestore
}if
np
393.949 360.743 mo
393.938 360.078 393.901 359.42 393.838 358.77 cv
393.901 359.42 393.938 360.078 393.949 360.743 cv
345.517 360.743 mo
345.726 347.547 356.487 336.915 369.732 336.915 cv
382.089 336.915 392.285 346.169 393.767 358.125 cv
392.285 346.169 382.089 336.915 369.733 336.915 cv
369.732 336.915 li
356.487 336.915 345.726 347.547 345.517 360.743 cv
level3{
gsave
clp
[3.01787e-14 492.856 -492.856 3.01787e-14 369.716 161.448 ]ct
/13 
<<
/ShadingType 2 
/ColorSpace /0 /CSA get_res
/Coords [0 0 1 0 ]
/Domain [0 1 ]
/Extend[ true true]
/Function
<<
/Domain[0 1 ] 
/FunctionType 3
/Functions [
<<
/Domain[0 1 ] 
/Range[0 1 0 1 0 1 ] 
/FunctionType 0
/Order 1 
/DataSource <~kbN7_UiP[pEp0<>kbN7_UiP[pEp0<>kbN7_UiP[pEp0<>kbN7_UiP[pEp0<>kbN7_UiP[pEp0<>kbN7_
UiP[pEp0<>kbN7_UiP[pEp0<>kbN7_UN,LmETj0;kbE.]UN,IlETa*:kG*%[UN,IlETa*:kFuqYU2]7g
E9<j4k+HYTTPrqbDrmX0je$GPSo*PZD<.7)j.1#HS87/RCZCjuigFN?QtYHFBAf(fi07g1P@WO4A)35U
~>
/BitsPerSample 8 
/Encode [0 63 ]
/Decode [0 1 0 1 0 1 ]
/Size [64 ]
>>
]
/Bounds []
/Encode [0 1 ]
>>
>>/Gradient add_res /13 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[3.01787e-14 492.856 -492.856 3.01787e-14 369.716 161.448 ]ct
clp
/13 {
/0 /CSA get_res setcolorspace
<<
/NumSamples 256 
/NumComp 3 
/Scaling[[.00392157 0 ][.00392157 0 ][.00392157 0 ]]
/Samples[
<~kND$kkND$kkND$kkND$kkND$kkND$kkND$kkND$kkND$kkND$kkND$kkND$kkND$kkND$kkND$kkND$k
kND$kkND$kkND$kkND$kkND$kkND$kkND$kkND$kkND$kkND$kkND$kkND$kkND$kkND$kkND$kkND$k
kND$kkND$kkND$jk2tggk2tggk2tggk2tggk2tggk2tggk2tggk2tgfjlPUcjlPUcjlPUcjlPUbjQ,C_
jQ,C_jQ,C_jQ,C_j5]1[j5]1[io8tWio8tWio8tWio8tWiSibSiSibSi8EPOhr!>Khr!>KhVR,Gh;-oC
~>
<~USFTZUSFTZUSFTZUSFTZUSFTZUSFTZUSFTZUSFTZUSFTZUSFTZUSFTZUSFTZUSFTZUSFTZUSFTZUSFTZ
USFTZUSFTZUSFTZUSFTZUSFTZUSFTZUSFTZUSFTZUSFTZUSFTZUSFTZUSFTZUSFTZUSFQXU8"BVU8"BV
U8"BVU8"BVU8"BVU8"BVU8"BVU8"BVU8"BVU8"BVU8"BUTqS0RTqS0QTV.sNTV.sMT:_aJT:_aJT:_aJ
T:_aJSt;OFSXl=BS=H+>S=H+>S=H+>S"#k8R@0J2R@0J2R$a8.Q^=&*QBmi&Q'ISuPEV2oP*1riOH>Qc
~>
<~EH,u<EH,u<EH,u<EH,u<EH,u<EH,u<EH,u<EH,u<EH,u<EH,u<EH,u<EH,u<EH,u<EH,u<EH,u<EH,u<
EH,u<EH,u<EH,u<EH,u<EH,u<EH,u<EH,u<EH,u<EH,u<EH,u<EH,u<EH,u<EH,u<EH,r:E,]c8E,]c8
E,]c8E,]c8E,]c8E,]c8E,]c8E,]c8E,]c8E,]c8E,]c7Df9Q4Df9Q4Df9Q3DJj?0DJj?0DJj?0DJj?/
D/F-,D/F-,Ci!p(Ci!p(Ci!p(CMR^$C2.KuC2.KuBk_9qBP;'mB4kjiAnGXeAS#FaA7T4]@q0"Y@U`eU
~>
]
>>
0 0 1 0 []true true []
/DeviceRGB
GenStrips
} /Gradient add_res /13 /Gradient get_res exec grestore
}if
np
389.737 410.287 mo
349.728 410.287 li
349.656 410.287 349.583 410.285 349.512 410.282 cv
347.285 410.169 345.514 408.327 345.514 406.072 cv
345.514 361.134 li
345.514 361.003 345.515 360.873 345.517 360.743 cv
345.726 347.547 356.487 336.915 369.732 336.915 cv
369.733 336.915 li
382.089 336.915 392.285 346.169 393.767 358.125 cv
393.793 358.339 393.817 358.554 393.838 358.77 cv
393.901 359.42 393.938 360.078 393.949 360.743 cv
393.951 360.873 393.952 361.003 393.952 361.134 cv
393.952 406.073 li
393.952 408.327 392.18 410.169 389.954 410.282 cv
389.882 410.285 389.81 410.287 389.737 410.287 cv
369.732 348.085 mo
358.834 348.085 350 356.92 350 367.818 cv
350 404.433 li
350 406.329 351.537 407.867 353.433 407.867 cv
386.031 407.867 li
387.929 407.867 389.466 406.329 389.466 404.433 cv
389.466 367.818 li
389.466 356.92 380.631 348.085 369.732 348.085 cv
level3{
gsave
clp
[4.2107e-15 -68.766 68.766 4.2107e-15 369.733 408.444 ]ct
/9 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[4.2107e-15 -68.766 68.766 4.2107e-15 369.733 408.444 ]ct
clp
/9 /Gradient get_res exec grestore
}if
np
469.328 495.873 mo
469.328 495.873 li
469.328 478.296 li
469.328 469.322 li
469.328 457.628 li
469.328 448.655 li
469.328 436.962 li
469.328 429.63 li
469.328 495.873 li
level3{
gsave
clp
[73.0252 0 0 73.0252 469.241 446.191 ]ct
/12 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[73.0252 0 0 73.0252 469.241 446.191 ]ct
clp
/12 /Gradient get_res exec grestore
}if
np
269.487 293.918 mo
269.473 293.918 li
268.573 291.913 266.782 290.395 264.6 289.884 cv
266.788 290.394 268.589 291.91 269.487 293.918 cv
level3{
gsave
clp
[5.33227e-15 -87.0827 87.0827 5.33227e-15 269.952 355.131 ]ct
/14 
<<
/ShadingType 2 
/ColorSpace /0 /CSA get_res
/Coords [0 0 1 0 ]
/Domain [0 1 ]
/Extend[ true true]
/Function
<<
/Domain[0 1 ] 
/FunctionType 3
/Functions [
<<
/Domain[0 1 ] 
/Range[0 1 0 1 0 1 ] 
/FunctionType 0
/Order 1 
/DataSource <~e9+F6F\C5,9@S)We9+F6F\C5,9@S)We9+F6F\C5,9@S)We9+F6F\C5,9@S)We9+F6F\C5,9@S)We9+F6
F\C5,9@S)We9+F6F\C5,9@S)We9+F6F\C5,9@S)We9+F6F\C5,9@S)We9+F6F\C5,9@S)We9+F6F\C5,
9@S)We9+F6F\C5,9@S)We9+F6F\C5,9@S)We9+F6F\C5,9@S)We9+F6F\C5,9@S)We9+F6F\C5,9@S)W
~>
/BitsPerSample 8 
/Encode [0 63 ]
/Decode [0 1 0 1 0 1 ]
/Size [64 ]
>>
<<
/Domain[0 1 ] 
/Range[0 1 0 1 0 1 ] 
/FunctionType 0
/Order 1 
/DataSource <~e9+F6F\C5,9@S)We9+F6F\C5,9@S&Vdr\73F@t#(9%.lSdrS.0F%Xl%9%%cPdW8"-F%Oc"8^VQLcuM\(
ECeDq8C)6GcYlA"Db&)j8'PpAc##qoCduTa7E]I8b%a>dC.-0Y6c`t/a(Rf[B0sUM6H*M%`+20P@mIq@
5f-qo_-oOC?p;>44hb5b]j3b5><KN$41\QU\QCl%=#dZi2mu^F[8Sui;DkaW26fq6YYI!X9erkF0s+&%
~>
/BitsPerSample 8 
/Encode [0 63 ]
/Decode [0 1 0 1 0 1 ]
/Size [64 ]
>>
<<
/Domain[0 1 ] 
/Range[0 1 0 1 0 1 ] 
/FunctionType 0
/Order 1 
/DataSource <~X\(:L8hdA>0Wdr$X\(:L8hdA>0Wdr$X\(:L8hdA>0Wdr$X\(:L8hdA>0Wdr$X\(:L8hdA>0Wdr$X\(:L
8hdA>0Wdr$X\(:L8hdA>0Wdr$X\(:L8hdA>0Wdr$X\(:L8hdA>0Wdr$X\(:L8hdA>0Wdr$X\(:L8hdA>
0Wdr$X\(:L8hdA>0Wdr$X\(:L8hdA>0Wdr$X\(:L8hdA>0Wdr$X\(:L8hdA>0Wdr$X\(:L8hdA>0Wdr$
~>
/BitsPerSample 8 
/Encode [0 63 ]
/Decode [0 1 0 1 0 1 ]
/Size [64 ]
>>
]
/Bounds [1.89999e-07 .998385 ]
/Encode [0 1 0 1 0 1 ]
>>
>>/Gradient add_res /14 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[5.33227e-15 -87.0827 87.0827 5.33227e-15 269.952 355.131 ]ct
clp
/14 {
/0 /CSA get_res setcolorspace
<<
/NumSamples 256 
/NumComp 3 
/Scaling[[.00392157 0 ][.00392157 0 ][.00392157 0 ]]
/Samples[
<~e'ldpe'ldpe'ldpe'ldpe'ldpe'ldpe'ldpe'ldpe'c[mdaHRldaHRldaHRldaHRlda?IidF$@hdF$@h
dF$@hdEp7ed*U.dd*U.dd*U+bcd0q`cd0n^cHa_\cHa_\cHa\Zc-=MXc-=JVbfn;Tbfn8RbKJ&Nb0%lL
b0%iJaiVWFaN2HDaN2EBa2c6?`l?$<`l?$;`Pog7`5KU3_o'C0_o'C/_SX1+_83t'^qdb#^V@Ot^:q=p
]tM+l]Y(nh]=Y\d]"5J`\[f8\\@B&Y\$riU[^NWQ[C*EM['[0GZEgdAZ*CR=Yct@9YHP.5Y-+q1Xf\_-
~>
<~FEDVHFEDVHFEDVHFEDVHFEDVHFEDVHFEDVHFE;MEF)uDDF)uDDF)uDDF)uDDF)l;AEcQ2@EcQ2@EcQ2@
EcQ2@EcQ2@EcQ/>EH,u<EH,u<EH,r:E,]c8E,]`6Df9N2DJj?0DJj<.D/F-,D/F**Ci!m&CMR^$CMR["
C2.HsBk_9qBk_9qBk_6oBP;'lB4kjhAnGXdAS#F`A7T4\@q0"X@U`eT@:<SP?smAM?smAL?XI/H?=$rD
?!U`@>[(E9>$>*4=]nm0=BJ[,='&I)<`W7%<E3%!<)cdp;GpCj;,L1f:f'q`:/4PZ9he>V9MA,R91qlL
~>
<~8kM]J8kM]J8kM]J8kM]J8kM]J8kM]J8kM]J8kM]J8kM]J8kDTG8P)KF8P)KF8P)KF8P)KF8P)KF8OuBC
84Z9B84Z9B84Z9B84Z6@7n6'>7n6'>7n6'>7n6'>7n6'>7n6$<7Rfj:7Rfj:7Rfg877BX677BU46psF2
6psC06UO4.6UO1,6:+"*6:+")5s[e&5s[e&5s[e%5X7S"5X7S!5<h@s5<h@r5!D.n4Ztqk4Ztqj4?P_f
4$,Mc4$,Mc4$,Mb3]];^3B9)Z3&ilW2`EZS2E!HO2E!HO2)R6K1c.$G1c.$G1G^gC1,:U?0ekC;0JG17
~>
]
>>
0 0 1 0 []true true []
/DeviceRGB
GenStrips
} /Gradient add_res /14 /Gradient get_res exec grestore
}if
np
373.388 658.714 mo
356.033 658.714 li
354.876 658.714 353.807 658.342 352.937 657.711 cv
377.364 656.908 li
376.397 658.015 374.974 658.714 373.388 658.714 cv
434.606 595.145 mo
434.307 478.296 li
469.328 478.296 li
469.328 495.873 li
469.328 528.994 li
469.328 529.061 li
466.86 529.46 464.975 531.601 464.975 534.182 cv
464.975 556.737 li
464.975 559.707 462.567 562.116 459.596 562.116 cv
444.363 562.116 li
441.392 562.116 438.983 564.525 438.983 567.495 cv
438.983 589.858 li
438.983 592.487 437.099 594.675 434.606 595.145 cv
469.328 469.322 mo
434.284 469.322 li
434.254 457.628 li
469.328 457.628 li
469.328 469.322 li
469.328 448.655 mo
434.231 448.655 li
434.201 436.962 li
469.328 436.962 li
469.328 448.655 li
469.328 427.987 mo
434.178 427.987 li
434.042 374.995 li
435.869 374.025 436.643 371.602 434.031 370.64 cv
433.994 356.163 li
433.994 352.921 433.206 349.726 431.699 346.855 cv
418.396 321.521 li
417.306 319.442 416.588 317.188 416.277 314.861 cv
414.978 305.125 406.81 297.769 396.991 297.494 cv
269.487 293.918 li
268.589 291.91 266.788 290.394 264.6 289.884 cv
264.08 289.763 263.537 289.698 262.978 289.698 cv
476.455 289.698 li
472.541 289.698 469.366 292.852 469.328 296.756 cv
469.328 296.779 469.328 296.802 469.328 296.825 cv
469.328 427.987 li
level3{
gsave
clp
[3.01787e-14 492.856 -492.856 3.01787e-14 369.716 161.448 ]ct
/3 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[3.01787e-14 492.856 -492.856 3.01787e-14 369.716 161.448 ]ct
clp
/3 /Gradient get_res exec grestore
}if
np
469.328 436.962 mo
434.201 436.962 li
434.178 427.987 li
469.328 427.987 li
469.328 436.962 li
level3{
gsave
clp
[3.01787e-14 492.856 -492.856 3.01787e-14 369.716 161.448 ]ct
/4 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[3.01787e-14 492.856 -492.856 3.01787e-14 369.716 161.448 ]ct
clp
/4 /Gradient get_res exec grestore
}if
np
469.328 457.628 mo
434.254 457.628 li
434.231 448.655 li
469.328 448.655 li
469.328 457.628 li
level3{
gsave
clp
[3.01787e-14 492.856 -492.856 3.01787e-14 369.716 161.448 ]ct
/4 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[3.01787e-14 492.856 -492.856 3.01787e-14 369.716 161.448 ]ct
clp
/4 /Gradient get_res exec grestore
}if
np
469.328 478.296 mo
434.307 478.296 li
434.284 469.322 li
469.328 469.322 li
469.328 478.296 li
447.364 471.699 mo
447.364 471.699 440.707 471.699 444.943 475.128 cv
445.644 475.695 446.313 475.925 446.905 475.925 cv
449.294 475.925 450.436 472.184 447.364 471.699 cv
level3{
gsave
clp
[3.01787e-14 492.856 -492.856 3.01787e-14 369.716 161.448 ]ct
/4 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[3.01787e-14 492.856 -492.856 3.01787e-14 369.716 161.448 ]ct
clp
/4 /Gradient get_res exec grestore
}if
np
374.568 111.871 mo
374.499 111.76 374.426 111.651 374.351 111.547 cv
374.426 111.651 374.499 111.759 374.568 111.871 cv
.980392 .901961 .862745 rgb
f
481.217 277.129 mo
477.633 275.121 473.594 274.068 469.486 274.068 cv
316.289 274.068 li
398.065 272.114 li
401.668 272.028 404.335 268.758 403.656 265.22 cv
398.255 237.071 377.617 129.771 374.99 120.053 cv
372.252 109.921 368.833 109.439 368.209 109.439 cv
368.147 109.439 368.113 109.444 368.109 109.444 cv
368.646 109.287 369.202 109.208 369.757 109.208 cv
371.493 109.208 373.225 109.981 374.351 111.547 cv
374.426 111.651 374.499 111.76 374.568 111.871 cv
374.568 111.871 li
464.719 256.374 li
469.412 263.896 474.447 271.402 481.217 277.129 cv
421.719 247.487 mo
421.124 247.487 416.658 247.614 417.686 251.475 cv
418.41 254.189 419.729 255.188 421.117 255.188 cv
423.053 255.188 425.124 253.245 425.901 251.303 cv
426.677 249.36 426.16 247.418 422.923 247.418 cv
422.576 247.418 422.197 247.44 421.784 247.488 cv
421.784 247.488 421.761 247.487 421.719 247.487 cv
level3{
gsave
clp
[3.01787e-14 492.856 -492.856 3.01787e-14 369.716 161.448 ]ct
/3 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[3.01787e-14 492.856 -492.856 3.01787e-14 369.716 161.448 ]ct
clp
/3 /Gradient get_res exec grestore
}if
np
277.872 258.988 mo
362.877 122.765 li
319.445 204.059 li
277.872 258.988 li
level3{
gsave
clp
[3.01787e-14 492.856 -492.856 3.01787e-14 369.716 161.448 ]ct
/3 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[3.01787e-14 492.856 -492.856 3.01787e-14 369.716 161.448 ]ct
clp
/3 /Gradient get_res exec grestore
}if
np
375.401 469.322 mo
367.863 469.322 li
366.494 467.444 372.405 467.444 372.405 467.444 cv
374.309 467.444 375.257 468.348 375.401 469.322 cv
level3{
gsave
clp
[3.01787e-14 492.856 -492.856 3.01787e-14 369.716 161.448 ]ct
/3 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[3.01787e-14 492.856 -492.856 3.01787e-14 369.716 161.448 ]ct
clp
/3 /Gradient get_res exec grestore
}if
np
372.838 471.699 mo
372.056 471.699 371.111 471.464 370.021 470.885 cv
368.84 470.256 368.169 469.742 367.863 469.322 cv
375.401 469.322 li
375.568 470.462 374.634 471.699 372.838 471.699 cv
level3{
gsave
clp
[3.01787e-14 492.856 -492.856 3.01787e-14 369.716 161.448 ]ct
/4 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[3.01787e-14 492.856 -492.856 3.01787e-14 369.716 161.448 ]ct
clp
/4 /Gradient get_res exec grestore
}if
np
422.623 369.442 mo
421.281 369.442 419.972 368.917 418.911 367.632 cv
412.415 359.761 421.139 359.092 424.296 359.092 cv
424.944 359.092 425.357 359.12 425.357 359.12 cv
434.539 360.112 428.283 369.444 422.623 369.442 cv
level3{
gsave
clp
[3.01787e-14 492.856 -492.856 3.01787e-14 369.716 161.448 ]ct
/3 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[3.01787e-14 492.856 -492.856 3.01787e-14 369.716 161.448 ]ct
clp
/3 /Gradient get_res exec grestore
}if
np
432.419 375.406 mo
431.674 375.406 430.88 375.156 430.126 374.545 cv
425.89 371.116 432.473 370.298 432.473 370.298 cv
433.089 370.365 433.605 370.483 434.031 370.64 cv
434.042 374.995 li
433.56 375.251 433.004 375.406 432.419 375.406 cv
level3{
gsave
clp
[3.01787e-14 492.856 -492.856 3.01787e-14 369.716 161.448 ]ct
/3 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[3.01787e-14 492.856 -492.856 3.01787e-14 369.716 161.448 ]ct
clp
/3 /Gradient get_res exec grestore
}if
np
434.042 374.995 mo
434.031 370.64 li
436.643 371.602 435.869 374.025 434.042 374.995 cv
level3{
gsave
clp
[3.01787e-14 492.856 -492.856 3.01787e-14 369.716 161.448 ]ct
/4 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[3.01787e-14 492.856 -492.856 3.01787e-14 369.716 161.448 ]ct
clp
/4 /Gradient get_res exec grestore
}if
np
382.763 464.207 mo
382.171 464.207 381.502 463.977 380.802 463.41 cv
376.565 459.981 383.222 459.981 383.222 459.981 cv
386.293 460.466 385.151 464.207 382.763 464.207 cv
level3{
gsave
clp
[3.01787e-14 492.856 -492.856 3.01787e-14 369.716 161.448 ]ct
/3 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[3.01787e-14 492.856 -492.856 3.01787e-14 369.716 161.448 ]ct
clp
/3 /Gradient get_res exec grestore
}if
np
446.905 475.925 mo
446.313 475.925 445.644 475.695 444.943 475.128 cv
440.707 471.699 447.364 471.699 447.364 471.699 cv
450.436 472.184 449.294 475.925 446.905 475.925 cv
level3{
gsave
clp
[3.01787e-14 492.856 -492.856 3.01787e-14 369.716 161.448 ]ct
/15 
<<
/ShadingType 2 
/ColorSpace /0 /CSA get_res
/Coords [0 0 1 0 ]
/Domain [0 1 ]
/Extend[ true true]
/Function
<<
/Domain[0 1 ] 
/FunctionType 3
/Functions [
<<
/Domain[0 1 ] 
/Range[0 1 0 1 0 1 ] 
/FunctionType 0
/Order 1 
/DataSource <~n=XUeTPX+jD"+*6n=XUeTPX+jD"+*6n=XUeTPX+jD"+*6n=XUeTPX+jD"+*6n=XUeTPX+jD"+*6n=XUe
TPX+jD"+*6n=XUeTPX+jD"+*6n=XUeT53qgC[ds3n=OLcT53nfC[[m2n"+=`Snd_cC@@a/n""4^SSIS_
C@7U+m[IqYRq_8YC$h@&m?qYTR:trTBC)%!l^2;MQt>QKAEoFjl',`CP@Ea<@HWb]kE'*6O'h".?K@#L
~>
/BitsPerSample 8 
/Encode [0 63 ]
/Decode [0 1 0 1 0 1 ]
/Size [64 ]
>>
]
/Bounds []
/Encode [0 1 ]
>>
>>/Gradient add_res /15 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[3.01787e-14 492.856 -492.856 3.01787e-14 369.716 161.448 ]ct
clp
/15 {
/0 /CSA get_res setcolorspace
<<
/NumSamples 256 
/NumComp 3 
/Scaling[[.00392157 0 ][.00392157 0 ][.00392157 0 ]]
/Samples[
<~n*f`6n*f`6n*f`6n*f`6n*f`6n*f`6n*f`6n*f`6n*f`6n*f`6n*f`6n*f`6n*f`6n*f`6n*f`6n*f`6
n*f`6n*f`6n*f`6n*f`6n*f`6n*f`6n*f`6n*f`6n*f`6n*f`6n*f`6n*f`6n*f`6n*f`6n*f`6n*f`6
n*f`6n*f`6n*f`5mdBN2mdBN2mdBN2mdBN2mdBN2mdBN2mdBN2mdBN1mHs<.mHs<.mHs<.mHs<-m-O**
m-O**m-O**m-O**lg*m&lg*m&lK[["lK[["l07Hsl07Hskih6okih6okND$kk2tggk2tggjlPUcjQ,C_
~>
<~T:_aJT:_aJT:_aJT:_aJT:_aJT:_aJT:_aJT:_aJT:_aJT:_aJT:_aJT:_aJT:_aJT:_aJT:_aJT:_aJ
T:_aJT:_aJT:_aJT:_aJT:_aJT:_aJT:_aJT:_aJT:_aJT:_aJT:_aJT:_aJT:_aJT:_^HSt;OFSt;OF
St;OFSt;OFSt;OFSt;OFSt;OESXl=BSXl=BSXl=BSXl=AS=H+>S=H+=S"#n:S"#n9R[T\6R[T\5R@0J2
R@0J2R$a8.R$a8.R$a8.R$a8.Q^=&*Q^=#(Q'IW"Pa%DsPEV2oP*1riOH>QcOH>QcO,o?_NfK*YN/W[Q
~>
<~CMR^$CMR^$CMR^$CMR^$CMR^$CMR^$CMR^$CMR^$CMR^$CMR^$CMR^$CMR^$CMR^$CMR^$CMR^$CMR^$
CMR^$CMR^$CMR^$CMR^$CMR^$CMR^$CMR^$CMR^$CMR^$CMR^$CMR^$CMR^$CMR^$CMR["C2.KuC2.Ku
C2.KuC2.KuC2.KuC2.KuC2.KuC2.KtBk_9qBk_9qBk_9qBk_9qBk_9qBk_9pBP;'mBP;'mBP;'mBP;'l
B4kjiB4kjiB4kjiAnGXeAnGXeAS#FaA7T4]@q0"Y@q0"Y@q/tW@:<SQ?smAM?smAM?XI/I?=$rE?!U]?
~>
]
>>
0 0 1 0 []true true []
/DeviceRGB
GenStrips
} /Gradient add_res /15 /Gradient get_res exec grestore
}if
np
338.614 304.097 mo
338.021 304.097 337.352 303.867 336.652 303.3 cv
332.416 299.871 339.073 299.871 339.073 299.871 cv
342.145 300.356 341.002 304.097 338.614 304.097 cv
level3{
gsave
clp
[3.01787e-14 492.856 -492.856 3.01787e-14 369.716 161.448 ]ct
/3 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[3.01787e-14 492.856 -492.856 3.01787e-14 369.716 161.448 ]ct
clp
/3 /Gradient get_res exec grestore
}if
np
372.064 166.526 mo
371.472 166.526 370.803 166.296 370.103 165.73 cv
365.866 162.3 372.523 162.3 372.523 162.3 cv
375.595 162.785 374.453 166.527 372.064 166.526 cv
level3{
gsave
clp
[3.01787e-14 492.856 -492.856 3.01787e-14 369.716 161.448 ]ct
/3 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[3.01787e-14 492.856 -492.856 3.01787e-14 369.716 161.448 ]ct
clp
/3 /Gradient get_res exec grestore
}if
np
334.774 384.116 mo
334.278 384.116 333.949 383.917 334.015 383.409 cv
334.22 381.832 335.119 381.579 335.675 381.579 cv
335.937 381.579 336.123 381.635 336.123 381.635 cv
336.161 381.635 336.198 381.634 336.234 381.634 cv
338.305 381.634 338.379 382.255 337.716 382.875 cv
337.052 383.495 335.651 384.116 334.774 384.116 cv
level3{
gsave
clp
[3.01787e-14 492.856 -492.856 3.01787e-14 369.716 161.448 ]ct
/3 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[3.01787e-14 492.856 -492.856 3.01787e-14 369.716 161.448 ]ct
clp
/3 /Gradient get_res exec grestore
}if
np
294.375 411.655 mo
292.987 411.655 291.668 411.019 290.944 409.291 cv
289.916 406.834 294.38 406.753 294.977 406.753 cv
295.019 406.753 295.042 406.753 295.042 406.753 cv
295.454 406.723 295.833 406.709 296.181 406.709 cv
299.418 406.709 299.935 407.945 299.158 409.182 cv
298.382 410.418 296.311 411.655 294.375 411.655 cv
level3{
gsave
clp
[3.01787e-14 492.856 -492.856 3.01787e-14 369.716 161.448 ]ct
/3 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[3.01787e-14 492.856 -492.856 3.01787e-14 369.716 161.448 ]ct
clp
/3 /Gradient get_res exec grestore
}if
np
298.718 361.915 mo
297.33 361.915 296.01 360.916 295.287 358.202 cv
294.258 354.342 298.726 354.214 299.321 354.214 cv
299.363 354.214 299.386 354.215 299.386 354.215 cv
299.798 354.168 300.177 354.145 300.525 354.145 cv
303.762 354.145 304.278 356.088 303.501 358.03 cv
302.724 359.973 300.654 361.915 298.718 361.915 cv
level3{
gsave
clp
[3.01787e-14 492.856 -492.856 3.01787e-14 369.716 161.448 ]ct
/3 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[3.01787e-14 492.856 -492.856 3.01787e-14 369.716 161.448 ]ct
clp
/3 /Gradient get_res exec grestore
}if
np
421.117 255.188 mo
419.729 255.188 418.41 254.189 417.686 251.475 cv
416.658 247.614 421.124 247.487 421.719 247.487 cv
421.761 247.487 421.784 247.488 421.784 247.488 cv
422.197 247.44 422.576 247.418 422.923 247.418 cv
426.16 247.418 426.677 249.36 425.901 251.303 cv
425.124 253.245 423.053 255.188 421.117 255.188 cv
level3{
gsave
clp
[3.01787e-14 492.856 -492.856 3.01787e-14 369.716 161.448 ]ct
/4 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[3.01787e-14 492.856 -492.856 3.01787e-14 369.716 161.448 ]ct
clp
/4 /Gradient get_res exec grestore
}if
np
395.349 323.395 mo
394.567 323.394 393.621 323.16 392.531 322.58 cv
386.064 319.141 394.915 319.141 394.915 319.141 cv
399.045 319.141 398.68 323.395 395.349 323.395 cv
level3{
gsave
clp
[3.01787e-14 492.856 -492.856 3.01787e-14 369.716 161.448 ]ct
/3 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[3.01787e-14 492.856 -492.856 3.01787e-14 369.716 161.448 ]ct
clp
/3 /Gradient get_res exec grestore
}if
np
359.922 233.37 mo
359.041 233.37 358.18 233.025 357.483 232.18 cv
353.214 227.008 358.95 226.568 361.024 226.568 cv
361.448 226.568 361.72 226.587 361.72 226.587 cv
367.753 227.239 363.641 233.371 359.922 233.37 cv
level3{
gsave
clp
[3.01787e-14 492.856 -492.856 3.01787e-14 369.716 161.448 ]ct
/3 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[3.01787e-14 492.856 -492.856 3.01787e-14 369.716 161.448 ]ct
clp
/3 /Gradient get_res exec grestore
}if
np
405.272 315.903 mo
404.68 315.903 404.012 315.673 403.312 315.107 cv
399.075 311.677 405.732 311.677 405.732 311.677 cv
408.804 312.162 407.661 315.903 405.272 315.903 cv
level3{
gsave
clp
[3.01787e-14 492.856 -492.856 3.01787e-14 369.716 161.448 ]ct
/3 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[3.01787e-14 492.856 -492.856 3.01787e-14 369.716 161.448 ]ct
clp
/3 /Gradient get_res exec grestore
}if
np
331.687 251.303 mo
331.095 251.303 330.426 251.073 329.726 250.506 cv
325.489 247.077 332.146 247.077 332.146 247.077 cv
335.218 247.562 334.075 251.303 331.687 251.303 cv
level3{
gsave
clp
[3.01787e-14 492.856 -492.856 3.01787e-14 369.716 161.448 ]ct
/3 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[3.01787e-14 492.856 -492.856 3.01787e-14 369.716 161.448 ]ct
clp
/3 /Gradient get_res exec grestore
}if
np
444.534 658.714 mo
427.179 658.714 li
424.264 658.714 421.901 656.352 421.901 653.438 cv
421.901 648.669 li
421.901 645.754 419.538 643.392 416.624 643.392 cv
416.621 643.392 li
387.001 643.392 li
387.001 633.738 li
387.001 630.767 389.409 628.359 392.381 628.359 cv
407.613 628.359 li
410.585 628.359 412.992 625.95 412.992 622.98 cv
412.992 600.616 li
412.992 597.646 415.4 595.238 418.372 595.238 cv
433.604 595.238 li
433.947 595.238 434.281 595.206 434.606 595.145 cv
437.099 594.675 438.983 592.487 438.983 589.858 cv
438.983 567.495 li
438.983 564.525 441.392 562.116 444.363 562.116 cv
459.596 562.116 li
462.567 562.116 464.975 559.707 464.975 556.737 cv
464.975 534.182 li
464.975 531.601 466.86 529.46 469.328 529.061 cv
469.6 529.017 469.879 528.994 470.163 528.994 cv
598.934 528.994 li
601.905 528.994 604.314 531.403 604.314 534.374 cv
604.314 534.374 li
604.314 531.403 601.905 528.994 598.934 528.994 cv
569.861 528.994 li
566.89 528.994 564.482 531.403 564.482 534.374 cv
564.482 554.81 li
559.421 559.871 li
472.007 561.979 li
533.24 562.096 li
536.155 562.101 538.518 564.49 538.491 567.405 cv
538.49 567.495 li
538.49 584.987 li
538.49 587.212 537.606 589.347 536.033 590.92 cv
534.535 592.417 532.526 593.293 530.409 593.372 cv
479.973 595.238 li
507.668 595.238 li
510.354 595.238 512.525 597.427 512.503 600.112 cv
512.499 600.616 li
512.499 622.98 li
512.499 625.95 510.091 628.359 507.12 628.359 cv
491.887 628.359 li
488.916 628.359 486.508 630.767 486.508 633.738 cv
486.508 640.011 li
485.559 640.458 485.763 641.658 486.508 642.167 cv
486.508 643.392 li
455.088 643.392 li
452.173 643.392 449.81 645.754 449.81 648.669 cv
449.81 653.438 li
449.81 656.352 447.448 658.714 444.534 658.714 cv
421.569 638.983 mo
419.097 638.983 419.316 641.529 421.31 641.529 cv
421.779 641.529 422.345 641.389 422.997 641.042 cv
426.869 638.983 421.569 638.983 421.569 638.983 cv
415.093 634.514 mo
413.254 634.803 413.938 637.044 415.368 637.044 cv
415.722 637.044 416.123 636.906 416.542 636.567 cv
419.079 634.514 415.093 634.514 415.093 634.514 cv
467.209 602.616 mo
465.27 602.616 464.961 603.357 465.426 604.097 cv
465.891 604.838 467.13 605.578 468.29 605.578 cv
469.121 605.578 469.911 605.197 470.344 604.163 cv
470.96 602.691 468.285 602.643 467.929 602.643 cv
467.904 602.643 467.89 602.643 467.89 602.643 cv
467.644 602.625 467.417 602.616 467.209 602.616 cv
443.226 587.603 mo
441.987 587.603 441.942 587.975 442.339 588.346 cv
442.737 588.718 443.575 589.089 444.101 589.089 cv
444.397 589.089 444.594 588.97 444.555 588.666 cv
444.433 587.721 443.895 587.57 443.562 587.57 cv
443.405 587.57 443.294 587.604 443.294 587.604 cv
443.271 587.603 443.248 587.603 443.226 587.603 cv
525.202 582.345 mo
524.947 582.345 524.784 582.356 524.784 582.356 cv
521.172 582.746 523.633 586.417 525.86 586.417 cv
526.388 586.417 526.904 586.211 527.321 585.705 cv
529.876 582.608 526.444 582.345 525.202 582.345 cv
536.106 576.698 mo
534.267 576.989 534.951 579.229 536.381 579.229 cv
536.736 579.229 537.136 579.092 537.556 578.752 cv
540.092 576.698 536.106 576.698 536.106 576.698 cv
518.88 577.238 mo
517.641 577.238 517.598 577.61 517.995 577.981 cv
518.393 578.352 519.232 578.724 519.757 578.724 cv
520.054 578.724 520.25 578.605 520.211 578.301 cv
520.088 577.356 519.55 577.205 519.217 577.205 cv
519.06 577.205 518.948 577.238 518.948 577.238 cv
518.925 577.238 518.903 577.238 518.88 577.238 cv
464.608 571.144 mo
462.67 571.144 462.36 572.307 462.826 573.47 cv
463.291 574.633 464.531 575.796 465.69 575.796 cv
466.521 575.796 467.311 575.198 467.744 573.573 cv
468.36 571.262 465.686 571.185 465.329 571.185 cv
465.304 571.185 465.29 571.186 465.29 571.186 cv
465.043 571.157 464.816 571.144 464.608 571.144 cv
510.938 549.236 mo
507.197 549.236 508.493 553.918 511.146 553.918 cv
511.918 553.918 512.805 553.521 513.717 552.496 cv
516.615 549.236 510.938 549.236 510.938 549.236 cv
483.642 541.867 mo
481.802 542.158 482.487 544.398 483.917 544.398 cv
484.272 544.398 484.672 544.26 485.091 543.921 cv
487.628 541.867 483.642 541.867 483.642 541.867 cv
level3{
gsave
clp
[9.91981e-15 -162.003 162.003 9.91981e-15 482.662 689.626 ]ct
/10 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[9.91981e-15 -162.003 162.003 9.91981e-15 482.662 689.626 ]ct
clp
/10 /Gradient get_res exec grestore
}if
np
515.675 658.714 mo
506.997 658.714 li
498.32 658.714 li
495.405 658.714 493.043 656.352 493.043 653.437 cv
493.043 648.669 li
493.043 645.754 490.68 643.392 487.766 643.392 cv
486.508 643.392 li
486.508 642.167 li
486.719 642.312 486.975 642.401 487.26 642.401 cv
487.614 642.401 488.015 642.263 488.434 641.924 cv
490.97 639.87 486.984 639.87 486.984 639.87 cv
486.801 639.899 486.643 639.948 486.508 640.011 cv
486.508 633.738 li
486.508 630.767 488.916 628.359 491.887 628.359 cv
507.12 628.359 li
510.091 628.359 512.499 625.95 512.499 622.98 cv
512.499 600.616 li
512.503 600.112 li
512.525 597.427 510.354 595.238 507.668 595.238 cv
479.973 595.238 li
530.409 593.372 li
532.526 593.293 534.535 592.417 536.033 590.92 cv
537.606 589.347 538.49 587.212 538.49 584.987 cv
538.49 567.495 li
538.491 567.405 li
538.518 564.49 536.155 562.101 533.24 562.096 cv
472.007 561.979 li
559.421 559.871 li
564.482 554.81 li
564.482 534.374 li
564.482 531.403 566.89 528.994 569.861 528.994 cv
598.934 528.994 li
601.905 528.994 604.314 531.403 604.314 534.374 cv
604.314 556.737 li
604.314 559.707 601.905 562.116 598.934 562.116 cv
583.702 562.116 li
580.73 562.116 578.323 564.525 578.323 567.495 cv
578.323 589.858 li
578.323 592.829 575.914 595.238 572.943 595.238 cv
557.711 595.238 li
554.739 595.238 552.331 597.646 552.331 600.616 cv
552.331 622.98 li
552.331 625.95 549.923 628.359 546.952 628.359 cv
531.719 628.359 li
528.748 628.359 526.34 630.767 526.34 633.738 cv
526.34 643.392 li
526.229 643.392 li
523.314 643.392 520.952 645.754 520.952 648.668 cv
520.952 653.437 li
520.952 656.352 518.59 658.714 515.675 658.714 cv
514.281 647.238 mo
510.539 647.238 511.835 651.921 514.488 651.921 cv
515.26 651.921 516.147 651.524 517.058 650.499 cv
519.957 647.238 514.281 647.238 514.281 647.238 cv
502.113 631.16 mo
500.452 631.16 500.393 631.418 500.925 631.677 cv
501.457 631.935 502.58 632.193 503.284 632.193 cv
503.682 632.193 503.946 632.11 503.894 631.899 cv
503.73 631.242 503.008 631.137 502.562 631.137 cv
502.352 631.137 502.203 631.16 502.203 631.16 cv
502.172 631.16 502.142 631.16 502.113 631.16 cv
536.563 615.396 mo
536.436 615.396 536.354 615.402 536.354 615.402 cv
534.548 615.597 535.779 617.432 536.892 617.432 cv
537.156 617.432 537.414 617.329 537.623 617.075 cv
538.901 615.528 537.185 615.396 536.563 615.396 cv
527.705 606.163 mo
527.319 606.163 527.072 606.18 527.072 606.18 cv
521.575 606.774 525.321 612.361 528.709 612.361 cv
529.513 612.361 530.296 612.047 530.931 611.277 cv
534.823 606.563 529.594 606.163 527.705 606.163 cv
583.101 543.069 mo
582.713 543.069 582.466 543.086 582.466 543.086 cv
576.969 543.681 580.715 549.267 584.103 549.267 cv
584.906 549.267 585.69 548.952 586.325 548.183 cv
590.215 543.47 584.991 543.069 583.101 543.069 cv
level3{
gsave
clp
[9.91981e-15 -162.003 162.003 9.91981e-15 482.662 689.626 ]ct
/11 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[9.91981e-15 -162.003 162.003 9.91981e-15 482.662 689.626 ]ct
clp
/11 /Gradient get_res exec grestore
}if
np
514.488 651.921 mo
511.835 651.921 510.539 647.238 514.281 647.238 cv
514.281 647.238 519.957 647.238 517.058 650.499 cv
516.147 651.524 515.26 651.921 514.488 651.921 cv
level3{
gsave
clp
[9.91981e-15 -162.003 162.003 9.91981e-15 482.662 689.626 ]ct
/12 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[9.91981e-15 -162.003 162.003 9.91981e-15 482.662 689.626 ]ct
clp
/12 /Gradient get_res exec grestore
}if
np
421.31 641.529 mo
419.316 641.529 419.097 638.983 421.569 638.983 cv
421.569 638.983 426.869 638.983 422.997 641.042 cv
422.345 641.389 421.779 641.529 421.31 641.529 cv
level3{
gsave
clp
[9.91981e-15 -162.003 162.003 9.91981e-15 482.662 689.626 ]ct
/11 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[9.91981e-15 -162.003 162.003 9.91981e-15 482.662 689.626 ]ct
clp
/11 /Gradient get_res exec grestore
}if
np
525.86 586.417 mo
523.633 586.417 521.172 582.746 524.784 582.356 cv
524.784 582.356 524.947 582.345 525.202 582.345 cv
526.444 582.345 529.876 582.608 527.321 585.705 cv
526.904 586.211 526.388 586.417 525.86 586.417 cv
level3{
gsave
clp
[9.91981e-15 -162.003 162.003 9.91981e-15 482.662 689.626 ]ct
/11 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[9.91981e-15 -162.003 162.003 9.91981e-15 482.662 689.626 ]ct
clp
/11 /Gradient get_res exec grestore
}if
np
536.892 617.432 mo
535.779 617.432 534.548 615.597 536.354 615.402 cv
536.354 615.402 536.436 615.396 536.563 615.396 cv
537.185 615.396 538.901 615.528 537.623 617.075 cv
537.414 617.329 537.156 617.432 536.892 617.432 cv
level3{
gsave
clp
[9.91981e-15 -162.003 162.003 9.91981e-15 482.662 689.626 ]ct
/12 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[9.91981e-15 -162.003 162.003 9.91981e-15 482.662 689.626 ]ct
clp
/12 /Gradient get_res exec grestore
}if
np
584.103 549.267 mo
580.715 549.267 576.969 543.681 582.466 543.086 cv
582.466 543.086 582.713 543.069 583.101 543.069 cv
584.991 543.069 590.215 543.47 586.325 548.183 cv
585.69 548.952 584.906 549.267 584.103 549.267 cv
level3{
gsave
clp
[9.91981e-15 -162.003 162.003 9.91981e-15 482.662 689.626 ]ct
/12 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[9.91981e-15 -162.003 162.003 9.91981e-15 482.662 689.626 ]ct
clp
/12 /Gradient get_res exec grestore
}if
np
528.709 612.361 mo
525.321 612.361 521.575 606.774 527.072 606.18 cv
527.072 606.18 527.319 606.163 527.705 606.163 cv
529.594 606.163 534.823 606.563 530.931 611.277 cv
530.296 612.047 529.513 612.361 528.709 612.361 cv
level3{
gsave
clp
[9.91981e-15 -162.003 162.003 9.91981e-15 482.662 689.626 ]ct
/12 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[9.91981e-15 -162.003 162.003 9.91981e-15 482.662 689.626 ]ct
clp
/12 /Gradient get_res exec grestore
}if
np
486.508 642.167 mo
485.763 641.658 485.559 640.458 486.508 640.011 cv
486.508 642.167 li
level3{
gsave
clp
[9.91981e-15 -162.003 162.003 9.91981e-15 482.662 689.626 ]ct
/11 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[9.91981e-15 -162.003 162.003 9.91981e-15 482.662 689.626 ]ct
clp
/11 /Gradient get_res exec grestore
}if
np
487.26 642.401 mo
486.975 642.401 486.719 642.312 486.508 642.167 cv
486.508 640.011 li
486.643 639.948 486.801 639.899 486.984 639.87 cv
486.984 639.87 490.97 639.87 488.434 641.924 cv
488.015 642.263 487.614 642.401 487.26 642.401 cv
level3{
gsave
clp
[9.91981e-15 -162.003 162.003 9.91981e-15 482.662 689.626 ]ct
/12 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[9.91981e-15 -162.003 162.003 9.91981e-15 482.662 689.626 ]ct
clp
/12 /Gradient get_res exec grestore
}if
np
536.381 579.229 mo
534.951 579.229 534.267 576.989 536.106 576.698 cv
536.106 576.698 540.092 576.698 537.556 578.752 cv
537.136 579.092 536.736 579.229 536.381 579.229 cv
level3{
gsave
clp
[9.91981e-15 -162.003 162.003 9.91981e-15 482.662 689.626 ]ct
/11 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[9.91981e-15 -162.003 162.003 9.91981e-15 482.662 689.626 ]ct
clp
/11 /Gradient get_res exec grestore
}if
np
415.368 637.044 mo
413.938 637.044 413.254 634.803 415.093 634.514 cv
415.093 634.514 419.079 634.514 416.542 636.567 cv
416.123 636.906 415.722 637.044 415.368 637.044 cv
level3{
gsave
clp
[9.91981e-15 -162.003 162.003 9.91981e-15 482.662 689.626 ]ct
/11 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[9.91981e-15 -162.003 162.003 9.91981e-15 482.662 689.626 ]ct
clp
/11 /Gradient get_res exec grestore
}if
np
503.284 632.193 mo
502.58 632.193 501.457 631.935 500.925 631.677 cv
500.393 631.418 500.452 631.16 502.113 631.16 cv
502.142 631.16 502.172 631.16 502.203 631.16 cv
502.203 631.16 502.352 631.137 502.562 631.137 cv
503.008 631.137 503.73 631.242 503.894 631.899 cv
503.946 632.11 503.682 632.193 503.284 632.193 cv
level3{
gsave
clp
[9.91981e-15 -162.003 162.003 9.91981e-15 482.662 689.626 ]ct
/12 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[9.91981e-15 -162.003 162.003 9.91981e-15 482.662 689.626 ]ct
clp
/12 /Gradient get_res exec grestore
}if
np
444.101 589.089 mo
443.575 589.089 442.737 588.718 442.339 588.346 cv
441.942 587.975 441.987 587.603 443.226 587.603 cv
443.248 587.603 443.271 587.603 443.294 587.604 cv
443.294 587.604 443.405 587.57 443.562 587.57 cv
443.895 587.57 444.433 587.721 444.555 588.666 cv
444.594 588.97 444.397 589.089 444.101 589.089 cv
level3{
gsave
clp
[9.91981e-15 -162.003 162.003 9.91981e-15 482.662 689.626 ]ct
/11 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[9.91981e-15 -162.003 162.003 9.91981e-15 482.662 689.626 ]ct
clp
/11 /Gradient get_res exec grestore
}if
np
519.757 578.724 mo
519.232 578.724 518.393 578.352 517.995 577.981 cv
517.598 577.61 517.641 577.238 518.88 577.238 cv
518.903 577.238 518.925 577.238 518.948 577.238 cv
518.948 577.238 519.06 577.205 519.217 577.205 cv
519.55 577.205 520.088 577.356 520.211 578.301 cv
520.25 578.605 520.054 578.724 519.757 578.724 cv
level3{
gsave
clp
[9.91981e-15 -162.003 162.003 9.91981e-15 482.662 689.626 ]ct
/11 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[9.91981e-15 -162.003 162.003 9.91981e-15 482.662 689.626 ]ct
clp
/11 /Gradient get_res exec grestore
}if
np
468.29 605.578 mo
467.13 605.578 465.891 604.838 465.426 604.097 cv
464.961 603.357 465.27 602.616 467.209 602.616 cv
467.417 602.616 467.644 602.625 467.89 602.643 cv
467.89 602.643 467.904 602.643 467.929 602.643 cv
468.285 602.643 470.96 602.691 470.344 604.163 cv
469.911 605.197 469.121 605.578 468.29 605.578 cv
level3{
gsave
clp
[9.91981e-15 -162.003 162.003 9.91981e-15 482.662 689.626 ]ct
/11 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[9.91981e-15 -162.003 162.003 9.91981e-15 482.662 689.626 ]ct
clp
/11 /Gradient get_res exec grestore
}if
np
465.69 575.796 mo
464.531 575.796 463.291 574.633 462.826 573.47 cv
462.36 572.307 462.67 571.144 464.608 571.144 cv
464.816 571.144 465.043 571.157 465.29 571.186 cv
465.29 571.186 465.304 571.185 465.329 571.185 cv
465.686 571.185 468.36 571.262 467.744 573.573 cv
467.311 575.198 466.521 575.796 465.69 575.796 cv
level3{
gsave
clp
[9.91981e-15 -162.003 162.003 9.91981e-15 482.662 689.626 ]ct
/11 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[9.91981e-15 -162.003 162.003 9.91981e-15 482.662 689.626 ]ct
clp
/11 /Gradient get_res exec grestore
}if
np
511.146 553.918 mo
508.493 553.918 507.197 549.236 510.938 549.236 cv
510.938 549.236 516.615 549.236 513.717 552.496 cv
512.805 553.521 511.918 553.918 511.146 553.918 cv
level3{
gsave
clp
[9.91981e-15 -162.003 162.003 9.91981e-15 482.662 689.626 ]ct
/11 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[9.91981e-15 -162.003 162.003 9.91981e-15 482.662 689.626 ]ct
clp
/11 /Gradient get_res exec grestore
}if
np
483.917 544.398 mo
482.487 544.398 481.802 542.158 483.642 541.867 cv
483.642 541.867 487.628 541.867 485.091 543.921 cv
484.672 544.26 484.272 544.398 483.917 544.398 cv
level3{
gsave
clp
[9.91981e-15 -162.003 162.003 9.91981e-15 482.662 689.626 ]ct
/11 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[9.91981e-15 -162.003 162.003 9.91981e-15 482.662 689.626 ]ct
clp
/11 /Gradient get_res exec grestore
}if
np
190.792 769.841 mo
190.792 762.32 li
188.648 762.321 186.803 761.043 185.977 759.207 cv
186.183 759.25 186.388 759.27 186.589 759.27 cv
189.452 759.27 191.513 755.178 186.637 754.652 cv
186.637 754.652 186.134 754.714 185.515 754.879 cv
185.515 752.276 li
185.515 749.362 183.151 746.998 180.237 746.998 cv
147.56 746.998 li
144.645 746.998 142.283 749.362 142.283 752.276 cv
142.283 757.044 li
142.283 759.958 139.92 762.321 137.006 762.321 cv
119.65 762.321 li
116.736 762.321 114.373 759.958 114.373 757.044 cv
114.373 752.276 li
114.373 749.362 112.011 746.998 109.096 746.998 cv
92.9062 746.998 li
92.9062 742.055 li
92.9062 737.377 96.6982 733.587 101.374 733.587 cv
107.966 733.587 li
113.529 733.587 118.04 729.076 118.04 723.512 cv
118.04 502.881 li
118.04 498.509 115.254 494.787 111.36 493.394 cv
109.332 492.667 107.943 490.798 107.918 488.643 cv
107.928 489.439 108.174 490.168 108.519 490.842 cv
276.302 494.003 li
279.475 494.064 282.33 495.942 283.642 498.831 cv
292.204 517.686 li
292.617 518.597 293.194 519.425 293.906 520.13 cv
304.303 530.431 li
305.864 531.978 306.741 534.083 306.741 536.279 cv
306.741 656.205 li
305.812 657.711 304.147 658.714 302.248 658.714 cv
293.569 658.714 li
284.892 658.714 li
281.977 658.714 279.614 656.352 279.614 653.437 cv
279.614 648.669 li
279.614 645.754 277.252 643.392 274.337 643.392 cv
241.66 643.392 li
238.746 643.392 236.383 645.754 236.383 648.669 cv
236.383 653.438 li
236.383 656.352 234.02 658.714 231.105 658.714 cv
213.751 658.714 li
210.836 658.714 208.473 656.352 208.473 653.438 cv
208.473 648.669 li
208.473 645.754 206.111 643.392 203.196 643.392 cv
170.519 643.392 li
167.604 643.392 165.241 645.754 165.241 648.668 cv
165.241 672.15 li
165.241 680.144 171.722 686.624 179.715 686.624 cv
180.434 686.624 li
180.502 692.584 li
180.502 692.584 li
180.502 705.224 li
180.502 706.653 181.66 707.811 183.089 707.811 cv
190.792 707.811 li
190.792 729.252 li
173.842 728.127 li
131.171 733.279 li
190.792 733.279 li
190.792 769.841 li
123.933 752.791 mo
123.271 752.791 121.441 752.932 122.804 754.583 cv
123.026 754.853 123.301 754.963 123.582 754.963 cv
124.77 754.963 126.082 753.005 124.156 752.797 cv
124.156 752.797 124.069 752.791 123.933 752.791 cv
133.378 742.945 mo
131.362 742.945 125.791 743.373 129.939 748.399 cv
130.617 749.22 131.453 749.555 132.31 749.555 cv
135.923 749.555 139.918 743.597 134.056 742.963 cv
134.056 742.963 133.791 742.945 133.378 742.945 cv
156.221 703.349 mo
156.221 703.349 150.167 703.349 153.258 706.826 cv
154.23 707.919 155.176 708.343 156 708.343 cv
158.829 708.344 160.211 703.349 156.221 703.349 cv
168.718 686.177 mo
168.243 686.177 167.473 686.29 167.299 686.99 cv
167.242 687.215 167.524 687.303 167.948 687.303 cv
168.698 687.303 169.897 687.028 170.464 686.753 cv
171.032 686.477 170.969 686.202 169.199 686.202 cv
169.167 686.202 169.135 686.202 169.101 686.202 cv
169.101 686.202 168.942 686.177 168.718 686.177 cv
231.642 639.712 mo
231.287 639.712 230.713 639.874 230.583 640.881 cv
230.54 641.206 230.751 641.332 231.067 641.332 cv
231.628 641.332 232.522 640.936 232.946 640.54 cv
233.37 640.144 233.322 639.748 231.998 639.748 cv
231.975 639.748 231.952 639.748 231.929 639.748 cv
231.929 639.748 231.81 639.712 231.642 639.712 cv
144.573 634.141 mo
143.248 634.141 139.588 634.421 142.314 637.724 cv
142.759 638.263 143.308 638.483 143.871 638.483 cv
146.246 638.483 148.871 634.569 145.019 634.152 cv
145.019 634.152 144.845 634.141 144.573 634.141 cv
293.454 632.509 mo
293.454 632.509 289.251 633.031 291.955 635.221 cv
292.437 635.611 292.944 635.771 293.42 635.771 cv
295.442 635.771 296.897 632.881 293.454 632.509 cv
288.234 625.353 mo
286.217 625.353 280.646 625.781 284.794 630.807 cv
285.471 631.628 286.307 631.963 287.164 631.963 cv
290.778 631.963 294.773 626.005 288.911 625.371 cv
288.911 625.371 288.647 625.353 288.234 625.353 cv
132.944 628.118 mo
132.944 628.118 128.693 628.118 131.399 630.309 cv
131.846 630.671 132.273 630.818 132.651 630.818 cv
134.176 630.818 134.905 628.428 132.944 628.118 cv
150.957 628.658 mo
150.602 628.658 150.027 628.819 149.896 629.827 cv
149.854 630.152 150.064 630.279 150.381 630.279 cv
150.941 630.279 151.836 629.882 152.26 629.486 cv
152.683 629.09 152.635 628.693 151.311 628.693 cv
151.288 628.693 151.265 628.693 151.242 628.693 cv
151.242 628.693 151.124 628.658 150.957 628.658 cv
208.427 622.239 mo
208.047 622.239 205.196 622.321 205.852 624.785 cv
206.314 626.518 207.157 627.156 208.043 627.156 cv
209.279 627.156 210.601 625.916 211.097 624.676 cv
211.594 623.435 211.264 622.195 209.196 622.195 cv
208.974 622.195 208.732 622.209 208.469 622.239 cv
208.469 622.239 208.454 622.239 208.427 622.239 cv
287.197 610.521 mo
287.197 610.521 li
287.197 613.451 289.573 615.827 292.504 615.827 cv
295.434 615.827 297.811 613.451 297.811 610.521 cv
297.811 546.941 li
297.811 544.066 295.526 541.726 292.675 541.636 cv
292.618 541.634 292.561 541.633 292.504 541.633 cv
289.573 541.633 287.197 544.009 287.197 546.941 cv
287.197 610.521 li
287.197 610.521 li
263.159 615.827 mo
263.159 615.827 263.159 615.827 263.159 615.827 cv
266.09 615.827 268.466 613.451 268.466 610.521 cv
268.466 546.941 li
268.466 546.941 li
268.466 546.78 268.459 546.622 268.445 546.465 cv
268.204 543.756 265.93 541.633 263.159 541.633 cv
263.159 541.633 263.159 541.633 263.159 541.633 cv
263.159 541.633 263.158 541.633 263.158 541.633 cv
260.227 541.633 257.852 544.009 257.852 546.941 cv
257.852 610.521 li
257.852 610.521 li
257.852 610.624 257.854 610.726 257.86 610.828 cv
258.019 613.615 260.33 615.827 263.158 615.827 cv
263.158 615.827 263.159 615.827 263.159 615.827 cv
228.507 610.521 mo
228.507 610.521 li
228.507 613.451 230.883 615.827 233.813 615.827 cv
236.745 615.827 239.121 613.451 239.121 610.521 cv
239.121 546.941 li
239.121 546.941 li
239.121 544.009 236.745 541.633 233.813 541.633 cv
230.883 541.633 228.507 544.009 228.507 546.941 cv
228.507 610.521 li
228.507 610.521 li
204.469 615.827 mo
204.469 615.827 li
207.399 615.827 209.775 613.451 209.775 610.521 cv
209.775 546.941 li
209.775 546.941 li
209.775 544.009 207.399 541.633 204.469 541.633 cv
201.537 541.633 199.161 544.009 199.161 546.941 cv
199.161 610.521 li
199.161 610.521 li
199.161 610.566 199.162 610.612 199.163 610.658 cv
199.236 613.525 201.583 615.827 204.469 615.827 cv
169.816 610.521 mo
169.816 610.521 li
169.816 613.451 172.192 615.827 175.123 615.827 cv
178.055 615.827 180.431 613.451 180.431 610.521 cv
180.431 546.941 li
180.431 546.941 li
180.431 544.009 178.055 541.633 175.123 541.633 cv
172.192 541.633 169.816 544.009 169.816 546.941 cv
169.816 610.521 li
169.816 610.521 li
140.471 610.521 mo
140.471 610.521 li
140.471 613.451 142.848 615.827 145.778 615.827 cv
148.709 615.827 151.085 613.451 151.085 610.521 cv
151.085 546.941 li
151.085 546.941 li
151.085 544.009 148.709 541.633 145.778 541.633 cv
142.848 541.633 140.471 544.009 140.471 546.941 cv
140.471 610.521 li
140.471 610.521 li
278.12 610.662 mo
278.12 610.662 272.469 610.662 276.598 612.859 cv
277.293 613.229 277.897 613.378 278.397 613.378 cv
280.524 613.378 280.757 610.662 278.12 610.662 cv
159.785 598.829 mo
159.785 598.829 153.731 598.829 156.822 602.307 cv
157.794 603.4 158.741 603.824 159.564 603.824 cv
162.394 603.824 163.776 598.829 159.785 598.829 cv
276.379 595.076 mo
276.379 595.076 272.128 595.076 274.833 597.266 cv
275.28 597.628 275.707 597.775 276.085 597.775 cv
277.61 597.775 278.34 595.385 276.379 595.076 cv
188.897 590.971 mo
188.897 590.971 184.646 590.971 187.352 593.161 cv
187.798 593.523 188.226 593.67 188.604 593.67 cv
190.129 593.67 190.858 591.281 188.897 590.971 cv
157.244 566.927 mo
156.895 566.927 156.331 567.039 156.203 567.74 cv
156.162 567.965 156.368 568.053 156.679 568.053 cv
157.228 568.053 158.106 567.778 158.522 567.502 cv
158.938 567.227 158.892 566.952 157.596 566.952 cv
157.572 566.952 157.549 566.952 157.524 566.952 cv
157.524 566.952 157.408 566.927 157.244 566.927 cv
285.97 532.096 mo
285.593 532.096 282.737 532.176 283.395 534.643 cv
283.856 536.376 284.699 537.014 285.585 537.014 cv
286.821 537.014 288.143 535.773 288.639 534.533 cv
289.135 533.292 288.805 532.052 286.737 532.052 cv
286.515 532.052 286.274 532.066 286.011 532.096 cv
286.011 532.096 285.996 532.096 285.97 532.096 cv
242.617 531.512 mo
241.292 531.512 237.631 531.793 240.357 535.095 cv
240.802 535.634 241.352 535.854 241.915 535.854 cv
244.289 535.855 246.915 531.94 243.063 531.524 cv
243.063 531.524 242.889 531.512 242.617 531.512 cv
172.004 530.421 mo
172.004 530.421 167.801 530.943 170.506 533.133 cv
170.987 533.523 171.494 533.683 171.97 533.683 cv
173.992 533.683 175.447 530.793 172.004 530.421 cv
180.97 518.248 mo
178.954 518.248 173.383 518.675 177.53 523.701 cv
178.208 524.522 179.044 524.858 179.901 524.858 cv
183.515 524.858 187.51 518.9 181.647 518.266 cv
181.647 518.266 181.383 518.248 180.97 518.248 cv
136.092 515.577 mo
135.816 515.577 133.722 515.628 134.204 517.198 cv
134.542 518.301 135.159 518.707 135.809 518.707 cv
136.714 518.707 137.683 517.918 138.046 517.128 cv
138.41 516.338 138.168 515.549 136.654 515.549 cv
136.491 515.549 136.314 515.558 136.121 515.577 cv
136.121 515.577 136.111 515.577 136.092 515.577 cv
234.912 509.41 mo
234.912 509.41 229.261 509.41 233.389 511.606 cv
234.085 511.976 234.69 512.126 235.189 512.126 cv
237.316 512.126 237.549 509.41 234.912 509.41 cv
241.819 504.644 mo
241.819 504.644 237.568 504.644 240.273 506.833 cv
240.72 507.195 241.147 507.342 241.526 507.342 cv
243.051 507.342 243.78 504.953 241.819 504.644 cv
320.242 502.881 mo
320.242 498.619 322.888 494.977 326.626 493.504 cv
322.888 494.977 320.242 498.62 320.242 502.881 cv
level3{
gsave
clp
[1.74172e-14 284.445 -284.445 1.74172e-14 219.141 487.445 ]ct
/16 
<<
/ShadingType 2 
/ColorSpace /0 /CSA get_res
/Coords [0 0 1 0 ]
/Domain [0 1 ]
/Extend[ true true]
/Function
<<
/Domain[0 1 ] 
/FunctionType 3
/Functions [
<<
/Domain[0 1 ] 
/FunctionType 2
/C0 [.952941 .745098 .564706 ]
/C1 [.952941 .745098 .564706 ]
/N 1 
>>
<<
/Domain[0 1 ] 
/FunctionType 2
/C0 [.952941 .745098 .564706 ]
/C1 [.901961 .603922 .458824 ]
/N 4.97729 
>>
]
/Bounds [1.89999e-07 ]
/Encode [0 1 0 1 ]
>>
>>/Gradient add_res /16 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[1.74172e-14 284.445 -284.445 1.74172e-14 219.141 487.445 ]ct
clp
/16 {
/0 /CSA get_res setcolorspace
<<
/NumSamples 256 
/NumComp 3 
/Scaling[[.00392157 0 ][.00392157 0 ][.00392157 0 ]]
/Samples[
<~oCDJCo()ABo()ABo()ABo()ABo()ABo()ABo()ABo()ABo()ABo()ABo()ABo()ABo()ABo()ABo()AB
o()ABo()ABo()ABo()ABo()ABo()ABo()ABo()ABo()ABo()ABo()ABo()ABo()ABo()ABo()ABo()AB
o()ABo()ABo()ABo()ABo()ABo()ABo'u8?naZ/>naZ/>naZ/>naZ/>naZ/>nF5r:nF5r:nF5r:nF5r9
n*f`6n*f`6n*f`5mdBN2mdBN2mHs<.mHs<.m-O**m-O*)lg*m&lg!d#lK[Wul07Hrkih6okND$kk2tgg
~>
<~^:h4n]tM+m]tM+m]tM+m]tM+m]tM+m]tM+m]tM+m]tM+m]tM+m]tM+m]tM+m]tM+m]tM+m]tM+m]tM+m
]tM+m]tM+m]tM+m]tM+m]tM+m]tM+m]tM+m]tM+m]tM+m]tM+m]tM+m]tM+m]tM+m]tM+m]tM+m]tD"j
]Y(ni]Y(ni]Y(ni]Y(ni]=Y\e]=Y\e]=Y\e]"5Ja]"5Ja]",A^\[f8]\[]/Z\@B&X\$riU\$i`R[^NTO
[C*BK['[0GZa6sCZEga?Z*:I:YHP.4Y-+n/XfSV)X/i8#WMuhpVl-DhV59u`USFQXTqS-OT:VXFS=H(;
~>
<~OH5H`O,o?_O,o?_O,o?_O,o?_O,o?_O,o?_O,o?_O,o?_O,o?_O,o?_O,o?_O,o?_O,o?_O,o?_O,o?_
O,o?_O,o?_O,o?_O,o?_O,o?_O,o?_O,o?_O,o?_O,o?_O,o?_O,o?_O,o?_O,o?_O,o?_O,o?_O,o?_
O,o?_O,f6\NfK-[NfK-[NfK-[NfK-[NK&pWNK&pWNK&pWNJrgTN/W^SN/W^RMi3LOMi3LNMMd:KMMd7I
M2@(GLkpkCLkgb@LPLV=L5(D9KnY25KS4u1K7ec-Jq8K(J:N0"It)orI=6NkI!g9fH?sj^G^+IWGBS.P
~>
]
>>
0 0 1 0 []true true []
/DeviceRGB
GenStrips
} /Gradient add_res /16 /Gradient get_res exec grestore
}if
np
306.741 656.205 mo
306.741 536.279 li
306.741 534.083 305.864 531.978 304.303 530.431 cv
293.906 520.13 li
293.194 519.425 292.617 518.597 292.204 517.686 cv
283.642 498.831 li
282.33 495.942 279.475 494.064 276.302 494.003 cv
108.519 490.842 li
108.174 490.168 107.928 489.439 107.918 488.643 cv
107.918 488.643 li
107.851 482.781 li
135.433 482.781 li
162.887 482.781 li
205.413 482.781 li
219.141 482.781 li
232.868 482.781 li
275.394 482.781 li
302.848 482.781 li
330.43 482.781 li
330.363 488.643 li
330.34 490.798 328.95 492.667 326.921 493.394 cv
326.822 493.429 326.724 493.466 326.626 493.504 cv
322.888 494.977 320.242 498.619 320.242 502.881 cv
320.242 502.881 li
320.242 643.392 li
312.802 643.392 li
309.887 643.392 307.524 645.754 307.524 648.668 cv
307.524 653.438 li
307.524 654.453 307.238 655.401 306.741 656.205 cv
302.963 515.549 mo
302.963 515.549 298.712 515.549 301.418 517.739 cv
301.865 518.101 302.292 518.248 302.67 518.248 cv
304.195 518.248 304.925 515.859 302.963 515.549 cv
level3{
gsave
clp
[1.74172e-14 284.445 -284.445 1.74172e-14 219.141 487.445 ]ct
/17 
<<
/ShadingType 2 
/ColorSpace /0 /CSA get_res
/Coords [0 0 1 0 ]
/Domain [0 1 ]
/Extend[ true true]
/Function
<<
/Domain[0 1 ] 
/FunctionType 3
/Functions [
<<
/Domain[0 1 ] 
/Range[0 1 0 1 0 1 ] 
/FunctionType 0
/Order 1 
/DataSource <~m]1a'X*j?9I."%_m]1a'X*j?9I."%_m]1a'X*j?9I."%_m]1a'X*j?9I."%_m]1a'X*j?9I."%_m]1a'
X*j?9I."%_m]1a'X*j?9I."%_m]1a'X*j?9I."%_m]1a'X*j?9I."%_m]1a'X*j?9I."%_m]1a'X*j?9
I."%_m]1a'X*j?9I."%_m]1a'X*j?9I."%_m]1a'X*j?9I."%_m]1a'X*j?9I."%_m]1a'X*j?9I."%_
~>
/BitsPerSample 8 
/Encode [0 63 ]
/Decode [0 1 0 1 0 1 ]
/Size [64 ]
>>
<<
/Domain[0 1 ] 
/Range[0 1 0 1 0 1 ] 
/FunctionType 0
/Order 1 
/DataSource <~m]1a'X*j?9I."%_m]1a'X*j?9I."%_m]1a'X*j?9I."%_m]1a'X*j?9I."%_m]1a'X*j?9I."%_m]1a'
X*j?9I."%_m]1a'X*j?9I.""^m]([&WdF06Hg[n\m](X$WdF-5HgRh[mAbO#WI+$3HgReZmAP?tW-[g.
H0hGSm&#$oV0M=%GO)&Kl_AXgU35apFQoH?l(<(^Soa+cET`g1kF$8NQu;#OD<7!ujH=9<O(dO5BAnb[
~>
/BitsPerSample 8 
/Encode [0 63 ]
/Decode [0 1 0 1 0 1 ]
/Size [64 ]
>>
]
/Bounds [1.89999e-07 ]
/Encode [0 1 0 1 ]
>>
>>/Gradient add_res /17 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[1.74172e-14 284.445 -284.445 1.74172e-14 219.141 487.445 ]ct
clp
/17 {
/0 /CSA get_res setcolorspace
<<
/NumSamples 256 
/NumComp 3 
/Scaling[[.00392157 0 ][.00392157 0 ][.00392157 0 ]]
/Samples[
<~mHs<.mHs<.mHs<.mHs<.mHs<.mHs<.mHs<.mHs<.mHs<.mHs<.mHs<.mHs<.mHs<.mHs<.mHs<.mHs<.
mHs<.mHs<.mHs<.mHs<.mHs<.mHs<.mHs<.mHs<.mHs<.mHs<.mHs<.mHs<.mHs<.mHs<.mHs<.mHs<.
mHs<.mHs<-m-O**m-O**m-O**m-O**m-O**m-O**m-O**m-O*)lg*m&lg*m&lg*m&lg*m&lg*m%lK[["
lK[["lK[["l07Hsl07Hskih6okih6okih6okND$kk2tggk2tggjlPUcjQ,C_jQ,C_j5]1[io8tWiSibS
~>
<~WiE)!WiE)!WiE)!WiE)!WiE)!WiE)!WiE)!WiE)!WiE)!WiE)!WiE)!WiE)!WiE)!WiE)!WiE)!WiE)!
WiE)!WiE)!WiE)!WiE)!WiE)!WiE)!WiE)!WiE)!WiE)!WiE)!WiE)!WiE%tWMukrWMukrWMukrWMukr
WMukrWMukrWMukrWMukrWMukrWMukqW2QYnW2QYnW2QYmVl-GjVl-GiVP^5fVP^5eV5:#aUnjf]USFTZ
USFTZU8"BVTqS0RTV.sNT:_aJSt;OFSXl:@S"#n:R[TY4R$a8.Q^=#(Q'ISuPEV/mOcb`dNfK-[NK&mT
~>
<~H[C*dH[C*dH[C*dH[C*dH[C*dH[C*dH[C*dH[C*dH[C*dH[C*dH[C*dH[C*dH[C*dH[C*dH[C*dH[C*d
H[C*dH[C*dH[C*dH[C*dH[C*dH[C*dH[C*dH[C*dH[C*dH[C*dH[C*dH[C*dH[C*dH[C'bH?sm`H?sm`
H?sm`H?sm`H?sm`H?sm`H?sm`H?sm`H?sm`H?sm`H?sm_H$O[\H$O[[G^+IXG^+IWGB\7TGB\7SG'8%P
G'8%PF`hhLFEDVHF)uDDF)uDDF)uDDEcQ/>E,]c8Df9Q4DJj?0D/F-,Ci!p(CMR["Bk_6oB4kjiAnGUc
~>
]
>>
0 0 1 0 []true true []
/DeviceRGB
GenStrips
} /Gradient add_res /17 /Gradient get_res exec grestore
}if
np
330.948 482.781 mo
330.43 482.781 li
302.848 482.781 li
275.394 482.781 li
232.868 482.781 li
219.141 482.781 li
205.413 482.781 li
162.887 482.781 li
135.433 482.781 li
107.851 482.781 li
107.334 482.781 li
99.3662 482.781 92.9062 476.321 92.9062 468.353 cv
92.9062 445.444 li
92.9062 442.577 95.2304 440.253 98.0976 440.253 cv
113.71 440.253 li
130.242 440.253 li
133.108 440.253 135.433 442.577 135.433 445.444 cv
135.433 450.135 li
135.433 453.002 137.758 455.326 140.624 455.326 cv
157.696 455.326 li
160.563 455.326 162.887 453.002 162.887 450.135 cv
162.887 445.444 li
162.887 442.577 165.211 440.253 168.078 440.253 cv
200.223 440.253 li
203.09 440.253 205.413 442.577 205.413 445.444 cv
205.413 450.135 li
205.413 452.297 206.735 454.15 208.614 454.931 cv
209.227 455.186 209.899 455.326 210.604 455.326 cv
219.141 455.326 li
227.677 455.326 li
228.667 455.326 229.592 455.049 230.379 454.568 cv
231.872 453.657 232.868 452.012 232.868 450.135 cv
232.868 445.444 li
232.868 442.577 235.192 440.253 238.058 440.253 cv
270.105 440.253 li
270.203 440.253 li
273.07 440.253 275.394 442.577 275.394 445.444 cv
275.394 448.655 li
275.394 450.135 li
275.394 453.002 277.719 455.326 280.585 455.326 cv
297.658 455.326 li
300.524 455.326 302.848 453.002 302.848 450.135 cv
302.848 448.655 li
302.848 445.444 li
302.848 442.577 305.173 440.253 308.04 440.253 cv
340.184 440.253 li
343.051 440.253 345.375 442.577 345.375 445.444 cv
345.375 448.655 li
345.375 457.628 li
345.375 468.353 li
345.375 468.679 345.364 469.002 345.343 469.322 cv
345.113 472.792 343.656 475.927 341.402 478.296 cv
338.773 481.059 335.062 482.781 330.948 482.781 cv
275.216 473.528 mo
274.862 473.528 274.288 473.69 274.157 474.697 cv
274.115 475.022 274.325 475.149 274.642 475.149 cv
275.202 475.149 276.097 474.753 276.52 474.356 cv
276.944 473.96 276.896 473.564 275.573 473.564 cv
275.55 473.564 275.527 473.564 275.503 473.565 cv
275.503 473.565 275.384 473.528 275.216 473.528 cv
313.734 471.309 mo
313.734 471.309 309.483 471.309 312.188 473.499 cv
312.635 473.861 313.062 474.008 313.441 474.008 cv
314.966 474.008 315.695 471.619 313.734 471.309 cv
188.148 467.956 mo
186.823 467.956 183.163 468.237 185.889 471.539 cv
186.334 472.079 186.883 472.299 187.447 472.299 cv
189.821 472.3 192.446 468.385 188.594 467.968 cv
188.594 467.968 188.42 467.956 188.148 467.956 cv
176.519 461.935 mo
176.519 461.935 172.268 461.935 174.974 464.124 cv
175.421 464.486 175.848 464.633 176.226 464.633 cv
177.751 464.633 178.48 462.245 176.519 461.935 cv
194.532 462.474 mo
194.177 462.474 193.602 462.635 193.472 463.643 cv
193.43 463.967 193.64 464.094 193.956 464.094 cv
194.517 464.094 195.411 463.698 195.835 463.302 cv
196.258 462.906 196.211 462.51 194.888 462.51 cv
194.865 462.51 194.841 462.51 194.817 462.51 cv
194.817 462.51 194.699 462.474 194.532 462.474 cv
252.002 456.055 mo
251.621 456.055 248.77 456.136 249.428 458.602 cv
249.889 460.334 250.732 460.972 251.618 460.973 cv
252.855 460.973 254.176 459.732 254.673 458.491 cv
255.169 457.251 254.838 456.011 252.771 456.011 cv
252.549 456.011 252.307 456.025 252.044 456.055 cv
252.044 456.055 252.029 456.055 252.002 456.055 cv
323.688 456.319 mo
322.364 456.319 318.699 456.6 321.426 459.904 cv
321.871 460.443 322.42 460.663 322.984 460.663 cv
325.359 460.664 327.984 456.748 324.132 456.331 cv
324.132 456.331 323.959 456.319 323.688 456.319 cv
108.436 449.401 mo
106.42 449.401 100.849 449.829 104.997 454.855 cv
105.674 455.675 106.51 456.011 107.367 456.011 cv
110.981 456.012 114.976 450.052 109.113 449.419 cv
109.113 449.419 108.849 449.401 108.436 449.401 cv
level3{
gsave
clp
[252.469 0 0 252.469 92.9065 461.517 ]ct
/2 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[252.469 0 0 252.469 92.9065 461.517 ]ct
clp
/2 /Gradient get_res exec grestore
}if
np
190.792 733.279 mo
131.171 733.279 li
173.842 728.127 li
190.792 729.252 li
190.792 733.279 li
level3{
gsave
clp
[1.74172e-14 284.445 -284.445 1.74172e-14 219.141 487.445 ]ct
/17 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[1.74172e-14 284.445 -284.445 1.74172e-14 219.141 487.445 ]ct
clp
/17 /Gradient get_res exec grestore
}if
np
156 708.343 mo
155.176 708.343 154.23 707.919 153.258 706.826 cv
150.167 703.349 156.221 703.349 156.221 703.349 cv
160.211 703.349 158.829 708.344 156 708.343 cv
level3{
gsave
clp
[1.74172e-14 284.445 -284.445 1.74172e-14 219.141 487.445 ]ct
/17 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[1.74172e-14 284.445 -284.445 1.74172e-14 219.141 487.445 ]ct
clp
/17 /Gradient get_res exec grestore
}if
np
143.871 638.483 mo
143.308 638.483 142.759 638.263 142.314 637.724 cv
139.588 634.421 143.248 634.141 144.573 634.141 cv
144.845 634.141 145.019 634.152 145.019 634.152 cv
148.871 634.569 146.246 638.483 143.871 638.483 cv
level3{
gsave
clp
[1.74172e-14 284.445 -284.445 1.74172e-14 219.141 487.445 ]ct
/17 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[1.74172e-14 284.445 -284.445 1.74172e-14 219.141 487.445 ]ct
clp
/17 /Gradient get_res exec grestore
}if
np
123.582 754.963 mo
123.301 754.963 123.026 754.853 122.804 754.583 cv
121.441 752.932 123.271 752.791 123.933 752.791 cv
124.069 752.791 124.156 752.797 124.156 752.797 cv
126.082 753.005 124.77 754.963 123.582 754.963 cv
level3{
gsave
clp
[1.74172e-14 284.445 -284.445 1.74172e-14 219.141 487.445 ]ct
/17 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[1.74172e-14 284.445 -284.445 1.74172e-14 219.141 487.445 ]ct
clp
/17 /Gradient get_res exec grestore
}if
np
287.164 631.963 mo
286.307 631.963 285.471 631.628 284.794 630.807 cv
280.646 625.781 286.217 625.353 288.234 625.353 cv
288.647 625.353 288.911 625.371 288.911 625.371 cv
294.773 626.005 290.778 631.963 287.164 631.963 cv
level3{
gsave
clp
[1.74172e-14 284.445 -284.445 1.74172e-14 219.141 487.445 ]ct
/17 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[1.74172e-14 284.445 -284.445 1.74172e-14 219.141 487.445 ]ct
clp
/17 /Gradient get_res exec grestore
}if
np
179.901 524.858 mo
179.044 524.858 178.208 524.522 177.53 523.701 cv
173.383 518.675 178.954 518.248 180.97 518.248 cv
181.383 518.248 181.647 518.266 181.647 518.266 cv
187.51 518.9 183.515 524.858 179.901 524.858 cv
level3{
gsave
clp
[1.74172e-14 284.445 -284.445 1.74172e-14 219.141 487.445 ]ct
/17 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[1.74172e-14 284.445 -284.445 1.74172e-14 219.141 487.445 ]ct
clp
/17 /Gradient get_res exec grestore
}if
np
107.367 456.011 mo
106.51 456.011 105.674 455.675 104.997 454.855 cv
100.849 449.829 106.42 449.401 108.436 449.401 cv
108.849 449.401 109.113 449.419 109.113 449.419 cv
114.976 450.052 110.981 456.012 107.367 456.011 cv
level3{
gsave
clp
[252.469 0 0 252.469 92.9065 461.517 ]ct
/3 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[252.469 0 0 252.469 92.9065 461.517 ]ct
clp
/3 /Gradient get_res exec grestore
}if
np
132.31 749.555 mo
131.453 749.555 130.617 749.22 129.939 748.399 cv
125.791 743.373 131.362 742.945 133.378 742.945 cv
133.791 742.945 134.056 742.963 134.056 742.963 cv
139.918 743.597 135.923 749.555 132.31 749.555 cv
level3{
gsave
clp
[1.74172e-14 284.445 -284.445 1.74172e-14 219.141 487.445 ]ct
/17 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[1.74172e-14 284.445 -284.445 1.74172e-14 219.141 487.445 ]ct
clp
/17 /Gradient get_res exec grestore
}if
np
186.589 759.27 mo
186.388 759.27 186.183 759.25 185.977 759.207 cv
185.68 758.547 185.515 757.815 185.515 757.044 cv
185.515 754.879 li
186.134 754.714 186.637 754.652 186.637 754.652 cv
191.513 755.178 189.452 759.27 186.589 759.27 cv
level3{
gsave
clp
[1.74172e-14 284.445 -284.445 1.74172e-14 219.141 487.445 ]ct
/17 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[1.74172e-14 284.445 -284.445 1.74172e-14 219.141 487.445 ]ct
clp
/17 /Gradient get_res exec grestore
}if
np
293.42 635.771 mo
292.944 635.771 292.437 635.611 291.955 635.221 cv
289.251 633.031 293.454 632.509 293.454 632.509 cv
296.897 632.881 295.442 635.771 293.42 635.771 cv
level3{
gsave
clp
[1.74172e-14 284.445 -284.445 1.74172e-14 219.141 487.445 ]ct
/17 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[1.74172e-14 284.445 -284.445 1.74172e-14 219.141 487.445 ]ct
clp
/17 /Gradient get_res exec grestore
}if
np
171.97 533.683 mo
171.494 533.683 170.987 533.523 170.506 533.133 cv
167.801 530.943 172.004 530.421 172.004 530.421 cv
175.447 530.793 173.992 533.683 171.97 533.683 cv
level3{
gsave
clp
[1.74172e-14 284.445 -284.445 1.74172e-14 219.141 487.445 ]ct
/17 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[1.74172e-14 284.445 -284.445 1.74172e-14 219.141 487.445 ]ct
clp
/17 /Gradient get_res exec grestore
}if
np
132.651 630.818 mo
132.273 630.818 131.846 630.671 131.399 630.309 cv
128.693 628.118 132.944 628.118 132.944 628.118 cv
134.905 628.428 134.176 630.818 132.651 630.818 cv
level3{
gsave
clp
[1.74172e-14 284.445 -284.445 1.74172e-14 219.141 487.445 ]ct
/17 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[1.74172e-14 284.445 -284.445 1.74172e-14 219.141 487.445 ]ct
clp
/17 /Gradient get_res exec grestore
}if
np
235.189 512.126 mo
234.69 512.126 234.085 511.976 233.389 511.606 cv
229.261 509.41 234.912 509.41 234.912 509.41 cv
237.549 509.41 237.316 512.126 235.189 512.126 cv
level3{
gsave
clp
[1.74172e-14 284.445 -284.445 1.74172e-14 219.141 487.445 ]ct
/17 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[1.74172e-14 284.445 -284.445 1.74172e-14 219.141 487.445 ]ct
clp
/17 /Gradient get_res exec grestore
}if
np
241.526 507.342 mo
241.147 507.342 240.72 507.195 240.273 506.833 cv
237.568 504.644 241.819 504.644 241.819 504.644 cv
243.78 504.953 243.051 507.342 241.526 507.342 cv
level3{
gsave
clp
[1.74172e-14 284.445 -284.445 1.74172e-14 219.141 487.445 ]ct
/17 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[1.74172e-14 284.445 -284.445 1.74172e-14 219.141 487.445 ]ct
clp
/17 /Gradient get_res exec grestore
}if
np
167.948 687.303 mo
167.524 687.303 167.242 687.215 167.299 686.99 cv
167.473 686.29 168.243 686.177 168.718 686.177 cv
168.942 686.177 169.101 686.202 169.101 686.202 cv
169.135 686.202 169.167 686.202 169.199 686.202 cv
170.969 686.202 171.032 686.477 170.464 686.753 cv
169.897 687.028 168.698 687.303 167.948 687.303 cv
level3{
gsave
clp
[1.74172e-14 284.445 -284.445 1.74172e-14 219.141 487.445 ]ct
/17 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[1.74172e-14 284.445 -284.445 1.74172e-14 219.141 487.445 ]ct
clp
/17 /Gradient get_res exec grestore
}if
np
231.067 641.332 mo
230.751 641.332 230.54 641.206 230.583 640.881 cv
230.713 639.874 231.287 639.712 231.642 639.712 cv
231.81 639.712 231.929 639.748 231.929 639.748 cv
231.952 639.748 231.975 639.748 231.998 639.748 cv
233.322 639.748 233.37 640.144 232.946 640.54 cv
232.522 640.936 231.628 641.332 231.067 641.332 cv
level3{
gsave
clp
[1.74172e-14 284.445 -284.445 1.74172e-14 219.141 487.445 ]ct
/17 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[1.74172e-14 284.445 -284.445 1.74172e-14 219.141 487.445 ]ct
clp
/17 /Gradient get_res exec grestore
}if
np
150.381 630.279 mo
150.064 630.279 149.854 630.152 149.896 629.827 cv
150.027 628.819 150.602 628.658 150.957 628.658 cv
151.124 628.658 151.242 628.693 151.242 628.693 cv
151.265 628.693 151.288 628.693 151.311 628.693 cv
152.635 628.693 152.683 629.09 152.26 629.486 cv
151.836 629.882 150.941 630.279 150.381 630.279 cv
level3{
gsave
clp
[1.74172e-14 284.445 -284.445 1.74172e-14 219.141 487.445 ]ct
/17 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[1.74172e-14 284.445 -284.445 1.74172e-14 219.141 487.445 ]ct
clp
/17 /Gradient get_res exec grestore
}if
np
208.043 627.156 mo
207.157 627.156 206.314 626.518 205.852 624.785 cv
205.196 622.321 208.047 622.239 208.427 622.239 cv
208.454 622.239 208.469 622.239 208.469 622.239 cv
208.732 622.209 208.974 622.195 209.196 622.195 cv
211.264 622.195 211.594 623.435 211.097 624.676 cv
210.601 625.916 209.279 627.156 208.043 627.156 cv
level3{
gsave
clp
[1.74172e-14 284.445 -284.445 1.74172e-14 219.141 487.445 ]ct
/17 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[1.74172e-14 284.445 -284.445 1.74172e-14 219.141 487.445 ]ct
clp
/17 /Gradient get_res exec grestore
}if
np
187.447 472.299 mo
186.883 472.299 186.334 472.079 185.889 471.539 cv
183.163 468.237 186.823 467.956 188.148 467.956 cv
188.42 467.956 188.594 467.968 188.594 467.968 cv
192.446 468.385 189.821 472.3 187.447 472.299 cv
level3{
gsave
clp
[252.469 0 0 252.469 92.9065 461.517 ]ct
/3 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[252.469 0 0 252.469 92.9065 461.517 ]ct
clp
/3 /Gradient get_res exec grestore
}if
np
176.226 464.633 mo
175.848 464.633 175.421 464.486 174.974 464.124 cv
172.268 461.935 176.519 461.935 176.519 461.935 cv
178.48 462.245 177.751 464.633 176.226 464.633 cv
level3{
gsave
clp
[252.469 0 0 252.469 92.9065 461.517 ]ct
/3 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[252.469 0 0 252.469 92.9065 461.517 ]ct
clp
/3 /Gradient get_res exec grestore
}if
np
274.642 475.149 mo
274.325 475.149 274.115 475.022 274.157 474.697 cv
274.288 473.69 274.862 473.528 275.216 473.528 cv
275.384 473.528 275.503 473.565 275.503 473.565 cv
275.527 473.564 275.55 473.564 275.573 473.564 cv
276.896 473.564 276.944 473.96 276.52 474.356 cv
276.097 474.753 275.202 475.149 274.642 475.149 cv
level3{
gsave
clp
[252.469 0 0 252.469 92.9065 461.517 ]ct
/3 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[252.469 0 0 252.469 92.9065 461.517 ]ct
clp
/3 /Gradient get_res exec grestore
}if
np
193.956 464.094 mo
193.64 464.094 193.43 463.967 193.472 463.643 cv
193.602 462.635 194.177 462.474 194.532 462.474 cv
194.699 462.474 194.817 462.51 194.817 462.51 cv
194.841 462.51 194.865 462.51 194.888 462.51 cv
196.211 462.51 196.258 462.906 195.835 463.302 cv
195.411 463.698 194.517 464.094 193.956 464.094 cv
level3{
gsave
clp
[252.469 0 0 252.469 92.9065 461.517 ]ct
/3 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[252.469 0 0 252.469 92.9065 461.517 ]ct
clp
/3 /Gradient get_res exec grestore
}if
np
251.618 460.973 mo
250.732 460.972 249.889 460.334 249.428 458.602 cv
248.77 456.136 251.621 456.055 252.002 456.055 cv
252.029 456.055 252.044 456.055 252.044 456.055 cv
252.307 456.025 252.549 456.011 252.771 456.011 cv
254.838 456.011 255.169 457.251 254.673 458.491 cv
254.176 459.732 252.855 460.973 251.618 460.973 cv
level3{
gsave
clp
[252.469 0 0 252.469 92.9065 461.517 ]ct
/3 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[252.469 0 0 252.469 92.9065 461.517 ]ct
clp
/3 /Gradient get_res exec grestore
}if
np
285.585 537.014 mo
284.699 537.014 283.856 536.376 283.395 534.643 cv
282.737 532.176 285.593 532.096 285.97 532.096 cv
285.996 532.096 286.011 532.096 286.011 532.096 cv
286.274 532.066 286.515 532.052 286.737 532.052 cv
288.805 532.052 289.135 533.292 288.639 534.533 cv
288.143 535.773 286.821 537.014 285.585 537.014 cv
level3{
gsave
clp
[1.74172e-14 284.445 -284.445 1.74172e-14 219.141 487.445 ]ct
/17 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[1.74172e-14 284.445 -284.445 1.74172e-14 219.141 487.445 ]ct
clp
/17 /Gradient get_res exec grestore
}if
np
159.564 603.824 mo
158.741 603.824 157.794 603.4 156.822 602.307 cv
153.731 598.829 159.785 598.829 159.785 598.829 cv
163.776 598.829 162.394 603.824 159.564 603.824 cv
level3{
gsave
clp
[1.74172e-14 284.445 -284.445 1.74172e-14 219.141 487.445 ]ct
/17 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[1.74172e-14 284.445 -284.445 1.74172e-14 219.141 487.445 ]ct
clp
/17 /Gradient get_res exec grestore
}if
np
278.397 613.378 mo
277.897 613.378 277.293 613.229 276.598 612.859 cv
272.469 610.662 278.12 610.662 278.12 610.662 cv
280.757 610.662 280.524 613.378 278.397 613.378 cv
level3{
gsave
clp
[1.74172e-14 284.445 -284.445 1.74172e-14 219.141 487.445 ]ct
/17 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[1.74172e-14 284.445 -284.445 1.74172e-14 219.141 487.445 ]ct
clp
/17 /Gradient get_res exec grestore
}if
np
241.915 535.854 mo
241.352 535.854 240.802 535.634 240.357 535.095 cv
237.631 531.793 241.292 531.512 242.617 531.512 cv
242.889 531.512 243.063 531.524 243.063 531.524 cv
246.915 531.94 244.289 535.855 241.915 535.854 cv
level3{
gsave
clp
[1.74172e-14 284.445 -284.445 1.74172e-14 219.141 487.445 ]ct
/17 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[1.74172e-14 284.445 -284.445 1.74172e-14 219.141 487.445 ]ct
clp
/17 /Gradient get_res exec grestore
}if
np
322.984 460.663 mo
322.42 460.663 321.871 460.443 321.426 459.904 cv
318.699 456.6 322.364 456.319 323.688 456.319 cv
323.959 456.319 324.132 456.331 324.132 456.331 cv
327.984 456.748 325.359 460.664 322.984 460.663 cv
level3{
gsave
clp
[252.469 0 0 252.469 92.9065 461.517 ]ct
/3 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[252.469 0 0 252.469 92.9065 461.517 ]ct
clp
/3 /Gradient get_res exec grestore
}if
np
188.604 593.67 mo
188.226 593.67 187.798 593.523 187.352 593.161 cv
184.646 590.971 188.897 590.971 188.897 590.971 cv
190.858 591.281 190.129 593.67 188.604 593.67 cv
level3{
gsave
clp
[1.74172e-14 284.445 -284.445 1.74172e-14 219.141 487.445 ]ct
/17 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[1.74172e-14 284.445 -284.445 1.74172e-14 219.141 487.445 ]ct
clp
/17 /Gradient get_res exec grestore
}if
np
276.085 597.775 mo
275.707 597.775 275.28 597.628 274.833 597.266 cv
272.128 595.076 276.379 595.076 276.379 595.076 cv
278.34 595.385 277.61 597.775 276.085 597.775 cv
level3{
gsave
clp
[1.74172e-14 284.445 -284.445 1.74172e-14 219.141 487.445 ]ct
/17 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[1.74172e-14 284.445 -284.445 1.74172e-14 219.141 487.445 ]ct
clp
/17 /Gradient get_res exec grestore
}if
np
302.67 518.248 mo
302.292 518.248 301.865 518.101 301.418 517.739 cv
298.712 515.549 302.963 515.549 302.963 515.549 cv
304.925 515.859 304.195 518.248 302.67 518.248 cv
level3{
gsave
clp
[1.74172e-14 284.445 -284.445 1.74172e-14 219.141 487.445 ]ct
/18 
<<
/ShadingType 2 
/ColorSpace /0 /CSA get_res
/Coords [0 0 1 0 ]
/Domain [0 1 ]
/Extend[ true true]
/Function
<<
/Domain[0 1 ] 
/FunctionType 3
/Functions [
<<
/Domain[0 1 ] 
/Range[0 1 0 1 0 1 ] 
/FunctionType 0
/Order 1 
/DataSource <~l'cDPRVV/VC[%:'l'cDPRVV/VC[%:'l'cDPRVV/VC[%:'l'cDPRVV/VC[%:'l'cDPRVV/VC[%:'l'cDP
RVV/VC[%:'l'cDPRVV/VC[%:'l'cDPRVV/VC[%:'l'cDPRVV/VC[%:'l'cDPRVV/VC[%:'l'cDPRVV/V
C[%:'l'cDPRVV/VC[%:'l'cDPRVV/VC[%:'l'cDPRVV/VC[%:'l'cDPRVV/VC[%:'l'cDPRVV/VC[%:'
~>
/BitsPerSample 8 
/Encode [0 63 ]
/Decode [0 1 0 1 0 1 ]
/Size [64 ]
>>
<<
/Domain[0 1 ] 
/Range[0 1 0 1 0 1 ] 
/FunctionType 0
/Order 1 
/DataSource <~l'cDPRVV/VC[%:'l'cDPRVV/VC[%:'l'cDPRVV/VC[%:'l'cDPRVV/VC[%:'l'cDPRVV/VC[%:'l'cDP
RVV/VC[%:'l'cDPRVV/VC[%7&l'Z>OR;1uSC?_.$l'Z;MR;1rRC?V(#ka?2LQtkiPC?V%"ka6)IQtb`M
B]k^qkE]fEQ"]<EBBGFkk*'E=P%Ea;AE8h_jH!j4O(740@H*5Sieh.&M-o4s?K$TDi.P=lJQgo\=l"L-
~>
/BitsPerSample 8 
/Encode [0 63 ]
/Decode [0 1 0 1 0 1 ]
/Size [64 ]
>>
]
/Bounds [1.89999e-07 ]
/Encode [0 1 0 1 ]
>>
>>/Gradient add_res /18 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[1.74172e-14 284.445 -284.445 1.74172e-14 219.141 487.445 ]ct
clp
/18 {
/0 /CSA get_res setcolorspace
<<
/NumSamples 256 
/NumComp 3 
/Scaling[[.00392157 0 ][.00392157 0 ][.00392157 0 ]]
/Samples[
<~kih6okih6okih6okih6okih6okih6okih6okih6okih6okih6okih6okih6okih6okih6okih6okih6o
kih6okih6okih6okih6okih6okih6okih6okih6okih6okih6okih6okih6okih6okih6okih6okih6o
kih6okih6nkND$kkND$kkND$kkND$kkND$kkND$kkND$kkND$jk2tggk2tggk2tggk2tggk2tgfjlPUc
jlPUcjlPUcjQ,C_jQ,C_j5]1[j5]1[j5]1[io8tWiSibSiSibSi8EPOi8EPOi8EPOhr!>KhVR,Gh;-oC
~>
<~R@0J2R@0J2R@0J2R@0J2R@0J2R@0J2R@0J2R@0J2R@0J2R@0J2R@0J2R@0J2R@0J2R@0J2R@0J2R@0J2
R@0J2R@0J2R@0J2R@0J2R@0J2R@0J2R@0J2R@0J2R@0J2R@0J2R@0J2R@0G0R$a8.R$a8.R$a8.R$a8.
R$a8.R$a8.R$a8.R$a8.R$a8.R$a8-Q^=&*Q^=&*Q^=&*Q^=&*Q^=&)QBmi&QBmi%Q'IW!Pa%DrPEV2o
PEV2oP*1ukOcbcgOH>QcO,o?_NfK-[NfK*YN/W^SMi3IMM2@(GLkphAL5(D9KS5#3K7ec,J:N0#It)oq
~>
<~C2.KuC2.KuC2.KuC2.KuC2.KuC2.KuC2.KuC2.KuC2.KuC2.KuC2.KuC2.KuC2.KuC2.KuC2.KuC2.Ku
C2.KuC2.KuC2.KuC2.KuC2.KuC2.KuC2.KuC2.KuC2.KuC2.KuC2.KuC2.KuC2.KuC2.HsBk_9qBk_9q
Bk_9qBk_9qBk_9qBk_9qBk_9qBk_9qBk_9qBk_9qBk_9pBP;'mBP;'lB4kjiB4kjiB4kjiB4kjhAnGXe
AnGXeAS#FaA7T4]@q0"Y@q0"Y@q0"Y@U`bS?smAM?smAM?XI/I?=$rE?!U`A>[1K;>$>*5=]nm1=BJX+
~>
]
>>
0 0 1 0 []true true []
/DeviceRGB
GenStrips
} /Gradient add_res /18 /Gradient get_res exec grestore
}if
np
313.441 474.008 mo
313.062 474.008 312.635 473.861 312.188 473.499 cv
309.483 471.309 313.734 471.309 313.734 471.309 cv
315.695 471.619 314.966 474.008 313.441 474.008 cv
level3{
gsave
clp
[252.469 0 0 252.469 92.9065 461.517 ]ct
/3 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[252.469 0 0 252.469 92.9065 461.517 ]ct
clp
/3 /Gradient get_res exec grestore
}if
np
156.679 568.053 mo
156.368 568.053 156.162 567.965 156.203 567.74 cv
156.331 567.039 156.895 566.927 157.244 566.927 cv
157.408 566.927 157.524 566.952 157.524 566.952 cv
157.549 566.952 157.572 566.952 157.596 566.952 cv
158.892 566.952 158.938 567.227 158.522 567.502 cv
158.106 567.778 157.228 568.053 156.679 568.053 cv
level3{
gsave
clp
[1.74172e-14 284.445 -284.445 1.74172e-14 219.141 487.445 ]ct
/17 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[1.74172e-14 284.445 -284.445 1.74172e-14 219.141 487.445 ]ct
clp
/17 /Gradient get_res exec grestore
}if
np
135.809 518.707 mo
135.159 518.707 134.542 518.301 134.204 517.198 cv
133.722 515.628 135.816 515.577 136.092 515.577 cv
136.111 515.577 136.121 515.577 136.121 515.577 cv
136.314 515.558 136.491 515.549 136.654 515.549 cv
138.168 515.549 138.41 516.338 138.046 517.128 cv
137.683 517.918 136.714 518.707 135.809 518.707 cv
level3{
gsave
clp
[1.74172e-14 284.445 -284.445 1.74172e-14 219.141 487.445 ]ct
/17 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[1.74172e-14 284.445 -284.445 1.74172e-14 219.141 487.445 ]ct
clp
/17 /Gradient get_res exec grestore
}if
np
145.778 614.743 mo
143.409 614.743 141.489 612.823 141.489 610.455 cv
141.489 549.508 li
141.489 547.14 143.409 545.219 145.778 545.219 cv
148.146 545.219 150.067 547.14 150.067 549.508 cv
150.067 610.455 li
150.067 612.823 148.146 614.743 145.778 614.743 cv
level3{
gsave
clp
[3.74046e-15 -61.0864 61.0864 3.74046e-15 145.778 612.45 ]ct
/6 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[3.74046e-15 -61.0864 61.0864 3.74046e-15 145.778 612.45 ]ct
clp
/6 /Gradient get_res exec grestore
}if
np
175.123 614.743 mo
172.755 614.743 170.834 612.823 170.834 610.455 cv
170.834 549.508 li
170.834 547.14 172.755 545.219 175.123 545.219 cv
177.492 545.219 179.412 547.14 179.412 549.508 cv
179.412 610.455 li
179.412 612.823 177.492 614.743 175.123 614.743 cv
level3{
gsave
clp
[3.74046e-15 -61.0864 61.0864 3.74046e-15 175.123 612.45 ]ct
/6 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[3.74046e-15 -61.0864 61.0864 3.74046e-15 175.123 612.45 ]ct
clp
/6 /Gradient get_res exec grestore
}if
np
204.469 615.827 mo
201.583 615.827 199.236 613.525 199.163 610.658 cv
199.236 613.525 201.584 615.827 204.469 615.827 cv
204.469 614.743 mo
202.099 614.743 200.18 612.823 200.18 610.455 cv
200.18 549.508 li
200.18 547.14 202.099 545.219 204.469 545.219 cv
206.837 545.219 208.757 547.14 208.757 549.508 cv
208.757 610.455 li
208.757 612.823 206.837 614.743 204.469 614.743 cv
199.161 610.521 mo
199.161 610.521 li
199.161 546.941 li
199.161 544.009 201.537 541.633 204.469 541.633 cv
207.399 541.633 209.775 544.009 209.775 546.941 cv
209.775 546.941 li
209.775 544.009 207.399 541.633 204.469 541.633 cv
201.538 541.633 199.161 544.009 199.161 546.941 cv
199.161 610.521 li
level3{
gsave
clp
[3.74046e-15 -61.0864 61.0864 3.74046e-15 204.468 612.45 ]ct
/6 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[3.74046e-15 -61.0864 61.0864 3.74046e-15 204.468 612.45 ]ct
clp
/6 /Gradient get_res exec grestore
}if
np
233.813 614.743 mo
231.445 614.743 229.525 612.823 229.525 610.455 cv
229.525 549.508 li
229.525 547.14 231.445 545.219 233.813 545.219 cv
236.182 545.219 238.102 547.14 238.102 549.508 cv
238.102 610.455 li
238.102 612.823 236.182 614.743 233.813 614.743 cv
level3{
gsave
clp
[3.74046e-15 -61.0864 61.0864 3.74046e-15 233.814 612.45 ]ct
/6 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[3.74046e-15 -61.0864 61.0864 3.74046e-15 233.814 612.45 ]ct
clp
/6 /Gradient get_res exec grestore
}if
np
263.158 615.827 mo
260.33 615.827 258.019 613.615 257.86 610.828 cv
258.019 613.615 260.33 615.827 263.159 615.827 cv
263.159 615.827 263.158 615.827 263.158 615.827 cv
263.159 614.743 mo
260.79 614.743 258.87 612.823 258.87 610.455 cv
258.87 549.508 li
258.87 547.14 260.79 545.219 263.159 545.219 cv
265.527 545.219 267.447 547.14 267.447 549.508 cv
267.447 610.455 li
267.447 612.823 265.527 614.743 263.159 614.743 cv
257.852 610.521 mo
257.852 610.521 li
257.852 546.941 li
257.852 544.009 260.227 541.633 263.158 541.633 cv
263.158 541.633 263.159 541.633 263.159 541.633 cv
260.227 541.633 257.852 544.009 257.852 546.941 cv
257.852 610.521 li
level3{
gsave
clp
[3.74046e-15 -61.0864 61.0864 3.74046e-15 263.159 612.45 ]ct
/6 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[3.74046e-15 -61.0864 61.0864 3.74046e-15 263.159 612.45 ]ct
clp
/6 /Gradient get_res exec grestore
}if
np
292.504 614.743 mo
290.136 614.743 288.216 612.823 288.216 610.455 cv
288.216 549.508 li
288.216 547.14 290.136 545.219 292.504 545.219 cv
294.873 545.219 296.793 547.14 296.793 549.508 cv
296.793 610.455 li
296.793 612.823 294.873 614.743 292.504 614.743 cv
level3{
gsave
clp
[3.74046e-15 -61.0864 61.0864 3.74046e-15 292.504 612.45 ]ct
/6 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[3.74046e-15 -61.0864 61.0864 3.74046e-15 292.504 612.45 ]ct
clp
/6 /Gradient get_res exec grestore
}if
np
292.504 615.827 mo
289.573 615.827 287.197 613.451 287.197 610.521 cv
287.197 610.521 li
287.197 613.451 289.573 615.827 292.504 615.827 cv
295.434 615.827 297.811 613.451 297.811 610.521 cv
297.811 546.941 li
297.811 544.066 295.526 541.726 292.675 541.636 cv
295.526 541.726 297.811 544.066 297.811 546.941 cv
297.811 610.521 li
297.811 613.451 295.434 615.827 292.504 615.827 cv
level3{
gsave
clp
[1.74172e-14 284.445 -284.445 1.74172e-14 219.141 487.445 ]ct
/19 
<<
/ShadingType 2 
/ColorSpace /0 /CSA get_res
/Coords [0 0 1 0 ]
/Domain [0 1 ]
/Extend[ true true]
/Function
<<
/Domain[0 1 ] 
/FunctionType 3
/Functions [
<<
/Domain[0 1 ] 
/Range[0 1 0 1 0 1 ] 
/FunctionType 0
/Order 1 
/DataSource <~h2l+%OCI%-@bm,Th2l+%OCI%-@bm,Th2l+%OCI%-@bm,Th2l+%OCI%-@bm,Th2l+%OCI%-@bm,Th2l+%
OCI%-@bm,Th2l+%OCI%-@bm,Th2l+%OCI%-@bm,Th2l+%OCI%-@bm,Th2l+%OCI%-@bm,Th2l+%OCI%-
@bm,Th2l+%OCI%-@bm,Th2l+%OCI%-@bm,Th2l+%OCI%-@bm,Th2l+%OCI%-@bm,Th2l+%OCI%-@bm,T
~>
/BitsPerSample 8 
/Encode [0 63 ]
/Decode [0 1 0 1 0 1 ]
/Size [64 ]
>>
<<
/Domain[0 1 ] 
/Range[0 1 0 1 0 1 ] 
/FunctionType 0
/Order 1 
/DataSource <~h2l+%OCI%-@bm,Th2l+%OCI%-@bm,Th2l+%OCI%-@bm,Th2l+%OCI%-@bm,Th2l+%OCI%-@bm,Th2l+%
OCI%-@bm,Th2l+%OCI%-@bm)Sh2c%$O($k*@GQuQh2c""O($h(@GHlOgl>dtNaUY&@,-cMgl5^rNF:M"
?e^NHgP]CmMdG+p?J:9Cg50+gLg8Vg>hOj:fnEY`KNd#\=kA7-f7@&TIok0L<RlIse9b-CGZ)t6;:0M^
~>
/BitsPerSample 8 
/Encode [0 63 ]
/Decode [0 1 0 1 0 1 ]
/Size [64 ]
>>
]
/Bounds [1.89999e-07 ]
/Encode [0 1 0 1 ]
>>
>>/Gradient add_res /19 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[1.74172e-14 284.445 -284.445 1.74172e-14 219.141 487.445 ]ct
clp
/19 {
/0 /CSA get_res setcolorspace
<<
/NumSamples 256 
/NumComp 3 
/Scaling[[.00392157 0 ][.00392157 0 ][.00392157 0 ]]
/Samples[
<~gt^]?gt^]?gt^]?gt^]?gt^]?gt^]?gt^]?gt^]?gt^]?gt^]?gt^]?gt^]?gt^]?gt^]?gt^]?gt^]?
gt^]?gt^]?gt^]?gt^]?gt^]?gt^]?gt^]?gt^]?gt^]?gt^]?gt^]?gt^]?gt^]?gt^]?gt^]?gt^]?
gt^]?gt^]>gY:K;gY:K;gY:K;gY:K;gY:K;gY:K;gY:K;gY:K:g=k97g=k97g=k97g=k97g=k96g"G'3
g"G'3g"G'3f\"j/f\"j/f\"j/f\"j/f\"j/f@SX+f%/F'f%/F'e^`4#eC<!teC<!te'ldpdaHRldF$@h
~>
<~O,o?_O,o?_O,o?_O,o?_O,o?_O,o?_O,o?_O,o?_O,o?_O,o?_O,o?_O,o?_O,o?_O,o?_O,o?_O,o?_
O,o?_O,o?_O,o?_O,o?_O,o?_O,o?_O,o?_O,o?_O,o?_O,o?_O,o?_O,o<]NfK-[NfK-[NfK-[NfK-[
NfK-[NfK-[NfK-ZNK&pWNK&pWNK&pWNK&pWNK&pWNK&pVN/W^SN/W^RMi3LOMi3LNMMd:KMMd:JM2@(G
M2@(GLkpkCLPLY?L5(G;KnY57KS5#3K7ef/JqAT+JUrB'J:N-!IXZ`pI=6KjH[C*dH?sj]GB\7TG'8"N
~>
<~@:<SQ@:<SQ@:<SQ@:<SQ@:<SQ@:<SQ@:<SQ@:<SQ@:<SQ@:<SQ@:<SQ@:<SQ@:<SQ@:<SQ@:<SQ@:<SQ
@:<SQ@:<SQ@:<SQ@:<SQ@:<SQ@:<SQ@:<SQ@:<SQ@:<SQ@:<SQ@:<SQ@:<SQ@:<SQ@:<PO?smAM?smAM
?smAM?smAM?smAM?smAM?smAL?XI/I?XI/I?XI/I?XI/I?XI/I?XI/H?=$rE?=$rD?!U`A?!U`A?!U`A
?!U`A>[1N=>?b<9>?b<9>?b<9>$>*5=]nm1=BJ[-='&I)='&I)<`W4#<)cgr<)cdp;GpCj;,L1f:f'q`
~>
]
>>
0 0 1 0 []true true []
/DeviceRGB
GenStrips
} /Gradient add_res /19 /Gradient get_res exec grestore
}if
np
292.504 615.827 mo
289.573 615.827 287.197 613.451 287.197 610.521 cv
287.197 546.941 li
287.197 544.009 289.573 541.633 292.504 541.633 cv
292.561 541.633 292.618 541.634 292.675 541.636 cv
295.526 541.726 297.811 544.066 297.811 546.941 cv
297.811 610.521 li
297.811 613.451 295.434 615.827 292.504 615.827 cv
292.504 545.219 mo
290.136 545.219 288.216 547.14 288.216 549.508 cv
288.216 610.455 li
288.216 612.823 290.136 614.743 292.504 614.743 cv
294.873 614.743 296.793 612.823 296.793 610.455 cv
296.793 549.508 li
296.793 547.14 294.873 545.219 292.504 545.219 cv
level3{
gsave
clp
[3.74046e-15 -61.0864 61.0864 3.74046e-15 292.504 612.45 ]ct
/9 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[3.74046e-15 -61.0864 61.0864 3.74046e-15 292.504 612.45 ]ct
clp
/9 /Gradient get_res exec grestore
}if
np
263.159 615.827 mo
263.159 615.827 263.159 615.827 263.159 615.827 cv
266.09 615.827 268.466 613.451 268.466 610.521 cv
268.466 546.941 li
268.466 546.941 li
268.466 610.521 li
268.466 613.451 266.09 615.827 263.159 615.827 cv
268.445 546.465 mo
268.204 543.756 265.93 541.633 263.159 541.633 cv
263.159 541.633 263.159 541.633 263.159 541.633 cv
265.93 541.633 268.204 543.756 268.445 546.465 cv
level3{
gsave
clp
[1.74172e-14 284.445 -284.445 1.74172e-14 219.141 487.445 ]ct
/19 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[1.74172e-14 284.445 -284.445 1.74172e-14 219.141 487.445 ]ct
clp
/19 /Gradient get_res exec grestore
}if
np
263.159 615.827 mo
260.33 615.827 258.019 613.615 257.86 610.828 cv
257.854 610.726 257.852 610.624 257.852 610.521 cv
257.852 546.941 li
257.852 544.009 260.227 541.633 263.159 541.633 cv
265.93 541.633 268.204 543.756 268.445 546.465 cv
268.459 546.622 268.466 546.78 268.466 546.941 cv
268.466 610.521 li
268.466 613.451 266.09 615.827 263.159 615.827 cv
263.159 545.219 mo
260.79 545.219 258.87 547.14 258.87 549.508 cv
258.87 610.455 li
258.87 612.823 260.79 614.743 263.159 614.743 cv
265.527 614.743 267.447 612.823 267.447 610.455 cv
267.447 549.508 li
267.447 547.14 265.527 545.219 263.159 545.219 cv
level3{
gsave
clp
[3.74046e-15 -61.0864 61.0864 3.74046e-15 263.159 612.45 ]ct
/9 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[3.74046e-15 -61.0864 61.0864 3.74046e-15 263.159 612.45 ]ct
clp
/9 /Gradient get_res exec grestore
}if
np
233.813 615.827 mo
230.883 615.827 228.507 613.451 228.507 610.521 cv
228.507 546.941 li
228.507 544.009 230.883 541.633 233.813 541.633 cv
236.745 541.633 239.121 544.009 239.121 546.941 cv
239.121 610.521 li
239.121 613.451 236.745 615.827 233.813 615.827 cv
233.813 545.219 mo
231.445 545.219 229.525 547.14 229.525 549.508 cv
229.525 610.455 li
229.525 612.823 231.445 614.743 233.813 614.743 cv
236.182 614.743 238.102 612.823 238.102 610.455 cv
238.102 549.508 li
238.102 547.14 236.182 545.219 233.813 545.219 cv
level3{
gsave
clp
[3.74046e-15 -61.0864 61.0864 3.74046e-15 233.814 612.45 ]ct
/9 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[3.74046e-15 -61.0864 61.0864 3.74046e-15 233.814 612.45 ]ct
clp
/9 /Gradient get_res exec grestore
}if
np
204.469 615.827 mo
204.469 615.827 li
201.584 615.827 199.236 613.525 199.163 610.658 cv
199.162 610.612 199.161 610.566 199.161 610.521 cv
199.161 546.941 li
199.161 544.009 201.538 541.633 204.469 541.633 cv
207.399 541.633 209.775 544.009 209.775 546.941 cv
209.775 610.521 li
209.775 613.451 207.399 615.827 204.469 615.827 cv
204.469 545.219 mo
202.099 545.219 200.18 547.14 200.18 549.508 cv
200.18 610.455 li
200.18 612.823 202.099 614.743 204.469 614.743 cv
206.837 614.743 208.757 612.823 208.757 610.455 cv
208.757 549.508 li
208.757 547.14 206.837 545.219 204.469 545.219 cv
level3{
gsave
clp
[3.74046e-15 -61.0864 61.0864 3.74046e-15 204.468 612.45 ]ct
/9 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[3.74046e-15 -61.0864 61.0864 3.74046e-15 204.468 612.45 ]ct
clp
/9 /Gradient get_res exec grestore
}if
np
175.123 615.827 mo
172.192 615.827 169.816 613.451 169.816 610.521 cv
169.816 546.941 li
169.816 544.009 172.192 541.633 175.123 541.633 cv
178.055 541.633 180.431 544.009 180.431 546.941 cv
180.431 610.521 li
180.431 613.451 178.055 615.827 175.123 615.827 cv
175.123 545.219 mo
172.755 545.219 170.834 547.14 170.834 549.508 cv
170.834 610.455 li
170.834 612.823 172.755 614.743 175.123 614.743 cv
177.492 614.743 179.412 612.823 179.412 610.455 cv
179.412 549.508 li
179.412 547.14 177.492 545.219 175.123 545.219 cv
level3{
gsave
clp
[3.74046e-15 -61.0864 61.0864 3.74046e-15 175.123 612.45 ]ct
/9 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[3.74046e-15 -61.0864 61.0864 3.74046e-15 175.123 612.45 ]ct
clp
/9 /Gradient get_res exec grestore
}if
np
145.778 615.827 mo
142.848 615.827 140.471 613.451 140.471 610.521 cv
140.471 546.941 li
140.471 544.009 142.848 541.633 145.778 541.633 cv
148.709 541.633 151.085 544.009 151.085 546.941 cv
151.085 610.521 li
151.085 613.451 148.709 615.827 145.778 615.827 cv
145.778 545.219 mo
143.409 545.219 141.489 547.14 141.489 549.508 cv
141.489 610.455 li
141.489 612.823 143.409 614.743 145.778 614.743 cv
148.146 614.743 150.067 612.823 150.067 610.455 cv
150.067 549.508 li
150.067 547.14 148.146 545.219 145.778 545.219 cv
level3{
gsave
clp
[3.74046e-15 -61.0864 61.0864 3.74046e-15 145.778 612.45 ]ct
/9 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[3.74046e-15 -61.0864 61.0864 3.74046e-15 145.778 612.45 ]ct
clp
/9 /Gradient get_res exec grestore
}if
np
73.017 939.108 mo
68.7651 939.108 li
64.5121 939.108 li
63.084 939.108 61.9258 937.951 61.9258 936.523 cv
61.9258 934.186 li
61.9258 932.758 60.7681 931.6 59.3403 931.6 cv
43.3252 931.6 li
41.8969 931.6 40.7392 932.758 40.7392 934.186 cv
40.7392 936.523 li
40.7392 937.951 39.5815 939.108 38.1527 939.108 cv
29.6478 939.108 li
28.2192 939.108 27.0615 937.951 27.0615 936.523 cv
27.0615 934.186 li
27.0615 932.758 25.9038 931.6 24.475 931.6 cv
20.7503 931.6 li
20.7503 813.394 li
20.7503 808.948 17.9183 805.165 13.9599 803.748 cv
11.8984 803.01 10.4857 801.111 10.4604 798.919 cv
10.4297 796.217 li
157.362 800.669 li
161.824 800.805 165.873 803.314 167.981 807.247 cv
171.018 812.917 li
171.649 814.096 172.465 815.164 173.435 816.083 cv
180.713 822.977 li
183.114 825.253 184.514 828.389 184.603 831.697 cv
186.917 917.461 li
187.104 924.408 181.577 930.17 174.627 930.271 cv
82.5497 931.6 li
78.1893 931.6 li
76.7617 931.6 75.6035 932.758 75.6035 934.186 cv
75.6035 936.523 li
75.6035 937.951 74.4463 939.108 73.017 939.108 cv
53.1951 904.666 mo
51.5064 904.666 46.8294 905.024 50.3089 909.239 cv
50.8769 909.928 51.5779 910.209 52.2964 910.209 cv
55.3267 910.21 58.6771 905.212 53.7613 904.681 cv
53.7613 904.681 53.5405 904.666 53.1951 904.666 cv
118.787 897.449 mo
118.787 897.449 li
120.691 897.449 li
123.439 897.449 125.667 895.22 125.667 892.472 cv
125.667 846.91 li
125.667 846.91 li
125.667 846.91 li
125.667 844.161 123.439 841.934 120.691 841.934 cv
120.69 841.934 li
120.69 841.934 li
100.39 841.934 li
100.357 841.934 100.325 841.934 100.293 841.935 cv
97.5886 841.986 95.413 844.194 95.413 846.91 cv
95.413 846.91 li
95.413 892.472 li
95.413 892.472 li
95.413 895.22 97.6405 897.449 100.39 897.449 cv
102.294 897.449 li
102.294 897.449 li
102.294 897.449 li
118.787 897.449 li
173.269 883.422 mo
172.816 883.422 172.084 883.628 171.918 884.913 cv
171.864 885.327 172.132 885.489 172.536 885.489 cv
173.25 885.489 174.392 884.983 174.932 884.478 cv
175.473 883.973 175.413 883.468 173.727 883.468 cv
173.697 883.468 173.666 883.468 173.635 883.468 cv
173.635 883.468 173.483 883.422 173.269 883.422 cv
143.645 861.124 mo
143.161 861.124 139.52 861.227 140.359 864.373 cv
140.948 866.585 142.023 867.399 143.154 867.399 cv
144.732 867.399 146.419 865.816 147.052 864.233 cv
147.685 862.65 147.264 861.067 144.626 861.067 cv
144.343 861.067 144.034 861.086 143.698 861.124 cv
143.698 861.124 143.68 861.124 143.645 861.124 cv
160.564 831.236 mo
158.874 831.236 154.201 831.594 157.68 835.809 cv
158.248 836.497 158.949 836.778 159.667 836.778 cv
162.698 836.779 166.048 831.782 161.132 831.251 cv
161.132 831.251 160.91 831.236 160.564 831.236 cv
57.8158 831.919 mo
57.8158 831.919 52.4525 832.585 55.9043 835.38 cv
56.519 835.878 57.166 836.082 57.7727 836.082 cv
60.353 836.082 62.2103 832.394 57.8158 831.919 cv
51.1547 822.788 mo
48.5829 822.788 41.4714 823.333 46.7656 829.747 cv
47.6299 830.794 48.6968 831.222 49.7901 831.222 cv
54.4017 831.223 59.5005 823.619 52.0184 822.811 cv
52.0184 822.811 51.6816 822.788 51.1547 822.788 cv
106.873 819.678 mo
106.388 819.678 102.749 819.782 103.587 822.928 cv
104.176 825.139 105.251 825.953 106.383 825.953 cv
107.96 825.954 109.647 824.371 110.28 822.788 cv
110.913 821.205 110.492 819.622 107.854 819.622 cv
107.571 819.622 107.262 819.64 106.926 819.679 cv
106.926 819.679 106.907 819.678 106.873 819.678 cv
level3{
gsave
clp
[8.92424e-15 -145.744 145.744 8.92424e-15 95.4129 936.407 ]ct
/16 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[8.92424e-15 -145.744 145.744 8.92424e-15 95.4129 936.407 ]ct
clp
/16 /Gradient get_res exec grestore
}if
np
10.4296 796.217 mo
10.4296 796.217 li
10.3616 790.231 li
10.3616 790.231 li
10.4297 796.217 li
.980392 .901961 .862745 rgb
f
177.612 939.108 mo
173.359 939.108 li
169.107 939.108 li
167.679 939.108 166.52 937.951 166.52 936.523 cv
166.52 934.186 li
166.52 932.758 165.362 931.6 163.934 931.6 cv
147.92 931.6 li
146.492 931.6 145.334 932.758 145.334 934.186 cv
145.334 936.523 li
145.334 937.951 144.176 939.108 142.748 939.108 cv
134.242 939.108 li
132.814 939.108 131.656 937.951 131.656 936.523 cv
131.656 934.186 li
131.656 932.758 130.499 931.6 129.07 931.6 cv
129.068 931.6 li
113.056 931.6 li
113.055 931.6 li
111.626 931.6 110.468 932.758 110.468 934.186 cv
110.468 936.523 li
110.468 937.951 109.31 939.108 107.882 939.108 cv
99.3759 939.108 li
97.9481 939.108 96.7898 937.951 96.7898 936.523 cv
96.7898 934.186 li
96.7898 932.758 95.6328 931.6 94.2041 931.6 cv
82.5497 931.6 li
174.627 930.271 li
181.577 930.17 187.104 924.408 186.917 917.461 cv
184.603 831.697 li
184.514 828.389 183.114 825.253 180.713 822.977 cv
173.435 816.083 li
172.465 815.164 171.649 814.096 171.018 812.917 cv
167.981 807.247 li
165.873 803.314 161.824 800.805 157.362 800.669 cv
10.4296 796.217 li
10.3616 790.231 li
43.2318 790.231 li
71.141 790.231 li
114.373 790.231 li
142.283 790.231 li
190.792 790.231 li
190.792 931.6 li
182.784 931.6 li
181.356 931.6 180.198 932.758 180.198 934.186 cv
180.198 936.523 li
180.198 937.951 179.04 939.108 177.612 939.108 cv
level3{
gsave
clp
[8.92424e-15 -145.744 145.744 8.92424e-15 95.4129 936.407 ]ct
/17 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[8.92424e-15 -145.744 145.744 8.92424e-15 95.4129 936.407 ]ct
clp
/17 /Gradient get_res exec grestore
}if
np
190.792 790.231 mo
190.792 790.231 li
142.283 790.231 li
114.373 790.231 li
71.141 790.231 li
43.2318 790.231 li
10.3616 790.231 li
10.3616 790.231 li
5.2769 790.231 li
2.36218 790.231 0 787.867 0 784.953 cv
0 752.276 li
0 749.362 2.36218 746.998 5.2769 746.998 cv
37.9544 746.998 li
40.8691 746.998 43.2318 749.362 43.2318 752.276 cv
43.2318 757.044 li
43.2318 759.958 45.5947 762.321 48.5087 762.321 cv
65.8641 762.321 li
68.7788 762.321 71.141 759.958 71.141 757.044 cv
71.141 752.276 li
71.141 749.362 73.5039 746.998 76.4179 746.998 cv
92.9062 746.998 li
109.096 746.998 li
112.011 746.998 114.373 749.362 114.373 752.276 cv
114.373 757.044 li
114.373 759.958 116.736 762.321 119.65 762.321 cv
137.006 762.321 li
139.92 762.321 142.283 759.958 142.283 757.044 cv
142.283 752.276 li
142.283 749.362 144.645 746.998 147.56 746.998 cv
180.237 746.998 li
183.151 746.998 185.515 749.362 185.515 752.276 cv
185.515 754.879 li
185.515 757.044 li
185.515 757.815 185.68 758.547 185.977 759.207 cv
186.803 761.043 188.648 762.321 190.792 762.32 cv
190.792 769.841 li
190.792 790.231 li
99.9235 779.209 mo
97.9773 779.209 97.0461 782.258 99.5488 782.653 cv
99.5488 782.653 104.973 782.653 101.521 779.859 cv
100.951 779.397 100.406 779.209 99.9235 779.209 cv
76.1992 781.918 mo
76.1992 781.918 76.3509 781.964 76.5648 781.964 cv
77.0175 781.964 77.7498 781.758 77.917 780.473 cv
77.9705 780.059 77.7024 779.897 77.2983 779.897 cv
76.5832 779.897 75.4419 780.402 74.9011 780.908 cv
74.3605 781.413 74.4206 781.919 76.108 781.919 cv
76.138 781.919 76.1682 781.919 76.1992 781.918 cv
164.497 772.853 mo
164.497 772.853 156.77 772.853 160.716 777.291 cv
161.956 778.686 163.163 779.226 164.214 779.226 cv
167.824 779.227 169.589 772.853 164.497 772.853 cv
85.6049 769.426 mo
82.5745 769.426 79.2245 774.422 84.1404 774.954 cv
84.1404 774.954 84.3618 774.969 84.708 774.969 cv
86.398 774.969 91.0713 774.611 87.5928 770.396 cv
87.0246 769.707 86.3236 769.426 85.6049 769.426 cv
21.7304 762.564 mo
21.7304 762.564 14.0049 762.564 17.9497 767.002 cv
19.1896 768.397 20.3972 768.937 21.4481 768.937 cv
25.0583 768.938 26.8232 762.564 21.7304 762.564 cv
level3{
gsave
clp
[190.792 0 0 190.792 0 768.615 ]ct
/2 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[190.792 0 0 190.792 0 768.615 ]ct
clp
/2 /Gradient get_res exec grestore
}if
np
779.817 928.609 mo
628.276 926.115 li
623.72 926.039 620.065 922.324 620.065 917.767 cv
620.065 812.373 li
620.065 810.573 620.647 808.821 621.724 807.378 cv
629.48 796.993 li
631.006 794.949 633.384 793.715 635.935 793.643 cv
757.336 790.231 li
790.205 790.231 li
790.107 798.919 li
790.082 801.111 788.67 803.01 786.607 803.748 cv
782.649 805.165 779.817 808.948 779.817 813.394 cv
779.817 928.609 li
763.409 909.685 mo
763.409 909.685 757.984 909.685 761.438 912.48 cv
762.008 912.942 762.553 913.129 763.035 913.129 cv
764.981 913.129 765.912 910.081 763.409 909.685 cv
740.604 892.865 mo
740.604 892.865 729.876 894.197 736.78 899.786 cv
738.01 900.782 739.304 901.19 740.517 901.19 cv
745.678 901.191 749.393 893.815 740.604 892.865 cv
698.291 897.449 mo
698.291 897.449 li
700.195 897.449 li
702.943 897.449 705.172 895.22 705.172 892.472 cv
705.172 846.91 li
705.172 846.91 li
705.172 846.91 li
705.172 844.161 702.943 841.934 700.195 841.934 cv
700.194 841.934 li
700.194 841.934 li
679.894 841.934 li
679.861 841.934 679.829 841.934 679.797 841.935 cv
677.094 841.986 674.917 844.194 674.917 846.91 cv
674.917 846.91 li
674.917 892.472 li
674.917 892.472 li
674.917 895.22 677.146 897.449 679.894 897.449 cv
681.798 897.449 li
681.798 897.449 li
681.798 897.449 li
698.291 897.449 li
641.624 889.84 mo
641.624 889.84 634.028 890.783 638.917 894.741 cv
639.787 895.445 640.703 895.734 641.563 895.734 cv
645.216 895.735 647.846 890.513 641.624 889.84 cv
650.433 885.341 mo
649.588 885.341 647.25 885.52 648.99 887.628 cv
649.274 887.972 649.625 888.113 649.984 888.113 cv
651.499 888.113 653.174 885.615 650.716 885.349 cv
650.716 885.349 650.605 885.341 650.433 885.341 cv
638.448 834.141 mo
638.448 834.141 633.023 834.141 636.474 836.936 cv
637.045 837.397 637.59 837.585 638.072 837.585 cv
640.019 837.585 640.95 834.536 638.448 834.141 cv
724.175 816.675 mo
724.175 816.675 716.58 817.618 721.468 821.576 cv
722.338 822.28 723.254 822.569 724.113 822.569 cv
727.767 822.57 730.397 817.348 724.175 816.675 cv
level3{
gsave
clp
[8.92424e-15 -145.744 145.744 8.92424e-15 705.154 936.407 ]ct
/16 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[8.92424e-15 -145.744 145.744 8.92424e-15 705.154 936.407 ]ct
clp
/16 /Gradient get_res exec grestore
}if
np
770.92 939.108 mo
762.414 939.108 li
760.986 939.108 759.828 937.951 759.828 936.523 cv
759.828 934.186 li
759.828 932.758 758.671 931.6 757.242 931.6 cv
741.228 931.6 li
739.8 931.6 738.641 932.758 738.641 934.186 cv
738.641 936.523 li
738.641 937.951 737.483 939.108 736.055 939.108 cv
731.803 939.108 li
727.55 939.108 li
726.122 939.108 724.964 937.951 724.964 936.523 cv
724.964 934.186 li
724.964 932.758 723.806 931.6 722.378 931.6 cv
706.363 931.6 li
704.934 931.6 703.777 932.758 703.777 934.186 cv
703.777 936.523 li
703.777 937.951 702.619 939.108 701.19 939.108 cv
692.686 939.108 li
691.257 939.108 690.099 937.951 690.099 936.523 cv
690.099 934.186 li
690.099 932.758 688.941 931.6 687.513 931.6 cv
687.512 931.6 li
671.499 931.6 li
671.497 931.6 li
670.069 931.6 668.91 932.758 668.91 934.186 cv
668.91 936.523 li
668.91 937.951 667.753 939.108 666.325 939.108 cv
657.819 939.108 li
656.391 939.108 655.233 937.951 655.233 936.523 cv
655.233 934.186 li
655.233 932.758 654.075 931.6 652.647 931.6 cv
636.633 931.6 li
635.204 931.6 634.047 932.758 634.047 934.186 cv
634.047 936.523 li
634.047 937.951 632.889 939.108 631.461 939.108 cv
627.208 939.108 li
622.955 939.108 li
621.526 939.108 620.369 937.951 620.369 936.523 cv
620.369 934.186 li
620.369 932.758 619.211 931.6 617.782 931.6 cv
609.775 931.6 li
609.775 790.231 li
658.284 790.231 li
686.193 790.231 li
729.426 790.231 li
757.336 790.231 li
635.935 793.643 li
633.384 793.715 631.006 794.949 629.48 796.993 cv
621.724 807.378 li
620.647 808.821 620.065 810.573 620.065 812.373 cv
620.065 917.767 li
620.065 922.324 623.72 926.039 628.276 926.115 cv
779.817 928.609 li
779.817 931.6 li
776.092 931.6 li
774.663 931.6 773.506 932.758 773.506 934.186 cv
773.506 936.523 li
773.506 937.951 772.348 939.108 770.92 939.108 cv
level3{
gsave
clp
[8.92424e-15 -145.744 145.744 8.92424e-15 705.154 936.407 ]ct
/17 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[8.92424e-15 -145.744 145.744 8.92424e-15 705.154 936.407 ]ct
clp
/17 /Gradient get_res exec grestore
}if
np
795.29 790.231 mo
790.205 790.231 li
757.336 790.231 li
729.426 790.231 li
686.193 790.231 li
658.284 790.231 li
609.775 790.231 li
609.775 762.32 li
609.776 762.32 609.776 762.32 609.777 762.32 cv
612.691 762.32 615.053 759.958 615.053 757.044 cv
615.053 752.276 li
615.053 749.362 617.416 746.998 620.33 746.998 cv
653.008 746.998 li
655.922 746.998 658.284 749.362 658.284 752.276 cv
658.284 757.044 li
658.284 759.958 660.647 762.321 663.561 762.321 cv
680.917 762.321 li
683.832 762.321 686.193 759.958 686.193 757.044 cv
686.193 752.276 li
686.193 749.362 688.557 746.998 691.472 746.998 cv
724.148 746.998 li
727.063 746.998 729.426 749.362 729.426 752.276 cv
729.426 757.044 li
729.426 759.958 731.789 762.321 734.703 762.321 cv
752.059 762.321 li
754.973 762.321 757.336 759.958 757.336 757.044 cv
757.336 752.276 li
757.336 749.362 759.698 746.998 762.613 746.998 cv
795.291 746.998 li
798.205 746.998 800.567 749.362 800.567 752.276 cv
800.567 784.953 li
800.567 787.867 798.205 790.231 795.29 790.231 cv
696.705 777.348 mo
696.705 777.348 689.493 777.348 694.763 780.151 cv
695.65 780.623 696.421 780.814 697.058 780.814 cv
699.772 780.814 700.07 777.348 696.705 777.348 cv
705.52 771.266 mo
705.52 771.266 700.095 771.266 703.548 774.06 cv
704.118 774.522 704.663 774.709 705.146 774.709 cv
707.092 774.709 708.023 771.66 705.52 771.266 cv
636.129 765.75 mo
636.129 765.75 630.704 765.75 634.156 768.545 cv
634.727 769.007 635.271 769.194 635.754 769.194 cv
637.7 769.194 638.631 766.145 636.129 765.75 cv
778.239 759.894 mo
776.55 759.894 771.874 760.252 775.353 764.468 cv
775.922 765.156 776.622 765.438 777.341 765.438 cv
780.371 765.438 783.721 760.442 778.805 759.909 cv
778.805 759.909 778.584 759.894 778.239 759.894 cv
level3{
gsave
clp
[-156.554 1.91723e-14 -1.91724e-14 -156.554 782.349 768.615 ]ct
/2 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-156.554 1.91723e-14 -1.91724e-14 -156.554 782.349 768.615 ]ct
clp
/2 /Gradient get_res exec grestore
}if
np
182.784 931.6 mo
181.356 931.6 180.198 932.758 180.198 934.186 cv
180.198 936.523 li
180.198 937.951 179.04 939.108 177.612 939.108 cv
173.359 939.108 li
169.107 939.108 li
167.679 939.108 166.52 937.951 166.52 936.523 cv
166.52 934.186 li
166.52 932.758 165.362 931.6 163.934 931.6 cv
147.92 931.6 li
146.492 931.6 145.334 932.758 145.334 934.186 cv
145.334 936.523 li
145.334 937.951 144.176 939.108 142.748 939.108 cv
134.242 939.108 li
132.814 939.108 131.656 937.951 131.656 936.523 cv
131.656 934.186 li
131.656 932.758 130.499 931.6 129.07 931.6 cv
129.068 931.6 li
113.056 931.6 li
113.055 931.6 li
111.626 931.6 110.468 932.758 110.468 934.186 cv
110.468 936.523 li
110.468 937.951 109.31 939.108 107.882 939.108 cv
99.3759 939.108 li
97.9481 939.108 96.7898 937.951 96.7898 936.523 cv
96.7898 934.186 li
96.7898 932.758 95.6328 931.6 94.2041 931.6 cv
78.1893 931.6 li
76.7617 931.6 75.6035 932.758 75.6035 934.186 cv
75.6035 936.523 li
75.6035 937.951 74.4463 939.108 73.017 939.108 cv
68.7651 939.108 li
64.5121 939.108 li
63.084 939.108 61.9258 937.951 61.9258 936.523 cv
61.9258 934.186 li
61.9258 932.758 60.7681 931.6 59.3403 931.6 cv
43.3252 931.6 li
41.8969 931.6 40.7392 932.758 40.7392 934.186 cv
40.7392 936.523 li
40.7392 937.951 39.5815 939.108 38.1527 939.108 cv
29.6478 939.108 li
28.2192 939.108 27.0615 937.951 27.0615 936.523 cv
27.0615 934.186 li
27.0615 932.758 25.9038 931.6 24.475 931.6 cv
8.46092 931.6 li
7.03313 931.6 5.8744 932.758 5.8744 934.186 cv
5.8744 950.2 li
5.8744 951.629 7.03313 952.786 8.46092 952.786 cv
27.0615 952.786 li
40.7392 952.786 li
61.9258 952.786 li
68.7651 952.786 li
75.6035 952.786 li
96.7898 952.786 li
110.468 952.786 li
113.056 952.786 li
129.068 952.786 li
131.656 952.786 li
145.334 952.786 li
166.52 952.786 li
173.359 952.786 li
180.198 952.786 li
190.792 952.786 li
190.792 931.6 li
182.784 931.6 li
1 .85098 .658824 rgb
f
794.692 947.678 mo
793.359 947.042 791.867 946.687 790.292 946.687 cv
620.016 946.687 li
614.36 946.687 609.775 942.102 609.775 936.445 cv
609.775 931.6 li
617.782 931.6 li
619.211 931.6 620.369 932.758 620.369 934.186 cv
620.369 936.523 li
620.369 937.951 621.526 939.108 622.955 939.108 cv
627.208 939.108 li
631.461 939.108 li
632.889 939.108 634.047 937.951 634.047 936.523 cv
634.047 934.186 li
634.047 932.758 635.204 931.6 636.633 931.6 cv
652.647 931.6 li
654.075 931.6 655.233 932.758 655.233 934.186 cv
655.233 936.523 li
655.233 937.951 656.391 939.108 657.819 939.108 cv
666.325 939.108 li
667.753 939.108 668.91 937.951 668.91 936.523 cv
668.91 934.186 li
668.91 932.758 670.069 931.6 671.497 931.6 cv
671.499 931.6 li
687.512 931.6 li
687.513 931.6 li
688.941 931.6 690.099 932.758 690.099 934.186 cv
690.099 936.523 li
690.099 937.951 691.257 939.108 692.686 939.108 cv
701.19 939.108 li
702.619 939.108 703.777 937.951 703.777 936.523 cv
703.777 934.186 li
703.777 932.758 704.934 931.6 706.363 931.6 cv
722.378 931.6 li
723.806 931.6 724.964 932.758 724.964 934.186 cv
724.964 936.523 li
724.964 937.951 726.122 939.108 727.55 939.108 cv
731.803 939.108 li
736.055 939.108 li
737.483 939.108 738.641 937.951 738.641 936.523 cv
738.641 934.186 li
738.641 932.758 739.8 931.6 741.228 931.6 cv
757.242 931.6 li
758.671 931.6 759.828 932.758 759.828 934.186 cv
759.828 936.523 li
759.828 937.951 760.986 939.108 762.414 939.108 cv
770.92 939.108 li
772.348 939.108 773.506 937.951 773.506 936.523 cv
773.506 934.186 li
773.506 932.758 774.663 931.6 776.092 931.6 cv
779.817 931.6 li
792.106 931.6 li
793.534 931.6 794.692 932.758 794.692 934.186 cv
794.692 947.678 li
level3{
gsave
clp
[184.917 0 0 184.917 609.776 942.193 ]ct
/2 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[184.917 0 0 184.917 609.776 942.193 ]ct
clp
/2 /Gradient get_res exec grestore
}if
np
790.292 992.407 mo
781.302 992.407 li
674.681 990.279 li
669.158 990.17 664.624 985.875 664.217 980.365 cv
662.805 961.308 li
662.354 955.223 667.07 949.992 673.169 949.813 cv
779.343 946.687 li
620.016 946.687 li
614.36 946.687 609.775 942.102 609.775 936.445 cv
609.775 936.445 li
609.775 942.102 614.36 946.687 620.016 946.687 cv
790.292 946.687 li
791.867 946.687 793.359 947.042 794.692 947.678 cv
798.146 949.324 800.533 952.847 800.533 956.928 cv
800.533 982.166 li
800.533 987.822 795.948 992.407 790.292 992.407 cv
703.006 969.846 mo
703.006 969.846 697.642 970.512 701.095 973.307 cv
701.709 973.805 702.356 974.009 702.963 974.009 cv
705.543 974.009 707.4 970.321 703.006 969.846 cv
696.345 960.715 mo
693.773 960.715 686.662 961.26 691.956 967.674 cv
692.82 968.721 693.887 969.149 694.98 969.149 cv
699.592 969.15 704.691 961.546 697.209 960.738 cv
697.209 960.738 696.872 960.715 696.345 960.715 cv
93.7186 992.407 mo
10.2758 992.407 li
4.61952 992.407 .0340365 987.822 .0340365 982.166 cv
.0340365 956.928 li
.0340365 952.847 2.42091 949.324 5.8744 947.678 cv
7.20788 947.042 8.70015 946.687 10.2758 946.687 cv
180.55 946.687 li
186.206 946.687 190.792 942.101 190.792 936.444 cv
190.792 936.444 li
190.792 769.841 li
190.792 733.279 li
190.792 729.252 li
190.792 707.811 li
190.792 712.454 li
547.765 716.833 li
550.782 716.87 553.644 718.18 555.646 720.439 cv
571.178 737.961 li
571.549 738.379 571.951 738.768 572.384 739.123 cv
572.949 739.589 li
572.456 739.995 572.464 740.657 573.799 741.738 cv
574.369 742.199 574.914 742.387 575.397 742.387 cv
575.669 742.387 575.922 742.327 576.148 742.223 cv
592.805 755.942 li
595.377 758.059 596.816 761.253 596.699 764.583 cv
590.343 945.727 li
590.141 951.491 585.409 956.06 579.641 956.06 cv
565.63 956.06 li
560.371 956.06 555.888 952.253 555.059 947.06 cv
551.922 927.419 543.632 879.053 531.791 836.426 cv
516.505 781.391 413.972 731.044 413.972 731.044 cv
413.972 731.044 409.23 732.692 401.363 735.916 cv
400.658 735.577 400.284 735.407 400.284 735.407 cv
400.284 735.407 396.046 737.337 389.285 741.088 cv
372.585 748.539 349.549 760.046 327.051 775.305 cv
284.55 804.131 277.83 869.703 277.83 869.703 cv
276.93 976.346 li
276.882 982.093 272.305 986.776 266.559 986.958 cv
93.7186 992.407 li
74.2944 977.416 mo
73.8415 977.416 73.1092 977.622 72.9427 978.907 cv
72.8889 979.321 73.1569 979.483 73.5609 979.483 cv
74.2759 979.483 75.4171 978.978 75.9578 978.472 cv
76.4984 977.967 76.4379 977.462 74.7502 977.462 cv
74.7206 977.462 74.6907 977.462 74.6602 977.462 cv
74.6602 977.462 74.5085 977.416 74.2944 977.416 cv
193.464 972.33 mo
193.464 972.33 188.101 972.997 191.553 975.792 cv
192.167 976.289 192.814 976.493 193.42 976.494 cv
196.001 976.494 197.859 972.805 193.464 972.33 cv
186.803 963.199 mo
184.231 963.199 177.12 963.744 182.414 970.158 cv
183.279 971.206 184.345 971.634 185.439 971.634 cv
190.05 971.634 195.147 964.031 187.667 963.222 cv
187.667 963.222 187.33 963.199 186.803 963.199 cv
122.602 957.943 mo
120.913 957.943 116.24 958.301 119.719 962.517 cv
120.287 963.205 120.987 963.486 121.706 963.486 cv
124.736 963.486 128.086 958.489 123.17 957.958 cv
123.17 957.958 122.949 957.943 122.602 957.943 cv
36.2735 954 mo
35.7856 954 32.15 954.104 32.9883 957.249 cv
33.5777 959.461 34.6526 960.275 35.7838 960.275 cv
37.3613 960.275 39.0483 958.692 39.6813 957.109 cv
40.3144 955.526 39.8933 953.944 37.2555 953.944 cv
36.972 953.944 36.6633 953.962 36.3271 954 cv
36.3271 954 36.3083 954 36.2735 954 cv
41.0068 947.706 mo
41.0068 947.706 82.8252 950.143 92.4687 950.143 cv
102.111 950.143 155.659 947.706 155.659 947.706 cv
41.0068 947.706 li
224.406 919.004 mo
223.56 919.004 221.226 919.184 222.966 921.29 cv
223.25 921.635 223.6 921.775 223.96 921.775 cv
225.475 921.775 227.149 919.277 224.691 919.012 cv
224.691 919.012 224.58 919.004 224.406 919.004 cv
236.459 906.439 mo
233.886 906.439 226.778 906.985 232.071 913.399 cv
232.936 914.446 234.002 914.874 235.096 914.874 cv
239.707 914.875 244.806 907.27 237.324 906.462 cv
237.324 906.462 236.987 906.439 236.459 906.439 cv
264.097 875.705 mo
264.097 875.705 256.371 875.705 260.316 880.143 cv
261.556 881.538 262.764 882.078 263.815 882.079 cv
267.425 882.079 269.189 875.705 264.097 875.705 cv
579.965 848.622 mo
579.965 848.622 574.54 848.622 577.993 851.416 cv
578.563 851.878 579.109 852.066 579.591 852.066 cv
581.537 852.066 582.467 849.018 579.965 848.622 cv
557.16 831.801 mo
557.16 831.801 546.432 833.135 553.336 838.723 cv
554.565 839.718 555.86 840.126 557.073 840.127 cv
562.234 840.127 565.948 832.751 557.16 831.801 cv
223.732 831.083 mo
223.125 831.083 222.143 831.227 221.92 832.119 cv
221.848 832.407 222.207 832.519 222.749 832.519 cv
223.707 832.519 225.237 832.168 225.961 831.817 cv
226.685 831.466 226.604 831.115 224.345 831.115 cv
224.305 831.115 224.264 831.115 224.222 831.115 cv
224.222 831.115 224.019 831.083 223.732 831.083 cv
282.551 815.093 mo
282.066 815.093 278.427 815.159 279.266 817.161 cv
279.855 818.569 280.93 819.087 282.061 819.087 cv
283.639 819.087 285.325 818.08 285.958 817.072 cv
286.592 816.064 286.171 815.057 283.533 815.057 cv
283.25 815.057 282.941 815.068 282.604 815.093 cv
282.604 815.093 282.586 815.093 282.551 815.093 cv
518.262 776.039 mo
516.573 776.039 511.896 776.397 515.376 780.612 cv
515.944 781.301 516.645 781.582 517.364 781.582 cv
520.394 781.582 523.743 776.586 518.828 776.054 cv
518.828 776.054 518.607 776.039 518.262 776.039 cv
250.747 767.594 mo
249.056 767.594 244.384 767.953 247.862 772.167 cv
248.43 772.856 249.131 773.137 249.85 773.137 cv
252.88 773.137 256.23 768.141 251.314 767.61 cv
251.314 767.61 251.093 767.594 250.747 767.594 cv
235.906 759.91 mo
235.906 759.91 230.481 759.91 233.934 762.704 cv
234.504 763.166 235.049 763.354 235.532 763.354 cv
237.478 763.354 238.409 760.305 235.906 759.91 cv
258.89 760.599 mo
258.437 760.599 257.704 760.805 257.538 762.09 cv
257.484 762.504 257.752 762.665 258.156 762.666 cv
258.871 762.666 260.012 762.16 260.553 761.655 cv
261.094 761.15 261.034 760.644 259.348 760.644 cv
259.318 760.644 259.287 760.644 259.256 760.645 cv
259.256 760.645 259.104 760.599 258.89 760.599 cv
332.229 752.407 mo
331.745 752.407 328.104 752.511 328.943 755.658 cv
329.533 757.869 330.607 758.683 331.738 758.683 cv
333.316 758.683 335.003 757.1 335.636 755.517 cv
336.269 753.934 335.848 752.351 333.209 752.351 cv
332.926 752.351 332.618 752.369 332.282 752.407 cv
332.282 752.407 332.264 752.407 332.229 752.407 cv
566.957 745.025 mo
566.957 745.025 559.744 745.025 565.014 747.827 cv
565.901 748.3 566.672 748.491 567.31 748.491 cv
570.024 748.491 570.321 745.025 566.957 745.025 cv
517.419 739.631 mo
516.966 739.631 516.233 739.837 516.066 741.123 cv
516.013 741.537 516.281 741.698 516.684 741.698 cv
517.4 741.698 518.541 741.193 519.082 740.687 cv
519.623 740.182 519.563 739.677 517.874 739.677 cv
517.845 739.677 517.815 739.677 517.784 739.677 cv
517.784 739.677 517.633 739.631 517.419 739.631 cv
309.626 726.34 mo
309.626 726.34 304.201 726.34 307.653 729.134 cv
308.224 729.596 308.769 729.783 309.251 729.783 cv
311.198 729.784 312.128 726.735 309.626 726.34 cv
270.157 722.533 mo
270.157 722.533 262.432 722.533 266.377 726.973 cv
267.617 728.368 268.824 728.908 269.875 728.908 cv
273.485 728.908 275.25 722.533 270.157 722.533 cv
349.15 722.518 mo
347.461 722.518 342.784 722.876 346.264 727.092 cv
346.832 727.78 347.533 728.062 348.252 728.062 cv
351.282 728.062 354.632 723.065 349.716 722.533 cv
349.716 722.533 349.495 722.518 349.15 722.518 cv
460.196 722.519 mo
460.196 722.519 454.771 722.519 458.225 725.314 cv
458.795 725.775 459.34 725.963 459.822 725.963 cv
461.768 725.963 462.699 722.914 460.196 722.519 cv
431.531 715.928 mo
431.531 715.928 424.319 715.928 429.589 718.732 cv
430.476 719.204 431.247 719.395 431.884 719.395 cv
434.599 719.395 434.896 715.928 431.531 715.928 cv
180.502 692.584 mo
180.434 686.624 li
180.435 686.624 li
180.502 692.584 li
level3{
gsave
clp
[1.86047e-14 303.839 -303.839 1.86047e-14 400.284 719.43 ]ct
/20 
<<
/ShadingType 2 
/ColorSpace /0 /CSA get_res
/Coords [0 0 1 0 ]
/Domain [0 1 ]
/Extend[ true true]
/Function
<<
/Domain[0 1 ] 
/FunctionType 3
/Functions [
<<
/Domain[0 1 ] 
/FunctionType 2
/C0 [.952941 .745098 .564706 ]
/C1 [.952941 .745098 .564706 ]
/N 1 
>>
<<
/Domain[0 1 ] 
/FunctionType 2
/C0 [1 .85098 .658824 ]
/C1 [.952941 .745098 .564706 ]
/N 4.97729 
>>
]
/Bounds [1.89999e-07 ]
/Encode [0 1 1 0 ]
>>
>>/Gradient add_res /20 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[1.86047e-14 303.839 -303.839 1.86047e-14 400.284 719.43 ]ct
clp
/20 {
/0 /CSA get_res setcolorspace
<<
/NumSamples 256 
/NumComp 3 
/Scaling[[.00392157 0 ][.00392157 0 ][.00392157 0 ]]
/Samples[
<~oCMSFoCV\Io^qhLp%A"Op@e4Rp@n=Up\4FWq"XXZq"X[\q>'j^q>'m`qYL'bqYL'cqtp9fqtp9fqtp9g
r;?Kjr;?Kjr;?Kjr;?NlrVc]nrVc]nrVc]nrVc]nrVc]nrVlfqrr2orrr2orrr2orrr2orrr2orrr2or
rr2orrr2orrr2orrr2orrr2orrr2orrr2orrr2orrr2orrr2orrr2orrr2orrr2orrr2orrr2orrr2or
rr2orrr2orrr2orrr2orrr2orrr2orrr2orrr2orrr2orrr2orrr2orrr2orrr2orrr2orrr2orrr2or
~>
<~^:q@s^qde&_8=(,_o0L4`Poj:`lH-@aN2KFai_cKbKJ)Qbfn;Uc-=MYcHa_]cd0qad*U.ddF$@hdF-Ik
daHRme'ldpe'lgreC<!teC<%!e^`4#e^`4#f%/F'f%/F'f%/F'f%8O*f@SX+f@SX+f@SX+f@SX+f\"j/
f\"j/f\"j/f\"j/f\"j/f\"j/f\"j/f\"j/f\"j/f\"j/f\"j/f\"j/f\"j/f\"j/f\"j/f\"j/f\"j/
f\"j/f\"j/f\"j/f\"j/f\"j/f\"j/f\"j/f\"j/f\"j/f\"j/f\"j/f\"j/f\"j/f\"j/f\"j/f\"j/
~>
<~OH>QdOcklkPEV5qQ'IW#QBml(Q^F/-R@0J3R[T_8S"#q<S=H.@SXl@DSt;RHT:_aKTV.sNTV8'QTqS0S
U8"BVU8"EXUSFTZUSFW\Unjf^Unjf^V5:#bV5:#bV5:#bV5C,eVP^5fVP^5fVP^5fVP^5fVPg>iVl-Gj
Vl-GjVl-GjVl-GjVl-GjVl-GjVl-GjVl-GjVl-GjVl-GjVl-GjVl-GjVl-GjVl-GjVl-GjVl-GjVl-Gj
Vl-GjVl-GjVl-GjVl-GjVl-GjVl-GjVl-GjVl-GjVl-GjVl-GjVl-GjVl-GjVl-GjVl-GjVl-GjVl-Gj
~>
]
>>
0 0 1 0 []true true []
/DeviceRGB
GenStrips
} /Gradient add_res /20 /Gradient get_res exec grestore
}if
np
781.302 992.407 mo
616.901 992.407 li
576.863 992.407 li
504.028 992.407 li
504.028 992.407 504.028 909.276 504.028 863.907 cv
504.028 787.553 412.382 741.212 401.363 735.916 cv
409.23 732.692 413.972 731.044 413.972 731.044 cv
413.972 731.044 516.505 781.391 531.791 836.426 cv
543.632 879.053 551.922 927.419 555.059 947.06 cv
555.888 952.253 560.371 956.06 565.63 956.06 cv
579.641 956.06 li
585.409 956.06 590.141 951.491 590.343 945.727 cv
596.699 764.583 li
596.816 761.253 595.377 758.059 592.805 755.942 cv
576.148 742.223 li
577.536 741.585 577.924 739.283 575.771 738.944 cv
575.771 738.944 573.73 738.944 572.949 739.589 cv
572.384 739.123 li
571.951 738.768 571.549 738.379 571.178 737.961 cv
555.646 720.439 li
553.644 718.18 550.782 716.87 547.765 716.833 cv
190.792 712.454 li
190.792 707.811 li
199.103 707.811 li
200.531 707.811 201.689 706.653 201.689 705.224 cv
201.689 702.887 li
201.689 701.459 202.848 700.301 204.275 700.301 cv
212.781 700.301 li
214.209 700.301 215.367 701.459 215.367 702.887 cv
215.367 705.224 li
215.367 706.653 216.524 707.811 217.953 707.811 cv
233.968 707.811 li
235.395 707.811 236.554 706.653 236.554 705.224 cv
236.554 702.887 li
236.554 701.459 237.711 700.301 239.14 700.301 cv
243.392 700.301 li
247.645 700.301 li
249.073 700.301 250.231 701.459 250.231 702.887 cv
250.231 705.224 li
250.231 706.653 251.389 707.811 252.817 707.811 cv
268.832 707.811 li
270.26 707.811 271.418 706.653 271.418 705.224 cv
271.418 702.887 li
271.418 701.459 272.575 700.301 274.004 700.301 cv
282.509 700.301 li
283.937 700.301 285.096 701.459 285.096 702.887 cv
285.096 705.224 li
285.096 706.653 286.254 707.811 287.682 707.811 cv
287.684 707.811 li
303.696 707.811 li
303.698 707.811 li
305.126 707.811 306.284 706.653 306.284 705.224 cv
306.284 702.887 li
306.284 701.459 307.441 700.301 308.87 700.301 cv
317.375 700.301 li
318.804 700.301 319.962 701.459 319.962 702.887 cv
319.962 705.224 li
319.962 706.653 321.12 707.811 322.548 707.811 cv
338.562 707.811 li
339.99 707.811 341.148 706.653 341.148 705.224 cv
341.148 702.887 li
341.148 701.459 342.306 700.301 343.734 700.301 cv
347.987 700.301 li
352.24 700.301 li
353.668 700.301 354.826 701.459 354.826 702.887 cv
354.826 705.224 li
354.826 706.653 355.983 707.811 357.412 707.811 cv
373.427 707.811 li
374.854 707.811 376.013 706.653 376.013 705.224 cv
376.013 702.887 li
376.013 701.459 377.171 700.301 378.599 700.301 cv
387.104 700.301 li
388.532 700.301 389.69 701.459 389.69 702.887 cv
389.69 705.224 li
389.69 706.653 390.848 707.811 392.276 707.811 cv
408.291 707.811 li
409.005 707.811 409.651 707.521 410.12 707.053 cv
410.588 706.585 410.877 705.938 410.877 705.224 cv
410.877 702.887 li
410.877 701.459 412.035 700.301 413.463 700.301 cv
421.969 700.301 li
423.396 700.301 424.555 701.459 424.555 702.887 cv
424.555 705.224 li
424.555 706.653 425.713 707.811 427.141 707.811 cv
443.155 707.811 li
444.584 707.811 445.741 706.653 445.741 705.224 cv
445.741 702.887 li
445.741 701.459 446.899 700.301 448.327 700.301 cv
452.58 700.301 li
456.833 700.301 li
458.261 700.301 459.419 701.459 459.419 702.887 cv
459.419 705.224 li
459.419 706.653 460.577 707.811 462.005 707.811 cv
478.019 707.811 li
479.447 707.811 480.606 706.653 480.606 705.224 cv
480.606 702.887 li
480.606 701.459 481.764 700.301 483.192 700.301 cv
491.697 700.301 li
493.126 700.301 494.283 701.459 494.283 702.887 cv
494.283 705.224 li
494.283 706.653 495.441 707.811 496.869 707.811 cv
496.871 707.811 li
512.884 707.811 li
512.886 707.811 li
514.313 707.811 515.472 706.653 515.472 705.224 cv
515.472 702.887 li
515.472 701.459 516.63 700.301 518.058 700.301 cv
526.563 700.301 li
527.992 700.301 529.149 701.459 529.149 702.887 cv
529.149 705.224 li
529.149 706.653 530.308 707.811 531.735 707.811 cv
547.75 707.811 li
549.179 707.811 550.336 706.653 550.336 705.224 cv
550.336 702.887 li
550.336 701.459 551.494 700.301 552.923 700.301 cv
555.626 700.301 li
557.176 700.301 li
561.428 700.301 li
562.856 700.301 564.014 701.459 564.014 702.887 cv
564.014 705.224 li
564.014 705.224 li
564.014 706.653 565.172 707.811 566.6 707.811 cv
582.614 707.811 li
584.043 707.811 585.2 706.653 585.2 705.224 cv
585.2 702.887 li
585.2 701.459 586.359 700.301 587.787 700.301 cv
596.292 700.301 li
597.721 700.301 598.878 701.459 598.878 702.887 cv
598.878 705.224 li
598.878 706.653 600.036 707.811 601.465 707.811 cv
609.775 707.811 li
609.775 762.32 li
609.775 790.231 li
609.775 936.445 li
609.775 936.445 li
609.775 942.102 614.36 946.687 620.016 946.687 cv
779.343 946.687 li
673.169 949.813 li
667.07 949.992 662.354 955.223 662.805 961.308 cv
664.217 980.365 li
664.624 985.875 669.158 990.17 674.681 990.279 cv
781.302 992.407 li
610.313 975.678 mo
608.623 975.678 603.95 976.037 607.429 980.251 cv
607.997 980.94 608.698 981.221 609.417 981.221 cv
612.447 981.221 615.797 976.225 610.881 975.693 cv
610.881 975.693 610.659 975.678 610.313 975.678 cv
536.844 952.786 mo
536.844 952.786 531.42 952.786 534.871 955.581 cv
535.441 956.043 535.986 956.23 536.469 956.23 cv
538.415 956.231 539.346 953.182 536.844 952.786 cv
545.87 932.831 mo
545.87 932.831 538.275 933.774 543.163 937.732 cv
544.033 938.436 544.95 938.725 545.809 938.725 cv
549.462 938.726 552.092 933.504 545.87 932.831 cv
440.346 709.847 mo
440.346 709.847 434.921 709.847 438.373 712.641 cv
438.943 713.103 439.488 713.29 439.971 713.29 cv
441.917 713.29 442.848 710.241 440.346 709.847 cv
296.539 992.407 mo
223.704 992.407 li
183.209 992.407 li
93.7186 992.407 li
266.559 986.958 li
272.305 986.776 276.882 982.093 276.93 976.346 cv
277.83 869.703 li
277.83 869.703 284.55 804.131 327.051 775.305 cv
349.549 760.046 372.585 748.539 389.285 741.088 cv
388.594 741.471 387.881 741.871 387.14 742.292 cv
359.59 757.929 298.109 799.674 296.569 861.537 cv
296.569 861.538 li
296.568 861.577 296.567 861.61 296.566 861.648 cv
296.566 861.653 296.566 861.66 296.565 861.665 cv
296.565 861.7 296.564 861.73 296.563 861.765 cv
296.563 861.775 296.563 861.772 296.563 861.782 cv
296.562 861.812 296.561 861.85 296.561 861.88 cv
296.561 861.885 296.56 861.893 296.56 861.898 cv
296.56 861.932 296.559 861.97 296.558 862.004 cv
296.558 862.011 li
296.556 862.089 296.555 862.168 296.554 862.246 cv
296.554 862.248 li
296.553 862.282 296.552 862.323 296.552 862.358 cv
296.552 862.363 296.551 862.379 296.551 862.384 cv
296.551 862.414 296.55 862.441 296.55 862.471 cv
296.55 862.481 296.55 862.493 296.549 862.503 cv
296.549 862.533 296.549 862.553 296.548 862.584 cv
296.548 862.593 296.548 862.611 296.548 862.621 cv
296.547 862.647 296.547 862.671 296.547 862.697 cv
296.547 862.712 296.546 862.719 296.546 862.734 cv
296.546 862.76 296.546 862.787 296.545 862.813 cv
296.545 862.828 296.545 862.833 296.545 862.848 cv
296.545 862.879 296.544 862.91 296.544 862.94 cv
296.544 862.945 296.544 862.955 296.544 862.96 cv
296.543 862.999 296.543 863.035 296.543 863.074 cv
296.543 863.079 296.543 863.088 296.543 863.093 cv
296.542 863.124 296.542 863.156 296.542 863.187 cv
296.542 863.202 296.542 863.207 296.542 863.222 cv
296.541 863.244 296.541 863.277 296.541 863.299 cv
296.541 863.314 296.541 863.325 296.541 863.34 cv
296.541 863.362 296.54 863.391 296.54 863.412 cv
296.54 863.427 296.54 863.442 296.54 863.456 cv
296.54 863.482 296.54 863.497 296.54 863.523 cv
296.54 863.538 296.54 863.555 296.54 863.57 cv
296.54 863.592 296.54 863.617 296.539 863.639 cv
296.539 863.654 296.539 863.668 296.539 863.683 cv
296.539 863.705 296.539 863.735 296.539 863.757 cv
296.539 863.767 296.539 863.785 296.539 863.795 cv
296.539 863.835 296.539 863.868 296.539 863.907 cv
296.539 863.907 li
296.539 909.276 296.539 992.407 296.539 992.407 cv
620.065 692.584 mo
620.065 689.209 li
620.065 689.209 li
620.065 687.782 618.907 686.624 617.479 686.624 cv
598.879 686.624 li
585.2 686.624 li
564.014 686.624 li
557.176 686.624 li
550.336 686.624 li
529.149 686.624 li
515.472 686.624 li
512.884 686.624 li
496.871 686.624 li
494.283 686.624 li
480.606 686.624 li
459.419 686.624 li
452.58 686.624 li
445.741 686.624 li
424.555 686.624 li
410.877 686.624 li
408.291 686.624 li
392.276 686.624 li
389.69 686.624 li
376.013 686.624 li
354.826 686.624 li
347.987 686.624 li
341.148 686.624 li
319.962 686.624 li
306.284 686.624 li
303.696 686.624 li
287.684 686.624 li
285.096 686.624 li
271.418 686.624 li
250.231 686.624 li
243.392 686.624 li
236.554 686.624 li
215.367 686.624 li
201.689 686.624 li
183.089 686.624 li
181.66 686.624 180.502 687.782 180.502 689.209 cv
180.502 692.584 li
180.502 692.584 li
180.435 686.624 li
208.473 686.624 li
236.383 686.624 li
279.614 686.624 li
293.569 686.624 li
307.524 686.624 li
350.757 686.624 li
378.666 686.624 li
383.946 686.624 li
416.621 686.624 li
421.901 686.624 li
449.81 686.624 li
493.043 686.624 li
506.997 686.624 li
520.952 686.624 li
564.184 686.624 li
592.094 686.624 li
620.133 686.624 li
620.065 692.584 li
level3{
gsave
clp
[1.86047e-14 303.839 -303.839 1.86047e-14 400.284 719.43 ]ct
/21 
<<
/ShadingType 2 
/ColorSpace /0 /CSA get_res
/Coords [0 0 1 0 ]
/Domain [0 1 ]
/Extend[ true true]
/Function
<<
/Domain[0 1 ] 
/FunctionType 3
/Functions [
<<
/Domain[0 1 ] 
/Range[0 1 0 1 0 1 ] 
/FunctionType 0
/Order 1 
/DataSource <~m]1a'X*j?9I."%_m]1a'X*j?9I."%_m]1a'X*j?9I."%_m]1a'X*j?9I."%_m]1a'X*j?9I."%_m]1a'
X*j?9I."%_m]1a'X*j?9I."%_m]1a'X*j?9I."%_m]1a'X*j?9I."%_m]1a'X*j?9I."%_m]1a'X*j?9
I."%_m]1a'X*j?9I."%_m]1a'X*j?9I."%_m]1a'X*j?9I."%_m]1a'X*j?9I."%_m]1a'X*j?9I."%_
~>
/BitsPerSample 8 
/Encode [0 63 ]
/Decode [0 1 0 1 0 1 ]
/Size [64 ]
>>
<<
/Domain[0 1 ] 
/Range[0 1 0 1 0 1 ] 
/FunctionType 0
/Order 1 
/DataSource <~qS\Nm`0'o7Oo!"YqS\Nm`0'o7Oo!"YqS\Nm`0'o7Oo!"YqS\Nm`0'o7Oo!"YqS\Nm`0'o7Oo!"YqS\Nm
`0'o7Oo!"YqS\Nm`0'o7Oo!"YqS\Nm_iX`4OSZkVqSSEk_iX]3OSQeUq8/6h_N4N0O86YRq8&*e_2e<+
NqgDLpqMg`^Q&!%NVC/GpUuO[]o2TsMY=]?ot-(R\qp!gL\/'2o<sDF[=n+WKCQ:"nZdZ7YCQ)DIdX7a
~>
/BitsPerSample 8 
/Encode [0 63 ]
/Decode [0 1 0 1 0 1 ]
/Size [64 ]
>>
]
/Bounds [1.89999e-07 ]
/Encode [0 1 1 0 ]
>>
>>/Gradient add_res /21 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[1.86047e-14 303.839 -303.839 1.86047e-14 400.284 719.43 ]ct
clp
/21 {
/0 /CSA get_res setcolorspace
<<
/NumSamples 256 
/NumComp 3 
/Scaling[[.00392157 0 ][.00392157 0 ][.00392157 0 ]]
/Samples[
<~mI'E1mdKW5n*oi9nF5r:nF?&=nac8Ao()ABo(2JEoCMSFoCV\Io^qeJo_%nMp%A"Np%J+Qp@e4Rp@e4R
p@e4Rp@e7Tp\4FVp\4FVp\4FVp\4IXq"XXZq"XXZq"XXZq"XXZq"XXZq"XXZq"XXZq"X[\q>'j^q>'j^
q>'j^q>'j^q>'j^q>'j^q>'j^q>'j^q>'j^q>'j^q>'j^q>'j^q>'j^q>'j^q>'j^q>'j^q>'j^q>'j^
q>'j^q>'j^q>'j^q>'j^q>'j^q>'j^q>'j^q>'j^q>'j^q>'j^q>'j^q>'j^q>'j^q>'j^q>'j^q>'j^
~>
<~WiN2%XKAV-Y-5%5Yd(I=ZEgdAZEpmE['d<L[C3NP[^W`T\%&rY\[oA`]">Sd]=Y\e]=beh]Y(ni]Y2"l
]tM+m]tM.o^:q=q^:q@s^V@Ou^V@S"^qdb$^qde&_83t(_83t(_83t(_84"*_SX1,_SX1,_SX1,_SX1,
_SX1,_SX1,_SX1-_o'C0_o'C0_o'C0_o'C0_o'C0_o'C0_o'C0_o'C0_o'C0_o'C0_o'C0_o'C0_o'C0
_o'C0_o'C0_o'C0_o'C0_o'C0_o'C0_o'C0_o'C0_o'C0_o'C0_o'C0_o'C0_o'C0_o'C0_o'C0_o'C0
~>
<~H[L3hI=?WpIt3'"J:W9&JV&K*JqJ].K7no3Knb>:L5(G;L51P>LPUbBLl$tFM2@(GM2I1JMMmCNMi3LO
Mi3OQN/W^SN/W^SN/W^SN/WaUNK&pWNK&pWNK&sYNfK-[NfK-[NfK0]O,o?_O,o?_O,o?_O,o?_O,o?_
O,o?_O,o?_O,o?`OH>QcOH>QcOH>QcOH>QcOH>QcOH>QcOH>QcOH>QcOH>QcOH>QcOH>QcOH>QcOH>Qc
OH>QcOH>QcOH>QcOH>QcOH>QcOH>QcOH>QcOH>QcOH>QcOH>QcOH>QcOH>QcOH>QcOH>QcOH>QcOH>Qc
~>
]
>>
0 0 1 0 []true true []
/DeviceRGB
GenStrips
} /Gradient add_res /21 /Gradient get_res exec grestore
}if
np
620.852 686.624 mo
620.133 686.624 li
592.094 686.624 li
564.184 686.624 li
520.952 686.624 li
506.997 686.624 li
493.043 686.624 li
449.81 686.624 li
421.901 686.624 li
416.621 686.624 li
383.946 686.624 li
378.666 686.624 li
350.757 686.624 li
307.524 686.624 li
293.569 686.624 li
279.614 686.624 li
236.383 686.624 li
208.473 686.624 li
180.435 686.624 li
180.434 686.624 li
179.715 686.624 li
171.722 686.624 165.241 680.144 165.241 672.15 cv
165.241 648.668 li
165.241 645.754 167.604 643.392 170.519 643.392 cv
203.196 643.392 li
206.111 643.392 208.473 645.754 208.473 648.669 cv
208.473 653.438 li
208.473 656.352 210.836 658.714 213.751 658.714 cv
231.105 658.714 li
234.02 658.714 236.383 656.352 236.383 653.438 cv
236.383 648.669 li
236.383 645.754 238.746 643.392 241.66 643.392 cv
274.337 643.392 li
277.252 643.392 279.614 645.754 279.614 648.669 cv
279.614 653.437 li
279.614 656.352 281.977 658.714 284.892 658.714 cv
293.569 658.714 li
302.248 658.714 li
304.147 658.714 305.812 657.711 306.741 656.205 cv
307.238 655.401 307.524 654.453 307.524 653.438 cv
307.524 648.668 li
307.524 645.754 309.887 643.392 312.802 643.392 cv
320.242 643.392 li
345.478 643.392 li
348.394 643.392 350.757 645.754 350.757 648.669 cv
350.757 653.438 li
350.757 655.195 351.616 656.752 352.937 657.711 cv
353.807 658.342 354.876 658.714 356.033 658.714 cv
373.388 658.714 li
374.974 658.714 376.397 658.015 377.364 656.908 cv
378.175 655.98 378.666 654.766 378.666 653.438 cv
378.666 648.669 li
378.666 645.754 381.028 643.392 383.943 643.392 cv
383.946 643.392 li
387.001 643.392 li
416.621 643.392 li
416.624 643.392 li
419.538 643.392 421.901 645.754 421.901 648.669 cv
421.901 653.438 li
421.901 656.352 424.264 658.714 427.179 658.714 cv
444.534 658.714 li
447.448 658.714 449.81 656.352 449.81 653.438 cv
449.81 648.669 li
449.81 645.754 452.173 643.392 455.088 643.392 cv
486.508 643.392 li
487.766 643.392 li
490.68 643.392 493.043 645.754 493.043 648.669 cv
493.043 653.437 li
493.043 656.352 495.405 658.714 498.32 658.714 cv
506.997 658.714 li
515.675 658.714 li
518.59 658.714 520.952 656.352 520.952 653.437 cv
520.952 648.668 li
520.952 645.754 523.314 643.392 526.229 643.392 cv
526.34 643.392 li
558.907 643.392 li
561.821 643.392 564.184 645.754 564.184 648.669 cv
564.184 653.438 li
564.184 656.352 566.547 658.714 569.461 658.714 cv
586.816 658.714 li
589.731 658.714 592.094 656.352 592.094 653.438 cv
592.094 648.669 li
592.094 645.754 594.457 643.392 597.371 643.392 cv
630.048 643.392 li
632.963 643.392 635.326 645.754 635.326 648.669 cv
635.326 672.15 li
635.326 680.144 628.846 686.624 620.852 686.624 cv
384.827 680.46 mo
384.827 680.46 377.616 680.46 382.886 683.263 cv
383.773 683.735 384.544 683.926 385.181 683.926 cv
387.894 683.926 388.192 680.46 384.827 680.46 cv
525.417 679.086 mo
525.417 679.086 520.053 679.752 523.506 682.547 cv
524.12 683.045 524.767 683.249 525.374 683.249 cv
527.954 683.249 529.811 679.561 525.417 679.086 cv
257.101 679.188 mo
256.745 679.188 254.081 679.255 254.694 681.256 cv
255.126 682.664 255.914 683.182 256.742 683.182 cv
257.898 683.182 259.134 682.175 259.597 681.167 cv
260.061 680.16 259.753 679.153 257.821 679.153 cv
257.613 679.153 257.387 679.164 257.14 679.189 cv
257.14 679.189 257.127 679.188 257.101 679.188 cv
319.075 679.731 mo
318.631 679.731 317.912 679.874 317.748 680.768 cv
317.695 681.055 317.958 681.167 318.355 681.167 cv
319.057 681.167 320.177 680.816 320.708 680.465 cv
321.238 680.114 321.179 679.763 319.522 679.763 cv
319.493 679.763 319.464 679.763 319.433 679.763 cv
319.433 679.763 319.285 679.731 319.075 679.731 cv
393.642 674.378 mo
393.642 674.378 388.218 674.378 391.669 677.172 cv
392.239 677.634 392.785 677.821 393.267 677.821 cv
395.214 677.822 396.144 674.773 393.642 674.378 cv
536.857 663.552 mo
534.284 663.552 527.177 664.098 532.47 670.511 cv
533.334 671.558 534.401 671.986 535.495 671.986 cv
540.106 671.986 545.204 664.384 537.723 663.575 cv
537.723 663.575 537.385 663.552 536.857 663.552 cv
465.392 664.66 mo
464.907 664.66 461.266 664.764 462.105 667.909 cv
462.695 670.121 463.77 670.935 464.901 670.935 cv
466.478 670.935 468.166 669.352 468.799 667.769 cv
469.432 666.186 469.01 664.604 466.373 664.604 cv
466.089 664.604 465.78 664.622 465.444 664.66 cv
465.444 664.66 465.426 664.66 465.392 664.66 cv
606.711 664.998 mo
605.021 664.998 600.348 665.356 603.827 669.572 cv
604.395 670.26 605.096 670.541 605.814 670.541 cv
608.844 670.542 612.195 665.544 607.278 665.013 cv
607.278 665.013 607.057 664.998 606.711 664.998 cv
186.787 661.83 mo
186.787 661.83 181.362 661.83 184.815 664.624 cv
185.386 665.086 185.931 665.273 186.413 665.274 cv
188.359 665.274 189.29 662.226 186.787 661.83 cv
level3{
gsave
clp
[470.084 0 0 470.084 165.241 665.008 ]ct
/2 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[470.084 0 0 470.084 165.241 665.008 ]ct
clp
/2 /Gradient get_res exec grestore
}if
np
504.028 992.407 mo
402.504 992.407 li
402.504 978.449 li
493.943 978.449 li
493.943 974.009 li
402.504 974.009 li
402.504 942.923 li
493.943 942.923 li
493.943 938.483 li
402.504 938.483 li
402.504 907.438 li
493.943 907.438 li
493.943 902.996 li
402.504 902.996 li
402.504 871.911 li
493.943 871.911 li
493.943 867.471 li
402.504 867.471 li
402.504 836.426 li
489.341 836.426 li
489.341 836.426 li
488.897 834.932 488.332 833.438 487.767 831.984 cv
402.504 831.984 li
402.504 800.899 li
469.277 800.899 li
469.075 800.657 li
467.904 799.244 466.733 797.831 465.522 796.458 cv
402.504 796.458 li
402.504 770.334 li
412.244 760.146 419.357 753.383 419.357 753.383 cv
396.08 737.468 li
393.84 738.609 390.786 740.222 387.14 742.292 cv
387.881 741.871 388.594 741.471 389.285 741.088 cv
396.046 737.337 400.284 735.407 400.284 735.407 cv
400.284 735.407 400.658 735.577 401.363 735.916 cv
412.382 741.212 504.028 787.553 504.028 863.907 cv
504.028 909.276 504.028 992.407 504.028 992.407 cv
504.028 992.407 li
398.063 992.407 mo
366.977 992.407 li
366.977 978.449 li
398.063 978.449 li
398.063 992.407 li
362.577 992.407 mo
347.853 992.407 li
347.853 992.359 347.783 987.047 347.689 978.449 cv
362.577 978.449 li
362.577 992.407 li
398.063 974.009 mo
366.977 974.009 li
366.977 942.923 li
398.063 942.923 li
398.063 974.009 li
362.577 974.009 mo
347.641 974.009 li
347.552 965.509 347.45 954.689 347.366 942.923 cv
362.577 942.923 li
362.577 974.009 li
398.063 938.483 mo
366.977 938.483 li
366.977 907.438 li
398.063 907.438 li
398.063 938.483 li
362.577 938.483 mo
347.336 938.483 li
347.27 928.415 347.219 917.792 347.202 907.438 cv
362.577 907.438 li
362.577 938.483 li
398.063 902.996 mo
366.977 902.996 li
366.977 871.911 li
398.063 871.911 li
398.063 902.996 li
362.577 902.996 mo
347.197 902.996 li
347.19 891.841 347.227 881.126 347.33 871.911 cv
362.577 871.911 li
362.577 902.996 li
398.063 867.471 mo
366.977 867.471 li
366.977 836.426 li
398.063 836.426 li
398.063 867.471 li
362.577 867.471 mo
347.387 867.471 li
347.491 860.353 347.642 854.349 347.854 850.037 cv
348.05 846.059 349.444 841.443 351.717 836.426 cv
362.577 836.426 li
362.577 867.471 li
296.539 863.795 mo
296.539 863.785 296.539 863.767 296.539 863.757 cv
296.539 863.77 296.539 863.782 296.539 863.795 cv
296.539 863.683 mo
296.539 863.668 296.539 863.654 296.539 863.639 cv
296.539 863.656 296.539 863.666 296.539 863.683 cv
296.54 863.57 mo
296.54 863.555 296.54 863.538 296.54 863.523 cv
296.54 863.537 296.54 863.557 296.54 863.57 cv
296.54 863.456 mo
296.54 863.442 296.54 863.427 296.54 863.412 cv
296.54 863.426 296.54 863.443 296.54 863.456 cv
296.541 863.34 mo
296.541 863.325 296.541 863.314 296.541 863.299 cv
296.541 863.316 296.541 863.323 296.541 863.34 cv
296.542 863.222 mo
296.542 863.207 296.542 863.202 296.542 863.187 cv
296.542 863.2 296.542 863.209 296.542 863.222 cv
296.543 863.093 mo
296.543 863.088 296.543 863.079 296.543 863.074 cv
296.543 863.082 296.543 863.085 296.543 863.093 cv
296.544 862.96 mo
296.544 862.955 296.544 862.945 296.544 862.94 cv
296.544 862.945 296.544 862.955 296.544 862.96 cv
296.545 862.848 mo
296.545 862.833 296.545 862.828 296.545 862.813 cv
296.545 862.826 296.545 862.835 296.545 862.848 cv
296.546 862.734 mo
296.546 862.719 296.547 862.712 296.547 862.697 cv
296.547 862.71 296.546 862.721 296.546 862.734 cv
296.548 862.621 mo
296.548 862.611 296.548 862.593 296.548 862.584 cv
296.548 862.592 296.548 862.612 296.548 862.621 cv
296.549 862.503 mo
296.55 862.493 296.55 862.481 296.55 862.471 cv
296.55 862.48 296.55 862.494 296.549 862.503 cv
296.551 862.384 mo
296.551 862.379 296.552 862.363 296.552 862.358 cv
296.552 862.367 296.551 862.375 296.551 862.384 cv
296.554 862.248 mo
296.554 862.246 li
296.554 862.248 li
296.558 862.011 mo
296.558 862.004 li
296.558 862.009 296.558 862.007 296.558 862.011 cv
296.56 861.898 mo
296.56 861.893 296.561 861.885 296.561 861.88 cv
296.56 861.889 296.56 861.889 296.56 861.898 cv
296.563 861.782 mo
296.563 861.772 296.563 861.775 296.563 861.765 cv
296.563 861.769 296.563 861.777 296.563 861.782 cv
296.565 861.665 mo
296.566 861.66 296.566 861.653 296.566 861.648 cv
296.566 861.653 296.566 861.661 296.565 861.665 cv
296.569 861.538 mo
296.569 861.537 li
296.569 861.538 li
398.063 831.984 mo
366.977 831.984 li
366.977 811.707 li
369.644 808.099 372.468 804.476 375.369 800.899 cv
398.063 800.899 li
398.063 831.984 li
362.577 831.984 mo
353.899 831.984 li
356.275 827.473 359.236 822.716 362.577 817.865 cv
362.577 831.984 li
398.063 796.458 mo
379.026 796.458 li
385.453 788.769 392.084 781.412 398.063 775.027 cv
398.063 796.458 li
level3{
gsave
clp
[1.14946e-14 -187.723 187.723 1.14946e-14 400.284 971.255 ]ct
/6 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[1.14946e-14 -187.723 187.723 1.14946e-14 400.284 971.255 ]ct
clp
/6 /Gradient get_res exec grestore
}if
np
331.491 992.418 mo
327.051 992.418 li
327.051 992.407 li
331.491 992.407 li
331.491 992.418 li
level3{
gsave
clp
[1.22151e-14 -199.489 199.489 1.22151e-14 329.271 986.378 ]ct
/16 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[1.22151e-14 -199.489 199.489 1.22151e-14 329.271 986.378 ]ct
clp
/16 /Gradient get_res exec grestore
}if
np
366.977 992.418 mo
362.577 992.418 li
362.577 992.407 li
362.577 978.449 li
366.977 978.449 li
366.977 992.407 li
366.977 992.418 li
366.977 974.009 mo
362.577 974.009 li
362.577 942.923 li
366.977 942.923 li
366.977 974.009 li
366.977 938.483 mo
362.577 938.483 li
362.577 907.438 li
366.977 907.438 li
366.977 938.483 li
366.977 902.996 mo
362.577 902.996 li
362.577 871.911 li
366.977 871.911 li
366.977 902.996 li
366.977 867.471 mo
362.577 867.471 li
362.577 836.426 li
366.977 836.426 li
366.977 867.471 li
366.977 831.984 mo
362.577 831.984 li
362.577 817.865 li
363.981 815.826 365.454 813.767 366.977 811.707 cv
366.977 831.984 li
level3{
gsave
clp
[1.22151e-14 -199.489 199.489 1.22151e-14 364.777 986.378 ]ct
/16 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[1.22151e-14 -199.489 199.489 1.22151e-14 364.777 986.378 ]ct
clp
/16 /Gradient get_res exec grestore
}if
np
402.504 992.418 mo
398.063 992.418 li
398.063 992.407 li
398.063 978.449 li
402.504 978.449 li
402.504 992.407 li
402.504 992.418 li
402.504 974.009 mo
398.063 974.009 li
398.063 942.923 li
402.504 942.923 li
402.504 974.009 li
402.504 938.483 mo
398.063 938.483 li
398.063 907.438 li
402.504 907.438 li
402.504 938.483 li
402.504 902.996 mo
398.063 902.996 li
398.063 871.911 li
402.504 871.911 li
402.504 902.996 li
402.504 867.471 mo
398.063 867.471 li
398.063 836.426 li
402.504 836.426 li
402.504 867.471 li
402.504 831.984 mo
398.063 831.984 li
398.063 800.899 li
402.504 800.899 li
402.504 831.984 li
402.504 796.458 mo
398.063 796.458 li
398.063 775.027 li
399.591 773.396 401.075 771.829 402.504 770.334 cv
402.504 796.458 li
level3{
gsave
clp
[1.22151e-14 -199.489 199.489 1.22151e-14 400.283 986.378 ]ct
/16 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[1.22151e-14 -199.489 199.489 1.22151e-14 400.283 986.378 ]ct
clp
/16 /Gradient get_res exec grestore
}if
np
437.99 770.782 mo
437.99 992.418 li
433.589 992.418 li
433.589 767.472 li
435.042 768.522 436.496 769.653 437.99 770.782 cv
cp
level3{
gsave
clp
[1.22151e-14 -199.489 199.489 1.22151e-14 435.789 986.378 ]ct
/16 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[1.22151e-14 -199.489 199.489 1.22151e-14 435.789 986.378 ]ct
clp
/16 /Gradient get_res exec grestore
}if
np
469.277 800.899 mo
470.73 802.716 472.143 804.532 473.516 806.43 cv
473.516 992.418 li
469.075 992.418 li
469.075 800.657 li
469.277 800.899 li
cp
level3{
gsave
clp
[1.22151e-14 -199.489 199.489 1.22151e-14 471.296 986.378 ]ct
/16 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[1.22151e-14 -199.489 199.489 1.22151e-14 471.296 986.378 ]ct
clp
/16 /Gradient get_res exec grestore
}if
np
469.277 800.899 mo
402.504 800.899 li
398.063 800.899 li
375.369 800.899 li
376.577 799.409 377.797 797.928 379.026 796.458 cv
398.063 796.458 li
402.504 796.458 li
465.522 796.458 li
466.733 797.831 467.904 799.244 469.075 800.657 cv
469.277 800.899 li
level3{
gsave
clp
[1.22152e-14 -199.49 199.49 1.22152e-14 400.283 986.378 ]ct
/16 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[1.22152e-14 -199.49 199.49 1.22152e-14 400.283 986.378 ]ct
clp
/16 /Gradient get_res exec grestore
}if
np
489.341 836.426 mo
402.504 836.426 li
398.063 836.426 li
366.977 836.426 li
362.577 836.426 li
351.717 836.426 li
352.374 834.977 353.103 833.495 353.899 831.984 cv
362.577 831.984 li
366.977 831.984 li
398.063 831.984 li
402.504 831.984 li
487.767 831.984 li
488.332 833.438 488.897 834.932 489.341 836.426 cv
level3{
gsave
clp
[1.2216e-14 -199.504 199.504 1.2216e-14 400.283 986.388 ]ct
/16 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[1.2216e-14 -199.504 199.504 1.2216e-14 400.283 986.388 ]ct
clp
/16 /Gradient get_res exec grestore
}if
np
493.943 871.911 mo
402.504 871.911 li
398.063 871.911 li
366.977 871.911 li
362.577 871.911 li
347.33 871.911 li
347.347 870.387 347.366 868.909 347.387 867.471 cv
362.577 867.471 li
366.977 867.471 li
398.063 867.471 li
402.504 867.471 li
493.943 867.471 li
493.943 871.911 li
level3{
gsave
clp
[1.22152e-14 -199.49 199.49 1.22152e-14 400.283 986.378 ]ct
/16 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[1.22152e-14 -199.49 199.49 1.22152e-14 400.283 986.378 ]ct
clp
/16 /Gradient get_res exec grestore
}if
np
493.943 907.438 mo
402.504 907.438 li
398.063 907.438 li
366.977 907.438 li
362.577 907.438 li
347.202 907.438 li
347.2 905.948 347.198 904.473 347.197 902.996 cv
362.577 902.996 li
366.977 902.996 li
398.063 902.996 li
402.504 902.996 li
493.943 902.996 li
493.943 907.438 li
level3{
gsave
clp
[1.22152e-14 -199.49 199.49 1.22152e-14 400.283 986.378 ]ct
/16 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[1.22152e-14 -199.49 199.49 1.22152e-14 400.283 986.378 ]ct
clp
/16 /Gradient get_res exec grestore
}if
np
493.943 942.923 mo
402.504 942.923 li
398.063 942.923 li
366.977 942.923 li
362.577 942.923 li
347.366 942.923 li
347.356 941.456 347.346 939.977 347.336 938.483 cv
362.577 938.483 li
366.977 938.483 li
398.063 938.483 li
402.504 938.483 li
493.943 938.483 li
493.943 942.923 li
level3{
gsave
clp
[1.22145e-14 -199.479 199.479 1.22145e-14 400.283 986.375 ]ct
/16 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[1.22145e-14 -199.479 199.479 1.22145e-14 400.283 986.375 ]ct
clp
/16 /Gradient get_res exec grestore
}if
np
493.943 978.449 mo
402.504 978.449 li
398.063 978.449 li
366.977 978.449 li
362.577 978.449 li
347.689 978.449 li
347.674 977.054 347.658 975.57 347.641 974.009 cv
362.577 974.009 li
366.977 974.009 li
398.063 974.009 li
402.504 974.009 li
493.943 974.009 li
493.943 978.449 li
level3{
gsave
clp
[1.22145e-14 -199.479 199.479 1.22145e-14 400.283 986.377 ]ct
/16 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[1.22145e-14 -199.479 199.479 1.22145e-14 400.283 986.377 ]ct
clp
/16 /Gradient get_res exec grestore
}if
np
369.715 902.417 mo
367.569 900.273 li
364.778 903.064 li
361.987 900.273 li
359.843 902.417 li
362.634 905.208 li
359.843 908 li
361.987 910.145 li
364.778 907.353 li
367.569 910.145 li
369.715 908 li
366.923 905.208 li
369.715 902.417 li
cp
level3{
gsave
clp
[9.1495e-15 149.423 -149.423 9.1495e-15 364.778 826.932 ]ct
/20 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[9.1495e-15 149.423 -149.423 9.1495e-15 364.778 826.932 ]ct
clp
/20 /Gradient get_res exec grestore
}if
np
369.715 937.923 mo
367.569 935.778 li
364.778 938.569 li
361.987 935.778 li
359.843 937.923 li
362.634 940.714 li
359.843 943.505 li
361.987 945.65 li
364.778 942.859 li
367.569 945.65 li
369.715 943.505 li
366.923 940.714 li
369.715 937.923 li
cp
level3{
gsave
clp
[9.1495e-15 149.423 -149.423 9.1495e-15 364.778 826.932 ]ct
/20 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[9.1495e-15 149.423 -149.423 9.1495e-15 364.778 826.932 ]ct
clp
/20 /Gradient get_res exec grestore
}if
np
369.715 973.428 mo
367.569 971.283 li
364.778 974.074 li
361.987 971.283 li
359.843 973.428 li
362.634 976.219 li
359.843 979.01 li
361.987 981.155 li
364.778 978.364 li
367.569 981.155 li
369.715 979.01 li
366.923 976.219 li
369.715 973.428 li
cp
level3{
gsave
clp
[9.1495e-15 149.423 -149.423 9.1495e-15 364.778 826.931 ]ct
/20 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[9.1495e-15 149.423 -149.423 9.1495e-15 364.778 826.931 ]ct
clp
/20 /Gradient get_res exec grestore
}if
np
369.715 866.912 mo
367.569 864.767 li
364.778 867.559 li
361.987 864.767 li
359.843 866.912 li
362.634 869.703 li
359.843 872.494 li
361.987 874.639 li
364.778 871.848 li
367.569 874.639 li
369.715 872.494 li
366.923 869.703 li
369.715 866.912 li
cp
level3{
gsave
clp
[9.1495e-15 149.423 -149.423 9.1495e-15 364.778 826.932 ]ct
/20 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[9.1495e-15 149.423 -149.423 9.1495e-15 364.778 826.932 ]ct
clp
/20 /Gradient get_res exec grestore
}if
np
369.715 831.579 mo
367.569 829.435 li
364.778 832.226 li
361.987 829.435 li
359.843 831.579 li
362.634 834.371 li
359.843 837.162 li
361.987 839.307 li
364.778 836.515 li
367.569 839.307 li
369.715 837.162 li
366.923 834.371 li
369.715 831.579 li
cp
level3{
gsave
clp
[9.1495e-15 149.423 -149.423 9.1495e-15 364.778 826.932 ]ct
/20 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[9.1495e-15 149.423 -149.423 9.1495e-15 364.778 826.932 ]ct
clp
/20 /Gradient get_res exec grestore
}if
np
405.219 902.417 mo
403.073 900.273 li
400.282 903.064 li
397.491 900.273 li
395.347 902.417 li
398.138 905.208 li
395.347 908 li
397.491 910.145 li
400.282 907.353 li
403.073 910.145 li
405.219 908 li
402.428 905.208 li
405.219 902.417 li
cp
level3{
gsave
clp
[9.1495e-15 149.423 -149.423 9.1495e-15 400.283 826.932 ]ct
/20 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[9.1495e-15 149.423 -149.423 9.1495e-15 400.283 826.932 ]ct
clp
/20 /Gradient get_res exec grestore
}if
np
405.219 937.923 mo
403.073 935.778 li
400.282 938.569 li
397.491 935.778 li
395.347 937.923 li
398.138 940.714 li
395.347 943.505 li
397.491 945.65 li
400.282 942.859 li
403.073 945.65 li
405.219 943.505 li
402.428 940.714 li
405.219 937.923 li
cp
level3{
gsave
clp
[9.1495e-15 149.423 -149.423 9.1495e-15 400.283 826.932 ]ct
/20 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[9.1495e-15 149.423 -149.423 9.1495e-15 400.283 826.932 ]ct
clp
/20 /Gradient get_res exec grestore
}if
np
405.219 973.428 mo
403.073 971.283 li
400.282 974.074 li
397.491 971.283 li
395.347 973.428 li
398.138 976.219 li
395.347 979.01 li
397.491 981.155 li
400.282 978.364 li
403.073 981.155 li
405.219 979.01 li
402.428 976.219 li
405.219 973.428 li
cp
level3{
gsave
clp
[9.1495e-15 149.423 -149.423 9.1495e-15 400.283 826.931 ]ct
/20 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[9.1495e-15 149.423 -149.423 9.1495e-15 400.283 826.931 ]ct
clp
/20 /Gradient get_res exec grestore
}if
np
405.219 866.912 mo
403.073 864.767 li
400.282 867.559 li
397.491 864.767 li
395.347 866.912 li
398.138 869.703 li
395.347 872.494 li
397.491 874.639 li
400.282 871.848 li
403.073 874.639 li
405.219 872.494 li
402.428 869.703 li
405.219 866.912 li
cp
level3{
gsave
clp
[9.1495e-15 149.423 -149.423 9.1495e-15 400.283 826.932 ]ct
/20 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[9.1495e-15 149.423 -149.423 9.1495e-15 400.283 826.932 ]ct
clp
/20 /Gradient get_res exec grestore
}if
np
405.219 831.579 mo
403.073 829.435 li
400.282 832.226 li
397.491 829.435 li
395.347 831.579 li
398.138 834.371 li
395.347 837.162 li
397.491 839.307 li
400.282 836.515 li
403.073 839.307 li
405.219 837.162 li
402.428 834.371 li
405.219 831.579 li
cp
level3{
gsave
clp
[9.1495e-15 149.423 -149.423 9.1495e-15 400.283 826.932 ]ct
/20 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[9.1495e-15 149.423 -149.423 9.1495e-15 400.283 826.932 ]ct
clp
/20 /Gradient get_res exec grestore
}if
np
440.723 902.417 mo
438.578 900.273 li
435.786 903.064 li
432.995 900.273 li
430.851 902.417 li
433.642 905.208 li
430.851 908 li
432.995 910.145 li
435.786 907.353 li
438.578 910.145 li
440.723 908 li
437.931 905.208 li
440.723 902.417 li
cp
level3{
gsave
clp
[9.1495e-15 149.423 -149.423 9.1495e-15 435.786 826.932 ]ct
/20 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[9.1495e-15 149.423 -149.423 9.1495e-15 435.786 826.932 ]ct
clp
/20 /Gradient get_res exec grestore
}if
np
440.723 937.923 mo
438.578 935.778 li
435.786 938.569 li
432.995 935.778 li
430.851 937.923 li
433.642 940.714 li
430.851 943.505 li
432.995 945.65 li
435.786 942.859 li
438.578 945.65 li
440.723 943.505 li
437.931 940.714 li
440.723 937.923 li
cp
level3{
gsave
clp
[9.1495e-15 149.423 -149.423 9.1495e-15 435.786 826.932 ]ct
/20 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[9.1495e-15 149.423 -149.423 9.1495e-15 435.786 826.932 ]ct
clp
/20 /Gradient get_res exec grestore
}if
np
440.723 973.428 mo
438.578 971.283 li
435.786 974.074 li
432.995 971.283 li
430.851 973.428 li
433.642 976.219 li
430.851 979.01 li
432.995 981.155 li
435.786 978.364 li
438.578 981.155 li
440.723 979.01 li
437.931 976.219 li
440.723 973.428 li
cp
level3{
gsave
clp
[9.1495e-15 149.423 -149.423 9.1495e-15 435.786 826.931 ]ct
/20 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[9.1495e-15 149.423 -149.423 9.1495e-15 435.786 826.931 ]ct
clp
/20 /Gradient get_res exec grestore
}if
np
440.723 866.912 mo
438.578 864.767 li
435.786 867.559 li
432.995 864.767 li
430.851 866.912 li
433.642 869.703 li
430.851 872.494 li
432.995 874.639 li
435.786 871.848 li
438.578 874.639 li
440.723 872.494 li
437.931 869.703 li
440.723 866.912 li
cp
level3{
gsave
clp
[9.1495e-15 149.423 -149.423 9.1495e-15 435.786 826.932 ]ct
/20 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[9.1495e-15 149.423 -149.423 9.1495e-15 435.786 826.932 ]ct
clp
/20 /Gradient get_res exec grestore
}if
np
440.723 831.579 mo
438.578 829.435 li
435.786 832.226 li
432.995 829.435 li
430.851 831.579 li
433.642 834.371 li
430.851 837.162 li
432.995 839.307 li
435.786 836.515 li
438.578 839.307 li
440.723 837.162 li
437.931 834.371 li
440.723 831.579 li
cp
level3{
gsave
clp
[9.1495e-15 149.423 -149.423 9.1495e-15 435.786 826.932 ]ct
/20 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[9.1495e-15 149.423 -149.423 9.1495e-15 435.786 826.932 ]ct
clp
/20 /Gradient get_res exec grestore
}if
np
405.219 795.902 mo
403.073 793.757 li
400.282 796.548 li
397.491 793.757 li
395.347 795.902 li
398.138 798.693 li
395.347 801.484 li
397.491 803.629 li
400.282 800.837 li
403.073 803.629 li
405.219 801.484 li
402.428 798.693 li
405.219 795.902 li
cp
level3{
gsave
clp
[9.1495e-15 149.423 -149.423 9.1495e-15 400.283 826.933 ]ct
/20 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[9.1495e-15 149.423 -149.423 9.1495e-15 400.283 826.933 ]ct
clp
/20 /Gradient get_res exec grestore
}if
np
440.723 795.902 mo
438.578 793.757 li
435.786 796.548 li
432.995 793.757 li
430.851 795.902 li
433.642 798.693 li
430.851 801.484 li
432.995 803.629 li
435.786 800.837 li
438.578 803.629 li
440.723 801.484 li
437.931 798.693 li
440.723 795.902 li
cp
level3{
gsave
clp
[9.1495e-15 149.423 -149.423 9.1495e-15 435.786 826.933 ]ct
/20 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[9.1495e-15 149.423 -149.423 9.1495e-15 435.786 826.933 ]ct
clp
/20 /Gradient get_res exec grestore
}if
np
476.227 902.417 mo
474.082 900.273 li
471.291 903.064 li
468.499 900.273 li
466.354 902.417 li
469.145 905.208 li
466.354 908 li
468.499 910.145 li
471.291 907.353 li
474.082 910.145 li
476.227 908 li
473.435 905.208 li
476.227 902.417 li
cp
level3{
gsave
clp
[9.1495e-15 149.423 -149.423 9.1495e-15 471.29 826.932 ]ct
/20 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[9.1495e-15 149.423 -149.423 9.1495e-15 471.29 826.932 ]ct
clp
/20 /Gradient get_res exec grestore
}if
np
476.227 937.923 mo
474.082 935.778 li
471.291 938.569 li
468.499 935.778 li
466.354 937.923 li
469.145 940.714 li
466.354 943.505 li
468.499 945.65 li
471.291 942.859 li
474.082 945.65 li
476.227 943.505 li
473.435 940.714 li
476.227 937.923 li
cp
level3{
gsave
clp
[9.1495e-15 149.423 -149.423 9.1495e-15 471.29 826.932 ]ct
/20 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[9.1495e-15 149.423 -149.423 9.1495e-15 471.29 826.932 ]ct
clp
/20 /Gradient get_res exec grestore
}if
np
476.227 973.428 mo
474.082 971.283 li
471.291 974.074 li
468.499 971.283 li
466.354 973.428 li
469.145 976.219 li
466.354 979.01 li
468.499 981.155 li
471.291 978.364 li
474.082 981.155 li
476.227 979.01 li
473.435 976.219 li
476.227 973.428 li
cp
level3{
gsave
clp
[9.1495e-15 149.423 -149.423 9.1495e-15 471.29 826.931 ]ct
/20 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[9.1495e-15 149.423 -149.423 9.1495e-15 471.29 826.931 ]ct
clp
/20 /Gradient get_res exec grestore
}if
np
476.227 866.912 mo
474.082 864.767 li
471.291 867.559 li
468.499 864.767 li
466.354 866.912 li
469.145 869.703 li
466.354 872.494 li
468.499 874.639 li
471.291 871.848 li
474.082 874.639 li
476.227 872.494 li
473.435 869.703 li
476.227 866.912 li
cp
level3{
gsave
clp
[9.1495e-15 149.423 -149.423 9.1495e-15 471.29 826.932 ]ct
/20 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[9.1495e-15 149.423 -149.423 9.1495e-15 471.29 826.932 ]ct
clp
/20 /Gradient get_res exec grestore
}if
np
476.227 831.579 mo
474.082 829.435 li
471.291 832.226 li
468.499 829.435 li
466.354 831.579 li
469.145 834.371 li
466.354 837.162 li
468.499 839.307 li
471.291 836.515 li
474.082 839.307 li
476.227 837.162 li
473.435 834.371 li
476.227 831.579 li
cp
level3{
gsave
clp
[9.1495e-15 149.423 -149.423 9.1495e-15 471.29 826.932 ]ct
/20 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[9.1495e-15 149.423 -149.423 9.1495e-15 471.29 826.932 ]ct
clp
/20 /Gradient get_res exec grestore
}if
np
296.539 863.907 mo
296.539 863.868 296.539 863.835 296.539 863.795 cv
296.539 863.835 296.539 863.868 296.539 863.907 cv
296.539 863.757 mo
296.539 863.735 296.539 863.705 296.539 863.683 cv
296.539 863.708 296.539 863.732 296.539 863.757 cv
296.539 863.639 mo
296.54 863.617 296.54 863.592 296.54 863.57 cv
296.54 863.595 296.54 863.614 296.539 863.639 cv
296.54 863.523 mo
296.54 863.497 296.54 863.482 296.54 863.456 cv
296.54 863.476 296.54 863.504 296.54 863.523 cv
296.54 863.412 mo
296.54 863.391 296.541 863.362 296.541 863.34 cv
296.541 863.365 296.54 863.388 296.54 863.412 cv
296.541 863.299 mo
296.541 863.277 296.541 863.244 296.542 863.222 cv
296.541 863.247 296.541 863.274 296.541 863.299 cv
296.542 863.187 mo
296.542 863.156 296.542 863.124 296.543 863.093 cv
296.542 863.123 296.542 863.157 296.542 863.187 cv
296.543 863.074 mo
296.543 863.035 296.543 862.999 296.544 862.96 cv
296.543 862.999 296.543 863.034 296.543 863.074 cv
296.544 862.94 mo
296.544 862.91 296.545 862.879 296.545 862.848 cv
296.545 862.878 296.544 862.911 296.544 862.94 cv
296.545 862.813 mo
296.546 862.787 296.546 862.76 296.546 862.734 cv
296.546 862.759 296.546 862.788 296.545 862.813 cv
296.547 862.697 mo
296.547 862.671 296.547 862.647 296.548 862.621 cv
296.547 862.646 296.547 862.672 296.547 862.697 cv
296.548 862.584 mo
296.549 862.553 296.549 862.533 296.549 862.503 cv
296.549 862.532 296.549 862.554 296.548 862.584 cv
296.55 862.471 mo
296.55 862.441 296.551 862.414 296.551 862.384 cv
296.551 862.413 296.55 862.442 296.55 862.471 cv
296.552 862.358 mo
296.552 862.323 296.553 862.282 296.554 862.248 cv
296.553 862.287 296.552 862.319 296.552 862.358 cv
296.554 862.246 mo
296.555 862.168 296.556 862.089 296.558 862.011 cv
296.556 862.09 296.555 862.167 296.554 862.246 cv
296.558 862.004 mo
296.559 861.97 296.56 861.932 296.56 861.898 cv
296.559 861.937 296.559 861.965 296.558 862.004 cv
296.561 861.88 mo
296.561 861.85 296.562 861.812 296.563 861.782 cv
296.562 861.811 296.561 861.851 296.561 861.88 cv
296.563 861.765 mo
296.564 861.73 296.565 861.7 296.565 861.665 cv
296.565 861.695 296.564 861.735 296.563 861.765 cv
296.566 861.648 mo
296.567 861.61 296.568 861.577 296.569 861.538 cv
296.568 861.577 296.567 861.609 296.566 861.648 cv
296.569 861.537 mo
298.109 799.674 359.59 757.929 387.14 742.292 cv
359.571 757.944 298.109 799.695 296.569 861.537 cv
level3{
gsave
clp
[1.86047e-14 303.839 -303.839 1.86047e-14 400.284 719.43 ]ct
/22 
<<
/ShadingType 2 
/ColorSpace /0 /CSA get_res
/Coords [0 0 1 0 ]
/Domain [0 1 ]
/Extend[ true true]
/Function
<<
/Domain[0 1 ] 
/FunctionType 3
/Functions [
<<
/Domain[0 1 ] 
/Range[0 1 0 1 0 1 ] 
/FunctionType 0
/Order 1 
/DataSource <~fn!,UJQ1<R<7uh%fn!,UJQ1<R<7uh%fn!,UJQ1<R<7uh%fn!,UJQ1<R<7uh%fn!,UJQ1<R<7uh%fn!,U
JQ1<R<7uh%fn!,UJQ1<R<7uh%fn!,UJQ1<R<7uh%fn!,UJQ1<R<7uh%fn!,UJQ1<R<7uh%fn!,UJQ1<R
<7uh%fn!,UJQ1<R<7uh%fn!,UJQ1<R<7uh%fn!,UJQ1<R<7uh%fn!,UJQ1<R<7uh%fn!,UJQ1<R<7uh%
~>
/BitsPerSample 8 
/Encode [0 63 ]
/Decode [0 1 0 1 0 1 ]
/Size [64 ]
>>
<<
/Domain[0 1 ] 
/Range[0 1 0 1 0 1 ] 
/FunctionType 0
/Order 1 
/DataSource <~j-4$5P[`[;@cN\^j-4$5P[`[;@cN\^j-4$5P[`[;@cN\^j-4$5P[`[;@cN\^j-4$5P[`[;@cN\^j-4$5
P[`[;@cN\^j-4$5P[`[;@cN\^j-4$5P[`[;@cN\^j-4$5P[`[;@cN\^j-*s4P@<L8@H3P[j-!g1P$m:3
@,d;VifRX.O^R.0@,[2SiK%@)O'^b)?JpiMhi;""NEk=u>i(BDh25FmM-A\i=ke^6gP/haKNHiZ<S;q&
~>
/BitsPerSample 8 
/Encode [0 63 ]
/Decode [0 1 0 1 0 1 ]
/Size [64 ]
>>
]
/Bounds [1.89999e-07 ]
/Encode [0 1 1 0 ]
>>
>>/Gradient add_res /22 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[1.86047e-14 303.839 -303.839 1.86047e-14 400.284 719.43 ]ct
clp
/22 {
/0 /CSA get_res setcolorspace
<<
/NumSamples 256 
/NumComp 3 
/Scaling[[.00392157 0 ][.00392157 0 ][.00392157 0 ]]
/Samples[
<~f\"j/f\+s2g"P06g=k97g=tB:gYCT>gt^]?gtgfBh;-oCh;7#FhVR,GhV[5Jhr!>Khr*GNi8EPOi8EPO
i8EPOi8ESQiSibSiSibSiSibSiSieUio8tWio8tWio8tWio8tWio8tWio8tWio8tWio8tWio8tWio8tW
io8tWio8tWio8tWio8tWio8tWio8tWio8tWio8tWio8tWio8tWio8tWio8tWio8tWio8tWio8tWio8tW
io8tWio8tWio8tWio8tWio8tWio8tWio8tWio8tWio8tWio8tWio8tWio8tWio8tWio8tWio8tWio8tW
~>
<~J:W9'JqJ].K7no3Knb>:L5(G;L51P?Ll$tFM2I1JMMd:KMMmCON/`gVNK&pWNK&pWNK0$ZNfK-[NfT6^
O,o?_O,oBaOH>QcOH>QcOH>QcOH>TeOcbcgOcbfiP*1ukP*1ukP*1ukP*2#mPEV2oPEV2oPEV2oPEV2o
PEV2oPEV2oPEV2oPEV2oPEV2oPEV2oPEV2oPEV2oPEV2oPEV2oPEV2oPEV2oPEV2oPEV2oPEV2oPEV2o
PEV2oPEV2oPEV2oPEV2oPEV2oPEV2oPEV2oPEV2oPEV2oPEV2oPEV2oPEV2oPEV2oPEV2oPEV2oPEV2o
~>
<~;cH^q<)lq!<``@(='&I)='/R,=BSd0=^#!4>$G38>?b<9>?b<9>?kE<>[:W@?!U`A?!U`A?!^iD?=$rE
?=$uG?XI/I?XI/I?XI/I?XI/I?XI/I?XI/I?XI2K?smAM?smAM?smDO@:<SQ@:<SQ@:<SQ@:<SQ@:<SQ
@:<SQ@:<SQ@:<SQ@:<SQ@:<SQ@:<SQ@:<SQ@:<SQ@:<SQ@:<SQ@:<SQ@:<SQ@:<SQ@:<SQ@:<SQ@:<SQ
@:<SQ@:<SQ@:<SQ@:<SQ@:<SQ@:<SQ@:<SQ@:<SQ@:<SQ@:<SQ@:<SQ@:<SQ@:<SQ@:<SQ@:<SQ@:<SQ
~>
]
>>
0 0 1 0 []true true []
/DeviceRGB
GenStrips
} /Gradient add_res /22 /Gradient get_res exec grestore
}if
np
347.853 992.407 mo
331.491 992.407 li
331.491 980.58 li
332.065 981.154 li
334.21 979.01 li
333.649 978.449 li
347.689 978.449 li
347.783 987.047 347.853 992.359 347.853 992.407 cv
327.051 992.407 mo
296.539 992.407 li
296.539 992.407 296.539 909.275 296.539 863.907 cv
296.539 863.907 li
296.539 863.868 296.539 863.835 296.539 863.795 cv
296.539 863.782 296.539 863.77 296.539 863.757 cv
296.539 863.732 296.539 863.708 296.539 863.683 cv
296.539 863.666 296.539 863.656 296.539 863.639 cv
296.54 863.614 296.54 863.595 296.54 863.57 cv
296.54 863.557 296.54 863.537 296.54 863.523 cv
296.54 863.504 296.54 863.476 296.54 863.456 cv
296.54 863.443 296.54 863.426 296.54 863.412 cv
296.54 863.388 296.541 863.365 296.541 863.34 cv
296.541 863.323 296.541 863.316 296.541 863.299 cv
296.541 863.274 296.541 863.247 296.542 863.222 cv
296.542 863.209 296.542 863.2 296.542 863.187 cv
296.542 863.157 296.542 863.123 296.543 863.093 cv
296.543 863.085 296.543 863.082 296.543 863.074 cv
296.543 863.034 296.543 862.999 296.544 862.96 cv
296.544 862.955 296.544 862.945 296.544 862.94 cv
296.544 862.911 296.545 862.878 296.545 862.848 cv
296.545 862.835 296.545 862.826 296.545 862.813 cv
296.546 862.788 296.546 862.759 296.546 862.734 cv
296.546 862.721 296.547 862.71 296.547 862.697 cv
296.547 862.672 296.547 862.646 296.548 862.621 cv
296.548 862.612 296.548 862.592 296.548 862.584 cv
296.549 862.554 296.549 862.532 296.549 862.503 cv
296.55 862.494 296.55 862.48 296.55 862.471 cv
296.55 862.442 296.551 862.413 296.551 862.384 cv
296.551 862.375 296.552 862.367 296.552 862.358 cv
296.552 862.319 296.553 862.287 296.554 862.248 cv
296.554 862.246 li
296.555 862.167 296.556 862.09 296.558 862.011 cv
296.558 862.007 296.558 862.009 296.558 862.004 cv
296.559 861.965 296.559 861.937 296.56 861.898 cv
296.56 861.889 296.56 861.889 296.561 861.88 cv
296.561 861.851 296.562 861.811 296.563 861.782 cv
296.563 861.777 296.563 861.769 296.563 861.765 cv
296.564 861.735 296.565 861.695 296.565 861.665 cv
296.566 861.661 296.566 861.653 296.566 861.648 cv
296.567 861.609 296.568 861.577 296.569 861.538 cv
296.569 861.537 li
298.109 799.695 359.571 757.944 387.14 742.292 cv
390.786 740.222 393.84 738.609 396.08 737.468 cv
419.357 753.383 li
419.357 753.383 412.244 760.146 402.504 770.334 cv
402.504 747.852 li
401.696 747.408 400.97 747.044 400.283 746.681 cv
399.597 747.044 398.87 747.408 398.063 747.852 cv
398.063 775.027 li
392.084 781.412 385.453 788.769 379.026 796.458 cv
369.158 796.458 li
369.715 795.902 li
367.569 793.757 li
366.977 794.349 li
366.977 767.472 li
365.524 768.522 364.071 769.652 362.577 770.782 cv
362.577 794.347 li
361.987 793.757 li
359.843 795.902 li
360.399 796.458 li
335.044 796.458 li
333.833 797.831 332.662 799.244 331.491 800.657 cv
331.491 800.657 li
331.29 800.899 li
329.837 802.716 328.423 804.532 327.051 806.43 cv
327.051 830.003 li
326.482 829.435 li
324.338 831.579 li
324.743 831.984 li
312.8 831.984 li
312.234 833.438 311.67 834.932 311.225 836.426 cv
325.074 836.426 li
324.338 837.162 li
326.482 839.307 li
327.051 838.738 li
327.051 865.335 li
326.482 864.767 li
324.338 866.912 li
324.897 867.471 li
306.623 867.471 li
306.623 871.911 li
324.921 871.911 li
324.338 872.494 li
326.482 874.639 li
327.051 874.071 li
327.051 900.841 li
326.482 900.273 li
324.338 902.417 li
324.917 902.996 li
306.623 902.996 li
306.623 907.438 li
324.9 907.438 li
324.338 908 li
326.482 910.145 li
327.051 909.576 li
327.051 936.346 li
326.482 935.778 li
324.338 937.923 li
324.898 938.483 li
306.623 938.483 li
306.623 942.923 li
324.92 942.923 li
324.338 943.505 li
326.482 945.65 li
327.051 945.081 li
327.051 971.852 li
326.482 971.283 li
324.338 973.428 li
324.919 974.009 li
306.623 974.009 li
306.623 978.449 li
324.899 978.449 li
324.338 979.01 li
326.482 981.154 li
327.051 980.586 li
327.051 992.407 li
347.641 974.009 mo
333.629 974.009 li
334.21 973.428 li
332.065 971.283 li
331.491 971.858 li
331.491 945.075 li
332.065 945.65 li
334.21 943.505 li
333.628 942.923 li
347.366 942.923 li
347.45 954.689 347.552 965.509 347.641 974.009 cv
347.336 938.483 mo
333.65 938.483 li
334.21 937.923 li
332.065 935.778 li
331.491 936.352 li
331.491 909.57 li
332.065 910.145 li
334.21 908 li
333.648 907.438 li
347.202 907.438 li
347.219 917.792 347.27 928.415 347.336 938.483 cv
347.197 902.996 mo
333.631 902.996 li
334.21 902.417 li
332.065 900.273 li
331.491 900.847 li
331.491 874.065 li
332.065 874.639 li
334.21 872.494 li
333.627 871.911 li
347.33 871.911 li
347.227 881.126 347.19 891.841 347.197 902.996 cv
347.387 867.471 mo
333.651 867.471 li
334.21 866.912 li
332.065 864.767 li
331.491 865.341 li
331.491 838.732 li
332.065 839.307 li
334.21 837.162 li
333.474 836.426 li
351.717 836.426 li
349.444 841.443 348.05 846.059 347.854 850.037 cv
347.642 854.349 347.491 860.353 347.387 867.471 cv
353.899 831.984 mo
333.805 831.984 li
334.21 831.579 li
332.065 829.435 li
331.491 830.009 li
331.491 800.899 li
360.428 800.899 li
359.843 801.484 li
361.987 803.629 li
362.577 803.039 li
362.577 817.865 li
359.236 822.716 356.275 827.473 353.899 831.984 cv
366.977 811.707 mo
366.977 803.037 li
367.569 803.629 li
369.715 801.484 li
369.13 800.899 li
375.369 800.899 li
372.468 804.476 369.644 808.099 366.977 811.707 cv
level3{
gsave
clp
[1.14946e-14 -187.723 187.723 1.14946e-14 400.284 971.255 ]ct
/9 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[1.14946e-14 -187.723 187.723 1.14946e-14 400.284 971.255 ]ct
clp
/9 /Gradient get_res exec grestore
}if
np
331.491 992.407 mo
327.051 992.407 li
327.051 980.586 li
329.188 978.449 li
329.36 978.449 li
331.491 980.58 li
331.491 992.407 li
329.34 974.009 mo
329.209 974.009 li
327.051 971.852 li
327.051 945.081 li
329.21 942.923 li
329.339 942.923 li
331.491 945.075 li
331.491 971.858 li
329.34 974.009 li
329.36 938.483 mo
329.188 938.483 li
327.051 936.346 li
327.051 909.576 li
329.189 907.438 li
329.359 907.438 li
331.491 909.57 li
331.491 936.352 li
329.36 938.483 li
329.342 902.996 mo
329.207 902.996 li
327.051 900.841 li
327.051 874.071 li
329.211 871.911 li
329.338 871.911 li
331.491 874.065 li
331.491 900.847 li
329.342 902.996 li
329.362 867.471 mo
329.186 867.471 li
327.051 865.335 li
327.051 838.738 li
329.274 836.515 li
331.491 838.732 li
331.491 865.341 li
329.362 867.471 li
329.515 831.984 mo
329.033 831.984 li
327.051 830.003 li
327.051 806.43 li
328.423 804.532 329.837 802.716 331.29 800.899 cv
331.491 800.657 li
331.29 800.899 li
331.491 800.899 li
331.491 830.009 li
329.515 831.984 li
level3{
gsave
clp
[1.22151e-14 -199.489 199.489 1.22151e-14 329.271 986.378 ]ct
/19 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[1.22151e-14 -199.489 199.489 1.22151e-14 329.271 986.378 ]ct
clp
/19 /Gradient get_res exec grestore
}if
np
362.577 817.865 mo
362.577 803.039 li
364.717 800.899 li
364.84 800.899 li
366.977 803.037 li
366.977 811.707 li
365.454 813.767 363.981 815.826 362.577 817.865 cv
364.868 796.458 mo
364.689 796.458 li
362.577 794.347 li
362.577 770.782 li
364.071 769.652 365.524 768.522 366.977 767.472 cv
366.977 794.349 li
364.868 796.458 li
level3{
gsave
clp
[1.22151e-14 -199.489 199.489 1.22151e-14 364.777 986.378 ]ct
/19 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[1.22151e-14 -199.489 199.489 1.22151e-14 364.777 986.378 ]ct
clp
/19 /Gradient get_res exec grestore
}if
np
398.063 775.027 mo
398.063 747.852 li
398.87 747.408 399.597 747.044 400.283 746.681 cv
400.97 747.044 401.696 747.408 402.504 747.852 cv
402.504 770.334 li
401.075 771.829 399.591 773.396 398.063 775.027 cv
level3{
gsave
clp
[1.22151e-14 -199.489 199.489 1.22151e-14 400.283 986.378 ]ct
/19 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[1.22151e-14 -199.489 199.489 1.22151e-14 400.283 986.378 ]ct
clp
/19 /Gradient get_res exec grestore
}if
np
375.369 800.899 mo
369.13 800.899 li
366.923 798.693 li
369.158 796.458 li
379.026 796.458 li
377.797 797.928 376.577 799.409 375.369 800.899 cv
364.84 800.899 mo
364.717 800.899 li
364.778 800.837 li
364.84 800.899 li
360.428 800.899 mo
331.491 800.899 li
331.29 800.899 li
331.491 800.657 li
332.662 799.244 333.833 797.831 335.044 796.458 cv
360.399 796.458 li
362.634 798.693 li
360.428 800.899 li
364.778 796.548 mo
364.689 796.458 li
364.868 796.458 li
364.778 796.548 li
level3{
gsave
clp
[1.22152e-14 -199.49 199.49 1.22152e-14 400.283 986.378 ]ct
/19 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[1.22152e-14 -199.49 199.49 1.22152e-14 400.283 986.378 ]ct
clp
/19 /Gradient get_res exec grestore
}if
np
351.717 836.426 mo
333.474 836.426 li
331.419 834.371 li
333.805 831.984 li
353.899 831.984 li
353.103 833.495 352.374 834.977 351.717 836.426 cv
325.074 836.426 mo
311.225 836.426 li
311.67 834.932 312.234 833.438 312.8 831.984 cv
324.743 831.984 li
327.13 834.371 li
325.074 836.426 li
329.274 832.226 mo
329.033 831.984 li
329.515 831.984 li
329.274 832.226 li
level3{
gsave
clp
[1.2216e-14 -199.504 199.504 1.2216e-14 400.283 986.388 ]ct
/19 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[1.2216e-14 -199.504 199.504 1.2216e-14 400.283 986.388 ]ct
clp
/19 /Gradient get_res exec grestore
}if
np
347.33 871.911 mo
333.627 871.911 li
331.419 869.703 li
333.651 867.471 li
347.387 867.471 li
347.366 868.909 347.347 870.387 347.33 871.911 cv
329.338 871.911 mo
329.211 871.911 li
329.274 871.848 li
329.338 871.911 li
324.921 871.911 mo
306.623 871.911 li
306.623 867.471 li
324.897 867.471 li
327.13 869.703 li
324.921 871.911 li
329.274 867.559 mo
329.186 867.471 li
329.362 867.471 li
329.274 867.559 li
level3{
gsave
clp
[1.22152e-14 -199.49 199.49 1.22152e-14 400.283 986.378 ]ct
/19 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[1.22152e-14 -199.49 199.49 1.22152e-14 400.283 986.378 ]ct
clp
/19 /Gradient get_res exec grestore
}if
np
347.202 907.438 mo
333.648 907.438 li
331.419 905.208 li
333.631 902.996 li
347.197 902.996 li
347.198 904.473 347.2 905.948 347.202 907.438 cv
329.359 907.438 mo
329.189 907.438 li
329.274 907.353 li
329.359 907.438 li
324.9 907.438 mo
306.623 907.438 li
306.623 902.996 li
324.917 902.996 li
327.13 905.208 li
324.9 907.438 li
329.274 903.064 mo
329.207 902.996 li
329.342 902.996 li
329.274 903.064 li
level3{
gsave
clp
[1.22152e-14 -199.49 199.49 1.22152e-14 400.283 986.378 ]ct
/19 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[1.22152e-14 -199.49 199.49 1.22152e-14 400.283 986.378 ]ct
clp
/19 /Gradient get_res exec grestore
}if
np
347.366 942.923 mo
333.628 942.923 li
331.419 940.714 li
333.65 938.483 li
347.336 938.483 li
347.346 939.977 347.356 941.456 347.366 942.923 cv
329.339 942.923 mo
329.21 942.923 li
329.274 942.859 li
329.339 942.923 li
324.92 942.923 mo
306.623 942.923 li
306.623 938.483 li
324.898 938.483 li
327.13 940.714 li
324.92 942.923 li
329.274 938.569 mo
329.188 938.483 li
329.36 938.483 li
329.274 938.569 li
level3{
gsave
clp
[1.22145e-14 -199.479 199.479 1.22145e-14 400.283 986.375 ]ct
/19 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[1.22145e-14 -199.479 199.479 1.22145e-14 400.283 986.375 ]ct
clp
/19 /Gradient get_res exec grestore
}if
np
347.689 978.449 mo
333.649 978.449 li
331.419 976.219 li
333.629 974.009 li
347.641 974.009 li
347.658 975.57 347.674 977.054 347.689 978.449 cv
329.36 978.449 mo
329.188 978.449 li
329.274 978.363 li
329.36 978.449 li
324.899 978.449 mo
306.623 978.449 li
306.623 974.009 li
324.919 974.009 li
327.13 976.219 li
324.899 978.449 li
329.274 974.074 mo
329.209 974.009 li
329.34 974.009 li
329.274 974.074 li
level3{
gsave
clp
[1.22145e-14 -199.479 199.479 1.22145e-14 400.283 986.377 ]ct
/19 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[1.22145e-14 -199.479 199.479 1.22145e-14 400.283 986.377 ]ct
clp
/19 /Gradient get_res exec grestore
}if
np
332.065 910.145 mo
331.491 909.57 li
329.359 907.438 li
329.274 907.353 li
329.189 907.438 li
327.051 909.576 li
326.482 910.145 li
324.338 908 li
324.9 907.438 li
327.13 905.208 li
324.917 902.996 li
324.338 902.417 li
326.482 900.273 li
327.051 900.841 li
329.207 902.996 li
329.274 903.064 li
329.342 902.996 li
331.491 900.847 li
332.065 900.273 li
334.21 902.417 li
333.631 902.996 li
331.419 905.208 li
333.648 907.438 li
334.21 908 li
332.065 910.145 li
level3{
gsave
clp
[9.1495e-15 149.423 -149.423 9.1495e-15 329.274 826.932 ]ct
/23 
<<
/ShadingType 2 
/ColorSpace /0 /CSA get_res
/Coords [0 0 1 0 ]
/Domain [0 1 ]
/Extend[ true true]
/Function
<<
/Domain[0 1 ] 
/FunctionType 3
/Functions [
<<
/Domain[0 1 ] 
/Range[0 1 0 1 0 1 ] 
/FunctionType 0
/Order 1 
/DataSource <~h2l+%OCI%-@bm,Th2l+%OCI%-@bm,Th2l+%OCI%-@bm,Th2l+%OCI%-@bm,Th2l+%OCI%-@bm,Th2l+%
OCI%-@bm,Th2l+%OCI%-@bm,Th2l+%OCI%-@bm,Th2l+%OCI%-@bm,Th2l+%OCI%-@bm,Th2l+%OCI%-
@bm,Th2l+%OCI%-@bm,Th2l+%OCI%-@bm,Th2l+%OCI%-@bm,Th2l+%OCI%-@bm,Th2l+%OCI%-@bm,T
~>
/BitsPerSample 8 
/Encode [0 63 ]
/Decode [0 1 0 1 0 1 ]
/Size [64 ]
>>
<<
/Domain[0 1 ] 
/Range[0 1 0 1 0 1 ] 
/FunctionType 0
/Order 1 
/DataSource <~kbN7_UiP[pEp0<>kbN7_UiP[pEp0<>kbN7_UiP[pEp0<>kbN7_UiP[pEp0<>kbN7_UiP[pEp0<>kbN7_
UiP[pEp0<>kbN7_UiP[pEp0<>kbN7_UN,LmETj0;kbE.]UN,IlETa*:kG*%[UN,IlETa*:kFuqYU2]7g
E9<j4k+HYTTPrqbDrmX0je$GPSo*PZD<.7)j.1#HS87/RCZCjuigFN?QtYHFBAf(fi07g1P@WO4A)35U
~>
/BitsPerSample 8 
/Encode [0 63 ]
/Decode [0 1 0 1 0 1 ]
/Size [64 ]
>>
]
/Bounds [1.89999e-07 ]
/Encode [0 1 1 0 ]
>>
>>/Gradient add_res /23 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[9.1495e-15 149.423 -149.423 9.1495e-15 329.274 826.932 ]ct
clp
/23 {
/0 /CSA get_res setcolorspace
<<
/NumSamples 256 
/NumComp 3 
/Scaling[[.00392157 0 ][.00392157 0 ][.00392157 0 ]]
/Samples[
<~gtgfBh;7#FhV[5Jhr!>Khr*GNi8NYRiSibSiSrkVio8tWio8tWio8tWioB(Zj5]1[j5f:^jQ,C_jQ,C_
jQ,C_jQ,FajlPUcjlPUcjlPUcjlPXek2tggk2tggk2tggk2tggk2tggk2tggk2tggk2tjikND$kkND$k
kND$kkND$kkND$kkND$kkND$kkND$kkND$kkND$kkND$kkND$kkND$kkND$kkND$kkND$kkND$kkND$k
kND$kkND$kkND$kkND$kkND$kkND$kkND$kkND$kkND$kkND$kkND$kkND$kkND$kkND$kkND$kkND$k
~>
<~O-#HbOHGZgP*;)nPE_;sQ'R`%QC!r)Q^F/-R$jA1R@0J2R@9S6S"-"=S=H+>S=H+>S=Q4ASXuFEStDXI
T:_aJT:_aJT:_aJT:_dLTV.sNTV/!PTqS0RTqS3TU8"BVU8"BVU8"BVU8"BVU8"BVU8"BVU8"BVU8"BV
U8"BVU8"BVU8"BWUSFTZUSFTZUSFTZUSFTZUSFTZUSFTZUSFTZUSFTZUSFTZUSFTZUSFTZUSFTZUSFTZ
USFTZUSFTZUSFTZUSFTZUSFTZUSFTZUSFTZUSFTZUSFTZUSFTZUSFTZUSFTZUSFTZUSFTZUSFTZUSFTZ
~>
<~@:E\T@UinX@q9+\A7]=`AS,OdAnPahB4tslBPD0pBkhBtC2.KuC27U#CM[g'Ci!p(Ci!p(Ci+$+D/F-,
D/F0.DJj?0DJj?0DJj?0DJjB2Df9Q4Df9Q4Df9T6E,]c8E,]c8E,]c8E,]c8E,]c8E,]c8E,]c8E,]c8
E,]c8E,]c8E,]c9EH,u<EH,u<EH,u<EH,u<EH,u<EH,u<EH,u<EH,u<EH,u<EH,u<EH,u<EH,u<EH,u<
EH,u<EH,u<EH,u<EH,u<EH,u<EH,u<EH,u<EH,u<EH,u<EH,u<EH,u<EH,u<EH,u<EH,u<EH,u<EH,u<
~>
]
>>
0 0 1 0 []true true []
/DeviceRGB
GenStrips
} /Gradient add_res /23 /Gradient get_res exec grestore
}if
np
332.065 945.65 mo
331.491 945.075 li
329.339 942.923 li
329.274 942.859 li
329.21 942.923 li
327.051 945.081 li
326.482 945.65 li
324.338 943.505 li
324.92 942.923 li
327.13 940.714 li
324.898 938.483 li
324.338 937.923 li
326.482 935.778 li
327.051 936.346 li
329.188 938.483 li
329.274 938.569 li
329.36 938.483 li
331.491 936.352 li
332.065 935.778 li
334.21 937.923 li
333.65 938.483 li
331.419 940.714 li
333.628 942.923 li
334.21 943.505 li
332.065 945.65 li
level3{
gsave
clp
[9.1495e-15 149.423 -149.423 9.1495e-15 329.274 826.932 ]ct
/23 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[9.1495e-15 149.423 -149.423 9.1495e-15 329.274 826.932 ]ct
clp
/23 /Gradient get_res exec grestore
}if
np
332.065 981.154 mo
331.491 980.58 li
329.36 978.449 li
329.274 978.363 li
329.188 978.449 li
327.051 980.586 li
326.482 981.154 li
324.338 979.01 li
324.899 978.449 li
327.13 976.219 li
324.919 974.009 li
324.338 973.428 li
326.482 971.283 li
327.051 971.852 li
329.209 974.009 li
329.274 974.074 li
329.34 974.009 li
331.491 971.858 li
332.065 971.283 li
334.21 973.428 li
333.629 974.009 li
331.419 976.219 li
333.649 978.449 li
334.21 979.01 li
332.065 981.154 li
level3{
gsave
clp
[9.1495e-15 149.423 -149.423 9.1495e-15 329.274 826.931 ]ct
/23 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[9.1495e-15 149.423 -149.423 9.1495e-15 329.274 826.931 ]ct
clp
/23 /Gradient get_res exec grestore
}if
np
332.065 874.639 mo
331.491 874.065 li
329.338 871.911 li
329.274 871.848 li
329.211 871.911 li
327.051 874.071 li
326.482 874.639 li
324.338 872.494 li
324.921 871.911 li
327.13 869.703 li
324.897 867.471 li
324.338 866.912 li
326.482 864.767 li
327.051 865.335 li
329.186 867.471 li
329.274 867.559 li
329.362 867.471 li
331.491 865.341 li
332.065 864.767 li
334.21 866.912 li
333.651 867.471 li
331.419 869.703 li
333.627 871.911 li
334.21 872.494 li
332.065 874.639 li
level3{
gsave
clp
[9.1495e-15 149.423 -149.423 9.1495e-15 329.274 826.932 ]ct
/23 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[9.1495e-15 149.423 -149.423 9.1495e-15 329.274 826.932 ]ct
clp
/23 /Gradient get_res exec grestore
}if
np
332.065 839.307 mo
331.491 838.732 li
329.274 836.515 li
327.051 838.738 li
326.482 839.307 li
324.338 837.162 li
325.074 836.426 li
327.13 834.371 li
324.743 831.984 li
324.338 831.579 li
326.482 829.435 li
327.051 830.003 li
329.033 831.984 li
329.274 832.226 li
329.515 831.984 li
331.491 830.009 li
332.065 829.435 li
334.21 831.579 li
333.805 831.984 li
331.419 834.371 li
333.474 836.426 li
334.21 837.162 li
332.065 839.307 li
level3{
gsave
clp
[9.1495e-15 149.423 -149.423 9.1495e-15 329.274 826.932 ]ct
/23 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[9.1495e-15 149.423 -149.423 9.1495e-15 329.274 826.932 ]ct
clp
/23 /Gradient get_res exec grestore
}if
np
367.569 803.629 mo
366.977 803.037 li
364.84 800.899 li
364.778 800.837 li
364.717 800.899 li
362.577 803.039 li
361.987 803.629 li
359.843 801.484 li
360.428 800.899 li
362.634 798.693 li
360.399 796.458 li
359.843 795.902 li
361.987 793.757 li
362.577 794.347 li
364.689 796.458 li
364.778 796.548 li
364.868 796.458 li
366.977 794.349 li
367.569 793.757 li
369.715 795.902 li
369.158 796.458 li
366.923 798.693 li
369.13 800.899 li
369.715 801.484 li
367.569 803.629 li
level3{
gsave
clp
[9.1495e-15 149.423 -149.423 9.1495e-15 364.778 826.933 ]ct
/23 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[9.1495e-15 149.423 -149.423 9.1495e-15 364.778 826.933 ]ct
clp
/23 /Gradient get_res exec grestore
}if
np
514.12 992.407 mo
493.935 992.407 li
493.935 863.907 li
493.935 799.082 419.004 756.333 400.286 746.668 cv
381.563 756.333 306.633 799.082 306.633 863.907 cv
306.633 992.407 li
286.447 992.407 li
286.447 863.907 li
286.447 827.631 305.62 792.216 341.89 761.492 cv
368.584 738.878 394.991 726.728 396.102 726.223 cv
400.286 724.317 li
404.469 726.223 li
405.58 726.728 431.983 738.878 458.682 761.492 cv
494.948 792.216 514.12 827.631 514.12 863.907 cv
514.12 992.407 li
cp
1 .85098 .658824 rgb
f
396.584 739.493 mo
400.286 737.581 li
403.991 739.493 li
426.983 751.366 502.009 795.425 502.009 863.907 cv
502.009 984.333 li
506.046 984.333 li
506.046 863.907 li
506.046 830.079 487.863 796.795 453.461 767.653 cv
427.5 745.661 401.393 733.694 401.133 733.575 cv
400.286 733.19 li
399.449 733.57 li
399.178 733.694 373.062 745.665 347.11 767.653 cv
312.704 796.795 294.521 830.079 294.521 863.907 cv
294.521 984.333 li
298.559 984.333 li
298.559 863.907 li
298.559 795.417 373.588 751.365 396.584 739.493 cv
cp
level3{
gsave
clp
[1.10823e-14 -180.989 180.989 1.10823e-14 400.284 958.105 ]ct
/16 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[1.10823e-14 -180.989 180.989 1.10823e-14 400.284 958.105 ]ct
clp
/16 /Gradient get_res exec grestore
}if
np
547.75 707.811 mo
531.735 707.811 li
530.308 707.811 529.149 706.653 529.149 705.224 cv
529.149 702.887 li
529.149 701.459 527.992 700.301 526.563 700.301 cv
518.058 700.301 li
516.63 700.301 515.472 701.459 515.472 702.887 cv
515.472 705.224 li
515.472 706.653 514.313 707.811 512.886 707.811 cv
512.884 707.811 li
496.871 707.811 li
496.869 707.811 li
495.441 707.811 494.283 706.653 494.283 705.224 cv
494.283 702.887 li
494.283 701.459 493.126 700.301 491.697 700.301 cv
483.192 700.301 li
481.764 700.301 480.606 701.459 480.606 702.887 cv
480.606 705.224 li
480.606 706.653 479.447 707.811 478.019 707.811 cv
462.005 707.811 li
460.577 707.811 459.419 706.653 459.419 705.224 cv
459.419 702.887 li
459.419 701.459 458.261 700.301 456.833 700.301 cv
452.58 700.301 li
448.327 700.301 li
446.899 700.301 445.741 701.459 445.741 702.887 cv
445.741 705.224 li
445.741 706.653 444.584 707.811 443.155 707.811 cv
427.141 707.811 li
425.713 707.811 424.555 706.653 424.555 705.224 cv
424.555 702.887 li
424.555 701.459 423.396 700.301 421.969 700.301 cv
413.463 700.301 li
412.035 700.301 410.877 701.459 410.877 702.887 cv
410.877 705.224 li
410.877 705.938 410.588 706.585 410.12 707.053 cv
409.651 707.521 409.005 707.811 408.291 707.811 cv
392.276 707.811 li
390.848 707.811 389.69 706.653 389.69 705.224 cv
389.69 702.887 li
389.69 701.459 388.532 700.301 387.104 700.301 cv
378.599 700.301 li
377.171 700.301 376.013 701.459 376.013 702.887 cv
376.013 705.224 li
376.013 706.653 374.854 707.811 373.427 707.811 cv
357.412 707.811 li
355.983 707.811 354.826 706.653 354.826 705.224 cv
354.826 702.887 li
354.826 701.459 353.668 700.301 352.24 700.301 cv
347.987 700.301 li
343.734 700.301 li
342.306 700.301 341.148 701.459 341.148 702.887 cv
341.148 705.224 li
341.148 706.653 339.99 707.811 338.562 707.811 cv
322.548 707.811 li
321.12 707.811 319.962 706.653 319.962 705.224 cv
319.962 702.887 li
319.962 701.459 318.804 700.301 317.375 700.301 cv
308.87 700.301 li
307.441 700.301 306.284 701.459 306.284 702.887 cv
306.284 705.224 li
306.284 706.653 305.126 707.811 303.698 707.811 cv
303.696 707.811 li
287.684 707.811 li
287.682 707.811 li
286.254 707.811 285.096 706.653 285.096 705.224 cv
285.096 702.887 li
285.096 701.459 283.937 700.301 282.509 700.301 cv
274.004 700.301 li
272.575 700.301 271.418 701.459 271.418 702.887 cv
271.418 705.224 li
271.418 706.653 270.26 707.811 268.832 707.811 cv
252.817 707.811 li
251.389 707.811 250.231 706.653 250.231 705.224 cv
250.231 702.887 li
250.231 701.459 249.073 700.301 247.645 700.301 cv
243.392 700.301 li
239.14 700.301 li
237.711 700.301 236.554 701.459 236.554 702.887 cv
236.554 705.224 li
236.554 706.653 235.395 707.811 233.968 707.811 cv
217.953 707.811 li
216.524 707.811 215.367 706.653 215.367 705.224 cv
215.367 702.887 li
215.367 701.459 214.209 700.301 212.781 700.301 cv
204.275 700.301 li
202.848 700.301 201.689 701.459 201.689 702.887 cv
201.689 705.224 li
201.689 706.653 200.531 707.811 199.103 707.811 cv
190.792 707.811 li
183.089 707.811 li
181.66 707.811 180.502 706.653 180.502 705.224 cv
180.502 692.584 li
180.502 689.209 li
180.502 687.782 181.66 686.624 183.089 686.624 cv
201.689 686.624 li
215.367 686.624 li
236.554 686.624 li
243.392 686.624 li
250.231 686.624 li
271.418 686.624 li
285.096 686.624 li
287.684 686.624 li
303.696 686.624 li
306.284 686.624 li
319.962 686.624 li
341.148 686.624 li
347.987 686.624 li
354.826 686.624 li
376.013 686.624 li
389.69 686.624 li
392.276 686.624 li
408.291 686.624 li
410.877 686.624 li
424.555 686.624 li
445.741 686.624 li
452.58 686.624 li
459.419 686.624 li
480.606 686.624 li
494.283 686.624 li
496.871 686.624 li
512.884 686.624 li
515.472 686.624 li
529.149 686.624 li
550.336 686.624 li
557.176 686.624 li
564.014 686.624 li
585.2 686.624 li
598.879 686.624 li
617.479 686.624 li
618.907 686.624 620.065 687.782 620.065 689.209 cv
620.065 689.209 li
620.065 687.782 618.907 686.624 617.479 686.624 cv
598.878 686.624 li
585.2 686.624 li
564.014 686.624 li
557.176 686.624 li
550.336 686.624 li
529.149 686.624 li
515.472 686.624 li
512.884 686.624 li
496.871 686.624 li
494.283 686.624 li
480.606 686.624 li
459.419 686.624 li
452.58 686.624 li
445.741 686.624 li
424.555 686.624 li
410.877 686.624 li
408.291 686.624 li
392.276 686.624 li
389.69 686.624 li
376.013 686.624 li
354.826 686.624 li
347.987 686.624 li
341.148 686.624 li
319.962 686.624 li
306.284 686.624 li
303.696 686.624 li
287.684 686.624 li
285.096 686.624 li
271.418 686.624 li
250.231 686.624 li
243.392 686.624 li
236.554 686.624 li
215.367 686.624 li
208.473 686.624 li
580.538 690.725 li
582.175 690.742 583.541 691.979 583.723 693.606 cv
584.002 696.118 li
584.211 698.007 582.758 699.67 580.857 699.714 cv
555.626 700.301 li
552.923 700.301 li
551.494 700.301 550.336 701.459 550.336 702.887 cv
550.336 705.224 li
550.336 706.653 549.179 707.811 547.75 707.811 cv
level3{
gsave
clp
[439.563 0 0 439.563 180.502 697.217 ]ct
/20 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[439.563 0 0 439.563 180.502 697.217 ]ct
clp
/20 /Gradient get_res exec grestore
}if
np
92.4687 950.143 mo
82.8252 950.143 41.0068 947.706 41.0068 947.706 cv
155.659 947.706 li
155.659 947.706 102.111 950.143 92.4687 950.143 cv
level3{
gsave
clp
[1.86047e-14 303.839 -303.839 1.86047e-14 400.284 719.43 ]ct
/21 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[1.86047e-14 303.839 -303.839 1.86047e-14 400.284 719.43 ]ct
clp
/21 /Gradient get_res exec grestore
}if
np
118.787 897.449 mo
102.294 897.449 li
100.061 897.449 98.2499 895.638 98.2499 893.405 cv
98.2499 852.352 li
98.2499 850.118 100.061 848.308 102.294 848.308 cv
118.787 848.308 li
121.019 848.308 122.83 850.118 122.83 852.352 cv
122.83 893.405 li
122.83 895.638 121.019 897.449 118.787 897.449 cv
level3{
gsave
clp
[2.83657e-15 -46.3248 46.3248 2.83657e-15 110.54 894.327 ]ct
/6 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[2.83657e-15 -46.3248 46.3248 2.83657e-15 110.54 894.327 ]ct
clp
/6 /Gradient get_res exec grestore
}if
np
120.691 897.449 mo
118.787 897.449 li
118.787 897.449 li
120.69 897.449 li
123.439 897.449 125.667 895.22 125.667 892.472 cv
125.667 846.91 li
125.667 846.91 li
125.667 892.472 li
125.667 895.22 123.439 897.449 120.691 897.449 cv
125.667 846.91 mo
125.667 844.162 123.439 841.934 120.69 841.934 cv
120.691 841.934 li
123.439 841.934 125.667 844.161 125.667 846.91 cv
95.413 846.91 mo
95.413 844.194 97.5886 841.986 100.293 841.935 cv
97.5886 841.986 95.413 844.195 95.413 846.91 cv
level3{
gsave
clp
[8.92424e-15 -145.744 145.744 8.92424e-15 95.4129 936.407 ]ct
/19 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[8.92424e-15 -145.744 145.744 8.92424e-15 95.4129 936.407 ]ct
clp
/19 /Gradient get_res exec grestore
}if
np
120.69 897.449 mo
118.787 897.449 li
121.019 897.449 122.83 895.638 122.83 893.405 cv
122.83 852.352 li
122.83 850.118 121.019 848.308 118.787 848.308 cv
102.294 848.308 li
100.061 848.308 98.2499 850.118 98.2499 852.352 cv
98.2499 893.405 li
98.2499 895.638 100.061 897.449 102.294 897.449 cv
100.39 897.449 li
97.6405 897.449 95.413 895.22 95.413 892.472 cv
95.413 846.91 li
95.413 846.91 li
95.413 844.195 97.5886 841.986 100.293 841.935 cv
100.325 841.934 100.357 841.934 100.39 841.934 cv
120.69 841.934 li
123.439 841.934 125.667 844.162 125.667 846.91 cv
125.667 846.91 li
125.667 892.472 li
125.667 895.22 123.439 897.449 120.69 897.449 cv
level3{
gsave
clp
[2.83657e-15 -46.3248 46.3248 2.83657e-15 110.54 894.327 ]ct
/9 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[2.83657e-15 -46.3248 46.3248 2.83657e-15 110.54 894.327 ]ct
clp
/9 /Gradient get_res exec grestore
}if
np
698.291 897.449 mo
681.798 897.449 li
679.564 897.449 677.754 895.638 677.754 893.405 cv
677.754 852.352 li
677.754 850.118 679.564 848.308 681.798 848.308 cv
698.291 848.308 li
700.524 848.308 702.335 850.118 702.335 852.352 cv
702.335 893.405 li
702.335 895.638 700.524 897.449 698.291 897.449 cv
level3{
gsave
clp
[2.83657e-15 -46.3248 46.3248 2.83657e-15 690.044 894.327 ]ct
/6 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[2.83657e-15 -46.3248 46.3248 2.83657e-15 690.044 894.327 ]ct
clp
/6 /Gradient get_res exec grestore
}if
np
700.195 897.449 mo
698.291 897.449 li
698.291 897.449 li
700.194 897.449 li
702.943 897.449 705.172 895.22 705.172 892.472 cv
705.172 846.91 li
705.172 846.91 li
705.172 892.472 li
705.172 895.22 702.943 897.449 700.195 897.449 cv
705.172 846.91 mo
705.172 844.162 702.943 841.934 700.194 841.934 cv
700.195 841.934 li
702.943 841.934 705.172 844.161 705.172 846.91 cv
674.917 846.91 mo
674.917 844.194 677.094 841.986 679.797 841.935 cv
677.094 841.986 674.917 844.195 674.917 846.91 cv
level3{
gsave
clp
[8.92424e-15 -145.744 145.744 8.92424e-15 705.154 936.407 ]ct
/19 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[8.92424e-15 -145.744 145.744 8.92424e-15 705.154 936.407 ]ct
clp
/19 /Gradient get_res exec grestore
}if
np
700.194 897.449 mo
698.291 897.449 li
700.524 897.449 702.335 895.638 702.335 893.405 cv
702.335 852.352 li
702.335 850.118 700.524 848.308 698.291 848.308 cv
681.798 848.308 li
679.564 848.308 677.754 850.118 677.754 852.352 cv
677.754 893.405 li
677.754 895.638 679.564 897.449 681.798 897.449 cv
679.894 897.449 li
677.146 897.449 674.917 895.22 674.917 892.472 cv
674.917 846.91 li
674.917 846.91 li
674.917 844.195 677.094 841.986 679.797 841.935 cv
679.829 841.934 679.861 841.934 679.894 841.934 cv
700.194 841.934 li
702.943 841.934 705.172 844.162 705.172 846.91 cv
705.172 846.91 li
705.172 892.472 li
705.172 895.22 702.943 897.449 700.194 897.449 cv
level3{
gsave
clp
[2.83657e-15 -46.3248 46.3248 2.83657e-15 690.044 894.327 ]ct
/9 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[2.83657e-15 -46.3248 46.3248 2.83657e-15 690.044 894.327 ]ct
clp
/9 /Gradient get_res exec grestore
}if
np
609.775 707.811 mo
601.465 707.811 li
600.036 707.811 598.878 706.653 598.878 705.224 cv
598.878 702.887 li
598.878 701.459 597.721 700.301 596.292 700.301 cv
587.787 700.301 li
586.359 700.301 585.2 701.459 585.2 702.887 cv
585.2 705.224 li
585.2 706.653 584.043 707.811 582.614 707.811 cv
566.6 707.811 li
565.172 707.811 564.014 706.653 564.014 705.224 cv
564.014 705.224 li
564.014 706.653 565.172 707.811 566.6 707.811 cv
582.614 707.811 li
584.043 707.811 585.2 706.653 585.2 705.224 cv
585.2 702.887 li
585.2 701.459 586.359 700.301 587.787 700.301 cv
596.292 700.301 li
597.721 700.301 598.879 701.459 598.879 702.887 cv
598.879 705.224 li
598.879 706.653 600.036 707.811 601.465 707.811 cv
609.775 707.811 li
level3{
gsave
clp
[1.86047e-14 303.839 -303.839 1.86047e-14 400.284 719.43 ]ct
/24 
<<
/ShadingType 2 
/ColorSpace /0 /CSA get_res
/Coords [0 0 1 0 ]
/Domain [0 1 ]
/Extend[ true true]
/Function
<<
/Domain[0 1 ] 
/FunctionType 3
/Functions [
<<
/Domain[0 1 ] 
/Range[0 1 0 1 0 1 ] 
/FunctionType 0
/Order 1 
/DataSource <~l'cDPRVV/VC[%:'l'cDPRVV/VC[%:'l'cDPRVV/VC[%:'l'cDPRVV/VC[%:'l'cDPRVV/VC[%:'l'cDP
RVV/VC[%:'l'cDPRVV/VC[%:'l'cDPRVV/VC[%:'l'cDPRVV/VC[%:'l'cDPRVV/VC[%:'l'cDPRVV/V
C[%:'l'cDPRVV/VC[%:'l'cDPRVV/VC[%:'l'cDPRVV/VC[%:'l'cDPRVV/VC[%:'l'cDPRVV/VC[%:'
~>
/BitsPerSample 8 
/Encode [0 63 ]
/Decode [0 1 0 1 0 1 ]
/Size [64 ]
>>
<<
/Domain[0 1 ] 
/Range[0 1 0 1 0 1 ] 
/FunctionType 0
/Order 1 
/DataSource <~os&r<Z$l;MIJ'jnos&r<Z$l;MIJ'jnos&r<Z$l;MIJ'jnos&r<Z$l;MIJ'jnos&r<Z$l;MIJ'jnos&r<
Z$l;MIJ'jnos&r<Z$l;MIJ'jnos&r<Y^H,JI.a^korri:Y^H)II.XXjoWNZ7YC#oFHh=LgoWEQ5Y']cB
Hh4@co;m90XEsH<HLe+^nu@!+Wd+'6GO_\Wn>UU#W-.R+FRQ&Jm\FsmUN5aqEU9B<m%A:_So3h`D<[L)
~>
/BitsPerSample 8 
/Encode [0 63 ]
/Decode [0 1 0 1 0 1 ]
/Size [64 ]
>>
]
/Bounds [1.89999e-07 ]
/Encode [0 1 1 0 ]
>>
>>/Gradient add_res /24 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[1.86047e-14 303.839 -303.839 1.86047e-14 400.284 719.43 ]ct
clp
/24 {
/0 /CSA get_res setcolorspace
<<
/NumSamples 256 
/NumComp 3 
/Scaling[[.00392157 0 ][.00392157 0 ][.00392157 0 ]]
/Samples[
<~kiq?rl0@R!lKdd%lg*m&lg4!)m-X3-mHs<.mI'E1mdBN2mdKW5n*f`6n*oi9nF5r:nF?&=naZ/>naZ/>
naZ/>naZ2@o()ABo()ABo()ABo()DDoCMSFoCMSFoCMSFoCMSFoCMSFoCMSFoCMSFoCMVHo^qeJo^qeJ
o^qeJo^qeJo^qeJo^qeJo^qeJo^qeJo^qeJo^qeJo^qeJo^qeJo^qeJo^qeJo^qeJo^qeJo^qeJo^qeJ
o^qeJo^qeJo^qeJo^qeJo^qeJo^qeJo^qeJo^qeJo^qeJo^qeJo^qeJo^qeJo^qeJo^qeJo^qeJo^qeJ
~>
<~R@9S6S"-">SXuFFT:hjMTV.sNTV8'RU8+KYUSO]]UnsoaV5C,fVl6PmW2ZbqWMukrWMukrWMukrWN)tu
WiE)!WiE,#X/i;%X/i>'XK8M)XK8P+Xf\_-Xf\b/Y-+q1Y-+q1Y-+q1Y-+t3YHP.5YHP.5YHP.5YHP.5
YHP.5YHP.5YHP.6Yct@9Yct@9Yct@9Yct@9Yct@9Yct@9Yct@9Yct@9Yct@9Yct@9Yct@9Yct@9Yct@9
Yct@9Yct@9Yct@9Yct@9Yct@9Yct@9Yct@9Yct@9Yct@9Yct@9Yct@9Yct@9Yct@9Yct@9Yct@9Yct@9
~>
<~C27U$Ci+$+D/O6/DJsH3DfBZ7E,fl;EH6)@F)uDDF)uDDF*)MGFEM_KF`qqOG'8%PG'A.SGBe@WG^+IX
G^+LZH$O[\H$O[\H$O[\H$O^^H?sm`H?sm`H?sm`H?sm`H?sm`H?spbH[C*dH[C*dH[C*dH[C*dH[C*d
H[C*dH[C*dH[C*eI!g<hI!g<hI!g<hI!g<hI!g<hI!g<hI!g<hI!g<hI!g<hI!g<hI!g<hI!g<hI!g<h
I!g<hI!g<hI!g<hI!g<hI!g<hI!g<hI!g<hI!g<hI!g<hI!g<hI!g<hI!g<hI!g<hI!g<hI!g<hI!g<h
~>
]
>>
0 0 1 0 []true true []
/DeviceRGB
GenStrips
} /Gradient add_res /24 /Gradient get_res exec grestore
}if
np
617.479 707.811 mo
609.775 707.811 li
601.465 707.811 li
600.036 707.811 598.879 706.653 598.879 705.224 cv
598.879 702.887 li
598.879 701.459 597.721 700.301 596.292 700.301 cv
587.787 700.301 li
586.359 700.301 585.2 701.459 585.2 702.887 cv
585.2 705.224 li
585.2 706.653 584.043 707.811 582.614 707.811 cv
566.6 707.811 li
565.172 707.811 564.014 706.653 564.014 705.224 cv
564.014 702.887 li
564.014 702.887 li
564.014 701.459 562.856 700.301 561.428 700.301 cv
557.176 700.301 li
555.626 700.301 li
580.857 699.714 li
582.758 699.67 584.211 698.007 584.002 696.118 cv
583.723 693.606 li
583.541 691.979 582.175 690.742 580.538 690.725 cv
208.473 686.624 li
215.367 686.624 li
236.554 686.624 li
243.392 686.624 li
250.231 686.624 li
271.418 686.624 li
285.096 686.624 li
287.684 686.624 li
303.696 686.624 li
306.284 686.624 li
319.962 686.624 li
341.148 686.624 li
347.987 686.624 li
354.826 686.624 li
376.013 686.624 li
389.69 686.624 li
392.276 686.624 li
408.291 686.624 li
410.877 686.624 li
424.555 686.624 li
445.741 686.624 li
452.58 686.624 li
459.419 686.624 li
480.606 686.624 li
494.283 686.624 li
496.871 686.624 li
512.884 686.624 li
515.472 686.624 li
529.149 686.624 li
550.336 686.624 li
557.176 686.624 li
564.014 686.624 li
585.2 686.624 li
598.878 686.624 li
617.479 686.624 li
618.907 686.624 620.065 687.782 620.065 689.209 cv
620.065 705.224 li
620.065 706.653 618.907 707.811 617.479 707.811 cv
level3{
gsave
clp
[439.563 0 0 439.563 180.502 697.217 ]ct
/21 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[439.563 0 0 439.563 180.502 697.217 ]ct
clp
/21 /Gradient get_res exec grestore
}if
np
263.815 882.079 mo
262.764 882.078 261.556 881.538 260.316 880.143 cv
256.371 875.705 264.097 875.705 264.097 875.705 cv
269.189 875.705 267.425 882.079 263.815 882.079 cv
level3{
gsave
clp
[1.86047e-14 303.839 -303.839 1.86047e-14 400.284 719.43 ]ct
/21 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[1.86047e-14 303.839 -303.839 1.86047e-14 400.284 719.43 ]ct
clp
/21 /Gradient get_res exec grestore
}if
np
567.31 748.491 mo
566.672 748.491 565.901 748.3 565.014 747.827 cv
559.744 745.025 566.957 745.025 566.957 745.025 cv
570.321 745.025 570.024 748.491 567.31 748.491 cv
level3{
gsave
clp
[1.86047e-14 303.839 -303.839 1.86047e-14 400.284 719.43 ]ct
/21 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[1.86047e-14 303.839 -303.839 1.86047e-14 400.284 719.43 ]ct
clp
/21 /Gradient get_res exec grestore
}if
np
517.364 781.582 mo
516.645 781.582 515.944 781.301 515.376 780.612 cv
511.896 776.397 516.573 776.039 518.262 776.039 cv
518.607 776.039 518.828 776.054 518.828 776.054 cv
523.743 776.586 520.394 781.582 517.364 781.582 cv
level3{
gsave
clp
[1.86047e-14 303.839 -303.839 1.86047e-14 400.284 719.43 ]ct
/21 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[1.86047e-14 303.839 -303.839 1.86047e-14 400.284 719.43 ]ct
clp
/21 /Gradient get_res exec grestore
}if
np
777.341 765.438 mo
776.622 765.438 775.922 765.156 775.353 764.468 cv
771.874 760.252 776.55 759.894 778.239 759.894 cv
778.584 759.894 778.805 759.909 778.805 759.909 cv
783.721 760.442 780.371 765.438 777.341 765.438 cv
level3{
gsave
clp
[-156.554 1.91723e-14 -1.91724e-14 -156.554 782.349 768.615 ]ct
/3 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-156.554 1.91723e-14 -1.91724e-14 -156.554 782.349 768.615 ]ct
clp
/3 /Gradient get_res exec grestore
}if
np
609.417 981.221 mo
608.698 981.221 607.997 980.94 607.429 980.251 cv
603.95 976.037 608.623 975.678 610.313 975.678 cv
610.659 975.678 610.881 975.693 610.881 975.693 cv
615.797 976.225 612.447 981.221 609.417 981.221 cv
level3{
gsave
clp
[1.86047e-14 303.839 -303.839 1.86047e-14 400.284 719.43 ]ct
/24 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[1.86047e-14 303.839 -303.839 1.86047e-14 400.284 719.43 ]ct
clp
/24 /Gradient get_res exec grestore
}if
np
605.814 670.541 mo
605.096 670.541 604.395 670.26 603.827 669.572 cv
600.348 665.356 605.021 664.998 606.711 664.998 cv
607.057 664.998 607.278 665.013 607.278 665.013 cv
612.195 665.544 608.844 670.542 605.814 670.541 cv
level3{
gsave
clp
[470.084 0 0 470.084 165.241 665.008 ]ct
/3 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[470.084 0 0 470.084 165.241 665.008 ]ct
clp
/3 /Gradient get_res exec grestore
}if
np
249.85 773.137 mo
249.131 773.137 248.43 772.856 247.862 772.167 cv
244.384 767.953 249.056 767.594 250.747 767.594 cv
251.093 767.594 251.314 767.61 251.314 767.61 cv
256.23 768.141 252.88 773.137 249.85 773.137 cv
level3{
gsave
clp
[1.86047e-14 303.839 -303.839 1.86047e-14 400.284 719.43 ]ct
/21 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[1.86047e-14 303.839 -303.839 1.86047e-14 400.284 719.43 ]ct
clp
/21 /Gradient get_res exec grestore
}if
np
121.706 963.486 mo
120.987 963.486 120.287 963.205 119.719 962.517 cv
116.24 958.301 120.913 957.943 122.602 957.943 cv
122.949 957.943 123.17 957.958 123.17 957.958 cv
128.086 958.489 124.736 963.486 121.706 963.486 cv
level3{
gsave
clp
[1.86047e-14 303.839 -303.839 1.86047e-14 400.284 719.43 ]ct
/21 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[1.86047e-14 303.839 -303.839 1.86047e-14 400.284 719.43 ]ct
clp
/21 /Gradient get_res exec grestore
}if
np
649.984 888.113 mo
649.625 888.113 649.274 887.972 648.99 887.628 cv
647.25 885.52 649.588 885.341 650.433 885.341 cv
650.605 885.341 650.716 885.349 650.716 885.349 cv
653.174 885.615 651.499 888.113 649.984 888.113 cv
level3{
gsave
clp
[8.92424e-15 -145.744 145.744 8.92424e-15 705.154 936.407 ]ct
/17 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[8.92424e-15 -145.744 145.744 8.92424e-15 705.154 936.407 ]ct
clp
/17 /Gradient get_res exec grestore
}if
np
223.96 921.775 mo
223.6 921.775 223.25 921.635 222.966 921.29 cv
221.226 919.184 223.56 919.004 224.406 919.004 cv
224.58 919.004 224.691 919.012 224.691 919.012 cv
227.149 919.277 225.475 921.775 223.96 921.775 cv
level3{
gsave
clp
[1.86047e-14 303.839 -303.839 1.86047e-14 400.284 719.43 ]ct
/21 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[1.86047e-14 303.839 -303.839 1.86047e-14 400.284 719.43 ]ct
clp
/21 /Gradient get_res exec grestore
}if
np
49.7901 831.222 mo
48.6968 831.222 47.6299 830.794 46.7656 829.747 cv
41.4714 823.333 48.5829 822.788 51.1547 822.788 cv
51.6816 822.788 52.0184 822.811 52.0184 822.811 cv
59.5005 823.619 54.4017 831.223 49.7901 831.222 cv
level3{
gsave
clp
[8.92424e-15 -145.744 145.744 8.92424e-15 95.4129 936.407 ]ct
/17 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[8.92424e-15 -145.744 145.744 8.92424e-15 95.4129 936.407 ]ct
clp
/17 /Gradient get_res exec grestore
}if
np
535.495 671.986 mo
534.401 671.986 533.334 671.558 532.47 670.511 cv
527.177 664.098 534.284 663.552 536.857 663.552 cv
537.385 663.552 537.723 663.575 537.723 663.575 cv
545.204 664.384 540.106 671.986 535.495 671.986 cv
level3{
gsave
clp
[470.084 0 0 470.084 165.241 665.008 ]ct
/3 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[470.084 0 0 470.084 165.241 665.008 ]ct
clp
/3 /Gradient get_res exec grestore
}if
np
235.096 914.874 mo
234.002 914.874 232.936 914.446 232.071 913.399 cv
226.778 906.985 233.886 906.439 236.459 906.439 cv
236.987 906.439 237.324 906.462 237.324 906.462 cv
244.806 907.27 239.707 914.875 235.096 914.874 cv
level3{
gsave
clp
[1.86047e-14 303.839 -303.839 1.86047e-14 400.284 719.43 ]ct
/21 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[1.86047e-14 303.839 -303.839 1.86047e-14 400.284 719.43 ]ct
clp
/21 /Gradient get_res exec grestore
}if
np
557.073 840.127 mo
555.86 840.126 554.565 839.718 553.336 838.723 cv
546.432 833.135 557.16 831.801 557.16 831.801 cv
565.948 832.751 562.234 840.127 557.073 840.127 cv
level3{
gsave
clp
[1.86047e-14 303.839 -303.839 1.86047e-14 400.284 719.43 ]ct
/21 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[1.86047e-14 303.839 -303.839 1.86047e-14 400.284 719.43 ]ct
clp
/21 /Gradient get_res exec grestore
}if
np
641.563 895.734 mo
640.703 895.734 639.787 895.445 638.917 894.741 cv
634.028 890.783 641.624 889.84 641.624 889.84 cv
647.846 890.513 645.216 895.735 641.563 895.734 cv
level3{
gsave
clp
[8.92424e-15 -145.744 145.744 8.92424e-15 705.154 936.407 ]ct
/17 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[8.92424e-15 -145.744 145.744 8.92424e-15 705.154 936.407 ]ct
clp
/17 /Gradient get_res exec grestore
}if
np
545.809 938.725 mo
544.95 938.725 544.033 938.436 543.163 937.732 cv
538.275 933.774 545.87 932.831 545.87 932.831 cv
552.092 933.504 549.462 938.726 545.809 938.725 cv
level3{
gsave
clp
[1.86047e-14 303.839 -303.839 1.86047e-14 400.284 719.43 ]ct
/24 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[1.86047e-14 303.839 -303.839 1.86047e-14 400.284 719.43 ]ct
clp
/24 /Gradient get_res exec grestore
}if
np
724.113 822.569 mo
723.254 822.569 722.338 822.28 721.468 821.576 cv
716.58 817.618 724.175 816.675 724.175 816.675 cv
730.397 817.348 727.767 822.57 724.113 822.569 cv
level3{
gsave
clp
[8.92424e-15 -145.744 145.744 8.92424e-15 705.154 936.407 ]ct
/17 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[8.92424e-15 -145.744 145.744 8.92424e-15 705.154 936.407 ]ct
clp
/17 /Gradient get_res exec grestore
}if
np
57.7727 836.082 mo
57.166 836.082 56.519 835.878 55.9043 835.38 cv
52.4525 832.585 57.8158 831.919 57.8158 831.919 cv
62.2103 832.394 60.353 836.082 57.7727 836.082 cv
level3{
gsave
clp
[8.92424e-15 -145.744 145.744 8.92424e-15 95.4129 936.407 ]ct
/17 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[8.92424e-15 -145.744 145.744 8.92424e-15 95.4129 936.407 ]ct
clp
/17 /Gradient get_res exec grestore
}if
np
185.439 971.634 mo
184.345 971.634 183.279 971.206 182.414 970.158 cv
177.12 963.744 184.231 963.199 186.803 963.199 cv
187.33 963.199 187.667 963.222 187.667 963.222 cv
195.147 964.031 190.05 971.634 185.439 971.634 cv
level3{
gsave
clp
[1.86047e-14 303.839 -303.839 1.86047e-14 400.284 719.43 ]ct
/21 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[1.86047e-14 303.839 -303.839 1.86047e-14 400.284 719.43 ]ct
clp
/21 /Gradient get_res exec grestore
}if
np
193.42 976.494 mo
192.814 976.493 192.167 976.289 191.553 975.792 cv
188.101 972.997 193.464 972.33 193.464 972.33 cv
197.859 972.805 196.001 976.494 193.42 976.494 cv
level3{
gsave
clp
[1.86047e-14 303.839 -303.839 1.86047e-14 400.284 719.43 ]ct
/21 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[1.86047e-14 303.839 -303.839 1.86047e-14 400.284 719.43 ]ct
clp
/21 /Gradient get_res exec grestore
}if
np
694.98 969.149 mo
693.887 969.149 692.82 968.721 691.956 967.674 cv
686.662 961.26 693.773 960.715 696.345 960.715 cv
696.872 960.715 697.209 960.738 697.209 960.738 cv
704.691 961.546 699.592 969.15 694.98 969.149 cv
level3{
gsave
clp
[1.86047e-14 303.839 -303.839 1.86047e-14 400.284 719.43 ]ct
/21 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[1.86047e-14 303.839 -303.839 1.86047e-14 400.284 719.43 ]ct
clp
/21 /Gradient get_res exec grestore
}if
np
702.963 974.009 mo
702.356 974.009 701.709 973.805 701.095 973.307 cv
697.642 970.512 703.006 969.846 703.006 969.846 cv
707.4 970.321 705.543 974.009 702.963 974.009 cv
level3{
gsave
clp
[1.86047e-14 303.839 -303.839 1.86047e-14 400.284 719.43 ]ct
/21 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[1.86047e-14 303.839 -303.839 1.86047e-14 400.284 719.43 ]ct
clp
/21 /Gradient get_res exec grestore
}if
np
525.374 683.249 mo
524.767 683.249 524.12 683.045 523.506 682.547 cv
520.053 679.752 525.417 679.086 525.417 679.086 cv
529.811 679.561 527.954 683.249 525.374 683.249 cv
level3{
gsave
clp
[470.084 0 0 470.084 165.241 665.008 ]ct
/3 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[470.084 0 0 470.084 165.241 665.008 ]ct
clp
/3 /Gradient get_res exec grestore
}if
np
638.072 837.585 mo
637.59 837.585 637.045 837.397 636.474 836.936 cv
633.023 834.141 638.448 834.141 638.448 834.141 cv
640.95 834.536 640.019 837.585 638.072 837.585 cv
level3{
gsave
clp
[8.92424e-15 -145.744 145.744 8.92424e-15 705.154 936.407 ]ct
/17 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[8.92424e-15 -145.744 145.744 8.92424e-15 705.154 936.407 ]ct
clp
/17 /Gradient get_res exec grestore
}if
np
235.532 763.354 mo
235.049 763.354 234.504 763.166 233.934 762.704 cv
230.481 759.91 235.906 759.91 235.906 759.91 cv
238.409 760.305 237.478 763.354 235.532 763.354 cv
level3{
gsave
clp
[1.86047e-14 303.839 -303.839 1.86047e-14 400.284 719.43 ]ct
/21 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[1.86047e-14 303.839 -303.839 1.86047e-14 400.284 719.43 ]ct
clp
/21 /Gradient get_res exec grestore
}if
np
575.397 742.387 mo
574.914 742.387 574.369 742.199 573.799 741.738 cv
572.464 740.657 572.456 739.995 572.949 739.589 cv
576.148 742.223 li
575.922 742.327 575.669 742.387 575.397 742.387 cv
level3{
gsave
clp
[1.86047e-14 303.839 -303.839 1.86047e-14 400.284 719.43 ]ct
/21 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[1.86047e-14 303.839 -303.839 1.86047e-14 400.284 719.43 ]ct
clp
/21 /Gradient get_res exec grestore
}if
np
576.148 742.223 mo
572.949 739.589 li
573.73 738.944 575.771 738.944 575.771 738.944 cv
577.924 739.283 577.536 741.585 576.148 742.223 cv
level3{
gsave
clp
[1.86047e-14 303.839 -303.839 1.86047e-14 400.284 719.43 ]ct
/24 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[1.86047e-14 303.839 -303.839 1.86047e-14 400.284 719.43 ]ct
clp
/24 /Gradient get_res exec grestore
}if
np
697.058 780.814 mo
696.421 780.814 695.65 780.623 694.763 780.151 cv
689.493 777.348 696.705 777.348 696.705 777.348 cv
700.07 777.348 699.772 780.814 697.058 780.814 cv
level3{
gsave
clp
[-156.554 1.91723e-14 -1.91724e-14 -156.554 782.349 768.615 ]ct
/3 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-156.554 1.91723e-14 -1.91724e-14 -156.554 782.349 768.615 ]ct
clp
/3 /Gradient get_res exec grestore
}if
np
705.146 774.709 mo
704.663 774.709 704.118 774.522 703.548 774.06 cv
700.095 771.266 705.52 771.266 705.52 771.266 cv
708.023 771.66 707.092 774.709 705.146 774.709 cv
level3{
gsave
clp
[-156.554 1.91723e-14 -1.91724e-14 -156.554 782.349 768.615 ]ct
/3 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-156.554 1.91723e-14 -1.91724e-14 -156.554 782.349 768.615 ]ct
clp
/3 /Gradient get_res exec grestore
}if
np
385.181 683.926 mo
384.544 683.926 383.773 683.735 382.886 683.263 cv
377.616 680.46 384.827 680.46 384.827 680.46 cv
388.192 680.46 387.894 683.926 385.181 683.926 cv
level3{
gsave
clp
[470.084 0 0 470.084 165.241 665.008 ]ct
/3 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[470.084 0 0 470.084 165.241 665.008 ]ct
clp
/3 /Gradient get_res exec grestore
}if
np
393.267 677.821 mo
392.785 677.821 392.239 677.634 391.669 677.172 cv
388.218 674.378 393.642 674.378 393.642 674.378 cv
396.144 674.773 395.214 677.822 393.267 677.821 cv
level3{
gsave
clp
[470.084 0 0 470.084 165.241 665.008 ]ct
/3 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[470.084 0 0 470.084 165.241 665.008 ]ct
clp
/3 /Gradient get_res exec grestore
}if
np
579.591 852.066 mo
579.109 852.066 578.563 851.878 577.993 851.416 cv
574.54 848.622 579.965 848.622 579.965 848.622 cv
582.467 849.018 581.537 852.066 579.591 852.066 cv
level3{
gsave
clp
[1.86047e-14 303.839 -303.839 1.86047e-14 400.284 719.43 ]ct
/21 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[1.86047e-14 303.839 -303.839 1.86047e-14 400.284 719.43 ]ct
clp
/21 /Gradient get_res exec grestore
}if
np
740.517 901.19 mo
739.304 901.19 738.01 900.782 736.78 899.786 cv
729.876 894.197 740.604 892.865 740.604 892.865 cv
749.393 893.815 745.678 901.191 740.517 901.19 cv
level3{
gsave
clp
[8.92424e-15 -145.744 145.744 8.92424e-15 705.154 936.407 ]ct
/17 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[8.92424e-15 -145.744 145.744 8.92424e-15 705.154 936.407 ]ct
clp
/17 /Gradient get_res exec grestore
}if
np
763.035 913.129 mo
762.553 913.129 762.008 912.942 761.438 912.48 cv
757.984 909.685 763.409 909.685 763.409 909.685 cv
765.912 910.081 764.981 913.129 763.035 913.129 cv
level3{
gsave
clp
[8.92424e-15 -145.744 145.744 8.92424e-15 705.154 936.407 ]ct
/17 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[8.92424e-15 -145.744 145.744 8.92424e-15 705.154 936.407 ]ct
clp
/17 /Gradient get_res exec grestore
}if
np
536.469 956.23 mo
535.986 956.23 535.441 956.043 534.871 955.581 cv
531.42 952.786 536.844 952.786 536.844 952.786 cv
539.346 953.182 538.415 956.231 536.469 956.23 cv
level3{
gsave
clp
[1.86047e-14 303.839 -303.839 1.86047e-14 400.284 719.43 ]ct
/24 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[1.86047e-14 303.839 -303.839 1.86047e-14 400.284 719.43 ]ct
clp
/24 /Gradient get_res exec grestore
}if
np
635.754 769.194 mo
635.271 769.194 634.727 769.007 634.156 768.545 cv
630.704 765.75 636.129 765.75 636.129 765.75 cv
638.631 766.145 637.7 769.194 635.754 769.194 cv
level3{
gsave
clp
[-156.554 1.91723e-14 -1.91724e-14 -156.554 782.349 768.615 ]ct
/3 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-156.554 1.91723e-14 -1.91724e-14 -156.554 782.349 768.615 ]ct
clp
/3 /Gradient get_res exec grestore
}if
np
186.413 665.274 mo
185.931 665.273 185.386 665.086 184.815 664.624 cv
181.362 661.83 186.787 661.83 186.787 661.83 cv
189.29 662.226 188.359 665.274 186.413 665.274 cv
level3{
gsave
clp
[470.084 0 0 470.084 165.241 665.008 ]ct
/3 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[470.084 0 0 470.084 165.241 665.008 ]ct
clp
/3 /Gradient get_res exec grestore
}if
np
222.749 832.519 mo
222.207 832.519 221.848 832.407 221.92 832.119 cv
222.143 831.227 223.125 831.083 223.732 831.083 cv
224.019 831.083 224.222 831.115 224.222 831.115 cv
224.264 831.115 224.305 831.115 224.345 831.115 cv
226.604 831.115 226.685 831.466 225.961 831.817 cv
225.237 832.168 223.707 832.519 222.749 832.519 cv
level3{
gsave
clp
[1.86047e-14 303.839 -303.839 1.86047e-14 400.284 719.43 ]ct
/21 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[1.86047e-14 303.839 -303.839 1.86047e-14 400.284 719.43 ]ct
clp
/21 /Gradient get_res exec grestore
}if
np
516.684 741.698 mo
516.281 741.698 516.013 741.537 516.066 741.123 cv
516.233 739.837 516.966 739.631 517.419 739.631 cv
517.633 739.631 517.784 739.677 517.784 739.677 cv
517.815 739.677 517.845 739.677 517.874 739.677 cv
519.563 739.677 519.623 740.182 519.082 740.687 cv
518.541 741.193 517.4 741.698 516.684 741.698 cv
level3{
gsave
clp
[1.86047e-14 303.839 -303.839 1.86047e-14 400.284 719.43 ]ct
/21 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[1.86047e-14 303.839 -303.839 1.86047e-14 400.284 719.43 ]ct
clp
/21 /Gradient get_res exec grestore
}if
np
258.156 762.666 mo
257.752 762.665 257.484 762.504 257.538 762.09 cv
257.704 760.805 258.437 760.599 258.89 760.599 cv
259.104 760.599 259.256 760.645 259.256 760.645 cv
259.287 760.644 259.318 760.644 259.348 760.644 cv
261.034 760.644 261.094 761.15 260.553 761.655 cv
260.012 762.16 258.871 762.666 258.156 762.666 cv
level3{
gsave
clp
[1.86047e-14 303.839 -303.839 1.86047e-14 400.284 719.43 ]ct
/21 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[1.86047e-14 303.839 -303.839 1.86047e-14 400.284 719.43 ]ct
clp
/21 /Gradient get_res exec grestore
}if
np
84.708 774.969 mo
84.3618 774.969 84.1404 774.954 84.1404 774.954 cv
79.2245 774.422 82.5745 769.426 85.6049 769.426 cv
86.3236 769.426 87.0246 769.707 87.5928 770.396 cv
91.0713 774.611 86.398 774.969 84.708 774.969 cv
level3{
gsave
clp
[190.792 0 0 190.792 0 768.615 ]ct
/3 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[190.792 0 0 190.792 0 768.615 ]ct
clp
/3 /Gradient get_res exec grestore
}if
np
99.5488 782.653 mo
97.0461 782.258 97.9773 779.209 99.9235 779.209 cv
100.406 779.209 100.951 779.397 101.521 779.859 cv
104.973 782.653 99.5488 782.653 99.5488 782.653 cv
level3{
gsave
clp
[190.792 0 0 190.792 0 768.615 ]ct
/3 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[190.792 0 0 190.792 0 768.615 ]ct
clp
/3 /Gradient get_res exec grestore
}if
np
76.5648 781.964 mo
76.3509 781.964 76.1992 781.918 76.1992 781.918 cv
76.1682 781.919 76.138 781.919 76.108 781.919 cv
74.4206 781.919 74.3605 781.413 74.9011 780.908 cv
75.4419 780.402 76.5832 779.897 77.2983 779.897 cv
77.7024 779.897 77.9705 780.059 77.917 780.473 cv
77.7498 781.758 77.0175 781.964 76.5648 781.964 cv
level3{
gsave
clp
[190.792 0 0 190.792 0 768.615 ]ct
/3 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[190.792 0 0 190.792 0 768.615 ]ct
clp
/3 /Gradient get_res exec grestore
}if
np
73.5609 979.483 mo
73.1569 979.483 72.8889 979.321 72.9427 978.907 cv
73.1092 977.622 73.8415 977.416 74.2944 977.416 cv
74.5085 977.416 74.6602 977.462 74.6602 977.462 cv
74.6907 977.462 74.7206 977.462 74.7502 977.462 cv
76.4379 977.462 76.4984 977.967 75.9578 978.472 cv
75.4171 978.978 74.2759 979.483 73.5609 979.483 cv
level3{
gsave
clp
[1.86047e-14 303.839 -303.839 1.86047e-14 400.284 719.43 ]ct
/21 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[1.86047e-14 303.839 -303.839 1.86047e-14 400.284 719.43 ]ct
clp
/21 /Gradient get_res exec grestore
}if
np
282.061 819.087 mo
280.93 819.087 279.855 818.569 279.266 817.161 cv
278.427 815.159 282.066 815.093 282.551 815.093 cv
282.586 815.093 282.604 815.093 282.604 815.093 cv
282.941 815.068 283.25 815.057 283.533 815.057 cv
286.171 815.057 286.592 816.064 285.958 817.072 cv
285.325 818.08 283.639 819.087 282.061 819.087 cv
level3{
gsave
clp
[1.86047e-14 303.839 -303.839 1.86047e-14 400.284 719.43 ]ct
/21 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[1.86047e-14 303.839 -303.839 1.86047e-14 400.284 719.43 ]ct
clp
/21 /Gradient get_res exec grestore
}if
np
331.738 758.683 mo
330.607 758.683 329.533 757.869 328.943 755.658 cv
328.104 752.511 331.745 752.407 332.229 752.407 cv
332.264 752.407 332.282 752.407 332.282 752.407 cv
332.618 752.369 332.926 752.351 333.209 752.351 cv
335.848 752.351 336.269 753.934 335.636 755.517 cv
335.003 757.1 333.316 758.683 331.738 758.683 cv
level3{
gsave
clp
[1.86047e-14 303.839 -303.839 1.86047e-14 400.284 719.43 ]ct
/21 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[1.86047e-14 303.839 -303.839 1.86047e-14 400.284 719.43 ]ct
clp
/21 /Gradient get_res exec grestore
}if
np
106.383 825.953 mo
105.251 825.953 104.176 825.139 103.587 822.928 cv
102.749 819.782 106.388 819.678 106.873 819.678 cv
106.907 819.678 106.926 819.679 106.926 819.679 cv
107.262 819.64 107.571 819.622 107.854 819.622 cv
110.492 819.622 110.913 821.205 110.28 822.788 cv
109.647 824.371 107.96 825.954 106.383 825.953 cv
level3{
gsave
clp
[8.92424e-15 -145.744 145.744 8.92424e-15 95.4129 936.407 ]ct
/17 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[8.92424e-15 -145.744 145.744 8.92424e-15 95.4129 936.407 ]ct
clp
/17 /Gradient get_res exec grestore
}if
np
464.901 670.935 mo
463.77 670.935 462.695 670.121 462.105 667.909 cv
461.266 664.764 464.907 664.66 465.392 664.66 cv
465.426 664.66 465.444 664.66 465.444 664.66 cv
465.78 664.622 466.089 664.604 466.373 664.604 cv
469.01 664.604 469.432 666.186 468.799 667.769 cv
468.166 669.352 466.478 670.935 464.901 670.935 cv
level3{
gsave
clp
[470.084 0 0 470.084 165.241 665.008 ]ct
/3 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[470.084 0 0 470.084 165.241 665.008 ]ct
clp
/3 /Gradient get_res exec grestore
}if
np
269.875 728.908 mo
268.824 728.908 267.617 728.368 266.377 726.973 cv
262.432 722.533 270.157 722.533 270.157 722.533 cv
275.25 722.533 273.485 728.908 269.875 728.908 cv
level3{
gsave
clp
[1.86047e-14 303.839 -303.839 1.86047e-14 400.284 719.43 ]ct
/21 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[1.86047e-14 303.839 -303.839 1.86047e-14 400.284 719.43 ]ct
clp
/21 /Gradient get_res exec grestore
}if
np
21.4481 768.937 mo
20.3972 768.937 19.1896 768.397 17.9497 767.002 cv
14.0049 762.564 21.7304 762.564 21.7304 762.564 cv
26.8232 762.564 25.0583 768.938 21.4481 768.937 cv
level3{
gsave
clp
[190.792 0 0 190.792 0 768.615 ]ct
/3 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[190.792 0 0 190.792 0 768.615 ]ct
clp
/3 /Gradient get_res exec grestore
}if
np
164.214 779.226 mo
163.163 779.226 161.956 778.686 160.716 777.291 cv
156.77 772.853 164.497 772.853 164.497 772.853 cv
169.589 772.853 167.824 779.227 164.214 779.226 cv
level3{
gsave
clp
[190.792 0 0 190.792 0 768.615 ]ct
/3 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[190.792 0 0 190.792 0 768.615 ]ct
clp
/3 /Gradient get_res exec grestore
}if
np
431.884 719.395 mo
431.247 719.395 430.476 719.204 429.589 718.732 cv
424.319 715.928 431.531 715.928 431.531 715.928 cv
434.896 715.928 434.599 719.395 431.884 719.395 cv
level3{
gsave
clp
[1.86047e-14 303.839 -303.839 1.86047e-14 400.284 719.43 ]ct
/21 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[1.86047e-14 303.839 -303.839 1.86047e-14 400.284 719.43 ]ct
clp
/21 /Gradient get_res exec grestore
}if
np
348.252 728.062 mo
347.533 728.062 346.832 727.78 346.264 727.092 cv
342.784 722.876 347.461 722.518 349.15 722.518 cv
349.495 722.518 349.716 722.533 349.716 722.533 cv
354.632 723.065 351.282 728.062 348.252 728.062 cv
level3{
gsave
clp
[1.86047e-14 303.839 -303.839 1.86047e-14 400.284 719.43 ]ct
/21 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[1.86047e-14 303.839 -303.839 1.86047e-14 400.284 719.43 ]ct
clp
/21 /Gradient get_res exec grestore
}if
np
172.536 885.489 mo
172.132 885.489 171.864 885.327 171.918 884.913 cv
172.084 883.628 172.816 883.422 173.269 883.422 cv
173.483 883.422 173.635 883.468 173.635 883.468 cv
173.666 883.468 173.697 883.468 173.727 883.468 cv
175.413 883.468 175.473 883.973 174.932 884.478 cv
174.392 884.983 173.25 885.489 172.536 885.489 cv
level3{
gsave
clp
[8.92424e-15 -145.744 145.744 8.92424e-15 95.4129 936.407 ]ct
/17 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[8.92424e-15 -145.744 145.744 8.92424e-15 95.4129 936.407 ]ct
clp
/17 /Gradient get_res exec grestore
}if
np
143.154 867.399 mo
142.023 867.399 140.948 866.585 140.359 864.373 cv
139.52 861.227 143.161 861.124 143.645 861.124 cv
143.68 861.124 143.698 861.124 143.698 861.124 cv
144.034 861.086 144.343 861.067 144.626 861.067 cv
147.264 861.067 147.685 862.65 147.052 864.233 cv
146.419 865.816 144.732 867.399 143.154 867.399 cv
level3{
gsave
clp
[8.92424e-15 -145.744 145.744 8.92424e-15 95.4129 936.407 ]ct
/17 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[8.92424e-15 -145.744 145.744 8.92424e-15 95.4129 936.407 ]ct
clp
/17 /Gradient get_res exec grestore
}if
np
159.667 836.778 mo
158.949 836.778 158.248 836.497 157.68 835.809 cv
154.201 831.594 158.874 831.236 160.564 831.236 cv
160.91 831.236 161.132 831.251 161.132 831.251 cv
166.048 831.782 162.698 836.779 159.667 836.778 cv
level3{
gsave
clp
[8.92424e-15 -145.744 145.744 8.92424e-15 95.4129 936.407 ]ct
/17 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[8.92424e-15 -145.744 145.744 8.92424e-15 95.4129 936.407 ]ct
clp
/17 /Gradient get_res exec grestore
}if
np
35.7838 960.275 mo
34.6526 960.275 33.5777 959.461 32.9883 957.249 cv
32.15 954.104 35.7856 954 36.2735 954 cv
36.3083 954 36.3271 954 36.3271 954 cv
36.6633 953.962 36.972 953.944 37.2555 953.944 cv
39.8933 953.944 40.3144 955.526 39.6813 957.109 cv
39.0483 958.692 37.3613 960.275 35.7838 960.275 cv
level3{
gsave
clp
[1.86047e-14 303.839 -303.839 1.86047e-14 400.284 719.43 ]ct
/21 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[1.86047e-14 303.839 -303.839 1.86047e-14 400.284 719.43 ]ct
clp
/21 /Gradient get_res exec grestore
}if
np
52.2964 910.209 mo
51.5779 910.209 50.8769 909.928 50.3089 909.239 cv
46.8294 905.024 51.5064 904.666 53.1951 904.666 cv
53.5405 904.666 53.7613 904.681 53.7613 904.681 cv
58.6771 905.212 55.3267 910.21 52.2964 910.209 cv
level3{
gsave
clp
[8.92424e-15 -145.744 145.744 8.92424e-15 95.4129 936.407 ]ct
/17 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[8.92424e-15 -145.744 145.744 8.92424e-15 95.4129 936.407 ]ct
clp
/17 /Gradient get_res exec grestore
}if
np
309.251 729.783 mo
308.769 729.783 308.224 729.596 307.653 729.134 cv
304.201 726.34 309.626 726.34 309.626 726.34 cv
312.128 726.735 311.198 729.784 309.251 729.783 cv
level3{
gsave
clp
[1.86047e-14 303.839 -303.839 1.86047e-14 400.284 719.43 ]ct
/21 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[1.86047e-14 303.839 -303.839 1.86047e-14 400.284 719.43 ]ct
clp
/21 /Gradient get_res exec grestore
}if
np
439.971 713.29 mo
439.488 713.29 438.943 713.103 438.373 712.641 cv
434.921 709.847 440.346 709.847 440.346 709.847 cv
442.848 710.241 441.917 713.29 439.971 713.29 cv
level3{
gsave
clp
[1.86047e-14 303.839 -303.839 1.86047e-14 400.284 719.43 ]ct
/24 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[1.86047e-14 303.839 -303.839 1.86047e-14 400.284 719.43 ]ct
clp
/24 /Gradient get_res exec grestore
}if
np
459.822 725.963 mo
459.34 725.963 458.795 725.775 458.225 725.314 cv
454.771 722.519 460.196 722.519 460.196 722.519 cv
462.699 722.914 461.768 725.963 459.822 725.963 cv
level3{
gsave
clp
[1.86047e-14 303.839 -303.839 1.86047e-14 400.284 719.43 ]ct
/21 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[1.86047e-14 303.839 -303.839 1.86047e-14 400.284 719.43 ]ct
clp
/21 /Gradient get_res exec grestore
}if
np
318.355 681.167 mo
317.958 681.167 317.695 681.055 317.748 680.768 cv
317.912 679.874 318.631 679.731 319.075 679.731 cv
319.285 679.731 319.433 679.763 319.433 679.763 cv
319.464 679.763 319.493 679.763 319.522 679.763 cv
321.179 679.763 321.238 680.114 320.708 680.465 cv
320.177 680.816 319.057 681.167 318.355 681.167 cv
level3{
gsave
clp
[470.084 0 0 470.084 165.241 665.008 ]ct
/3 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[470.084 0 0 470.084 165.241 665.008 ]ct
clp
/3 /Gradient get_res exec grestore
}if
np
256.742 683.182 mo
255.914 683.182 255.126 682.664 254.694 681.256 cv
254.081 679.255 256.745 679.188 257.101 679.188 cv
257.127 679.188 257.14 679.189 257.14 679.189 cv
257.387 679.164 257.613 679.153 257.821 679.153 cv
259.753 679.153 260.061 680.16 259.597 681.167 cv
259.134 682.175 257.898 683.182 256.742 683.182 cv
level3{
gsave
clp
[470.084 0 0 470.084 165.241 665.008 ]ct
/3 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[470.084 0 0 470.084 165.241 665.008 ]ct
clp
/3 /Gradient get_res exec grestore
}if
np
%ADOBeginClientInjection: EndPageContent "AI11EPS"
userdict /annotatepage 2 copy known {get exec}{pop pop} ifelse
%ADOEndClientInjection: EndPageContent "AI11EPS"
grestore
grestore
pgrs
%%PageTrailer
%ADOBeginClientInjection: PageTrailer Start "AI11EPS"
[/EMC AI11_PDFMark5[/NamespacePop AI11_PDFMark5
%ADOEndClientInjection: PageTrailer Start "AI11EPS"
[
[/CSA [/0 ]]
[/Gradient [/0 /1 /2 /3 /4 /5 /6 /7 /8 /9 
/10 /11 /12 /13 /14 /15 /16 /17 /18 /19 
/20 /21 /22 /23 /24 ]]
] del_res
Adobe_AGM_Image/pt gx
Adobe_CoolType_Core/pt get exec
Adobe_AGM_Core/pt gx
currentdict Adobe_AGM_Utils eq {end} if
%%Trailer
Adobe_AGM_Image/dt get exec
Adobe_CoolType_Core/dt get exec
Adobe_AGM_Core/dt get exec
%%EOF
%AI9_PrintingDataEnd

userdict /AI9_read_buffer 256 string put
userdict begin
/ai9_skip_data
{
	mark
	{
		currentfile AI9_read_buffer { readline } stopped
		{
		}
		{
			not
			{
				exit
			} if
			(%AI9_PrivateDataEnd) eq
			{
				exit
			} if
		} ifelse
	} loop
	cleartomark
} def
end
userdict /ai9_skip_data get exec
%AI9_PrivateDataBegin
%!PS-Adobe-3.0 EPSF-3.0
%%Creator: Adobe Illustrator(R) 10.0
%%AI8_CreatorVersion: 25.2.1
%%For: (Lenovo) ()
%%Title: (2212.m02.i012.n041_e18.eps)
%%CreationDate: 2/17/2023 6:09 PM
%%Canvassize: 16383
%AI9_DataStream
%Gb",KB3-$De+WZace8=@J\b`QQlNn5'#E3G!sWC#8-3=dXC0rB&'o0Dl`-Q'UP.tS6s+`c?E#b%Wk5i?='*_ljQ`:>Z!9B:ec3+K
%;GAaNkU:&c23!jc3.Lrc1\7ob?YX_uQ*GJf`2cAIZk\qaf/(!)+&p;+3/6OhjD)BTWKq;d]k4rSC:3X*9"in]:??tN[FDX/:;;%Q
%pSCKYr\Kh?G_Jd?PMJ&kf#s?,HG*JSg*nPI0Mk!m_J`XXMCQDSL>+)F<<=2*g26*peW&0np,@#4P6Bu[mc/c\]\I6\]lpqmq`Kp@
%Z^[8ZqOl@-`",fbTh*KLrKpb?SU$bu>I9fUhP-(uq%Ti28F8;8BlPS[)H-B.r'u-5SIc>pM^n^a?L.QCcWWq:)5<\8]iDG5M&.]h
%AXN+rjqgj@)?=<.4,FP3/6*W(Y?g-:1hjZ\SjH_&17"o?I6^(aRLao)m>Rdn6m@q3A9:I;\VBE;1jo$*7.Xa];(hfP:;&3(`DY0W
%hJBNH;#Z6Id8?-eC"YtuFg[1%g5c3MI]$(Y^9*[T1nkc'>VSb'ojXmeh2!OaYBW1qdK&dOrYpW!o=WR"nuYtSQm-Fss)"Z4h=?#[
%5`i#'aDRbP400NDQPXM`aB6$KVf^P834>]^'H.\1[N1fIRj_UJK1T&XRU9']AijZ/257gX,o[N.7hiSi/>&8EbDQkXJ>K5/0lJnl
%`JBgo=<6oBj-4PZ^M`PmmlCnG]3VE?\>\+QITotj8nRr#9s<*)q0Ecse&']VXbRfHPtM#1s#'Yi^JP`:L5u]E:3Po%TNjk'J,co$
%IWJ9X.NSA*UKR%B2JZsu^]0bG(@.lpe5<3lXuC('MlGO]DtIU)29.4*FkH<n<!Rg^hoU-)`r$Pd&t[?G9)M:mq.oL";9I@.-I*6(
%+J<MX+/MTC+]U)M)l:P;Rb.h<;#V%@:[q(dj[3@9IN#17b]0tT=t>nQ`!3S,oUUW,?Ft0]<Bb8Ze6^+pH-NJr[MTO980Ag&]NAp`
%)l:im=/hG1RpP-L>Y*tFS^p6pY[4MdebAl&Ce"D`ImV99NRDcNS<[m.I8U<@Ek<$n;m/)%do$De?3B-Lc%Fo@Mqo;oog:!lLb9['
%Bo+Si,&e3tKr+XR6pKP)<XoI!1B#p_rtMp%K5Y0K@^%>Y>-SfC0>9pK@X/=58H&Nf4fqf.X_Q?k$*r_OgZ:buFRZ?]/mZ:%"W'sO
%esN.^o/,d4I&GMt=#$*dT-*pLk2+2j`DKC9S!n?f5Kc%6<(/%.o$\Ruj&C1XV:!oEcZ78c50ZUr0i(>\ac^@XnaF5o<3@Q@Y)T;[
%/<f!r:<gJSe\!AgUiRWB1,PP:l458iX/0jU^]40*pKp_qr_%71K=57[A'h"J&%\Y/^\GQg7ef>.roTifs*D[J0l4b'%^,,uH="p\
%VW-gJDWn[7dA'Tpf'->4B9f&N4^%f)l,e[@'0LdE'n%.j$$p'M[VdVH\s9aFoJi.RiK%[joP!m\Q>.l@W9--*C](8W4o+%3qlf5T
%BFji*iQeOjlNXa_]ihhr*I:t:ZLm5AansDas/^?+IK!'&^\K5oQJ>YMTlE$^<o2-6q.r6]cf`oYEJ5I!Aqai7eY!0">P-SIj2;ut
%GlI[mqE2n6ou'jDc4/BID:`c52s9>fk;=.nKcZND5gLAHR/C(afNjOO4FdAGI3.M?HX`d_:3''88^M*MdkOG-<QK2WD+bVTHc@cT
%f3qt>EAW=!Sd>R)5uFSb-bj"D8%Pjd;09^1%Sn!*X;rTsR'tsWXBE.^%1cjRUdQ4k]0t&NX\]5F:3E<a,Z,G*Q!97C=2:Ftk?6pI
%Sn7WbXG$WK2$R;\PB^HM%D`ncO0jaN\cEuR/r,R\Cd7nf21i/c_h$8Ka.pXSk(#M_6CYMpQMBJiE<V?sV&f3hG<(WSFRq*HAlL#H
%[Xcg=cNE>4#;hhfg;FfD*V749']PIVbd3K-,OmLg&cWBO>ep$J!Po)Y&]#?%k)q(]90F,Xhr?Dq-dK,I?:Hf(ZXKB>l+lgGidJ`G
%WC(I>%s,Z*?/gn\nOY=9jOSpSr#UWM4l(LD\J`pGGamW43n',s%S4LB7L8(30=o(DD;p``d?rA"Zi5("GB:!<=V(,1dCGo[VuDL!
%Ek-\EV&Z6pQQg[XAsMR)eX6%0c2+&;l+;HLT5skjq-bc7J(Nme=,A&Uh5RE/8(,8;H&1Tr:e7tQ?iP,`-c]#S+0;8\@u]!aF]1.T
%H?@Ui9p927FG[m+b`gVG#FQ@XBXu'*enikp,`OCD#@/_.7Q"B."1\+N^5G2c4gsbKs7($YcI%iR^T7&HBke"R<LMC,%^F0ks.U=9
%:6(pR\9=5&,LracI8oH.`8`XVnRn+/@V'=8HEq<SG&-N7ZUQpV=ck%ud'G2CXNBtRLQD4ojbK3@`XZKP;TGTRaQY]:Vre[+!GgB=
%Cn=tV1:K*H1_.G5(#jjk2_/U%M*2D/1o9NCB2*]*fZ<[%*G8F@3qrfGZ%sq>895sdQ&'"2aG/2n6I05[1Ac$+Rj:0R<s.6<<f!b8
%K#a#U#0*"7']%:rIV42>q6+Q/=.1N3Ddo05>hQmRl)(0Hjlq<ij67%Xb^n"Y=jE/s*8&Ta*s6pHZD&X<H;n0Nim&<6S3a`Y8o&g6
%*a$TGdKp#6g"%b''O`rdCcAEMRD<t]f!DTQo;lm(g<d_hA"#%0]GfPFCTRQt8/lR5EEFTq6>K^O>u>7*;-;&h+![8#h:FE//a"YO
%@9CI&cq]#$f_0/l@3#aQ=BNYMPoSK!P-+*:Q36O9?7VBm<:VMuT2*fB]n8K7OOb6#`;0<\(aq<Kb?3j\&$09Ya3tYZ122ud<cT:1
%<8q@:c'D*8/7=D.4(/;*l%(.NkL\<2HWU_o@bnMOc,_La:>'D%pX)=rXMq6n):`/%QPB&UWU\ke+Dh)`df+r$R191gm=Iul?_\%Q
%Khjm[<dj@Tc2Y055HI0G9MPF.9p.A+I70XSf+SDSLk1j?oL.7EM/+NR[M\4dckrH46>M82-o=Gf46E5"'!DjIXNhS43#-[=QFPPH
%75Y]F#?Mj=U\(t4R"f9H)PU`rP*X18,1YoP\t[Oe?.Kgc0aaH`>2pOm0qgT7h,3@M-L6cgM^ht4,]]]0jB9Is6[c8TIMgZJ<N8pE
%'I@TNdMO42;<X!jmO7]t4Nrb3`JF;[cm;33-<IgNDXB.)%u#bZ3[3*fqg)_E.7.*h[Kq:Y"_G$c.'uI;2eInp3kf`Rb4[ZnC#Z_@
%SfV%$m*Z=&g0qq`o7;WeP8S(kQsQI8$=+7tU;]N.KK>mJ,Q^\NSI#N(P\7A0K#EK'"?G=':!tpT\q*t;`&N'=NW5HBRfbX]fu)2p
%A\b'a4n9[XHjp$0K841u2-..BRibIb)q4:srZh:YI=EJg*#7$D2;djn`Y<bA:&`<ePk@`)pI@8*CEn/434-D\hXs:<hXho5Ir&Jk
%EEKIhhMJ(!O0%.+^G1LnT\9Zo#0T$MS0?5).d;QsC+:B%(bo5KBtZLM2S_e&`)IrB%]WgQU?oT)4$[j^p]POpI%2$p$9jY;lSG_p
%OU:.s=<;S82.,jQg_Ys89qB7r`K/7nVbfG5EhjUVm3K["hi:Rd0r_LS&q;Lm2tT&EBFrSa4SmFF#Tg!#phY+:E$3p7j7!`66\M<K
%qPARfJj^.HVEg"C$$m6@.Z%hX4k1j<2@$p!>uO,0]ZXa<j15[A96qeg_cJKn9nuZ6ZkjcL<Od8+_7T-Y2iMgLS\7$10$FB/_e-rm
%`C>Ep1PV;r0p@u'(3Q\WS-L[+5YN&hJ-rEl!F#eDf:rJ0m9;n.&-AQ0ar1JB"qh5/^NY+@<TM[cIEPAuQ@XTffX=uD@1rI1Od-aL
%L=/+l7\a,ogN15TbE:ZC6GFmBbTs;a2a^;YW:S:!H/q2Eo]Z9Ap%h?XocIV$Z[HMgnKXnG91NZZ?kSUIBsU6FEOGR/(m4=sL8qOF
%^Fi[BYd7bPK6d-Y6Q(kQ:4ZW$7auGjbiV_t+aYt4`X74"=>Ib[d8\T33uWMpWQB`(JU+'X8`D;33eb@LBl:I"djB@WZ;@r&gL\3V
%Wjr:;1&2h&P)=gJ%@)l/Le0I6\=2)Hn0VH4-j$nsn=HY9*tOAif#s=:_DIUrc`(LPp254mVd:q5F)'s49bj1rk5JGae-NR?IsuX-
%:2)obR,6(GS)1>50=;G+;Re,VMTo%Yhj?JU*HmmLSP#k^TJCr]KBBs&X/Vpi;B942[XU14[T:QTKS"NpSo2i]WJLY@s&Nd%V,jMB
%^8d[VDfeomb%jqPVk&"1`@oXm6$&+aTJL].IL@UP[5"?h'p90WP/*jDWU:PUh@DG$->_`i]5ak$&)-,gi?ATX>$M`X[E"&,XNbYD
%Lc_"r+Em%X9'aaMpC7f,YHaePe`u2RY<T`*T#X-s/Il!u-C/jPmkbEK%1uO.`)IlcED5t&Y4^t'ae1AEfj"b'=t_'%a76XcW&I=C
%Y?c(,%@=$0X-_";_Iq]bg1XemPaNd$pS(VN^DNT1&";fmZAB\[5.:<g(PSYsjCc$U*[F=@8&T>J)k$'T8[d'Wn4qJ$(f>:#I&M9q
%`:^mMiUFTg'^C)8834PR"@du3nKG<Fi>-5#$MM'<=uo<Y9ME!D@`k6!4Ye-048!X[^)1q2`0e/P``s\hD.:[_Cq5BS2mMJ-U%sNs
%f*@_#/XNt!Q\`(*Z/m=@gjQNj2S;ec<VC1<9'?&\][1J>-/Ja;k&g)hh*p'T&_>TL(KX6ob+)XLN96/UkRH/I]4YcYdZlW`a3,fl
%R44.lRjdu--^%Xa2n\::R>UOVhI8_.bLAS+dGGQ(FY0XVESdp$0A"o^UKAglbT@Vr>h,CS3#8otd.h6iB`-<a%5T.Y`iYs7Z"p"S
%cmTVi'sG_icIq-YM:1jL'LClWh9I-tE(AQ!%&8\Eo8<dteG8]FY_2R,ouUR+na1;jX`YkT8F09Udld4/V1X@Y:5!)9G2oDG_PUN9
%ia;RiUL#J$`^bs#%JM!4,_#Q8Xk!,_!5GJk)_c-3J%HpkAiO5b$+'<C*B'*%SEo%J\UtkE&N5':O)6r)<<&5(Il;-W;%5,_\P')6
%:5jWoBq#bUh]mlGbYf<#(V]7RKG,*q2_7dg=XJc5obus[mDZnWQJ35+;EGc1FUs19iZ`NWe3#CX`bQ6eang8&08miPjBV_D,Un[i
%h0`HbZ:U)AD2hpYmSsD=U37VfQkGjOgChDg/,^kr%PGD'rTCjRQ')iDh56a+>92h3?#MVRE&5k+bAn6U,</4@Oi-HTim8QM<*IXR
%O/@Df/E(-<lXos"Z&FUr-<A_MA7H;8Fk`;8I6%V#b^#Q^o=Bk(l^EGp([jf"kWRk<VhnMh[tS8H;0-g6MgGk&iY.c<)dXN+BI:2u
%ESSH1rQ3:0%;RAK`9g8s'-rIi'r_KP+hRbhC4auVX&8Bo-/8mBm564'BUAo@'JB$).qlTC]`#`m:D6%UQH7L-"OBf_Kd8H%2_72f
%'A8ks?[/t^WH(h8n9*.=gT'LP\/W2!+rd%2KjSc92^!/33:='=;+4RS_>UpS8S0R1YecNZ>NV5*l0>JZ^MB^,Op[d[cUTkd0aWO/
%jmf>)6$(XFNq^JaP;$)1C?=_gchK'uQTo9:X(.V]d9)HT5%ki3Su;GMHmQnFW]PX9Ld\lamJ?Uf@(d']9OoVJEW<uPltt-R2_&Ib
%;X'fAgi-of8nEBCKH'5H`iK%0IO-a.,g+kJF0)BoBWiAOAr1pM8`8YEMrf-Xa7p@)W53AQ.cjjU9-i)WD#D.nrTZZ/`/oiplpe!U
%Y9bu#KgM]k)7!Io%5T:ffo=Pg3Jr7r]qG$=7Uo[?``p,[2]?/EN@"C%67V.-RrO9UqcdOL-%jDN4/nB'j$-+>Fq'Q^c6O%a<\UYm
%I>UEa#+9ht\[^<`P_>pnL)7lU''30+B9SaURoWE"nJtCl;%hHp-<D6pS+mk&/BYYf6&@#4[iuTaE1^T:&e[>d*K-*)S4mBhrWPcT
%=HkOrS8lKA,d`kTf]8I=U>/XVkDB8(q\b<T$p!0oO3UjNBbHkn)eO'`BpU.aA8^*%1>/KAMXqi^BU038Nh'+-Rr)O49I.!+4.1s*
%C=\J2NuXQupUcpJr=VH[B!_B6pFEj_^0\#(&rU)0l-t/o,',QNV)4n(iqm^gl.GPChOd48a_]&RNYGn$Od&d'V<!^H>3->[\YD5U
%'>F1tiG7"tY>+fGn+*kSLh=NU-@B[)YDpEN9$R2tBA8*A-,A*_0Ye?=D8Oh@4'0$ig=h4\NJ4E-FLCXZ[BYCO,SFC'-fP,DE;dj6
%H#aFJX!Z$2Sh-Wk0;Cp)I'S]#*2mXKTp8<gUDqNBV5D`W9hD<2rMuaXmg=K?s0'c[WI#='I#mhs2+uKr^m%9Or)@0b[dB]ZWa%'?
%cH<Q2pYGir>)e]s?6(8_OBUus^&+1CX49K+XX'!sUu&]Ne6>7RgE.h@mUP+U]4k^/YA66r'=nJJQ5g3&$Cr,r&cD*"Z.EsG[G%Rg
%"tM,/*%FL:`btQ"=>3R`SO)T8/olJXfH7]`/-Q.?jSitpgd*QSaLT"-5o\=q:C!?"DAI3/*%d;Jhj8u("g29+N8[]UT99j7ZWtMj
%M(e`[il!_S)\t!HXHu4/HOY%jp>Y!fbO(4&WL]!L^P>/H%\=D0S-Mg7NW)LNY'h7/YPc.5AZt+l3k;#RC]>>dio50n-n-qa\T*nP
%o=FGFQOYn`H?HOnHft-QR81!hX=5ZVdHkDipQ'<^m.jEMHma9Tf>$K1\Sc,ek<%Ag9j0'9m.oLIfA^>epHPqGHe/\*HZFu/Y>V2p
%s1*1,/<ss#[+%\uU_B'?lRP3Boh)3sdOZ,7l:nH?ctPABYU1.:`57sF=;)'X@UY8N_Q"a#,P>KMJ/]%HB%ETD=fZ,n?a]UY-qQK"
%>\A'iERT76PcL?0-E[d3lR"hH&TgV[H@N"'^!u&lUc+HNcH\JQd[%WT-P;camIHtgY'X]J-]$.Z>N^hg&oVo]B;?(ZN;#NA=JO\s
%,oC,M?F40Y?40dtn`K-p(4G4!_n4[jDiuK!i^ioCnecO/HX6Kl`+=$8/gK7>,[<gQs+ig.':7+bATW@Q9O(&:Lt9LU1iXC->XfBn
%dDTU<o.Hf\OO:X4p@<^hol\V0'o9aa-bce3Hs\IT]^FB[AG+fjNKQTOTCfPk2+X,PUPktXi>r+8iEnl4A+q/>2Vb?I%h]Ee&(4#6
%c1N/5:REM)3;bXQq"o4]G`ln&2KFC[:28[&ZAJIE\Gna'S#DS+HX:uj??-i"E\c*aZ\^#lgbuo]JW`^dO%GLkM/^,RR@'.J`"T\K
%Qs?.l@(KWq0l`+rP(@<k*%)VkH:2MBr,7aHktelG`p??NR,D9(Dk(?FRUfbD#Oe4Z)u+9&i1?ba8;(4(j)b&a(=2F%=fZXmYs=.N
%kZ>FflIt<NVgi"0@_(GTT?L7C'&qLs('!Tp;D>M1d5O_;`0g)>ENt@?F.MoKl`?U<3&C;:Mf<-ONaR/S>^46acUl^FgMD(//@:7f
%G'A%tGjP7E6Mo6NF3PJh1U5;EbF24=.OGqb`'TqqBG1d@r_1JQ6CUnrAL<8E]dSk\oJ<cJ%@ZUK&rWcX#Wh!E48NV2WfbMqr%&Z)
%Gg+]VXW*\L"`PQlSs,nPn``sM<2k]rj!O[@G:Z+DP"F`ik?5,t*?RRdA)6d+:JrbnR7,KC\*INk"&3oJ0hF>]a:Omf*1A,m)Mlri
%iR"4Ae*TaeFR$8+lcmlP:8q82A7F?7Hp^70mDD]jZr<[g\3<WaE(<9bj%(G)52DB-S$StnBR?#8H9%CWO.p^UdV?Wcaj89BS%$LM
%6E,+-]/72c`Y`\H2q]]S%bg#f@?;kt2g5U+dp]dB7bhHip)4*k=D=N9VJF7E)K5:`3H>@#X<tk%DH?O+18"2+j&VdZ];Z5Cpj:b%
%672m`!FPjq8*S9%$Z0Y<*i[l\X%)HY.GBU]ZV4?JEN5t[6q=r@3bhPDDka('[+)^]V5h\O$@>>KR@=Y38SCS29@->-WLaMj2g(H\
%Tk#K_')")cjsJ[7AE+s*j5Uf"DOgE*,#^BSkAEB-S!\8HNm>S5S!\71F7*A'F,;k4-g'4&S@`_%g_d@Ph!%aopGj<_@OL;VQ9Q^*
%iCqZl>f6E1,lYD5XD=!on!5ciqQQf@bLuEqg"(JG?G@,p5E>k?l@S8)6<Rq</TDronnH&n>csk*W8@"Njn>n>KUd^tp9/JmK.:'j
%7Q.Nn]DnpF%.Vi(9ubEbci8OR8Ns-"%=<%uSB)n(GM0f^bo_@,*$_Lq^6j1]'^,&%aQ/P@A((7P>j[KtjVkSZ9qHb"o6iStB-hSs
%Y#M+ha6H6X>.f0X%AeNfiH!,V`r"I*^ces&'>+nKQ=p@l??(:t90!RogZgWA]L(kUi/Q3mM)F"H=+YW<NYeg"S(E7W:V?LLNFhn[
%S5nD4G%::<,,#u.'q[36%Pt5M8$KVYM)KSH[CLW,!WME-gjsr*lU73]9q+fN(>E&fdG8"i.$<%#bk]um)YI9JN&j=E_q1Uq"jN!3
%-gGPnU(lEL(Ok@&HVZVKiZ*C[I,,<mHg'h1;,34/\@il(^,#NK5Z@V_b5DW;9P.$(mJ^J1S/D4+9l[*04^uLS9[!4@n7<[gS>7D)
%V?KR9Re5^7>-;9te6X--B"<=e/L?X_CEa`3FogG%iKtl8T#em->eD[QI'[iJEJ+%@ARdJgAKi(3[;8NAU/(+p**"VN>M$FbRCV'u
%_OkbENVf0\]9pIuIbhbejac/U-0u\M-(8(mE7aXn:"%8b98?!5hV@h'U+9#Mr\5p!QMK>j-f:Tr[>"f;gdO\=*B*qANeOAFs698,
%KHu+#^H=\D(c6F=Cgr>p544?OG>AbF9laeBnKPR,*#XZk-pfk_,ie=)C#X2S+0oJEhQoSmpM\M7;5No>QOH=k[!$]/E]@FP,.d;=
%T1O^l/QJ[3?:MD[/)7$aEReT;o"<!MFn.Pb3jlj([B7'LGFFI-^'1YR/X;,RS;60=]Y9P2RlA.C6"CoJ+rc*S13Q8]9uu\IaXf@o
%ZVee;rQd1(X%ZA1&j0uV[FX"g-Ki-^-L!T1XS$W*Nc4gM5M&ERF)q^[:$dMfI:BhV"&flba6dtsgqcP"jHn\P3Z^"6[Tn0f;RtQ+
%m#O[2RdWKsn'rFLMs>`#"Y$-*\Lk95*S9Vro;7k5]Y!,r:.Z&Mj:\76E;PhlOCkefWcGCG.u'B61!BdaA>`bgUQ0CNPsldd/"N#B
%nh5Lm[F='k*:_ciV*k:Nnt:ToMtPOs.bF$o/lLG1br[R9;nL9u1%D;n9Sm-J?DUO`(RhN,l=%A4=e^C-Ko8,Z0?pCMIYS2cG^$:k
%[/p4.#(q4]c[g5=`r@Ips-92:qsTF"ZH`(Dddsr(Y$T`F5AU1V(VrV9#EP\PB;3rtU.hGtK6"@s.>9E(WEoE8"9IM-k5hkas(#qG
%f*rt$A1UY<9c"m&fAI1JALjWH+&l7L2)Fql0c`bW^!!.A+L(@k078+8T=tp(-]Lo:48&-MOt-H*5OLnS;q"2#+Wkq0*QnTQ@Y?"3
%Y9(&6Y>T,E9*2`=;b"fHD+t0L[]?uuQ`UgX5.HJbR'to(\W?Ve6`]&(N>id"T^hFl$u,Wp^]3"<oGbNTA'VREs84O*dGplAYAiaX
%2j]"d@n2%+e)/bQM9u/Bp2\QjK\6;G'l=P'1!8`$I.>?$&hWW"rpeoJosA$k<W>kW='a0=/bklCXVX%K;Q[Xt[:tS3:6kq]#TI,\
%CmG'aKU=d18g)LXTh+tIPoV+QB27T<Gg/#!X]GkGR?O=:H_2/o/D]gMj6K*J\`JAsJsHm=<t"f\a"?0<\_10PUsNh`ld_7NFd%rm
%!.9I&&(OF(HWl#%qb.N18bCG')TUq]2hNF1I68^MNj+0HXq#XRf7[2*f<0;KN'-s%HJu/OV1Fg)i!7O#UTr9'/,<8==83dG7l.Kh
%fSg\F\`mW2D*0B:3YqUP1:1g48_565>*X-eIL0]-83!9qXM8q!G$Q\0W4%mng+R`:J)1.PgkU`MZK+LA7W?aPN/VI$DF,1Hktt+o
%\R0dTEYKg0>.0P)=sNh['1XYF20PamRTd_^FYb35Y&r,=cX$FCQ!2>\li/#uds@L*lE/K;Had-A^NtqiEV+Q=E80Kq20%taHYXSd
%ok)adFr_C5[bgS)d,j^:Y>T8!T94ipp7VR7TnQ@EDc>,]@CPl7++j%&qe>TLlhi+jeZjFAfN*dfRad:^Wi)]QAj3u]XIkc]^+1=G
%1jdrk7^h/ef$Bh^<ic..r-668^.'+.NHVj9roXL0CT6FpoU:T9JZDGL<Dq\oY6N0E-X]ua^#jU>9h%"1darAn,UD1)S_dTlq]tfW
%TV!@:;Jl12eA7_G<CINi>&HA%b4A[amlt)"rVa>l[a'>^`RdNFr7>1J_t9KtgFIU;6&0&jN#JROriY&,*HRDb>H-`)EQ]]@WN)q:
%[uf0<Vib/d5\mEcR]/F_p8)q)El+i2hm7b8\%LF?a#brNp?IW4,8t'c'6"8\Z2(/Z3\:65SQ[P0gYQXIdeFRAD'a<?p7tM62c>>j
%2Q$J?C6m-Oq,UH?k`K,El*]6Ak2MG"Tj;T6:;)P*8Ys@)BP'`WaF<^'m,iVl;@*mq.Q(Gg/+#T?24[S;n'Q%_Wg/gANFo_GZ4F^u
%gAfmSn>ZSPBEZE.J!?B2m,YUX5eGle=3@pKWmu"<0>eYJdMZ0AZ+fiTQ#O@&ITjTg:ea,2P&8TW[pGDQ\VR-:%;5fQogY<^WNFU0
%;J!fG[qW;J]P:$AHF7oV75]G?Qj=[QPu=T+=Do0NX=X>q:P&Fb0@Pld^4T>FV:VSafW#b#$L#+@0D&nAiS-1/V<6oTls9G]6OY3.
%mNkTpjIf@gM\Kq!@Xg4TlnFRl#^onrPrb&sI]:_o["9O00g[s(5>L=F8.OsbCpSOnpR9'PK@(-)/_d]keI9'Jg0Ph<Dl%J\iUXVf
%2fhSLj-4f+r9E$;.CE<to$=b?Ed_%b^Y2,u4YQI#WE49jFjTj9de6N;=!Qh"s(Ego%0]0u,02+.[2?efDg2FhOMj<9AYQ6Q9>%>b
%bQ$(-mBDQ'B7RldS$bSZ;oF5)XPuE+UpnE7I>_216J"e;3j"W9.74c;5<'KB*T;p3X2f2-^6CeI6Ut-!]iK!WJ)s=g8q;INU^Y_m
%[b&<HD+?*a=>N7*_dU\e2aDFn2'-/3-+-LJ.nd]XGUP1u>#V%-7I/]l/'@[!XO52;Llk7I%$L.M*Rt+rT^eo`c%'E]h^k^LYN<Sf
%dWa2B3t3Z)4@(H[.p[Baas#s5>$)Bc3p<**eLQI$*'buZP=:`L2]IR40jkEm-oPbEXsdle`K]70(6#`"rDkYN91usue56"TU+NE!
%s1,.od[-_6<D*.p/t+q&4*W"P"ge],PDq+jZATE.c+BV'OsrD-aD7]6bI(gXk5`=@^UWYGqQC;&V73l's12'lIP240i#*[]W`&;o
%pBKh4ou=1AD'<_Na3YpS/j[5"Qg8kq.%;XU$XN]F=tl2=8E<pNWLK%\m.kBrMQbl1WFUbuUY:BmLA/,LXc([mRif@o,.1cmeLR3#
%gleb5^cY8Tkr#[uP0b2kdmM,mWf>K[%BkUF^o;D'q,=D/ELE7=$*^!RCJpM&`9t9@.UCHXb?DSu8NM;-PLgYZimU)+4C6h1Zl;ur
%'dIoKMK6J8Hs,`mC?^a"^)PEnhQ-VE=q^jmX6d("L)M,laH:2cl<XND1'r>q*q%eu)s'`n["?:9?87hWJ2n2K4mI:BCL,(5+I2?$
%lf!ZndJDWt_eTgYBpG`iMQBpZ"%OrET=S(%2iFMA+4O4^48!dppOD-_32h+^isT<"X%i%qZn.M`je0$J6%3n(0it?n,)>p=UsnS9
%Nk>$8GERFTm$YT![/89W=ncNs:NHbRgXBC'b"b"R4BBn:`ln;sbI]F]DL$[-dm).Gqp*1Wm)E)dT7?i3VrtgtVULSI:8QE\YGS7%
%a4skQr?qG/c(q``br;+AI<a,Wf>F]gq7K$9B&:m!;pIl#7;5-]B_DK\QnOI`J"NVL%j1Ao[BG;/=89AD?ZWfbnf2"\`QO#Y$Hr3J
%i3-;HNS^<=F&T%88_2SlG"/+dTAo/[27)g,PC6,3*oX6#rJd5g*M#AWhEg\>I(=C0KWj02F#C;=fV/n7.f[)O0/^N)lW\aB>l4Ba
%q]%eEoT*eM[#<B[IhgVGe2PRP7PCk+cTXSla801$0%Nc.Q)XF(X.=&rhg58mcRga:AIlPbB%GRSO#.dD\^,&h&!fG_SiqH]Zhh8.
%J)O8bn^OOaSq2U^FS\=.h:/pAeH[1_Q*3^Cr]gG,2BF\^=OsPD\TPFWre%YF?Hb!,<1b`FF$dk95FuO^iS-/<$6NQ&&4#L3#>H,-
%kp_Sa_?g<ASD^RVeVC?C&H&gR]KET\.G?qY?T.YR%bjZ6\Mjc>*W=G^7bu/!s0/-O00Z#QXY!6dgnVF(q=cNMX3WDjY0GPT4kdu*
%ZG,HRQ]$o3I",MK8JDn>]*ipPc-d.;B.q#4X7c)0qNLTs?-@P"36IS[^0FuHgYPh8I",J,(Y6%GG:`\YVsr"s9:)hgV\br4S$kOR
%[9(Q)K?#W[q=8eCLDT=BVe;FJ;X:m,p>KgNpL8F2gZ?lLZN\7LIT53Jok/V_Zh8?_m8SAdahE3gI7Ei(D'?CP^A5:M=knBqe`A86
%.XJ7,cCEV^;X7$&2@H#>_PR,I$YAVJ.r'F3Siu;50,ASDg=\qrD([HRa?Mf33fBE*e[*4jqJ'npqcW[3qD7sY'D"HQl$7D+4hXgn
%VPf;)^STD[`s*,o1S7E,J(7"aVu-jjJ+S"94hpUVHhu-qqhU)7bV$TgYMQh9pbofL=*KmYXQ.:B_Md"C\V$Li60.:`o[N6jjn/3*
%eXc=7D;d<7A()p!ICa3''g,`%2UZZm.j*73CBsP)UXq#aoYR)s>l+!<Q_X34VmUI-bj",7HKi*?1p'aOhPA\f>tXG3m0@@=o@?O'
%ZVOo(XiJmtd^FJM9KOo9osD>K]M'un9n,a<'_l'8qW[@OSUU;!eSb6ZdF7^ZMjh5=c7M7a:$4`9T;:(NRh*s5Hf&2+?d:JlV)NT;
%e*5JBSSWVqRlO(/4C=IOn',%*kr5NnEr'0bgIT(ZhRuW*FhUSHhpigPV*CJ4]g+BGhS$>G?f"aGV8"(?O41!sqZlBF]>fKq=n10G
%qP*Dce!ID`bB.n&rV(D^2m\YG?9%qUDEl]Y:8Kn_cI?q\[llU<S"?1>]6O'nC*EU^R9FFOI%=0D]p1$Ph6'X3;s(RN=&[Di_mub3
%jk?W3B+M[';_OU.^JErEp(+%O^UuJ%2Eu+\VRA\%gn!.NDAuOOPrH+M\*]s.WV6a"oI4"4RQ<H"T1keVWTgaS9l6p.Q7Ah.2a1"p
%p7+i6dsh)CR[uQR5+%p!SmP1;QVW[?(D!U6e#NE(R5S^NKkZ;fk4Fk@.qd<ap:l$C?JTn748n_8=eFP3^3huTpZ[YlIJE3oiq3-4
%q1mFkh8[sO\*#WH9BQQ1l#5;ADq*!QD*NM)h3uT[5FC/QIeM^Yj8A_*KeFA]&!W@2h]A0L\((`OVj$Q[T"T$;+66MRLC[_Vfu43N
%$chC^rPu%<%urHh)\5+a*UQ#ZQDZr2388n1n_itRX7N"3hT3p:=#s-VR@2`P4'OKKSVNhLe/b_NA$rWN1J`1+T?ZG]Z\+[*M`2G.
%gTR6pcQ(T*(GkNXg@&Xf<%br3'Yfp8R;XH[pLY=VL$EKckS^];08ja\1UGWOXC4o,bV&@`+(nrFZZFX?m"TZTH?T2AASq-[p@6Vb
%%rX@$B0E)-bat0FO0c7Ej32=PEW5alD!Q?9iF6Nch*^5dF6;H(S!?b[F0FoL_p."iikrH*c^m?`0$cBrId(*R5<Q:/00H=RD4Wk+
%?bUapDYW_Se+?o-b^DE_\^p?,dr/!.DJag`h:spYaLT4B_<fsT:L7J4po:SV=32oB>W_\+CAqYE<1%%80C6s<>?fG9T7:Qdju:#X
%[c[<>Qc8cEYO]a*?gHt.oAsV?BP.6j`A&IZXF=N$PaVJ0rQ+iJqYeh5QcA-^Qhl?_UGoN%n'V#Yl-#jNMYHA_Abkr<8+$/pa+a?b
%o?Rf5;a4DeGr^#YYkh?[>M+56>$3iAIb.ioVHPb`hmT*"6@3J)VIgmqSP82fC[7HOO.RuS5<`ChXd:-u(0]1JhgaM3*uDZVCQGNo
%QcG"_[DU2,`L1?HMtZ^NFtpW#rHRjTjfH1@A:DrC^OA6#?G+MK?S$BG5:DqRgrJf@21&NK]XVXJREXul\`:o]erp=Vn+GG%REDR6
%ASLFpra]__J,aW4.8H@*q9I/:9=rAaIHeZ(='q8L*6k>KHXBO5\[h&?7=RCIWB<,QFlcVMDd#.^?ThFbhrpq8UP@<ec+,E@7TFZp
%Qdho<o,$\hVeiDPlaE[^Wqj50Hb"?rc$V0W2=9YG"moH@XeNMSIsJ62H^*41MPUDZqn=rd:nM)XW9KU&s&IC7?f1-qG4(XpfmW?V
%s0d(<(fSJe$8l<E[IXdGdjOjjn`p(iPk"1hK=4X's.Er1oEQshiUTk#FH>f<F!I<L1#FVNcC9O,F2e(VplTDVHB`bo3U54_ep;5u
%^cL7833c4/Eu"#QqgR+FoZ==RGJ:Qs$+KHdofN'7R<E9\S+T9pWsE.?]mK*.H24c)][#[KkJOWk*N/i3`A`!epP%aEV:U'3DYC$f
%^0/'midNIBTU"t.H+a'Rr;Ot3o(l=Sf[o_SjnGU0`cCnEkpeQso&+Ye^1-.^elPmR+1>2[=$LW*'TZTa>\SQ-nIoJOg3iH8s/l30
%n"R&^`,e,e5P]d%iTnt3kO8"<T04[L5Mbi^$;XHX*kZsUG\-0d*cJ]/5'skeqYAgilURGj:-NKH"J.KnNS3KQMttQZcZYbLTC4\H
%p7?WsO&qr4)kQq9Bm4(O7Fp$3^,VLL8\ZZS0,rU:Qd;"$h>:="XqfidB91B"ca)FLH5F,I:G0EDgc(d=mWCm2k.]n7VK7`/@=alh
%B6G?\q5h$t/:Z#a^WN1>DB,cBGh4CIg:KGKeQ9ANbj+BOMsP3=lh80Kdd4=2>0_CM^\7A"3kJFA<.2O\nG$4'I:_Z[?/I):^0NtZ
%D7;FObO\LgbXL^<`od1/Rb@Hu;qTt%^+eGlWOT/'03@n:QS76%X?Co5I8i5aI!k_cfk,DVrnHSiO+mMo2g;%mC;-J1]R!VI??gU3
%Gk(U[`DPmQlabi4Xk-?5HoZLI`fa!=ZeXE+F.2R,St9UT$+b9K0`,PLiooF3m<LR;[/I(rbASK:/Sj+uE\$CF"oJ4,-Yoi4gc79j
%GBTu^5-=6b[b"T(=2-0;m`2<Pj5'0>QOiht$ZC?0oD,<0hF[T;qb?qY=m(dN?CuPMld!aO1N1PSXSMh*V*/Di\c0k15B<']moO_i
%^,f@Gc+Z?n=P>u&pp*!=3)!+r=u^U6T0G?k>FsS44E$j_^3rs?RXUb'pj2c'LP$C]hDPmG/s"40:Xu6-MeCd7B<uC2NotHg"uUIl
%4[4:?r5"eh3c:NP>C1"rr;>s<m_[c%]CX55_Y]%j&+'%kTAQ6Ss85`85,>m_fn\[IXlgc9+"u51<7g9A5,r7t7iu+(k?gCg^RRLb
%2#jqErfj$(J,&[#[.3L(qK$87ReaV%Z[DWFm@/a1ch525rPe9-kqB[5%qf7lp7o)ERC@+d:,_97qkW`L@c?XcZ.\rAYGmjq^O0i6
%]Eaq(T=j>?NfLd`0D5mgcK<uQe!9mF^!ib9dGAU/dHQ+rfkDO*1PLIIqQWkH^$-96a62?;D[K+C=?ZL??SYq:Ang_uLKpgA?eIZm
%?[aYum2j%.S6_`"d*Hi/h`TdZQp!IECt6uNqO?3]`SOMckb<+NCmL&Vo./o]DjN\SCHG`s9YX_WL!=N@T,+Ha)X!Sc0AY;Rna^?N
%CL=Na28%(q[5UkBI7GkhVqtFG<F7jKW)gZHl`Y%6kM1j#[>4%F>%(!J>(:@$g@\N#p#Gnfl*D`H:"c(TllDUDD:BBMYGdlXcIZ^k
%pZ"tdWgVEoV<3][kG.1],C?1C5BGudhm:Z`=1-*Np7hgjWuSGg%"HfhXQ;Y7apqFnM%[H;li=JueNsHr9_2q-=17M.m-oa2laNid
%D+%YXs0#DT.lGXF4o:c*]?sd\\6&38V1BulFrelAP?-pq^h/mI?Ia5_aRakF[QBat\PXf0,LFake'C,7UTbHO:Fs=ZZ+%;n&d0e&
%<[o+Rnm65YEe1fmpDP6)Tj2?W&$<o<7>(nmNJ>3jD8Nc>:eS[#CQQ0b^1+^&=<"k<(db]IX5D*o]5*(W`Ok58i/<KJgg+i6g^WuS
%jm+d_C$:)q9P`k]<9d1_o-Q,DTd>e2ZE(dri<;qlb%oF]?'J5UER[5'$8rHF?Bf3(Q>f$7[1oKfT$-ptOQ*,#[IBq^QU)(7hU)aM
%0"&6HQ7*QMpfG.mC=(C"eSD.I+=HT3W:\jqf2C_!.$p)Fmr=4'%P+L*5c<=Y<)b9Bb&&Vknkp2uPktXAXOe#Q@dp8'OKudA%Pl`8
%jmuYTR:t8lO(b1R]rmtr*@eNrS_>C<C1QI^:FF[tBU0UCZTFqM_as*t=fuXhc-'UB"8St-$l0++o=A0W%UUL:0q&SIT0Q?eq%0a,
%q>ELhg3pMbG@'")S^k@-["B-<pVt=ZosB;#mBoTB(S0i*bpul,[m,Y-C29V68@(c"aAfIo)^%(Q&lsi17(NA4%Ycq'k7.55[5&-u
%5Odl5g@Z:o/hkVJ-IA*&s+_0k2:-#A`L4>.C9LA_l\Z#01'_["<fA5CL*Gulg;g&=UN5V^a<W5:LIQakYhg4j,KsV<?8E:3b-8>c
%3iBnTfB]j<5)*Yp#tO[_-(n]6&GaC84lFkaJRqp*Q2[jR2$]*,BKL[<-lCW(Z[V2I\%H(Ejq[a2ePUq2UX[&nU[>Dtj'^X7>.nn&
%XB/%^#&?WXnQSB24[F!q#KAUF*1c)6ZTWY=%hH"*U8B%9Yh&NuE/B?Q_cE><ctAo(Mq#;0F^du%$N.SX,O/X`m.=RjqTtM_YAhf%
%rK]p^=em2kT9[=HRc2^0ViI?OResThl;FN0&a\\s.Z#]Ek][WdI'nVH1%s6:9'-u4+c-'QeF1G#UYdI;P7GL+PeXYA5=G-b>e1B`
%Ztj7GOGc80^./Xb*nKWXlZ-Ohm$H[%Q!Ugff0\MfB^VXkZ_sVsF8b=0:p3hjKeD1sL$\'SF[<8-n:_J!fm],Rp/n0Ac4o8n^N_\d
%ZZ_a'[]u&2]KFP?-e7ma-^:=ZoLGU+'cduN8Ho,->RK"T&5?LZ)l5Q*\tiC8eR*l!WqCZ/IuR.&e):'"M6qCmeYHf^fufOoM"m:C
%`nk:Kmfc\I)Q'u?o?^K><Ja2C+%l0;JX:(TM#?4sqQJ%:J\I&1?H)0SY!Afa[The)HC5q7)2a3>U7kr5r,-n\qPklrAheq5&J_L3
%q(_5)Y4*.*D#N]OF"6dj^9!ISY<m*Eqis^.NpuaVQYtV$];Cf%EQH);4&.\Wi">67oJ!e>eGU!9DMLX8TCq^.,5msPFEo"#%?b/]
%aN2&8)D=Q%kiNV'p0"Mg.97A3Z[0hiGguf8eIEIKDtVS&\K)/FIhdf@8@)r_N.>)Y-moU*!"!ri=^-;]Ch3s9]G^\m#n8R/M<4A"
%^=BAs)NA46?7]*P")(&.(8c4k\G8n;R5lk.X'VQfU\(B#@_8%d\ps$#^Xl7m!,:sL+er$21KIe2;PD]%'_dJ6!]idDR)pkkT+&Q*
%4@H)rDC2(W\D$H7YN.HI]j=?jlY'tR]M?/7%p(>J$pO4Y`^RT::G;kDTGQq=1?i<*PpQT(9!BD3_BGE_n+dIId9dT`3XhiW1D:hL
%46=ttK51sp5Ygk]b:Pi^DE"LIJQ-R;UJUL3r^JNJ\X'^(f<Q1P`tj$oSGFX-][4;X.'V"VeS=d9N0@T^P;c_KWAf^*i>PlW3YU+H
%MeWM<8n)E8g`'XL(LFAr/7$(`.r'XKYZL@!RdSnV&T&,TKC4'9W1Q[D5D*!2X3dfd%aG*l[<\>]VJe3`j#HS0H/o^?)c'cj,^,o)
%deAWudpK*)-E6jd!ORZ_YE0;^0CI?,!snkg;iHT8.>8[K5H[WnKV`"X%J,U9WX?/bcoK-G[;bJNe:%jt$!Pg.50#g57A%6c0go3`
%hYRaX#gMBEo>*4g#Sanb#!9L22p2H-LK`rtCI^Bo"t=VqcKW]T^_!uYgoC_s`/c&t%jQl5=26g#0EgW&F2(>#r[H*(s,i&#k`]JK
%HQmkMFgZ&"d^Z#q@QZWSl$3dbPmuT79m__@nuHPQ#A!hc8iSi$nnLU53kq:o<]UD96G'tpq&ngFQ9=9fRi>)*#`XA8(]O!nlJoS+
%;VB;l3d&Cc#Wj^kX+;:^=7P/`Y48>5iJbp%4/9BAJIc)MI1P:cbX3enbU<pIfBaB*&Va$J4I6qjmr#.+O"q;Tj1#ZV^c19"EdP\n
%2HXa!e>FE7,Kt?F:Bc9"b[Rb&)g?f\h'3aJh-k5d6U[<t)&@P\Tg.e]]7^8C=7doT%f1B@[+F-/5B2%$\[4!4%8p2A,H7\LV)!^J
%i3d/'mbUjT=WH]qPABg%@VZ0(_Ve/:7F&)KRrC"$D[u%f<9gW=ruo.(<BnGL]ZfbDq@'NKQU]Tg#rB)?!O5IN934+BNh!VI6hN,'
%^q[=I;DfhuR3m>:!Sog8ql`#/)i&4<C-9m3pcTK2qAqj8"cpeX*79fh7N>GOp*.oe^"lp>OqR^QTmhe@;GO/8Do:+\+ZR</*IKrj
%]:XTQe`lh#IkSsc\!IpiY5,<Ge=rhP)-lE''gU6RN!Qp^5g.<[RN93Q9@(,VjT8o]XWK9ZQ8)3)*[Loel=:=XdRA:%d)\1-Z,NpJ
%<R!L`Xf%n2"H^:Oi;e\VCa5^EVBM;61V,n/^$'!3h,[2U@V.IK[Sm?o$Xd_h1*%BRq),/DP3SF6Ye:$%IF)dnUZe-^_Pdj2j^rU9
%Ns]WTNa_-T<-JJ%H4[oEIYJSk\:i,KirGb;BLZeX1u$/4RVL#Wh2H3OdP+<*Il=gF!#SJd<ZLDNE7@3>##RklLce!Z"\"f4AOGfA
%6d$m8V8Y]3`\PJ_7mIH<dAO*+eBF;KY"F>E=hp'=8a8nJMNLaANR:T/NCY=26jEJ#aih%*FF5SKoF[>A#Sp=a)PlY=VdNnRDem]p
%MlH;5ZS2i*5,Dd(eM1``Q'A?-(*MGa'O>0j8h,%FQ*6So9p\-JKB]j%PgCs+*&]ri33Jj!=2i@C:*"OP,0[c>4-i3cCY5UkiA[d^
%NDd0ARtXOqCHfZ5\K(#Z;H-Z$*FS3E=>.0gaKSr/`Afr::6l]'J`L"E*Jpf(C"RFqO;d/0I3u$Vie6joN&4tp`\`P5#W5Zm\Y^fZ
%#$[cUA!!_d+N&/W/s)qjDHJ,NC#Nj-(9q:@[hu&)0'Y4uDqg%LY)tc^CIUe$<Kl*l"f>^12O9VSGM'=Pc)sdscsl@q<`E\_L8"F%
%LjiGOH?FTf$'6\6jJ^RlJ.$?TqF.F"<YSDrA!hRWd3c.gU*bj(963cCkS][qF12R30[kXD;B.F-[)Peg(;oF;i&7U,YtYt:ko'-G
%:oQ4&8&6J1f>KXa/e&eA@5F[i1ukN.Vq#4U%!)l>)A/?gnYV"*QpBm#3`Y;ra31tF&H]u*TL#q:,$V'4;g"NN=s:=k!b)gMV!0QA
%Mj>ZM%kSi$n7_l&:tD@qrn+6d#uK5N"bE_c@rZpODY%<<AJqG.kg$U3/SY]aKtBZmV^\':0<XEp72h7Q[&>g.>aoVf#(-u>RRF05
%*dc;1^?V#<eP19=Q4j?4FW$(ZLdY('TI+ZPXVb%,&aG;]0&c$.Gd%4CH43;b"irH(6%_(]Ze[3Or_Nr9jo?iPeuelg2Gol;j@Rjr
%&@$fVBuFUW_OXNP<2(r'US,PiC=3Xq=5BQ:7)CAcm'LkjRV4g+LUs=G2F,H>&CfqrQ0+?6OQtIdn?bZ,l4XcB)aR<GVXE,l&HN2.
%)F^)-97!oGTU+PY'N'R]Mp!Z1W(dpUaO&s11KBBj/Kpcq?.12*-t4GrP*s-?Yj+XsbQV39s&:BWKXFM_NrU(m)p9p0$,:PL3/BVt
%;&9rV4n;5XOjG"j;`#0uFI_8N&Y)4hOK/[q.d4tiebGe+NL%2/HMi)GYE8T)FXI0>`Z9as3t\OqR"=@/L+pLgIdbodeKM_HSh'@t
%5qa`$bf;!1fZ,gb4;si0&8JI)@jJF6;PZT^&7NDZG>i0`Yju:;-7_<<B%*:Haq+"uPrM^GntUfW)oOhR3ZJU<,\j4EO#!sWf9B8W
%@f$K<V9cdGX%egRHrHt-,?:8G\mgq:PSSupf6cBRrKj"BRnp^Z`ZSe2M/#A><hU'lEen@/@sWS(NG8F"aGBt7\'&[T$^GKe)e;`O
%S_2378^K0Cn6Kj:H$O\M<+pWdo1E_B3FBX0iO`u/F4XW!r%BbGM0_%u*:W*qjL8,H@]YGFi6>B\4@^\Eion\7?G=1KQhbs6<bh%9
%NH\RLb<\n.\]rh=Y7eHH\Z=N"In_V+k*MFb5:i`4<q!DX>7ouVD$9jWY#dPtAHYoEl$./1on3;Rm?$&hETqok=0VWS8"3u&eT(8k
%qP*oH'`;[U5F[Tr/#>Z541p:FPQr!GIbF=]?8^O<N`FJ,[8c@d="@<Dc$05"m%(ZD94j%g1IW':NZNuphf2(_*bH0q]&a;=>@HJa
%qR>-RfEcW@Y_9/E)RiOuFB>CSA7YN4&0T=\?lapsOJ;Q^M<4L>OVMUlDN@-&\mW!6`#Ma#&A*_?aIIbq&HW4c*B'9[r76P?71r$8
%jdAcP%eW>IF<M*LX;@F<[Ump$&FVNmmW9E"J^H+\[HY.r3kl&("9am_$G4oCSkW[O)Uet)!OL^iDud5s-A1kX#&;;6Q6gt2142AB
%/'^>7KTJdbaOco0i$-AU;aj9Xg*(<`X=M3>Tn_ldPfr3TM)M%`dlbu^BYG[cMb_5KScBU+H!hI!eTl+2EB^Pt#VdZ?4;Q!Coi_^'
%Lmee-URUJ#i0L?@-YnLL5^!h-'GH/A5S`Q:J?$fl/'NW;;E!X"3oQ5KUoOLBW5-\t8`"5N$p)d=$5p(i#inh`9N>>P5rD,+A.k&B
%B;I0#IT=n#_.4e7@<oAYAFt'3I8B#fh<'?m3+SVsQr.QHRB"Eq9ICG:OA5j!JP,^!)5sT(9p#8EU'BqG+=`d6L)!!>HO?1i-9EB&
%f6UZr_>Q,sC@\0p&PLZ.nY1*,[KJHq09X`j&C_8sJq)]I(Hhk^B[%_DbZ\(X90+QVdtTQN%#&HE/XVb@Zn=(mL-fLY%MbK<Ot9nI
%`lUs\AHRF952dO&J0P(;bnR;_6W$A`A34"Lo71Gd:D3eLZEZr!;:mU2&bYuG6t8srUa_tJC8a8W)@Wi=Q"hun,1%EVdD9e[7I$[;
%MB\HU`2Z(F<0jXUi`3[O#gC,U9TsHQB`0q$%m-327#AMD(F)NVB0i_HM37&*A't8e`H;:S"0WUdC=A)Oi[[,^<7\@2Nr(XW=sr/o
%qQoTkWe*L/TXqKaCtfYI]5&%RKK$<6EXhM+0\)gQ?TucT]S.tP[((5Q@Se/OGuE@CS+,U2#*BZ_PpRY__WAYS1)3`D=YJ4O=&!X"
%SVSB>YV3lPA\tQ9923f=_V#"8l,(?>6IPWo;V$\CpXJZX[fRa1g!tia1C\mk@A'+(>L4\I6q]t(92[`+Lgr3c3p;RUZp7,)4.,.G
%XMM8sGJu7m8b?`78".0W9LG9-5i9$QXEBHoH,Ild0&.AVK#(o7'(KX;6bLQt<FJsgTFUK0q!r)f9q<(#Q*jc[p,:nD)qbZ1$lY^+
%eT(e>+\BmeS>!)Se^HRQG$JpUjJ'hWlP=;Kp*.>K_U*l_WT1Q<8j\q2]kmoDm?/G7>$?S0`V*:;RS2JUI"Q@c@]!iaU#<M6!_=[6
%gdNNa$ku8OJH;EpTsiq'Z!k1.#5-L7,>CLoH:G2@_5IXZJqZL<a;3n_ZPA0XV&XT4"r#cYK0u3>),281'qLYE5mAK?%fY?kZd21Y
%@4b"O#7ap-1oLec*PiH`65(6)-M>buG95eC&;u(Bcdo@AW)'q>Oi06%J7J=Q*)%i:7-sX[>0s_U8Tf/UL?]=O3jWjZN(-OG0:FM^
%:/ruc=,1UcGucfOBCH6W&#ha0pl-d@+0dIgdtM\6ECCTT4bDsHM^Yo"Wdsk5YaA\b;1d6B%MU;pA#f;mal%lol=n/6-sD1^&]c`F
%2$?JgGR7n!6K,g]iAH:3a!r4ORi&$e\r8WYN2$-^6sK>B\dI\#IG4002eh).]L6FP>gd+Mj"smW1[Y6XR#ls'^MftMaWEhOe.(AZ
%[!h>pA/2urgGq=ebW_$]XV8O>[K<-jb-:.<,.!-9$o<QfU0JFn'/u]7S8c(o\)@PCCuR*U1c4d'b:3\;D'HH\Wr8?_iDM6%UnLC7
%0sd_\:13>g8h5Q3!!\qB-@g?W#XLmqb$it;_bWs8MM?ga:tMn3oW;)b-3A!t(g-X5)T8qbRm?"2Gb\;l<3q:)^nM@F=>Xh*br?1@
%@gt&#iberG3qI[#NYm&A:CBA?<60VB_SkW!,0sp9_mU!&-V4sXB`KomI$hcN`>0._:nh6S%lP3Ud\,9tCr\2%@mVErgPF`JN#moO
%-V+HPd(66oG]=G&7mTrq%CUugN=<*oCm%$<3iuaen^'>e@N@NA`8.@Cmm'1=);s/\N<HB$7F0usjU%O8Wi4FU+_^u=>t3=Ol9$&n
%<\7Z`37uVe`J@&YJ_EVaSoc:/Y>>B;oJR;#26qPDA4[Ee&GF>s>[5sOZChgj/85fb3!liN#J8?sN.V!o1=Lg0KBAqliJ2/]!?8#0
%HMuu6OF^]#ih_cX-tjR&<%ER:nP."sb2UZGd2nRZT`W%T#8LO"0k$3E7B>-sB=Ff$5jop)GPF$N7KcTAfF&pNKOCroCYX1Eq_o9b
%*\:E#iM5\.Pf6!]g_"AE(,]5sjP;ZuFDQMndj/Fa&h\SZ@q+bC_#pX!Tgk8;i]u\Y#U+##r=Ea0KeQaWg<u[V_j2M'T^nB`XW?Ei
%4n\^>P/a4]cn0kB_K3rg3hTM0!p\E\[@uD;fTbmI=,1c*Q(=kl2B`E`\!o"G<E-37reNj$@RJUr0df?kBkfQ*Ylo`BD)*JX&Z2gH
%@^hZ6+(5@:,_Y4^B@YtmOC%7UhA?1L!j9_DZ)Ka4Wt%+i$CF-u$>Ct>Y[F3'DAY\[;+X2YFN"(tZiNXIX2Pm3Y;8E3Xuof90Z-VY
%+m[L3fRcqn%([%4)M0hs5mPk[I%:aiK85%1PA!Y+oPdMle7Q<p6Tt*daWTqJdc,:V67;tk;J;3&$[5ej6Qdh`qi+,VTcarMRHgn=
%O@0:X2*-e_Jc1&U99k^DBh(EZ*3.'@NE^/6'Oo/%"sP#)d,ThNmPp(PkUKEcHg2,4)6+5"XoVhJ'h\g1;M>,UX,M-K-=oo*.?%P6
%plp5`f+\B=NLDZ.IR2augC^i]=@,1D#<EWoAe<KZe.?+$)A_<5BQ\AI#O>)@C5rU]P%4?S$5l1_m5-fN^goMqEE2_XWN><+<ud/P
%eSW*[VI1Ob]WtL<8\B\ne!NGHX&+rJRL5&3@JNXhY=F\efI\pfa@NLWfDf@%k/H+">ZE8U(Wj@Yb@M'8:3F;m4%'fD0@d4e4SjQt
%n%Ys>n'^<Mko\!eIRA:Id0Ikgopm/^QI*G?#bo4EK*5Mf+^s=;$6]n&)9'aXJ1?g03Yslc&lcn0]?;CP7#WF6-X.f*_Bta$hXWsX
%+`TB.CC.QuUq#H(9Lr9U\tLkY$/:7YIUBTK*uOWr97hl-Olg'p?7*P(B8hQK=ICAKasPA7$hkK0B6O+T=?4U-TJfUo*CMdLd#c4k
%ERY68Y],X8c;iE^q_Hs$Uk[;i&UTJ@I10du_^`rk;R$9fM&kJ`K[6.^FCeA8"i;RCJ03p*!>&;(()ucL,#M8APc76/qD/S(9Y.\c
%OTSQngZYL]=P+C`DIV++&DL*-><FAFp5JK#W=]FNd8L15#V#n1plS<[+UfS6K:\c/St]V!l.G*PC$q$b2at7_CnZR8mq(c*.:Urj
%kb>"a($A&c\1^:)42<s&^-NHM(1V6d=lSm#BSP@GKgX1j,Uc1PBYm6V4L4o'JM<-/_CL4I*[(p"A0B2CXD(S<CtCS?55+\rUj5A1
%dQCtLW;etH4AjF!(&S!7Sc-:oE0Hg`kE.p[E"Vejfs)5lfX9?oR_pZ$ND_LWUY-</cm,(_EJ18/`BltX/:`%s]_R(s7n&_0\gd>2
%,!I#6A/Q'_@kpT,#4d>4JaPQR+elk;l<%=ILtIXNqcY6_7,!LBgIP1]=GdI+3/3D`+@uoo:g"3\^^r_H1"qpELO+^?)S$(M>CPJA
%\->(=9XOb)Fpth>"uD6&p#\`C[ia'9TO@`$IMG;O8A%G"?]hjWk+Ic)&(H/o?^%.O!tM86'(:rK&atRL'(:[-!UnFoi\XXul=4b9
%YDN!ULcMd.?o5H>Ns6u5X#k`:G2W:!@0ZJd4Td1ZNDaa\hNJL2$t*M)3Z-T$5ddJoF?"#m$qXXhpu&BKQU@bef--E2Zk0MI/5iG!
%5t5HM6E5e)iHh[Kc9!ra;AJqoehsGdltIDA'bBS&:).CC=;?6`1pIJ2!7ZZ88cj$9PJ)=GVYN<sY%'aleha2"Rh?!t,SJUO,:S<:
%0Z*!jX)`1u1L%@b_aYo5kY,<!@L/X-B,oHoPlQQ1P!.!K%E2rZ"FF1OPXHNU,Tid++,JY?)>e8Jfl-r.qEp(rMgW:E'*3?=hFa#^
%")>TSUu)fm5H$;.[6L<jh>jo&-Utd)cmLA\L71<c55AV[fg&4rN-aHGE_S_(-;cEXqD:Wi(ZXX-RO^<@JO8X]J._HDY^j=CJlI$-
%.\K$5m>-(8JQlSV<HWFY.N8j_=FUU5W4.!;,3kG8FMH+95BF`'1[<EWqq(o)VF&LU&7je?m0Cc0LtO0p_EHnuN$`^n]*ocHj0>r]
%KG+=#NS`JfLg!/XBE/Y5$>>9??mQB(9l0,c:lI)5n67Z0-\B7FYW^>#ggIF6L0DrJa?Y3l!pJ0`HSsk*767;Oa$a9!jh-W]hkTN7
%nSX6DW,W$if7<'pB#O)!TZ1lu-"`s+q"7fVr@EIqr#r;_Y`'D$Ob&'odT,YHb'ZM,i>T2br.>*UFJXoNFB\16O*=D=)uYe+b&'\B
%8G\$*8c".F:c`%Jglr\/KXE*(H@TfjP4$3ah-ntJs02J6,"]P@To8]d("Rrc\q]]/elI/8X9IF><_W!G=B9]U;!>'hrjH@)^J#6G
%kP4b)5NVqp[]7?F9K$(K.I/a#Hu@ADb(S-/.0Jc>VMq"W-$/dlId`jf`#]/n60#+gA<D`T.RO?)=;jL;7>um1h#\;F8"'jo1`Z9&
%lN+7RXtG@J,&pVL#9nb7*-J%P2+CCFp)-huL;X6g-16>ZIK\XTS?=An:n^1V9&Xia!>H9;cnG#nEU:s@m[(oo5f>`pOF_6U;.BaZ
%/J4Ya'o.rqAXb"]2lVkjZdQ&gO4[HjcVTGu/K]WaM)K>,1BO:;`(sTLX>EY[@f$1K.^lZ/LlG,5;-O%<=W+Ic,FH`l44H9G,<?BD
%6H&.=J085/WdOk5AM1F>3&JSZ;Je<YVSl>6+)!0\f"clfSZ*j$;Z\+e98"0P5TOta[\te[,,C4:KoMH[N_DkMOJ5TV2DJ![V0rV9
%KpmicZ*jd(NFY(Kjg!gtF@/I[,.K<U4[ojuOXm0G#RV*6,n@'":ssH-6u-5ggVS!_3@rrT,7%19"AB)1RO/O/+pL,^;N7O]RdPkJ
%Lpo,cW9IcRfrEQ/%.a:_8(eFli3O/RqM:WZ=EK3<7)NMlE+_$l\gAUJ32/na?*_Y1(DsF:(=%p1+k9s-AWW9o<#>Z=U=b>("6)$I
%oYapY5[gMn[frD`N2Y2^9Pd,.1$US---K.h@9LMn"7_3F-'5l6:gF4rQd\tTkc[%2lkNf9q@AmhWJ:^KV1icd^+V^ZZ;#$.VA^tF
%J074g,jlh.HoAl"L<tGsD8i24mkS#J@J1:P3)`,9K+[:-&S%1',I&i;?]du#*-]6`-[Zsd6[W4bOo5;;jQg#)BHR;L2F9.G8'26]
%bS^a-F#61kXpJ6bn5PKQ[pKWcd"V3hJ[`ilJ21Sh8=Qpphot$@i0eY&50.To?*>nBLeH/Qc'/RNM`,VC\KSAE!'i6$hGndJ*kLDB
%1n*nk>C&h9,4Nr9S.(aCTHI&E0h&Mt5tr#Dj\2<jbt=X"hF^U9hTAZ$0iZl&md'FQ1JNm:Z+F$_K&Rg*lroZBQ`B;gMVEqA'C.b_
%q@X&b6M"t$U!-5)^W$g'Z5n^76KV!=l&76gX!$9RM6f'U7>Vl':gbf0A[c6E.tJn<)Z_7Y.g(3[D;kC@#B9Qf4_:U_i5CEo/C*1L
%:a5Td1c-#%.$l6:Bc76d%-<KXM?L'beT&/l0FSia+PR2O4!\bceoa@5BG!\cU4\WEm3@?gK_LV\>uFs&ob%4DV*GZqrH*p7bp1c6
%Tl>F[M6e=BC^bYI*&.rMb1s/I-EYL#1DIj>T23C+<+02h:r,U6'K(YujtOn<63M"n+j:r6"sRrX'S:sGZUeXM@f?d=I07kFMJgF!
%AFo(1*4T(rMlCf]51ltop?Is:L)qo\q"?2<6D:etNA^hAM_NS6/SW%=`M&tTh+-@7^"eLOO$5Te(-;S1&RlVZiXt/2"C0(VB\U=*
%2oj6G6R%UmMh(s<,.ied'*X1C7CXi!8G\)&-O?tNNOYO^qqR9c8L;gfG,H67B#(5TW#E-M,it`'i=e/2cq'KD,pqM9O>%d'OL]eK
%-0EAN'(2(*7n_oeOY4N3<$=4*Tt#\9+n44Hj!=sc_e<^C0Z;"t'PsiQ8K>Xs`Q<>"`Y!J-^n(s/pU(X(h3"g0GQeYP.tQWBENQb@
%.B>(LD:^re/t9^q>]km6Uhh0C31[pa.mp6AmgDH(UIHMjA0=B=fg(js690tXLa6lA^s3Gu[W?FPcaMY,<=91CJS_]-%\bKp%Z1B,
%gT'R,2.S-;/TFga7?)CSf+;AQ.*gun#tg-2;D`"S3f^[%_Im@>3XMeB7YW,W]D<,jQ_lN:E]Mg6+cq5sDJ9/Ek($QVQGtC0nM/c1
%Z)ka,#*#$)HZo`%XEMk^CEtf*X1c!)7$3!78R5s%$O3B4580?U`[_nmP_S(K#&[Xs8Xfo86Pg*4.tcKYF:bP>`a8"G@;+T]De%_p
%a[hL!ZtimaMPJ(tc8o,/20!N$P8)\0WT8!u.7u+BplRBD#H(7]/%/g7ctt;`Vi>4Y8Op?,f+C.$E^U6WdQe?hmKt?K@A7H]8TG]%
%b\&np!`C5FO'H`m7Th^C"3.@P_(e=mLF`3XOt74MP)?IDK9[ZVl@I)`ECM[56@]rba;/>RSiC1R_c$2.GFJapE`P1E<uXm]Wb/9?
%M.@D)f`eD;"=I;o?.^UY4S"QLlEJ(R'L2lknRK@?kS-8"MjCBK?=;`&&M+Be1_B843,uo.ok>[[>#M!rlXGrLs0O,;A65;PjCD_W
%_^**M=;pYaWe.Vk;"G@]@II51'%$9Y$QTIq5__F=,WcUBYkUbU`f5oL?p\YI!Ioj@DZdVn;?[2,&YF23@9;!-YH&/r]4nU;Jhbl=
%!0/Y>SgKUh_826X_93j@gC5%$UAO;I?%$*RW[;h5'dq^_^;S^_>[R<88>*aB<)oMDWmN0+;gfQU(($Ks0f<<V12LsOh8G.miIt<o
%%M&1l+)Mf:)nAJXJjAm)EQDI;C#Z@tb!c":(Nn[@ldJ>/3+t:W_43q_H81=RBph"]Dasjq%FR4i+&;[%_!d%,:$lB92/m&p(-`93
%o%I0-Y(N[V:D:i&Bt-</8Fa5&=4!+a%#1Ws$`I[d5[0cIOk04Mp=_@u3j>Ino;/[fM7'OK8RN]u)kU3k)Jt\j6#S!i+os"6@d`Fk
%4/\c_,XD;P6NBD0BQ08I,B4tO3(,9WYZj(&-rMit#oC^#@Hn/c1[2>)&dCTaD'Y#AX9Uq5NkAQ,l3dmLJs4!*3\CV8_4bT5,-j#Y
%I#8]Y<J(f7,L?f46_-ZS9"6cb5/%-^8l$[!Og#DS8JR8go&9)J(1cE$`CV*/r)X'K+>noh2bc\J3B4i''K7.M+_;(M+.V5=hSXU]
%`NRTQZq6l:&k/Mg,Yh-1'Y'Q!j:ZKl5fou$^*iX;"i(Iq-5O<9!F\nV9L]:qZJ[U'5oRsO9j!JX<$aWJKtUTF6VV)8ndSEZm5PrK
%-Hp#gM^(LpEj%hY>KO,,/6+;3P9'qFU'h'_`H_`?C!S4:,oG2pbTq!]EbHFKD"a+(lmkJ++P]-a@E5Al>X0*&!^K<lfhuft'=J7R
%g#*S8,*Fj!1rBL5/bs3?C"P&*8d-n.GXuYea([jN='Ze(dj5"b09Nf]V*mL>!tsI@YXA*9`ik23-C^&HF"\Mue#_7a#=^ui;(WAY
%`SO30A;aEI#\/M0,Ht2hNf#W3<Y+5b4.69X#;6/S,E/9J$RoAUBu&+m;]J:<5^ECFW2drmUA(\R48bi4f^BKO^B7)j5s@jT"Qfb8
%aH$n7`1]Ac7Z@Ph/33k>(-i5$LSE\S6AY+=b6C>L).&HY6\6G=Vk6d@"Bl#JT0P=:3hR0k)F"<I#R42X7f<TXYuM?%/+P.qTb2^.
%NQ<6W1U2WFp:CrmqY3XAKZp*YOVFtDIHbe+$O$ZgN=jc1mXj:,n3pMP=:;k;9gQ3)L&0_`DJ=''\UFt^,"Xc4kmPgEn&l3L?krI+
%725N1Flu5oHP%^4%4'qhD)<Q0pbH<K84oYWL)Yf[$7ZR[>B)&h6AR24EXhu@;%<OPnKi4;)5JK'QhZ_sW.t9.X#"+7.h#*`),GVd
%]c2fR-AaB'M(^650<[&!V8Qc'>g*NFF+l.pJArHCcJBtXgVolk5bf7s$]GH/X_UTif7\3>37jNWQ]%44=7,!P!Ar*4*-N7b>s,,O
%<3"ol^q"^-6Q;8WI)<E@S86!PP"mnV2uqVONJAQiHs790:lsq>=<c2/LIsg"7Nh;b/&;Y\W<g8AM.BSc%'eb=&348g+M@`%=jU1X
%MX:P:&2Xta,3"7&^4DY8"Wbu987$rq)n'3I:iqaLFPCs!G>5tA=HkGI&V5PZE/alTkkA*dkbDeULm-2]+m:_0,Fj62*iPJUl.Rpf
%mGn,KY_cpg'A-fMYJ>*/H-"bp(BT2:FemRSpTA"I"tn*hr>nq?"ollPH?1=\X+HHYX$Y%l&Y2_to:tPb57.ih=DWof!db1ef/rpK
%JXXk9,#HbaErrc:<:<(DBD"6uhrSMc'gY-O=Srf]_'Mo9iklAiA;bmdLd<d.k%P\g#lR.&V%jE-il?J8fV7K^`M2?!ddZP1gkZ+(
%Hc%]F;!b(_[rFu9,c4$F'>jB9$O8st*12N13^Q#\jCQaGJ>`tj'M,DU'b6!BC*E]_IED4(`NAXb?L5giJ)LYQEP#iK&%?=R.l^ka
%[9^*rg3/J4ZX'@#FnCUa=Z#0W#YYP^gl3N%#R:H*#E'Dqam="I3=+4I"%5%bN=R[`RQ[neOMTGnHlse:0TdcJdfgpu]Oldt@iA?Z
%&;W\QFg36Fb;M5CPM>)/84>p6n?#rR.RL%=m,?pu%]:r/76"pd`2OY!JMM,R;Z%b!#Y`Tj`re8h+Uohi7qnLchD,Zolbl%`7e[R*
%'&I"CQt-?9R,[*3$-G-jLl'Jt[L(Dq+buqPGRZIHqo"#P5%tqF;iG?8g_/7s\b5heK.VVUhCS`J*,,dG0U^c\Y\KdnYV!*b`iaP*
%=itkrN4>:+PB+8TK7iq*#F(!j\.ntA!+=`.%!)uY8IQA+K5Kt*oD6MdC>JNg`q"6;MWh'so\VVJKKRZmmh*+iAdO,>l'u1K1S42u
%MeUn,mNUPQMjm72'.NSd]]%cW"N\U$nRW\%_'MgAIs!#mNmG7D7pAnY\!<i%h*C$'[G2%D-mIL<'=DSb?EeW41B48aO^a%RS)33X
%2^DGo'4)nnKV.[$`P+2f.?W4Xj`kC"1ptc0Co-;A%f%pC=;BCA2E"i\CDT`bq,a'h:m6)X%7^OM.(UMiUH*^G*lkH6a?kKXeG,]-
%<4&P4+&@gTc^?4k^WB8%NlAohglZ&>8#uirf$SKbaJ,Bu239:p''aMa#cH3S9L%85P3l_GO?]%15WdMo&J<-!nhO_>Jj[OKfNn0&
%\85c0#i7fR>9#"9)r<dncSt'TaA_QJ9WMTjG+@j8[9_e5[OtnQBuFp1_87CG%+>';S.r(='@us8=p1-6[B[h^,2rqBjI:>"+9L'?
%R"mbZ+Yt-&2!H]&U+CmTqQqCMhW0;;VLMuM7@)l3#i!p8N_9bQ-HFF%X<Wn_dQ)=]k5uH=PR+<0f0SmT6HAUli/0ml]oDdq8:d`4
%.>\1e+3D@0Lh3M6_ML8e)Yp")59'jCBH5-In6VY]"X,.R@i[Q:ee4Z-nMYcXj-8I;k:"rDeOFeDBV8=WP8j^%"(t.FcHf7dbV2K.
%D<t#TBibo$C-nE/`LUn6m,%uFV[\..=[;$4D!W8@H6%oL71EZPql>O/^b/SjX>46O<XRHY=:fi#rSUL>)NIjtHE*lL+'46hirUa_
%ceMe@-P[B$q2\os#Xni9O&,Z5*[j\:('C4<n7B9=q?,j-)?::Kr<e[M[ndrlj#BhCo,XQY+l<UF<sI"QZ7TF_G7a3K$-!;r;)<5s
%LiLGF&sgHSY/i:V)iB9H8PKn!&c1.XNI5tXJLWEQ+eQ*5XVh2)n+cr[6SOh9_*IO3SERng`H;?oq,-Z8o25:+>MMcb98i7s5f2fX
%-N#m4Z%()&[Q2,o`#_79iD=/l3_K)`CGRXN^mme@YmD)\@KFNkQ$$EI3fXMc#&e%5kcNWYeA00.f"Z/j7ebs%+[j:ln$HJ>,"^Fu
%8D<8X;&]"GS%-b`E+BM%m,37MG3m2>7XS76@aQ>r\N"+H_TSU;MA,D7>=d[ji^+%'&h0Gq>q@CW<]\mB?So8DPRLQf*Tn-j#4@ZA
%WSbab%k@)^eMq?!LpohBZGP'15bU7fL:GH`(^Y$C+233H+jDM)T7Q]$ZRcrdaql%bie1lE)o:ONjiob+@3RLqU'6n%Bt+s:"<,L/
%_-&</%hmoi?oK]Fj,4?FBGo"7jpSPqTVH#!p!b(b.pW+);\#HlgHYOB?t=5%aWd#W1Ekri3)IJl-cn*C&i3r!E@2YW7*^^EC5VB=
%aG-kX2V-_C'$j`Epg12g:q;/KBtE_f^'4hh6YJnZ,+\0D$DGjmG3I<lDI8Mk5TCqY"o7(<DF`ZD-n93bE_Xsj6jN."h$OCP7gJWQ
%&6ga&)?(1N&R'`FlQ6iP1BR'9i$N.U"Ed<-CCHna8!iPn(dc?MZB9,Sb#uOUqghG*g`Q_7K]4*e+bW\A(hQHtMMHHl%#(n3d:+4-
%Ai!eK/L=di?onGF.WHjh9&rAN@I=@>\i:O1PU%FQ+mt1#k4;R^!>KNLI&9l*MaN&-%gM4/ZP6&a=?'okq"4eU_\,NC.P[S+^CZD6
%^r#/j*l@NX,.3+-_-p4T2uYf-HPJdT?P/*ShnhQc&W/JS"3;%>E2oijKEf,m`1R-S;B*F`8=bl4:c]aNNM(A[3%Q*knI;?e#5Rjn
%OO!u`F'jbkI3OMC#`#2i*>+Sd0ffdq;dtt/,q9rW[LL>a!X7na+J6dcf2*b'obUhS<]=9Hd:$=+77X7ujV8dVf8YXm$"uZ.+[LMD
%;NUJ!KT)iR!s=8mS^e2&>*qZ)KG<LB\h[3Co(#2F__\M$)kZ?!"G.$$NsuSm-B;<bVI*g92/n>1/KLO=GL>P,h=(\e#V*p^4G6br
%*$HKts0q`>/Xe95FmfD1LO'QRi'-"Cca9<DAJkm[2SM;tP8K>#ZCoObN(.[^mi?14?6].#?Zl%?8fAR)_jk?3rpg[>)&X;0Q^-WA
%G%../R\+FTO?)m845-UB3a&Auol,2o0sYHM3(3,O=VMhk37M`W4:SfZ5]YrH6<"d1kqmmm#o&%uo[eYQ*0i&aJ+IZ$-sM8h!2D%=
%pKPr'IGiA9;*(Mg^@TC9HfIT6rdqLIW,`Mfnt9(*ObPs(c&kh1?$)NHW!cpaFMZ-W"V].^#2$:K3U[VkRu5g,:9U,Z9/DC0kThcF
%Y8SM28f1&ue2IBGLK"Jn'BS@A$l'5e'XYpsdJ@aYS40q.bXM`G;FC5nDQ"PB0(^9,K/T%ja`8Vl'o#TH5_K@$(+UK.Gd8P"2!BdP
%$T6_o.C\Co;Ak2*I3IT*,2Z[\'nJ7ZUse`qQNd#tA>M'dP#6dpcIs3ETi%ojJS6'b&t>-H$#'PLL"nO*hJZaXG0&-"I`hE:%3>$<
%KMoN#"q"?PXYA'tXOF&OTcZ6*qnl$HZl!5YC"psFhtX,oIgC9$V-1m`TXZd9[6Ik0.R,8?_<,VRQ3Pkmgr!b""nkNu1oNg^A]q(6
%`u[Ql2-.O>Y9udg9G@Q#g"<FI[3rV_JQ-dh+mgs#,hb504.upGE18>J*J0d'&?/2;7>PqoOnRSMIFM,,,kA!)Vt<0H&G']PG%>4r
%%chB(I&rgaM^DA9L]grGl_"0uc+*rKk(#K5@lZ[-S9J0]M/>H>6e"9T*jq=jR;"]OWf<##GN\nFggRR@#n="F9DgNtmr_,*TAF63
%=1.2P:Id%M[Vpm>?0S(\Q)>SOCWi8X\+-RaGLcPmlJ[ZGLM''#S^)MUR9inGQS$==OgqlHnW!6i;6sW<_eYpKg\kOEmPc'`jXTc*
%>m874ot$pYH?"!2\X]I6#.8lAZ^ZI$Hg"gHf\lC[ZF,pI%&j'"7t[fo-M#HuN"%6'e3kIs3P_f?:f';s#"2LYG%c%V+'q#(f_c.3
%_X["%=_`P#a^F$bMf;E*%t#qnn:bH9S(dU8@<-gU:'AMO]NVE%hR9&J]D1$W:R27Yr?*ReX^dIkD4EroZ,?q'4IE#g`2tH$Ll[4[
%ib9-(['$W!I9A-t2gp);.V,@8?j7-@dnGPnGu?BEr/A!25`AcQgSBoN*(c>MYZe?44pQ*VBuZp#`m2AAFHEtu/j;7F(rgkc;k\A$
%eG*Ib&2[!']XqbYKgBi[iIkh\YLP&kCHbqmnL?tl\uZ=5Nr%K3/`GF(LJFO.U=5A/,p@Z_<@CCNUTsf[3XE&A!D07F&6).*4jQW,
%TciXQ0]<<o6!OY,`'AsW0N[M8O,mQNft*GE@IS?2osr+_#<`;t;=OeOd`R^",EL!p"1bZt4Ob8..3bCcFQhE/oGRM&PE/EFJ3*:U
%d]mBE;:1^dAB`KXg*f*7D>GfU6`nAEOlDkA`2$4^W^"^lP]20#q["k*7Ltt]-QelC",6(L91Ioa'm)rrRol\7U<pdQR#5_U8(#bA
%R4P5M:+.FlD&?tEK%HV!6uq2Wn\L\ucK7@o-/ZK0#r<fJO]hW1MHpYr4%L1CHhDrHklZf8+Z[4)$AMh<Pilsrb<'C<f1nMqRkf"j
%:cuU+/ShUc*)tHk&<Bo,W+?C@'O#5i^NOq,9R+]0C=Q(1f0CUs_B%^7O,mQP@>u%CO7aNm%5N?#\;0#a6]OEt)notkHQPBoQXD@Y
%:C[09P8c+`Z&s%eQQE=W2dLgt116Hr_Z[IDK""]CLC8BI`"J'.?jfMN$--1k9i[/W5GY/;XZr18)7Msr$fRE5@<oW[n\NZ(+^^a<
%mL?,,qMV@jI-UrlpM^*A0>-'L0r[)4"KD"^0jq\43(mel?h#_4mGVlll/H3Ni-Bm.k_;H<lE5MZjt7[5\>+Bf;<Zej_WiUQE@n$!
%Q^eNjoHcMoTe(oF?@[=dg;=0]H[*`22$d>Q6I2=cTj.(*"qDqu!Pp`tUfJVN,A"TDio^Y,Gd45cQfs/;:o5-[2/g)$i/BC0"^m["
%-sHK^n9?!W/:!nVJ_d>'A2jfJ?]9cX)/i8D2\pWQYA1@I^V"[Y_5A5-qE\4M/#$q_:H/'-0mi7PEGAL]ro&!'/$'uC7<-O:MTS_N
%S:p_$W(6lecojMIo^SVrpn4(mn=[nmh#)cUdK6a#h+s\p,Ob"fiI!+YGbjS4U2XXYS7RR3KHR&`JjN?em6s1p'P5[)\KPaH$\b',
%>fL_ab?Dt-'lXYiLodF,b92@P_W*U26WD-qcu[9/J&'AV%!RF.V3BiF%YtF=O$iU0(S./LI!tM-Wp4+i1hg\kfPf`s#+%dONl"FR
%bUTiq\V&!1#:(nt9EueTcrZka>Nsls;2!jsbtL8]!L17:^@fmX73RJUU;t>^4,SXQCPM'6?rEak#ES^k9lo>JJpE_;.kabPZ5sb2
%eM'2NDkXmA(sPHk;:WS7TNln*#sGqEZF;s50fP#`6.ls4M5)VWH04RJ@^CNC<.4,,+^%HC5[rk`*T"Tm[XK2JBNkS>C+qH'_qtQ:
%e;Rj%0AE'8."`GrnH8>V'QFV/rm+=jeAp"T,W[tUrOS\4Ei,&2`ND;pNAqfdI.B!cGc[^/,t)u;$%q&E$)'"YA1Rcp&*Ab.n-mn+
%^lVQ\^7Z]J#VLQd1EPN;HebZT)>si.)9q@52?3TWk.e]Mr.t@E0_TK>=r1@t>A4plV.'.4Bh2t08/hI`'o!e^$Ti2:CB3=YZ-&o$
%a+-P/B0>GSfZAYkBJ3Pem\%`SF-e8V.>!'[fpkK.\WERg+3`Y!*BIGiURpgTQ`3tZ:Q$_r$gcTb4%qHP#\Sh/+eh4<SEBo1cSTr'
%BGOmkV+^3lkeDl?,`R1u<6Sb_5[qX_mQ0/2PKH7:4US7"7FiT3fi]"R[m:a[(0Y3dU+e"Vg6p6Z9gdG2H.GOe)b2;9kdOR+o\d[i
%`l=YJBUH&qY#_[td4e3HbSpSH60O#tfahX3W`P5`5.o9](`nb>I#P.!cLH_s26)eVaWPR%eUfIZKm>%iN\r6U:_tsE$OfA%OPnPs
%f>&N&?H@e'*":S8f@gB,#9Est>&HD+gj>*5E'4EFe`pB`9??C#A-nBR8+,714K+f:^FG.!^(X9Vj@Pep4i)QrD+F]rWOu@^gbBBD
%no[G7KTknHa:SV*^r$`c!2^$.%2X[5&OrYn<X8J$""H/&@f78]M7p>W3\aGQ%9d$#)#;c(m5%-5bn2OI&4"c&WV_4A6/75QNMWHq
%9'A1X-pLO5g%)rsZ4C)8$S=+Pe<&(PI>5BNnjY_*&4@L.7t5hP7_V`bB[Ko2_<"BFm_jhX2\m`;SW+tBT3C5XLgssS$flEZS^=*'
%>F$Y6fl%HMiAA\)dNTfjM<d+K3b4pcj^e9-d53EO3kI)%U$P)tAIU\tLR2m>2_H<4;:E"];q<1f2f24W'e%A3_t#alLq9Z>p.d0G
%(t>455qT)me/\):mV/ICD'bI<MB4tOiAa[H*_%`fNl(^>f8V/)/msf\@_udbDYmcmL@f?R4'6Cj6DNf9nMZC`=Sct@g?1NDf53Z%
%]%G)uMmG"Hp52/\-F`1O:DUoR6=k]85eh%>MVN686'n)_ZaWK'dEbjbgV%%C/pA4Nj3c#?X7UkYnP(e@G+JW6gTpq2T96>g&(4"n
%2qRlPk#lF+KfF,.^\guuDWLfUo?ZlCoD)7QQ3O5>WQ9Qg`:'kYZ`<1#qdCE%KS1Q^J^q"C&G!Z\8.dHK"_$.:C\m_4!KG^C9+D?3
%]^bM-5sqbfY'PngJG>!T#g]Tn`/QOO%_2bW+@7d@r>@(s9AkU4]q@f&MX@H;&,Mk*[gJEIV)(h`HLr;n5@Y*UU6s&"ktM9KKg=*2
%]KERh&jejV^ETT<!Db'6bB!ogK"qa<dG=lL9mX6UcL?L-eF5T#b0#HiS&W:f$bSY6E&tG8LC`0(B0:P`"-m)td-KDB:7K3V;LcAf
%,U2Nc_QuE&l1ZLXX@RGX@c.\YiXMI-`fC46_FLQ[=@Cddo!]tjXmjWHG0qZYnM5lL5l?.&BI+u87h7Wr,^S(9:$BW[aslA<%sC]D
%pOh<uYa*(^$OV54[Js:7B)cu%M>#6#&s\cJN/Zp<hL[KqPtk"<$Sj7e/<K-*qC/ouI++^'M0Hrc`5"F:T$@ETV$E(:o[-$2![:Ob
%#f4SF[O.`Ims&,iWfQ>A8l64(B`cCPkddV5@*se!QuMlLqB!.S2*<\OoV"q'g<F`V_n@PZQ%a@Zi>fsKO.IssJT[*'NkInn7:c*N
%/I2eO,1e%B-YAHGL(n+DCDm'JDS#%27jL)f%HDB+B]Lg7A'kX<\:`cA*R_]A[m2fYrSVVjF.]iKV#7@C5_e>=Xf-CSi$3?m8adZs
%JBWbo)c9BkO,>?ec,#<,KNT<6K&#>+#0;ka3-3F,i41LR7<fZp[j0>3%X4\GRi]S,is*@9V3;$,2hRP=/tMt4N4e@JQ,(TbkkaLT
%F0'[JGT"Cnm>->+iTTKVh^8+nhfR;U)@Gi1))8IbZ>MP0HYL\F@e\um/dhp(_\3,F1\=d<XE<Pk8Rc*qBR[I]dlRlNNJK*tl!sp=
%AYb6'qD=VH<\(tMg3B'.36M'#Pt[/&0+Odr)SP7_3tsSDcSG-3S>/^iId;E,]'5tc*DXkXSu&:a<-.t+<TY":g3>i9;'^D+M?6Aj
%1I/,Lm#%O`F;Rn`(%R5DI-a',,+,Q>%'ir*C`XZeGAS^SjV,^'KpCRO9*k6Pk]Nf>Z'd!q1s<T3.F:AC7UoP"@)BG<A8jUM#tIs\
%C`'l]B]Yn';:q-09-+_ejMgM[1.Y\!MW\-BTmd-+A/IaRqWM__8<]kK)%E&SCQ?S(58?6u*Lt9`_lA@:l'pi(Lrf,X"[SH6q6qBM
%%Br!VlTK8f?b5H3YH4[Xot]m*;F;]N<D2E]'c%N6M0^^<i1cgS*"]V1JqgZ3$j\41MEWpRa85;R8JeRLZI2iMLPe)1RZ"<M92SA>
%1q;/APToH]=gqRETJQI8^/99t:G@.Ki]!u`JjWgeH5m\a8qYtS+R"GE#AM&soT0[$.Jf4VGi1&uN08_Zek'^UN=U=ti"D#\k:T6U
%_?<S7<Hb;K]l+$8-]>jd`R1DML/u?i#[?tq+=\@!%>8mej1$*@4+>Z!f\[1tV">+JX&F%KIs]=HWm)%.S"XcYeCITi!4a,%73[$@
%d&LVU@l"2jd3.fef00D:7BOEr%nEo<3=RH3<A;7iKoa><fMbV)of)in+n5fnIhL`gi<J=EFTOe0GaQ),UA'Y3!/P^TeuR0BISkMp
%Xq,qJ7T_`T1=Xc-P9TbZOop\0eH:'p6MQK:84W(E]:peQ9ddVupjg7@?CgtgmVc2Y*1h#'<b1j#&]8=Y/Y\B@p+EG2=]PlIi=0]d
%e65fNBnX?Ge&P:QTk;YE'oGKP]"o&kU_jcpUU3-e8F#XQ[4#^*0q)tieOTf;\5>J6??=<2ijAuUq9mC3>9->'oZOr>IHno76$bj0
%/.Nj*jh-t5"d^??WAY78VQW&MLn\0%U=`W4=5f)tQ^^_S^UNaA;!?J6LA#d1ZuQR3^j#>t]n2]O(-6Zh@nMWq,S))mjNaG&fXbSJ
%9db@i,?FnU=WmNu/%X8nf;Rt5/HYcW4n`j'UG[b^S18,5Q0+r5!'(;M'/Ugpj*6g8>^l'M&0AQX9Q*t9.JeGn$1gf^H%;e1:&2h#
%l-Z\ZUp3i*+fgSVBh5b/NS<EeIGq*e0)E6BE%6e[nH_rNHD1_!+=T%]57[-$\1qUXm_J]P4B6Yk%/g?[jnJ&672O+nDjb"oVN7E4
%,4o/@'Ag?$ImV6gY:9t!C8U:[r:$EKo>WY\W=oIK1&/s_PaopQ$\katG0h]+GakH5.*Mn0b8@lE`amGH@&LsAK2`%\[)5".WLCVR
%1r+5;#?b(tUA<PZ-\L(jdcAb$(#E`[40CW]6Tn@C_[?W+W4o&^'e[Wa1)#[[>o4,[Y&H1lFIXFZ3uR3@H)I^!\Y#hI,.N^74Ut@2
%j%U[HcYf95E_=`Y"XZAH'ff+)b&o2GL-t4Z8"Vh[N`qD\l%buoQ5!ls?qK46/5i]t+]'i"?D.-c>4<$:NbYVYJ$5dUb;W1uN/%cS
%[emIn-/UIbH,-l6O37T(EqD1c82<1Xka@3X8E7#6i>DO35S^gO5%1mTlA3NdL.l8>?*#?=dlQct^$i$T$?j\>U@\Q6)X.<OTW*<Q
%aA,.c68/H^Eq)tn=qB$(ga:W:c?bGl:@EBiAthqZiH$<*L/!f(6reqR-o/:i*4XbYFOGMk'gpHgTNkFHTG"p0H)DO33f:C-(>;ZK
%WLf[i3J%%OkMQUJ&!L9Y4oc]m&H'^hqA:1MkV#X9&TWY=MScMsKg3Xe;):-l12(4%+4d<W?%<]Me%n,Tci[Le0N24a.^^Kah=NES
%.WGAe.e2*I0.Nn%lkQ>;!7GYN1\$s3%`5D<f&DRA,^Bh7HJ+I@5.UHj8+qn25$g_4YTJ#l]CuLsWBXgKUnY;*CXJFP]/djJ5VYAs
%P:.F2*:BgBJit@Be,;ZXY#m+BF[olTQYj2m_7j<7dl!R#iFN6A<qI/]MH>)0Ra#!6p\UZlVkS6kY<1GcZT9g>^<l!Og\f,o)lYso
%T_.LeDK(fCQBkSI(DK+FY]+qiF&WL?I#dCn4XM2)Eilb)IU"[^2CaRXN3tX)b5JfUiTGDAN#0G!H3KsUYQlCRAFeIL"ic5X2<^j2
%!C>\'XBHl-d,LCG>(3a?=Q%lS@Y6\0NF1Uh!?.=9"&^DmAU$+G+N#iGh>"s^@ktA(1Z]!]5)EY94fq#@69DrtAHnaNGMgu'@k%'0
%94rEnd-gN"gO6jhWG%RXNEK.!Z>WVN(Iu^m0^3?q_^lJWR)P_.F_<([#KC.0?HGlAB0Sa@b@>%pKc!8si5R,P*7GblS%5,)ni9C\
%bSUBL*h>&6-LloaQa?YYj,/Xm=*q[H':1grq"Yp>hm:GhYR1fM.H/3'Ps;[g$PkA@]F'SR"u:!Nd>_uO3gP)8ZM7jgB&agUT.JN5
%'>l*ZosC/DOC=]:DS0K+3LS9ORIZ%iT?09A*pOG#Yn,X-nChsXE@ijk_%?*tIBF#D^SBb7p4;21[ZcqAA@l/G#)J1@g<P(u/7+a;
%AJG=@V4I#"oq0.+I"I0lWqNao*F_6:gDVlpiff("5-a=Aa6:H8p.UZGA.qpTm*n%8$.N4U8%SN)<hWp?Hds>f\Mj?_rFR.U#bFQY
%[DVP@DLK_7]''nJ]ENqaY(7"N9Q];.K9!@1SLb8<UY/`QDe"&+.<mYsnAEeHJIJSQFCQ&<NlfL?es*AFq*[*,VO^JUSQYGa_UZ<r
%(qH\EqY6@\*]<lnNeY;u,5q8*ld`#j^amr*Q#HH\c)0UFVWF+<b:T3L5D2a$FTst7-FJQ&^S@]m?!u/s^j)6kLI*]gk'`[=qH8Y]
%1C\`t6Q!XTgR;?.G"]mF!Q#hK@0:i3:j?2'pk-gTTG3.?pK;\'B73P+;4A*:ge;c&)Z@D*;<E!:>aT?_O,K2>i1K?E4W+7lI.R'o
%pK<9MDbl]e1d,5,\brs`[%6:e3-YS&8b0-+P*r1U3<uZXDkutl4uqc-\HORNS)D;,$_9C8qcKA!Anb@bNd?+5kI-g`OCbs1AStW<
%/M3S\&>-)dkP3@sb9)[uBDEHDhAFRjSPu1.25a:6-TfSlG^-B6F?q])HDH4P>B:1@N42'qGQo1YZMKsdA7rFiDiK'k39R`=>EE:+
%.qS,cn$,a,=]tK%7L<]2hB0($@e*_md_[6sr+<a\+NW>DNfB%LoF/>X3hlH;41IQ]\$`Z;`GQ@EfPR=G5@u!qMq/jW\'6Y2n)hhp
%CC@H'G+m)"\,D6$oEPi&PO/DZZ]q$J$of(-*hRltF(Ukqmpmc-j\sBY!HkX5EG_DgG8&d,DP<7mAflr'bUa4`bu(YTkM0*Z$aP_8
%U!*u+rQEC0O1ssS`e-A$EL(eQ*1VV.06NJ&G++?ZI*:=^gjBsH?L2FP6BgpTBGo-hK2YemPFq1m%HG]10?0K&>E$$6bBOiG/B3$9
%b38<gs6\-n.-RMAdE"X-l8RU]*L#DAM`UX`_i=U&;t(ooPn<LDIUQ6E*m,#CdHcotn;:jR?D*l2S'5r285k9h-1l+C#(-.G/]-$c
%FJp4?_)SAZP2T.6"hEl#1&uG#,Fre@a9Bj,(.+6DSW=Og,%;E>H.8LDBo'rr@oc1*D:.DmNmmS3O5go=dlUZ$A"mWK/"(dk5DOSH
%S=7.tDo(V6D%N;J2:89e)2$XbN!=,;Gd]Z485>[tLcUoSJ4C.Y_/rl`I'qm;dF[.'J,O8Z"/!bVKOK/KEi#p_Q7%HT=kJ+tAJop9
%5GRA.c3^P&i.CdAMI\8Ylb<>/*M/;X@ANjN8(2@hZ+eb1`eJNeI9(ZH2tpDNKD-10M8(/RALJJHGGmV"(R0`;p8XkVqM!f2d$?/o
%VGL8A2r.lC"cF`rg$/m*gk1W0hA.]Zk'QaEX(k@&P_\gJ5/IcU1I!$2M2[G`3Ir]^bPDs%nqNGCR2%G4&+6-bKWG.\Q%[9E?sqAa
%!fdgul\ri7'+mQ#^*"A$NNJhh8BLp0=F>aHZ*t!7GjJQma(MoF_@P,#66%Om(f+O[8[pVYMEME?&+JKfr",(\.8>n$$#Vs2DN7:I
%kLrY,:m:W<]#PkGZ3?P6D<bg%i1]qhN^c";Wq'Xr'MbHYQr&nP9I/eW9-RW7W\c9aJmS'X@d1a`^@oXLdd59t_;uN/2EJ)S7T91E
%\^3P2f*t0N1R,EA8F;br[5s=?-ZH@%bog[2\RN+6'4hB*L9tjGrYeO*/A8Uj=O7o/Me:uekTZcj`s`j)'eITH*JEc')]??XJ)AA(
%c,&1ElfSO>A0gR-`'B'9"uTprkaWh`$<XBO&].P-,i7dA\o?';SW414kmZ17.#ONP-Jb8a(s((OU5P$Im8HF;Z[B"C5mZ(=IYn"A
%3]bd"FKF\;kie*Q\0\`q4;I*.\2l@kU8("Y?f+qC;PKnIp$;c.!VpRAAjY7J-b:nRL/+&gd('rD\qJ'dg6Y=G"(a'B=Yh9)`gY_>
%OI&0cT\2'sJfDPH"m#m"-+G?K>S`&N3ul\a\$(-ToDB<cm(;##Ib_*"ODXjM%nMc[o,<M'd<!8Jfo8Fs]fiY?o<L'MG9#:hZEE=N
%Z@Q%%J_j@8U5g3N<8rYn06fH\.WGito36C'\05a?;%$;KD@#CcGrSf5$Vcn2JQ='TkYR+%#DY.F9;faj$SBn0-#SNPe'l[B`1e'b
%1I'Tc1U%-KqGS]Kcr,]0C/eZ#G*R;p13D>0(o%][[D9=I-!m6-Qu?%*1KEFd85[&qS5eL*qPNiHrp(mLTI<dI4][Cm9i%&LmAB>P
%i]k"P3&b+:Mf,O.L\=/ZN0mn`8;;>Phn;<t?`_L=$o\BoN.^D^X9`,TCU9V[V,1)AMW1X?OQTX4PQC>Y37gD$WM)!:_GEj[jc3\l
%e0>p3P91%J7rpbegl`WlWg&gHb'OK/F9AWEN;#`b,GunQ>_3=#!`;>'6')dK,9g#TTS/(s5q8TkMBW<1!>0:_?u2;qU7+Gm1_s7M
%)s)NI/JM1L\^r;^5?_-WRo4<"<>7Z*A;*Isen:6j/X^W(4AP+%1,lN&b!%IG/O*!h<jc&s;FA65W4Eddgf9[&&0GQXQpnZeYumsj
%:E,S$k%E%\^paCX!8/iD%7*8(SM]P6)%pTT"VA1qah0P\jFKtKWg<oF>(f>VY4]B$I>SceCopf+<2MPB(.*ob*BHsiOG["d%$"K*
%%e*(@QAcS_A@1PEUI"&OGsSghOGZR/(<PF3Lmm3,n)(,.6I/Z9IZCbj<SPJ\/.ED/8@ZGi41X/0K[Y.m!*bV_TIg<T'=*>@*JF18
%fIXE<_Ja4ub@I;86AmH/)Ka3,A-A)"Hf6[U^FQJAnS8<LSFZs1L"anq@ClZRPtQ*BA):&3r!h2NO:uXFDX0'^OEkR(b",%IMHP&f
%le0>4rE%\B?"G#M&KL-Bl7AuWf7>IkB78ct9,U_]#Rn*XMW(7di=U4(cmQQWk.Qe!qmrZ!\WbY.3;)1`o^h+?9<#ua&l1)`rVTB\
%r6aDK#`WeIWX,>0!pKbdiJHhd6?RA3)8K(B2S^`(>Udk!6^%j$<*NQL%4*i$(Z^j'#bj6h$D_G,%?"8?hl20LTnt6ne.C<-AnGQr
%Td^A+(K3(#NGXL4p%C`kgK_KNlmPc,GhXS1T@9QDot6qP7!)qc5+U:G*V2`ao9LqI>jg.*#1AK%3RQJk$t]rK>#JTJ?9pD0g$HL@
%Mm*t&KJht\*hHQhd4AjJ\W.Z%TdrLF8ik?7nS]jWqr>iqmDX7R+@AGQ/dbd(9G#;JK/Z2sW4j;C7R..U:-[6\@\Dui/GTFCClJ>@
%j2L$1#e^d:k62bZ:N2Hs=g"aJ/4(N[X%VtNAs@[-P^J50W&)If+RA4_KF;sa(s(.YTSC_r*V51;LgW4X#$Xe/CC)!u?g)\0H.JKE
%m-@Mu-Z&+Y&4=29)Z!0I:<b#nP3Xn1J/fct37H3kNM2q%\jm3)^+o()&gNX#p#/o?g9u)2Z;`][TrLE!XPoqoe7k+%U=UG4lr8,+
%Srr<`Q+0_(HF=:p<kucj=0hu:/\5,-&_<UbH?-P_i3;%S0IbP@:R#u:BDj//d3>nHDrT>F?VQi@"u8$Bkb=b>`tXZ&Q=6\T%`fc3
%e.W:RWOKj;1I]h[D,U8c<;G6`g0]Z0huoIu.WhHK"S'tOZgMQM;8JsbX_Ef*5l5@&]!$oU%3J_pnb.]tc!nMs]e);,dKWGiC!eA)
%2fK+:MloFdT]RZ0kW57d]$>Y\Y(r]tF=m&`/^\2SB^X!19nf$F`Us9e",,7oQl0RXKS:17=EJC0K+<>`XN9/_XsaIq26,JFCp>.c
%b"5hQ\/2R]M#:f/2Gfe,Ccc;=A9OD1f1r[9QoD;O,Dl+<%P$GA#*[_S\35Olm*C%O5gHWLITm>YDU%m:Z-X\r72KAA3i5sr%j*B3
%.m1)e<b)J?*QuBtSVGZNqis<6Wb44SgW)\j"V%sIBYZ>c,dlP\c(on,<X;4Kkss*L`gcgU6g=m!jTJ2bp/FL@8O](i1CsX+3ZHSq
%H(gE+dW0,Y-!s+3:aQM%kaW4J+5Me!$(6IZjku##&0G.X-O[5E2Q.e,6,s\%_'n%oT[J$6\"2(RB`QsA0OR.;_6POg&2K*eC>V:2
%KEa:Z>j.[u&iOR8P?JPj'2I^?D+L\I)$6P,2X>=!-n;nb'uapoTe'0uaLWKe<eD<r)K\ZbTn8oa3@]&0o]'ph[2jWPf[&:6nDn&g
%)C@R-%]neE[&@`e79+u#aYc!cSWa2\*]cL5=gEpBM@7sk0cM)dl6^Eg?^R=rneoMFd%ZGM(*->,9>ni)bp+2QKq3nfI>t-T91.j;
%ChVWK.M!l<65D=%>c:M%/D;tIe\sLKbt*f1@V05t?aD'`21/r^ak@M8>K*=PIp7"dV@=PtdXk,fDWm2/(0p$[6-X+Wd<.]mkWJDf
%\h*IIkZ[,,@e/*^fUL40'hjar53Tk7#l^I):WN2)Wf2PYKX[$>X7H%KO36p-p%`U.Q:Y/q+8l=cs)>sOSogM#$=S$>>-NI0Ak(gW
%ekWM8l#'O'A8h1eQ.#gE11>d2@)`XQF"&l0(*L,\et-'0.?f3]2)I"^'%9t[g>BCI?T_.:a&hlNL"r1EW7;i#o;p6l:`m.WVQ_`T
%djlV>@"VpHC4H`?5g&h)e4At0hm"CZ..2s:d>%a0!Rao>Cg^W\jE(ToBZi%?%VeLBB#?>;qTuS(_]3alAFk0aTC[Es-nF<d3l&V"
%=U\sV$OL#F1I>9Fd]K:,KS03B\R@%PL&,Pulo,<#[+qi(j)#Gt&2phA`"?'6`;_7A>=F`;qmRV0idocgg\sTs7-B\`RheG@Qb`*R
%%8Fq:=&(08A5b#HKZ[P?Lo9+TD?^4!h%9e'F'?)"2nXOXA*.:[*:V216:Nu4=g0G=0*gZ7_(rUoLY=0g)oZDV3GK$T6'g(Ul]iWU
%\RR>?h<4GrW_DL;me+_Klh*?A5JO7APVWt&ojgagi6Q`pVLNkY9WL(aM<UIgR/V@:AA/sf`3c8.R-*ucj[=';\<no=:/:h:/#U-W
%3?<TG:.oqY>)NX7!*SOoRh!pG,Bh&8M)pm4:p_A*+/$[TAO*B<5Z-mC2GE<F&Qb+mFbjSVCWuSbQH9ERpi2^lQj9=`.HFlG?#[/`
%ioWkM1:JFU*MY_84HU"d73M'!YWdr`HU)QBDM1i,eg]Y#D5!pj+>*\T`GpuFb1#Vc:d,[1#c$TY_(^MbLBSS,XiNIWIF4c:_XXRW
%c?EV2?=Rspn>^:G^?FQ+-Q6NHV2ggEOP)eVS[>WL,:Qi!n%`^s3)ll\1!T+uZpj$r;-RO\W[lj=ZlFZ?a=/]o(M8AESdg>W;*R89
%3]^(oLhu"irc:2oHe0nPoIMZbRqR,aa(d'<+0\pHjU4ehro]U;VLYRRk$lM0R4]/8%d4Y<Pus+SoliRd:87Z#RLdtq34,%ZU0qNB
%IjM"P7faf>!#UEPF!$-:(8=B>dQjUGcap.<kqeh>=:lf$r?j`0@GO>*l<e8Jb,f-hY!P>/Y8qaWNto3A<7]_`e25aL!$ESr@t9]n
%o>o#q/NblFgp\O$O5ZbN6S8&qjsB)Vrg%&Ea%]sX+5EA9bHt7"+r%E$4YdHR*3qGn.NOk[Rn@0#=`RP3.24'CGT+s1?PP^Rm8b+=
%nJOP]0%\J=X:@6SjdQ*GlW5SAs3L,.M)UXCJ+E:+!;Uq><":NcEq<l5D`h*90%YC'?RYYIq+4M5G7:tK8gatJ2^`@+JMK=pqY"0e
%r3U2**K(96+5#@>nBZ!7YRkpa\Q^oEF[-X4*_,'s:i=U6_EQiU*,@e?2#Ast*t.i?6?Upf2fMNQTe=`UX!%.gQ?sG[2JnS)TLET(
%"Z)%s`+hOO?PfD=9cjT!=B#W3'][d,(5CKKj\Vg;+HQ.?!G]/84pP3tAj"<@*cM40"mUOtB]-1<KeRPsb>tBW",0dh3aN)ILHZJ1
%BtCN/?)2bs/(,[MPJc!u+t6+uq2JD%T^:6QA;e=r-H0ZMbs71=/\'H]U<57</Y)6k0n8ucGeWKGU*^^F=R+1p%gSB`JsNIrZ]mi$
%Wt1+>[^;tCqfN"]o\_1[bI0@g;AE*7>8YspU9)Zs:pc%Y/k%9:S^AG'.$E$I?&@hd)Dg?u!A15\*1\$fdG(Cd(9HG_2hE4(bPQOY
%2\Q#9=LHNq5,QG+0oukJ@T&)B4q(oaD:$D1#+X.(*-.HO18=IDQ'RDBfm#JJ!G"pMF@KNMcHJIW9HOHo@_e^rL)/>8TpaVth=\hs
%NJ_it$+9%uYir,;#aq]h,qK[s(WXr9ZV>+/d0_"K$oq^g8^rI=q8-">-7]=g\XtTfQDQ&c&fA8sM2H[2Yr#+'jBHVmrFL([THsgo
%\7fVSV('i['OAs<IjCD\XG:VK)N`%/EPIfe83iIX;RV&".LsGe^-rfE>',qSJ9-$!lF1gR'eYqnnO,aj)USIO6][-jZ1MY!:1eWU
%SLhi9VEs_bI]18&:sjiAA(W,5a[&>J0a4BrKGC:5^Q<l`*IQ\/A:]Z&%(<\"J8:?"ctmS%/s0\\.3oA4jJ`0HJ6nm/<X^r`6\DM)
%fmrCa?_GeB%(NYo"/7JM9r?1=)IANh2`*cJq+&lE1jub?1mSmAdR&r)[(rXneWEUUWCp<HoB/?b^5m,Qe2SpTNdr_!YsCIu8sj_K
%MsWE=Cjl_4cF_hZIb_(PL2$KBCb2:HNo#q%i1nPeG$_5^N<k:C;3B(+.qbOZ:,"*$^7]b>q%Yk>j6/,m'ka63k6nTo/9DBcB&p`'
%IR_HE_i[D"'5H#@,JuBpWPZm>&T3Iujg;e-g6tbO'`sCVJs^cl(/DLA\7tKZR8X_m7lZXDg%=l_RSF.?`+/GJ\f0[c*HV#&F&<pV
%<sYcVOlq%t4K9S:@eriSeOp]D]MJL$lI=1l:bEkA=-.4hNdm+%K^5?n(XS%km0muiVenkZOc$/X#J3;GMlPet%K%e6YK!Gr\;dk:
%b-K/A+s,]\;-O\P8f&3gnd>?*9-5N6c3])@U^7bbEl<(oC%IE,--ZVDB$6[g5(C&p,g@>!Ct+0`XZ-dABMaWN.^`)GFd+]lDkJL0
%hdA_qauY3_c+p#Hc9tW[ot@@gZA2%R2nct9/UW:"23PDjU5$^hd6)(c+=`oS$jK>117+^iC9q51Ca^MnVZFC@_S?[c>c[@m`P)PS
%1p&/MWS'&7m\Ek`=m/=l,i*/0]ET%?/bGCBI"WOfT&@^6;@7Qs7]9-6[>R$S0<SIYnO:E?3C;@^A9?#Ogh#R8=[-$=`ptiNrmB`9
%`Q1X=krQfTqS<knTPiZ3[jiA[YA7@Z2k,6pI^=GC:P(;E,+Fa,mY"pu\ucfA4JJM2"*Er9U55\CAU\NeM?&49D6IaDT<adnF=+qV
%`l+QWeq7%TE;qX"fP"ROl^iFPo%[;b[X>j!&GLHhn(D2#He.#rk#an$BJ%utU%qi[4_7shgO\(D6b%APM=>k6Sob(:D&nE4RW$08
%RQ':+Zr8I'(gG2VPTii.B[Jcr[a7hs^9ra:e4mR$hf&8gS2t4"\6mgVU]'j-W0<n(DG$@=+<VFU,2FX&^(D.9.S<-NJ!QnPKX0&X
%A!tB.-H50sefO(,Ej"QfLdTJ#R*JHEpu^\epuVt>FE3_hE&E9irrM#M*X2sS(<#H)\PdJ6qRS@:js)E60X:Guf?GHE0%Z)(hJRTb
%c%!(]c9)"N"!ZS5R%.m'4L)P#5WYfP:u7u;d)Eq"&X=)pf)0!'6sOC=C<*=4MkT)X-Pm-Gk*Tn?C#p\a>;.Ob_ZOlW4NC;1DY.p)
%_XFWG9pM]GANOdJ)FBU?Qmm].36.4AidiE#N>^R-n:@G&OMBoFl\6[*E[e4"d6$'2IS\^'\oW7/NjR5dp,iifUW*b#%A+k@8Q<qD
%km_aAn9WjW>CLgm\#2*Y]Q]j\0+nM*UdImp;[CZa*D57HiYLsr`F>kEb.^=$B_D2uXm5U>*YQ$1Tsg5WaEVu&8.`Cqo+B\\GeItg
%]0ph(Ui\j!LCq'k,4"97]I,HmU</5crDoQ*heFNZHUq\#oS%B61/]No`LWM0d,)Y*D7e[O1@NNW&fd#KO<2aNNZWnrLf6cLVctVe
%qXnZ(ra*4_heuT\gqlE>,;0;YEcsJgFd?^S-]6cUUP7=SG/)AI6K_KXj<$YNH*"kqk,9lfOr:Z41[I<o,]f?qfGgrUaN:tOPqf4*
%NLAYuJm=<uPVMEY..RHeV(U'YK>%=0'YMmW/[4EZhu2eD0FeJ+c?B)o)T`)b"?<4GT-A&8h#I+\iB>U]3Y)8S<t7Sjm).YnSPul^
%6@DOdh6UV$P2Ru.JcFXE\4XYQNp_O]P"8o)j#uVa)2*s5?Vo>jO.fBsC@<g2VU](0pL&NP4ZrOX^+O@<8hb%)hnaNFrVV\akt.)!
%Ibe=QM\]l#OgjPnfMF]9N_M[=%ZD=_T3'Hi]2j?e].liC@?TWqT;$@A%B!h.Uj2[X&<LbSV%\Jthl`rHFr,e`0jMii>m<T@&"i+l
%ECa4P&lC2!0,:rIEq"Hl5K"aWZ,g./%j!a_[T^U8C&t7s4-.0r*O7aYOSh^gs6%A.hl_YTm;>%<C?WWle#+ArR5f)&(>b2j/o;$\
%W$`@cT?`;H<YpPD&R:1^I1ARAF<<`'6djs*d6KMRMViE08,tXGPoo"IZoI-K`Wq9P7iVT,STh)n6h$Tj7r6i0#N$<[:.r-G4-tB(
%CH5q:%.9`[[rQgWSR*1pkfo`TJG[FHFq31iSMRUs:);N;E2CEq=Tm(G5(<urLb^kJ"BB[d6eH<g8:ar!X!bWjn`TX'4uf?$j:F^\
%+b"7jO9df?En\@>Xi"dk?V1.Z>4p;0`ZUuo-;Dm"^D&9JV3>;=$_$:GjZJ'nnZ4g)Cu;CPR<BC!Qm#^Kn6Q$DlTe#/KCf_u+d%d,
%%qGrT]&O=#+dP@LCAIs\^kXma^o1+0'-'@L`oS'!1Po_1*$b-8U.VV3cUc[T>J)^<g[9;'K-SU;-(8b37VUR6g8>t/dT"J9mC-kK
%>J%uFc%nkOL+=9.<E"SZ^\2m!<-=\J`Veli/jjZ(MaqY'Ist2R%s1f=)l'GPRN)4SXH1b/c!##Bc?2(gTA^BW.,&U+;JFiB$E+u_
%;HD%emC-\F[b]%MFpqG5I'0c$=iYQocD:#]8U-kqVR#qSrqrA-+"41E3(@%.6oPIO=WjK@R`4'rSI9B.5Jna9=#AeQ^!a:"<)>@R
%UTL!DRSVPZ[T4c6fF_Afn@@9<AJN\Y5(eec[k,Dn9WC=q,3a3AH-l<gD06H2C9*9T<WcXnA$sjpPl%q"frb7_=N'K^k$+T^RWaZ#
%C<!L-<ARnWl'g>Wm,4"C#Zid/Wk*L_`KN'?97A!PTT#]/nrL#r8KE*/pik7#X0*A0)]dEZcVdih8oC9H<AthhiK0leg/"&ABppn?
%W#`_&=3YFG[q96\h8pgP#Zi3tZG-/NMidVd")Xj^L)YX+TWp'=<o]6C"O<kQ8[\u,*8^?J)-5:ILOi?(?VRKF`fqA7>9m1uN#,N%
%Q#A2=<Gf>,qUXqsX'McYRP>Y-FUiWmFA-Ld(&@]oE5mpr6A*Ta<`@K8Y.?+WGRAY%GPQ6S2jr^So^b/5I\`o;Z<084db:^mCK[a-
%\sC]l]9_3OWJ`X8MJ0^]lJu^3Wh*f27STGkh*.ACZ`R!RYTp[)i0/<5dfPj6*g>P&GJbAGNCe%pFg"M(^SC$`qWXf6<DP!IXi@p&
%`G2;d%ILW?]rcIhGf/g$lW^D[Y',fI\V=M"dlCV/jd=WMk2Zs*s+LNHXI>`H0:a^Kn:\L8%,P9=KJ1d<ic<rG,GfKYA^a3UV)L8Q
%0$:&ScLor+SSPp<Um!GiI;jUMFiW%8eMGeoN(Q-$]6u^%[5Bu^@iN4;"J;`Um`Th&2-`:^^FmU<a,3LXkDYV%nYk^@.2n[*3b`H]
%bI&fh'3tuZ5@'1a2:9A[7L_2H)NA_oCUHek!i(Ut_/>mjC"ZN7A!d:%#k6M^kX3XGSt&o.jGl%]JN/t)9k"Vnj/o1#E<['+VNak;
%.!u1T\Y<(Td=Q0$UkFU20)k2D+:#M48j)?\oRJRYoX&MM[Hcadf4pU`$q:P/j0ddI\_2/b%ALu)lklmIpbY-u;$0A/cMju(.'(^u
%S&G#GQQ>T>LHK8Jq)s^%dR=shX>7A#DDfYG5#rV.CUnjTfA12:Masj$BYH?Mj(d2GQt?ar)dVL3hjV*DFr-4l0jNu4Gm`g'3gS63
%-/=!Qf+n&lrs4gQds^=Dj,]GQ73&@n/tuQMF"NJR9@mWjhp-qbC?]1?WtqjVXU;Vm29P&"JlPIqE6Y:rB"$7/,'F)j.X[h"HFo(!
%FD7`5Sji;&&ftec%iTqH:ZIN.dn-'(6(Kji[*H3GRt`tjErU;6qkg&^(>0D?orV4@=1_N%>[oH+l5Hi(FA:"<4*b?U_NbP%VPN(N
%i^js.f_P8>Ur"4d4Z&TkB`.ZhNIP"Mfeh5JF/senjY<e#>060\\a!3q>o[<17J!KU.T`rWs"krSWp1M)rRT3:[(A<9%,jg3:XiF[
%a!*W4b6'2F,g@q9+$+'dMnIU8p[.5N@eesYl/b1-WHP_N,N$Z&:/ACs\'nMEg*JchlOIY-;EB4V".'\[r:K!3-=u&SJ2!R<S1X(#
%gGQIBh.^$$A%9tGHX%1[dQ;rC@D/2L8@ebj@O*%VH/q9OcgPS\o14:?+kp+0?6S^9YM5r9OEE@ehl^1bjcFWD[B$XJ[4AfA[B%$]
%?o_a-GPcJUChn1MGjPbh2#(>L38I3M-:&V%0A]rY;'OJ_diZ*hQ;)fjCAJNX/E(>hA'&Q!i(Ldgk#c94p?at$/9@m;`\,O4eh5ut
%f<4leK4U'#?Mj,YRr*A?0m3t,3d_iqgn"S%5qp*?*o(<FinWA[@n2JdOgc6Y^`s`]7oQaf$,:.eE7N*;`mB:X@P(r#N?X27o\o.Z
%L@EQbSisCsprW/(ef\D829$$QXtb%N0eB)U)=R:dSD2UI_HuNL0QTU::G[l9lXnWh@t,;iLn4[ah1"3<ebZ-W\S;!;4cMZ[MAY%a
%UPPVS0m&fU0h)b]QM0(@m`*=UGf1FEm'k/_@G3Sn%QfDV'J\Y(^0Pfdm7n_-A%9tGo8Fm&lW?oJZVhhu#q]e.RT=@\IXY)I%r<GE
%2T@(QBQ!/VApoV4`2og6G-/B]1)M&e(('T7Z!Nf@Q_D;*_:V0"E:'QEAm;="6gP)]<;8SFaR(ISPM+1W#96(:=aBUEk,.\3pGDlb
%-F/G;D'Fo#f$:POa4`r4;JtC;A[b-``?NkU@D4V=$e)75FI4d6RtqsMp?A+$f'M=WD$X2uI%!djDA>q`?H3sYG:]KbC3\2>jJMJ1
%pGDm-_J<gpCa+Vr`mA.[BA#\s9%m(mWZ*I@iK.W4Yb*Q&Kk],j3U@$;9uN!6qf^6.[Q?Lf%,jg3:UGt+O$t04]mCkjTWfUng`OT\
%DmfOo6QQr!^0k+]=q9f>;@[#tIUiZYaU:T[^!;78B9%f/Ft(<d*uToM'\2DNk91iNQjHADZ@',K'3cJ`p+OiBjhR=oN[]F<VKK\:
%=sGi"+)]0MiK4.dd@#f^<Xg=rB?'_"G^]CQ8KEU\oKabB9fBh[DmB[581)soIS.LQ&..oY"u&Y;p34+?A`T(Dq4F-:O+m@[Enbp^
%o:0B1UbKjLAkY:e8It=@JplA7KKAHj;/B/sPogc45RMAUeTrFDehcYK))_"(7jQ8Ok!MVZZSLTXc9S/^QQAape-n&=5J)7&#G<*H
%5m*8c#V/:\>$uJ3<^]HSMhkiQXL<[H$9;k\GhF5a0<bpWK8.T@:IsMJ4>,/5<"r6/9^,QFN>YPXWeHdJDBU;mr[F.C3h,qt<?]Ak
%7-3ki1tsEf\/ah;N35IFaC;c)N(Eu3X4e9aACaZ).3$@Tp<"&PA2BM_E4p0mq!Q3X-PV\n29rc7N3JeD!i4hK.G[g$")3LQbU7_b
%*)W?Y,'HKj/Ia^lF&0W/r2]3.\hWJ:UXuM`bc9-4:SZF,!Bp2Tp_[d0qKepV@L-4W\YhET+qiHe(;*;7fScctaQ&OW[/h#GM0:Fq
%:`dW#h\"PV]^tBs_gB?G%=5C@+uN';@<>d""bVVg\;q5IK466Sc%W\dPId=W#ogs'V28A*7MHnXrZSjiVM0%*712NCEL>nc;Tn1_
%b!"Y.3egfFU$'D2h%fbNmkUK/"AD/tm">_bN7S^Mp.6!r0/b7TWtsU&rON0n@lqP"H-3SoRr,@IIW)[>b^0)$n$*``:sbt`aoTn9
%ADIp-R&CUY,i52t5Z']mAqL;b;+.j:,fCDJW#NYV),)l"d=d`>]u>\_,XG=OAAM"TPB_5+.7SlGW8=UB1Ea&\_pqTa%eNa7HFF=t
%8L1?oGaHs9Jbid,i'R=V?[$V9&7o18_/PP<V2n_oHpVKX[tB=pGUsRuVf@/"iR=E/R4;."bWZGGW+]!p7>$U<MHUa)go/kulEVIl
%V.)g'rfhRU7QL5)4EY9NM;5E82N%@[167%7[=oB9/\6aRd6@)F5gE5g&+W7)a9'n8lABCI3h6qF$9.q5Qu[ZSg`s,W=WXutU96p$
%FY,YO-o*RMMMZrs*]8u#M+=?-/if]uM2oeU^AU*c?j8EBbruPHaCnC;7Y?^=U:aj@X;=a6K6NK<MF:5k)W`N09Z;3AK8XAAqG,eS
%d$,"G?o&c))1igW&DWq2(g/,*8Tn;_figR+4qYFmK\(Mo\EJ^B?#12k,sA_NpPae7`=6Q1DU:+,d=juDZ2>G36KtTc`DJt%V04&X
%W8%Qq^<EdM1g%HY@NgJ^$T'\Fi0[e;i?qp/5m&+5H/%F6H8CY(YO!N&)7<M46?benKu;S485.^fluoY\,-43L@4g2Gc.X>D=>HTR
%Ru8`_P\'(keuQ9E9jV#iZku#ogNA@pY+C=_D(W>TCXFk*Pf,PiF,-RuJj0iKo\c`.'hcQ&.aD`Q,76!d4^duWckm1+GG7NY)DW4Q
%bRd5,Wj@j#9&FVtcO5KY1+_'4^)&A0-T<M8f=k?iUa2)FM\""l*EjBlMHfRRFge"VR5<"%Z/@)S&\2>&bXrc&XHZ!U'f/JTeSV-<
%FR\[&6]38M%J7:D6j\"pY^8jH1"kZ"@g<)RN]3n>.YEbX.S(kT2i`[Uc(pf_@`bLMbbD[#5qC</[j>_9@bKh-Ka\t2C?T?X0u\n$
%Cu1=&+34q<&gqo\Q7M(]#g?ITnYEhV_7$aGCV_O*9:LZLTg`4E0&g'AcPpfA_&[\@+E);J15CUo0LM*>:AdgB:N^htE^8U*9kIOA
%&_Eb8\/$)`$n,Xi/9s!#n*PuNe$R8Qi@M'mS5mjF]+Rf_l8B[16ACL)20:\=Qm-:)Q0gI0ZXuE!8PrE.q[b?:qOZpZF[aUbNVlI?
%gqH4Z1k2IF*!7sXTt*Gubmc_TJH@Pd=:Hl!A>7sL!*VbpS<hodjqYr!VP;Gs?gYhM+GSk`1^%1DQsL6sM:E1,ck(7[8T<5qX_5?_
%;22-c]sTPV5]0UuZd>G?72HCbg?47FRGJ`QRW@=X24r11Jpbr^4Uoa*:<V.)-uO^-k(7n?-#P3,KbeMW\qk.L0lb^%3O[ZFS-q[9
%XqGD&^o1.+**Q/p[UdRTEmFX5Je\Us0sk5Z+mf?OoO'XshNFbOR,j<l]LCN(_l"/liitPAYgJPm-<<PlLnW`.%078)k/Q]BgGJt2
%Na4`I^I:f8T"2231ulTHWuCNp`'B'/VJJ!0*;eUP5[hA>@Np`^k[]uVRY)K6SZsci1`#.Oe4I3lJs3GuE9n9C-u/*fMbUI`JO<=Q
%or*UAh7t21/NAe-$dNg5.ss47C0Mlt*rT=!XJ)t:'t/k&[=L\:Zs_K?2eXV@(7^9U<X3Hr&2nK4>&5(]E=&r']XV*`hDdH5>_9G*
%Ac93QPr0MiD[T=@JH_s^_j3oa(78&!1c=N"E13LP3)+'%S6!<4A2V*'T%g3,4njaaSD?-Qb>qBmR`5asbZ;'2A_ak#(uI*dZ4d,b
%K/-ma0q3S7J/m\]7UeH;b^$IN=?*t1gW-NM=&C`\NgtRD8n)]rD81MS[$<VOiG!H5ZbQ>qJ+:/.s80S,q=fC1\%hn7n,De)^BO>o
%-tb0!<giWqq6.R5h;A/(YFkglq=u[mrqZ#4q(I6pqd8C<J+`H;n`@O's6[h\O"4].=P@'0EAcs?Ht`nc1>^NgWhZld?8rEd_k1'!
%fH[WP_rAnPdY,?VLB2Q[5*cWLVOq4X7LuHh"bh3jkIosPqt"m(8*smq(;/iN[IClW-_WW*f+[8i@.oNpp!@_(.qFGu#dU9c#gOC3
%cjOCcE?D_[/;fE#_UIcQB8,-/!0,B"kf&R0U1b,Td)(AioB1fRA?,%85^bJ*EM.C6Y<+eB3'18r\C0o,D*/0Had*:7,#=:nmG2gj
%C-[*0Y`*h&LDpr-Nt8h\dB_#k%Uc::LZc:1CPslea-#[HZFWbW]A_ps1n7F*&r4<3V*E255`*)i0;ldb^)HWu8HnKdf#A&S>%"$3
%PI=[BD=:n2?Va?&mn04u9F>X@D6/X2)[\@*PL<2;,Xq)P%Q*@)9!rrgHD%@4/5r(0@!,j0=b@RtRGL5(%L[YaJsR/[kY"6&VIhnD
%:`g"u)sA:7l]."ibs'?H*FlWtoSqN'-lX1CEn]_bVCO=6OQTDrnolfmAMMnJ<L'jITR:e5Kl$FdAAKX0U=C'j,LSGY80A9lr`uJa
%?]0*5XA1,4k$Tb)kHHQ"/%gDU`m^2q;NpKV+cGb%Zt),RR,%%9Ol/R@:R&$4Vb+*u\lMcACSG(kIGF%@;B?4tRs(F]dI&@if1t&4
%$eH&1WbaiiVP%SYPYLb1`LB2p'OYY1Qnq!mWc%\k$pGsTfjg^%=r1pBX$sY]>Fc2m\-?G2CJDIsV+n<tGR:0T5d:-Z*a>rQ""hp3
%:b,^$3i4k50KXB8j^s#*J'8?Co4<Q,O02`4's%?GL&Pi1pgr)5:=mjB0kU@4))LhY[i[J>S.,i*hcVa;9KqpG<cAF"1rDtQ[AZH:
%&W,!I2>a)!@#@aa_TI>cLF??h.Nse"9>V5DI]tK]>Y?T$gi+^(\dc,kT:&&FjMKOgeWn_mK6s&0"&^A0%cu,UmdT:RB?TriQ^->*
%,?VMT+/P6LoA6b!g!7:A"MO6eR,:,^V7X[lY]Tok)atg9:6*tIpB#9uT,lmc#W\(l6/b<P;0A1[?A/JXohQ0"Z3)a`"/=gWUJp:J
%iMDHN*"7'hCH!'?PuKfs1SD)hMh6k@YsDIp5?Ih(6(cPe[7/2n))W:BLc#fK5<\\4<61:mgqN9q5p],_V$e"Kom%.K(?A#2b",G:
%dhh#./)kaAOdleS+b-FQaJd/DkiYh%(6()Jf04<-%CMTSh0A$>`lJ/E]ERPiMBe[C&cL3i^LSZr5_oGg;kNPZd[+`;*Fqqff7o,@
%P`pW1]UVIUl)'Y>F1>8m4T^pHTc7#><6r)@CRq-j;en-ciHZSP:*V55!lC7\$nR^PNOeL'q*i]dSAMmOjee6uHU7a:*j_S,d%?k4
%97nlJc61W<`N#5oIj4DZQ)(.o-/(JcT*`'0-).Y+6`/"XH,<)8V@W&6Y(iZUFl2MJ2:;aX=O][tGj%RfgnPYmrLsIa%pCpRS)L=l
%dqhc]+QD2GXfkl\e@Om3=UkXgL)Qb-l#h6=KujQ\'?:H#-QG:`5a9[h=7f<l!Ld'Nf.\-G`@mg170Qg>r^V$k?8im<c_<i,'I+=%
%N2"@J<Y[1TkFf.":_0t,*Zu7,9/jBL4)QnQ>gteacb`pH%Ou@CNL<&m[hV2m2k=XN8G!d&.OlR(1,@EC+HCta&VU-'&K\?S-T9\=
%"'Uk5I+'0Q/k?sYd'*QWSN.U&0/blOSpShU[3B5MEFJ7]!$71)3YY"2\?Mi#%DbE<F!R\D:\[J@![9%c)qZKrfo1+\Lm=57HIILe
%>)#+Vb%+k*l>+a>6"C>Q8Qf47H@F!OL32_CeK^%S>K@Of%+HZh4=pB#/#)UI+RhZL(,qe+OuM##1_(VHRl0Cb^`)9\0pRWrj!%"S
%oSJO8a7W*.7Gh'i6RcoLkM]s9T`Ln$)Y+U>o;3&c*'-o5>$`%'MH.Aupb$@-+8AABg!;&ZRi-[n'I0#EL\O[;.)=reJMe"[?Xi^)
%>DIL\FOGMSZ=-[gb,h]KPqR+#7b(-t;-gmYck4n%DAKC*d!7ulZBdtU#k5^_,%d*VcoN<kDYiRpMO]qL_3845P-*?/Vi#RB%#5TB
%>^C?G^l>DB-nTa>XXYCVa,r4b*j0k,j;=DB;1u]d/j8%_d<@UFA(_<#$*,_D0/^4f/';08Lf\TT4cr^&?jg?]Y'M\H')5mCNW[t_
%_B,[2FN6>[G<Oc(d\RoHV;#@3Fhkl8]nWF?c-T7IX!0X+NdBZirK:ig'Q6sQ)(1X+kuf4j)k(*4jgVPUe'h#=S`'ZCo^W"Qa;[IW
%bI-jf<^nO>E%XaQ^pPsQX'T5k'%m>r&KT*f/:/cZA`J<ARp$qf=:&U'CDXS2".fp)iK4tN.I!65BqNk9E!JQ711FUu3/X4I_Ud@S
%+G"DfKLI42/0ZgS<n9Y2g]KpVo[$YZFK%A8)V0N+/Q6c4Bu]%W'^V,\Trd60BF0dNnkmk4Vh1Df&_1!:=KnQq7h_S;ks=J@CPQTk
%li\9#WI^%)#[&T%fD\1=:%]`k59c'VRp&UJ?D=m&E4?<26Z@8/-CFOF]'+K7pf%OAlRKdGRTIT\qGGeT2?Yc-1tap`ndZRX[.$>3
%03?ADpP74.Umk@nkQ?9;EL"6%@n7C@?bg!&_RJ`.]&9<NP<fR/^l2ZPWC(QV?+ch,H5f_u,&Si%NnD73$]K*bI<6g>fK"&gU?\Z)
%--5R==_ON86cmR:"dddI+l1+`;EnG.WnoNu7)WtE-KW[7,N7'BT=Up186&jS)$7f3F\t73&Wm8L*]<ABOPPL<lO>lj^l760oFKmO
%dY"rpbk%]i_<;/nV3<#KEG3(TMO63G5fJ:TfhZY7n>^L6S?(Ps-7EU0Zst8gY_aT;VFG7tp<lP$4]MVgo39U9>h+gg*$LnTZ[l0$
%XjVHE'GiBHmCg?#de(8(b::"b'WU:1[g%VYEp5qQ:P&M-AAt\P+sJeZ2Qg'o3Qmo5%ChWi\pm"R6$C\@F9OP3)MemfZ:e^!gP;+Z
%^@c/58kCjCZ)DtG60Gmr9JF:3'tI<IP2caAOl,Y6JT3%%0$9:1#geKUEtojCGdtFo]'0%r$[JfO[6TDODDdJ5`tKRmBTU)PI+a]P
%mJ=+lD$j.1[ITNUIOVX&_u7<dIWXhMY;oL3W%^<#_G<0%K'crDeH>P5Lf3`"<ZMd_"%+B#**9)uHc@9BCuqY45".h/@/q],d+:Ig
%F66kdRKNq*H'MU9al+VIQ8`K0@B%Uam1DAH.H9D,.N43i.]9]0#j"F,"f@l,3X"4iYFTb9M]!7ug,"uCVTGO=>%9?:Y4l\L/\)uT
%QdVEs.2N]-O<[VFoa$K9*=!a`d`P93IG&nj<fpAR3^X43j=knZl6oWC=t-D3J$0U4*HJV3igou15UI\r;dh]-Sc\AHbfl^B:50g@
%HRS=?#juD!Gdo^Rc!UPk/(UDO@iF7saH')7XK[474MV9<`9:1XO172UHPj4;/62%j082F`2$kb(NuDE\&7PtpVpKQ/O8-G-qB>SR
%<TF;C[YT7bj*Ub5O+@8":<&ubHoRs\ELf#CUIG'?M?RZLY\6uc99APTW1X-ZP)AY&R4WI<]=cVMC)m#Z$gfr`gJG__M50<)_nA+1
%pUQrk'(MjdMbAAnH/tUmVV`E$>%j9-Or?;b9hR^d$MNUV+'iRi)9sI%DtNHoSQ3b"1`?f3%MdU=dKVQm69c'%VVY':9ladG#"+`4
%/7Oi!:&qg7MnXQ&j5j#8V]U$lK2[FNMr8QTLE7"5FKD4!Rfe?\QfmAgCcn4op:RPF5=@<qAKE=3i^!k;"=M,^-QbGYUd*8bOp91f
%OUXS$Gf2e(jQ$@D8FLD_Ki#NGSfP%biC"FN,I1[2N"h^!X<bQ'0[8Eqo$OclE/%n@7U2.PRWpr4I9L(aQXK<>kAt(80>eY$Du*n<
%4V`i`K-uKdct9]`,5`/p-?eXLD^Ce?)/>IW8ueR2_Ba0k):ub-$4@U&e0;St2gpRe(hi1!((UV5`/*FW8#Vq&)&AcY(VOV><A`2^
%1Z_.\DN-H;Y9=eZ9P*t8+I<JrVDFAEW50`G%8o!+5t2hrf'rO4ekhn%U;B.NFOIX<C3i+/TgQ2s^',/IA=K=4a[YrJY4]/1b=%@O
%[Xb<h]\t[>%^n$lEfip3&//#OK"^EEb>*hs(u?>AOoPZNSkc-s5u*jpTmn3K8?V8XS.:p(\`fG"!Y9t<Dr@;U6#-kp3Ya$a9dcM&
%SejBUFMM1aW;)#c-D`aO#F"KTOqUtiE67pQYC(WVN<"MRe9!1;j*-jP]4h`;)4.T^>6oLKrhDc,$[%DlVaVV]U549jlQE8Z2^6JZ
%?jsU9r5?'^qqH06rMUEfabKQdl[B]WLbIeh_Z3,EFb:qb>DtiY8r(n2P\m]0j]>4Y[WB-)b[6r'kdi`krY4d.MV9keU1/7V$n@jK
%OblQY0f#M<U((F@#;^BrUbJG_*dDA"gA:<o7G#Hg,XZHh?Y5SB*HX!-i2rpAkndaN:=Mf(GgnK%-DEuZcspmkD1>-)q29dKI<9c[
%cN^Ss0O&,0#S>e3/olNc>)@,!G%0)f9YcGI"f+*\1&"p_MQ8-d&C#VhJ"#kUHdbLBgMOm%k5ppDHh0-@-]1o$#JJ3:^sJFd9Gs#8
%iLUi(/^4FqEKT*Hg%J+6!i#e(igW[IX!-Fol=NLL&s1^Q-$3ECX#5E=%c6A_e7u:eQ.LW%/+U9D'%/Vp#r$*7bD=eBpN4kShd[BB
%-`T(;<PG`[@'fO5o&GEL"RI.2Iqd`_\7U).NIu3sdSL3jL'qt?`at9n4;l^$RDMZGSa\K+CDiO6?ShC.CPZe5"GL<**5O^)Xm^3E
%KCo)=^HV;7^sbo4lmBe&cH[GJl0u0pp<f]T!f5srI:?A(3=Epr,/%4=-L)_Z"9cudJUhJmZG[`/ZAsa].Yl?'$**H^P8\mhm@\B;
%E)E=sj(W\bE^<M)'8*t'M?LnYILF6I?(0L7nafeK[L&k6'8FM"U-Ea`bPhQuhK1N5&f@PDr^3DK*$fJ?R@B]pULk0X6SR&"hga)g
%Vrr^umNlC-&u$G[ZXJnV=QD(tFF"a*84pXs2q_"QG[WAZgb8.e6@o<LNi<6igm\dR_su=5?_8PE-'2=s2IZ45KN=N=lInhu*QJ#O
%hD7of"8%'#DKY_lKYuP14CFRX7i-!,VPb7PSEX]Ul'I&jE!Ze@;^Du.LWCobl"%A8mI#UNWTMpjhd6uVnJD3[rRG9Sp4'aSqZ$QW
%G@/&in7Vdsf73ags7X'3s390Qr9dA\jKJUOfAD&Ko]tE6((0)?rjVgSdpN.C2h1T!^\uu,T)S/-rU'UcJfi5Zr7R_@ja[+;J,1Pm
%%n4blC]~>
%AI9_PrivateDataEnd
