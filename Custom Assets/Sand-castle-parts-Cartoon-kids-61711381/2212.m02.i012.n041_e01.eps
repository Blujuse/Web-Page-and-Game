%!PS-Adobe-3.1 EPSF-3.0
%ADO_DSC_Encoding: Windows Cyrillic
%%Title: Adobe Illustrator Artwork
%%Creator: Adobe Illustrator(R) 25.2
%%For: Lenovo
%%CreationDate: 2/17/2023
%%BoundingBox: 0 0 853 812
%%HiResBoundingBox: 0 0 852.9890 811.9779
%%CropBox: 0 0 852.9890 811.9779
%%LanguageLevel: 2
%%DocumentData: Clean7Bit
%ADOBeginClientInjection: DocumentHeader "AI11EPS"
%%AI8_CreatorVersion: 25.2.1%AI9_PrintingDataBegin%ADO_BuildNumber: Adobe Illustrator(R) 25.2.1 x236 R agm 4.7767 ct 5.4352%ADO_ContainsXMP: MainFirst
%ADOEndClientInjection: DocumentHeader "AI11EPS"
%%Pages: 1
%%DocumentNeededResources: 
%%DocumentSuppliedResources: procset Adobe_AGM_Image 1.0 0
%%+ procset Adobe_CoolType_Utility_T42 1.0 0
%%+ procset Adobe_CoolType_Utility_MAKEOCF 1.23 0
%%+ procset Adobe_CoolType_Core 2.31 0
%%+ procset Adobe_AGM_Core 2.0 0
%%+ procset Adobe_AGM_Utils 1.0 0
%%DocumentFonts: 
%%DocumentNeededFonts: 
%%DocumentNeededFeatures: 
%%DocumentSuppliedFeatures: 
%%DocumentCustomColors: 
%%CMYKCustomColor: 
%%RGBCustomColor: 
%%EndComments
         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
%%BeginDefaults
%%ViewingOrientation: 1 0 0 1
%%EndDefaults
%%BeginProlog
%%BeginResource: procset Adobe_AGM_Utils 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2006 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{currentpacking	true setpacking}if
userdict/Adobe_AGM_Utils 75 dict dup begin put
/bdf
{bind def}bind def
/nd{null def}bdf
/xdf
{exch def}bdf
/ldf 
{load def}bdf
/ddf
{put}bdf	
/xddf
{3 -1 roll put}bdf	
/xpt
{exch put}bdf
/ndf
{
	exch dup where{
		pop pop pop
	}{
		xdf
	}ifelse
}def
/cdndf
{
	exch dup currentdict exch known{
		pop pop
	}{
		exch def
	}ifelse
}def
/gx
{get exec}bdf
/ps_level
	/languagelevel where{
		pop systemdict/languagelevel gx
	}{
		1
	}ifelse
def
/level2 
	ps_level 2 ge
def
/level3 
	ps_level 3 ge
def
/ps_version
	{version cvr}stopped{-1}if
def
/set_gvm
{currentglobal exch setglobal}bdf
/reset_gvm
{setglobal}bdf
/makereadonlyarray
{
	/packedarray where{pop packedarray
	}{
		array astore readonly}ifelse
}bdf
/map_reserved_ink_name
{
	dup type/stringtype eq{
		dup/Red eq{
			pop(_Red_)
		}{
			dup/Green eq{
				pop(_Green_)
			}{
				dup/Blue eq{
					pop(_Blue_)
				}{
					dup()cvn eq{
						pop(Process)
					}if
				}ifelse
			}ifelse
		}ifelse
	}if
}bdf
/AGMUTIL_GSTATE 22 dict def
/get_gstate
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_clr_spc currentcolorspace def
	/AGMUTIL_GSTATE_clr_indx 0 def
	/AGMUTIL_GSTATE_clr_comps 12 array def
	mark currentcolor counttomark
		{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 3 -1 roll put
		/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 add def}repeat pop
	/AGMUTIL_GSTATE_fnt rootfont def
	/AGMUTIL_GSTATE_lw currentlinewidth def
	/AGMUTIL_GSTATE_lc currentlinecap def
	/AGMUTIL_GSTATE_lj currentlinejoin def
	/AGMUTIL_GSTATE_ml currentmiterlimit def
	currentdash/AGMUTIL_GSTATE_do xdf/AGMUTIL_GSTATE_da xdf
	/AGMUTIL_GSTATE_sa currentstrokeadjust def
	/AGMUTIL_GSTATE_clr_rnd currentcolorrendering def
	/AGMUTIL_GSTATE_op currentoverprint def
	/AGMUTIL_GSTATE_bg currentblackgeneration cvlit def
	/AGMUTIL_GSTATE_ucr currentundercolorremoval cvlit def
	currentcolortransfer cvlit/AGMUTIL_GSTATE_gy_xfer xdf cvlit/AGMUTIL_GSTATE_b_xfer xdf
		cvlit/AGMUTIL_GSTATE_g_xfer xdf cvlit/AGMUTIL_GSTATE_r_xfer xdf
	/AGMUTIL_GSTATE_ht currenthalftone def
	/AGMUTIL_GSTATE_flt currentflat def
	end
}def
/set_gstate
{
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_clr_spc setcolorspace
	AGMUTIL_GSTATE_clr_indx{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 1 sub get
	/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 sub def}repeat setcolor
	AGMUTIL_GSTATE_fnt setfont
	AGMUTIL_GSTATE_lw setlinewidth
	AGMUTIL_GSTATE_lc setlinecap
	AGMUTIL_GSTATE_lj setlinejoin
	AGMUTIL_GSTATE_ml setmiterlimit
	AGMUTIL_GSTATE_da AGMUTIL_GSTATE_do setdash
	AGMUTIL_GSTATE_sa setstrokeadjust
	AGMUTIL_GSTATE_clr_rnd setcolorrendering
	AGMUTIL_GSTATE_op setoverprint
	AGMUTIL_GSTATE_bg cvx setblackgeneration
	AGMUTIL_GSTATE_ucr cvx setundercolorremoval
	AGMUTIL_GSTATE_r_xfer cvx AGMUTIL_GSTATE_g_xfer cvx AGMUTIL_GSTATE_b_xfer cvx
		AGMUTIL_GSTATE_gy_xfer cvx setcolortransfer
	AGMUTIL_GSTATE_ht/HalftoneType get dup 9 eq exch 100 eq or
		{
		currenthalftone/HalftoneType get AGMUTIL_GSTATE_ht/HalftoneType get ne
			{
			 mark AGMUTIL_GSTATE_ht{sethalftone}stopped cleartomark
			}if
		}{
		AGMUTIL_GSTATE_ht sethalftone
		}ifelse
	AGMUTIL_GSTATE_flt setflat
	end
}def
/get_gstate_and_matrix
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_ctm matrix currentmatrix def
	end
	get_gstate
}def
/set_gstate_and_matrix
{
	set_gstate
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_ctm setmatrix
	end
}def
/AGMUTIL_str256 256 string def
/AGMUTIL_src256 256 string def
/AGMUTIL_dst64 64 string def
/AGMUTIL_srcLen nd
/AGMUTIL_ndx nd
/AGMUTIL_cpd nd
/capture_cpd{
	//Adobe_AGM_Utils/AGMUTIL_cpd currentpagedevice ddf
}def
/thold_halftone
{
	level3
		{sethalftone currenthalftone}
		{
			dup/HalftoneType get 3 eq
			{
				sethalftone currenthalftone
			}{
				begin
				Width Height mul{
					Thresholds read{pop}if
				}repeat
				end
				currenthalftone
			}ifelse
		}ifelse
}def 
/rdcmntline
{
	currentfile AGMUTIL_str256 readline pop
	(%)anchorsearch{pop}if
}bdf
/filter_cmyk
{	
	dup type/filetype ne{
		exch()/SubFileDecode filter
	}{
		exch pop
	}
	ifelse
	[
	exch
	{
		AGMUTIL_src256 readstring pop
		dup length/AGMUTIL_srcLen exch def
		/AGMUTIL_ndx 0 def
		AGMCORE_plate_ndx 4 AGMUTIL_srcLen 1 sub{
			1 index exch get
			AGMUTIL_dst64 AGMUTIL_ndx 3 -1 roll put
			/AGMUTIL_ndx AGMUTIL_ndx 1 add def
		}for
		pop
		AGMUTIL_dst64 0 AGMUTIL_ndx getinterval
	}
	bind
	/exec cvx
	]cvx
}bdf
/filter_indexed_devn
{
	cvi Names length mul names_index add Lookup exch get
}bdf
/filter_devn
{	
	4 dict begin
	/srcStr xdf
	/dstStr xdf
	dup type/filetype ne{
		0()/SubFileDecode filter
	}if
	[
	exch
		[
			/devicen_colorspace_dict/AGMCORE_gget cvx/begin cvx
			currentdict/srcStr get/readstring cvx/pop cvx
			/dup cvx/length cvx 0/gt cvx[
				Adobe_AGM_Utils/AGMUTIL_ndx 0/ddf cvx
				names_index Names length currentdict/srcStr get length 1 sub{
					1/index cvx/exch cvx/get cvx
					currentdict/dstStr get/AGMUTIL_ndx/load cvx 3 -1/roll cvx/put cvx
					Adobe_AGM_Utils/AGMUTIL_ndx/AGMUTIL_ndx/load cvx 1/add cvx/ddf cvx
				}for
				currentdict/dstStr get 0/AGMUTIL_ndx/load cvx/getinterval cvx
			]cvx/if cvx
			/end cvx
		]cvx
		bind
		/exec cvx
	]cvx
	end
}bdf
/AGMUTIL_imagefile nd
/read_image_file
{
	AGMUTIL_imagefile 0 setfileposition
	10 dict begin
	/imageDict xdf
	/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
	/imbufIdx 0 def
	/origDataSource imageDict/DataSource get def
	/origMultipleDataSources imageDict/MultipleDataSources get def
	/origDecode imageDict/Decode get def
	/dstDataStr imageDict/Width get colorSpaceElemCnt mul string def
	imageDict/MultipleDataSources known{MultipleDataSources}{false}ifelse
	{
		/imbufCnt imageDict/DataSource get length def
		/imbufs imbufCnt array def
		0 1 imbufCnt 1 sub{
			/imbufIdx xdf
			imbufs imbufIdx imbufLen string put
			imageDict/DataSource get imbufIdx[AGMUTIL_imagefile imbufs imbufIdx get/readstring cvx/pop cvx]cvx put
		}for
		DeviceN_PS2{
			imageDict begin
		 	/DataSource[DataSource/devn_sep_datasource cvx]cvx def
			/MultipleDataSources false def
			/Decode[0 1]def
			end
		}if
	}{
		/imbuf imbufLen string def
		Indexed_DeviceN level3 not and DeviceN_NoneName or{
			/srcDataStrs[imageDict begin
				currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
				{
					Width Decode length 2 div mul cvi string
				}repeat
				end]def		
			imageDict begin
		 	/DataSource[AGMUTIL_imagefile Decode BitsPerComponent false 1/filter_indexed_devn load dstDataStr srcDataStrs devn_alt_datasource/exec cvx]cvx def
			/Decode[0 1]def
			end
		}{
			imageDict/DataSource[1 string dup 0 AGMUTIL_imagefile Decode length 2 idiv string/readstring cvx/pop cvx names_index/get cvx/put cvx]cvx put
			imageDict/Decode[0 1]put
		}ifelse
	}ifelse
	imageDict exch
	load exec
	imageDict/DataSource origDataSource put
	imageDict/MultipleDataSources origMultipleDataSources put
	imageDict/Decode origDecode put	
	end
}bdf
/write_image_file
{
	begin
	{(AGMUTIL_imagefile)(w+)file}stopped{
		false
	}{
		Adobe_AGM_Utils/AGMUTIL_imagefile xddf 
		2 dict begin
		/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
		MultipleDataSources{DataSource 0 get}{DataSource}ifelse type/filetype eq{
			/imbuf imbufLen string def
		}if
		1 1 Height MultipleDataSources not{Decode length 2 idiv mul}if{
			pop
			MultipleDataSources{
			 	0 1 DataSource length 1 sub{
					DataSource type dup
					/arraytype eq{
						pop DataSource exch gx
					}{
						/filetype eq{
							DataSource exch get imbuf readstring pop
						}{
							DataSource exch get
						}ifelse
					}ifelse
					AGMUTIL_imagefile exch writestring
				}for
			}{
				DataSource type dup
				/arraytype eq{
					pop DataSource exec
				}{
					/filetype eq{
						DataSource imbuf readstring pop
					}{
						DataSource
					}ifelse
				}ifelse
				AGMUTIL_imagefile exch writestring
			}ifelse
		}for
		end
		true
	}ifelse
	end
}bdf
/close_image_file
{
	AGMUTIL_imagefile closefile(AGMUTIL_imagefile)deletefile
}def
statusdict/product known userdict/AGMP_current_show known not and{
	/pstr statusdict/product get def
	pstr(HP LaserJet 2200)eq 	
	pstr(HP LaserJet 4000 Series)eq or
	pstr(HP LaserJet 4050 Series )eq or
	pstr(HP LaserJet 8000 Series)eq or
	pstr(HP LaserJet 8100 Series)eq or
	pstr(HP LaserJet 8150 Series)eq or
	pstr(HP LaserJet 5000 Series)eq or
	pstr(HP LaserJet 5100 Series)eq or
	pstr(HP Color LaserJet 4500)eq or
	pstr(HP Color LaserJet 4600)eq or
	pstr(HP LaserJet 5Si)eq or
	pstr(HP LaserJet 1200 Series)eq or
	pstr(HP LaserJet 1300 Series)eq or
	pstr(HP LaserJet 4100 Series)eq or 
	{
 		userdict/AGMP_current_show/show load put
		userdict/show{
		 currentcolorspace 0 get
		 /Pattern eq
		 {false charpath f}
		 {AGMP_current_show}ifelse
		}put
	}if
	currentdict/pstr undef
}if
/consumeimagedata
{
	begin
	AGMIMG_init_common
	currentdict/MultipleDataSources known not
		{/MultipleDataSources false def}if
	MultipleDataSources
		{
		DataSource 0 get type
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width cvi string def
			1 1 Height cvi
				{
				pop
				0 1 DataSource length 1 sub
					{
					DataSource exch get
					flushbuffer readstring pop pop
					}for
				}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or DataSource 0 get xcheck and
			{
			Width Height mul cvi
				{
				0 1 DataSource length 1 sub
					{dup DataSource exch gx length exch 0 ne{pop}if}for
				dup 0 eq
					{pop exit}if
				sub dup 0 le
					{exit}if
				}loop
			pop
			}if		
		}
		{
		/DataSource load type 
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width Decode length 2 idiv mul cvi string def
			1 1 Height{pop DataSource flushbuffer readstring pop pop}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or/DataSource load xcheck and
			{
				Height Width BitsPerComponent mul 8 BitsPerComponent sub add 8 idiv Decode length 2 idiv mul mul
					{
					DataSource length dup 0 eq
						{pop exit}if
					sub dup 0 le
						{exit}if
					}loop
				pop
			}if
		}ifelse
	end
}bdf
/addprocs
{
	 2{/exec load}repeat
	 3 1 roll
	 [5 1 roll]bind cvx
}def
/modify_halftone_xfer
{
	currenthalftone dup length dict copy begin
	 currentdict 2 index known{
	 	1 index load dup length dict copy begin
		currentdict/TransferFunction known{
			/TransferFunction load
		}{
			currenttransfer
		}ifelse
		 addprocs/TransferFunction xdf 
		 currentdict end def
		currentdict end sethalftone
	}{
		currentdict/TransferFunction known{
			/TransferFunction load 
		}{
			currenttransfer
		}ifelse
		addprocs/TransferFunction xdf
		currentdict end sethalftone		
		pop
	}ifelse
}def
/clonearray
{
	dup xcheck exch
	dup length array exch
	Adobe_AGM_Core/AGMCORE_tmp -1 ddf 
	{
	Adobe_AGM_Core/AGMCORE_tmp 2 copy get 1 add ddf 
	dup type/dicttype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get
			exch
			clonedict
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	dup type/arraytype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get exch
			clonearray
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	exch dup
	Adobe_AGM_Core/AGMCORE_tmp get 4 -1 roll put
	}forall
	exch{cvx}if
}bdf
/clonedict
{
	dup length dict
	begin
	{
		dup type/dicttype eq
			{clonedict}if
		dup type/arraytype eq
			{clonearray}if
		def
	}forall
	currentdict
	end
}bdf
/DeviceN_PS2
{
	/currentcolorspace AGMCORE_gget 0 get/DeviceN eq level3 not and
}bdf
/Indexed_DeviceN
{
	/indexed_colorspace_dict AGMCORE_gget dup null ne{
		dup/CSDBase known{
			/CSDBase get/CSD get_res/Names known 
		}{
			pop false
		}ifelse
	}{
		pop false
	}ifelse
}bdf
/DeviceN_NoneName
{	
	/Names where{
		pop
		false Names
		{
			(None)eq or
		}forall
	}{
		false
	}ifelse
}bdf
/DeviceN_PS2_inRip_seps
{
	/AGMCORE_in_rip_sep where
	{
		pop dup type dup/arraytype eq exch/packedarraytype eq or
		{
			dup 0 get/DeviceN eq level3 not and AGMCORE_in_rip_sep and
			{
				/currentcolorspace exch AGMCORE_gput
				false
			}{
				true
			}ifelse
		}{
			true
		}ifelse
	}{
		true
	}ifelse
}bdf
/base_colorspace_type
{
	dup type/arraytype eq{0 get}if
}bdf
/currentdistillerparams where{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
{
	/pdfmark_5{cleartomark}bind def
}{
	/pdfmark_5{pdfmark}bind def
}ifelse
/ReadBypdfmark_5
{
	currentfile exch 0 exch/SubFileDecode filter
	/currentdistillerparams where 
	{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
	{flushfile cleartomark}
	{/PUT pdfmark}ifelse 	
}bdf
/ReadBypdfmark_5_string
{
	2 dict begin
	/makerString exch def string/tmpString exch def
	{
		currentfile tmpString readline not{pop exit}if
		makerString anchorsearch
		{
			pop pop cleartomark exit
		}{
			3 copy/PUT pdfmark_5 pop 2 copy(\n)/PUT pdfmark_5
		}ifelse
	}loop
	end
}bdf
/xpdfm
{
	{
		dup 0 get/Label eq
		{
			aload length[exch 1 add 1 roll/PAGELABEL
		}{
			aload pop
			[{ThisPage}<<5 -2 roll>>/PUT
		}ifelse
		pdfmark_5
	}forall
}bdf
/lmt{
	dup 2 index le{exch}if pop dup 2 index ge{exch}if pop
}bdf
/int{
	dup 2 index sub 3 index 5 index sub div 6 -2 roll sub mul exch pop add exch pop
}bdf
/ds{
	Adobe_AGM_Utils begin
}bdf
/dt{
	currentdict Adobe_AGM_Utils eq{
		end
	}if
}bdf
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_AGM_Core 2.0 0
%%Version: 2.0 0
%%Copyright: Copyright(C)1997-2007 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Core 209 dict dup begin put
/Adobe_AGM_Core_Id/Adobe_AGM_Core_2.0_0 def
/AGMCORE_str256 256 string def
/AGMCORE_save nd
/AGMCORE_graphicsave nd
/AGMCORE_c 0 def
/AGMCORE_m 0 def
/AGMCORE_y 0 def
/AGMCORE_k 0 def
/AGMCORE_cmykbuf 4 array def
/AGMCORE_screen[currentscreen]cvx def
/AGMCORE_tmp 0 def
/AGMCORE_&setgray nd
/AGMCORE_&setcolor nd
/AGMCORE_&setcolorspace nd
/AGMCORE_&setcmykcolor nd
/AGMCORE_cyan_plate nd
/AGMCORE_magenta_plate nd
/AGMCORE_yellow_plate nd
/AGMCORE_black_plate nd
/AGMCORE_plate_ndx nd
/AGMCORE_get_ink_data nd
/AGMCORE_is_cmyk_sep nd
/AGMCORE_host_sep nd
/AGMCORE_avoid_L2_sep_space nd
/AGMCORE_distilling nd
/AGMCORE_composite_job nd
/AGMCORE_producing_seps nd
/AGMCORE_ps_level -1 def
/AGMCORE_ps_version -1 def
/AGMCORE_environ_ok nd
/AGMCORE_CSD_cache 0 dict def
/AGMCORE_currentoverprint false def
/AGMCORE_deltaX nd
/AGMCORE_deltaY nd
/AGMCORE_name nd
/AGMCORE_sep_special nd
/AGMCORE_err_strings 4 dict def
/AGMCORE_cur_err nd
/AGMCORE_current_spot_alias false def
/AGMCORE_inverting false def
/AGMCORE_feature_dictCount nd
/AGMCORE_feature_opCount nd
/AGMCORE_feature_ctm nd
/AGMCORE_ConvertToProcess false def
/AGMCORE_Default_CTM matrix def
/AGMCORE_Default_PageSize nd
/AGMCORE_Default_flatness nd
/AGMCORE_currentbg nd
/AGMCORE_currentucr nd
/AGMCORE_pattern_paint_type 0 def
/knockout_unitsq nd
currentglobal true setglobal
[/CSA/Gradient/Procedure]
{
	/Generic/Category findresource dup length dict copy/Category defineresource pop
}forall
setglobal
/AGMCORE_key_known
{
	where{
		/Adobe_AGM_Core_Id known
	}{
		false
	}ifelse
}ndf
/flushinput
{
	save
	2 dict begin
	/CompareBuffer 3 -1 roll def
	/readbuffer 256 string def
	mark
	{
	currentfile readbuffer{readline}stopped
		{cleartomark mark}
		{
		not
			{pop exit}
		if
		CompareBuffer eq
			{exit}
		if
		}ifelse
	}loop
	cleartomark
	end
	restore
}bdf
/getspotfunction
{
	AGMCORE_screen exch pop exch pop
	dup type/dicttype eq{
		dup/HalftoneType get 1 eq{
			/SpotFunction get
		}{
			dup/HalftoneType get 2 eq{
				/GraySpotFunction get
			}{
				pop
				{
					abs exch abs 2 copy add 1 gt{
						1 sub dup mul exch 1 sub dup mul add 1 sub
					}{
						dup mul exch dup mul add 1 exch sub
					}ifelse
				}bind
			}ifelse
		}ifelse
	}if
}def
/np
{newpath}bdf
/clp_npth
{clip np}def
/eoclp_npth
{eoclip np}def
/npth_clp
{np clip}def
/graphic_setup
{
	/AGMCORE_graphicsave save store
	concat
	0 setgray
	0 setlinecap
	0 setlinejoin
	1 setlinewidth
	[]0 setdash
	10 setmiterlimit
	np
	false setoverprint
	false setstrokeadjust
	//Adobe_AGM_Core/spot_alias gx
	/Adobe_AGM_Image where{
		pop
		Adobe_AGM_Image/spot_alias 2 copy known{
			gx
		}{
			pop pop
		}ifelse
	}if
	/sep_colorspace_dict null AGMCORE_gput
	100 dict begin
	/dictstackcount countdictstack def
	/showpage{}def
	mark
}def
/graphic_cleanup
{
	cleartomark
	dictstackcount 1 countdictstack 1 sub{end}for
	end
	AGMCORE_graphicsave restore
}def
/compose_error_msg
{
	grestoreall initgraphics	
	/Helvetica findfont 10 scalefont setfont
	/AGMCORE_deltaY 100 def
	/AGMCORE_deltaX 310 def
	clippath pathbbox np pop pop 36 add exch 36 add exch moveto
	0 AGMCORE_deltaY rlineto AGMCORE_deltaX 0 rlineto
	0 AGMCORE_deltaY neg rlineto AGMCORE_deltaX neg 0 rlineto closepath
	0 AGMCORE_&setgray
	gsave 1 AGMCORE_&setgray fill grestore 
	1 setlinewidth gsave stroke grestore
	currentpoint AGMCORE_deltaY 15 sub add exch 8 add exch moveto
	/AGMCORE_deltaY 12 def
	/AGMCORE_tmp 0 def
	AGMCORE_err_strings exch get
		{
		dup 32 eq
			{
			pop
			AGMCORE_str256 0 AGMCORE_tmp getinterval
			stringwidth pop currentpoint pop add AGMCORE_deltaX 28 add gt
				{
				currentpoint AGMCORE_deltaY sub exch pop
				clippath pathbbox pop pop pop 44 add exch moveto
				}if
			AGMCORE_str256 0 AGMCORE_tmp getinterval show( )show
			0 1 AGMCORE_str256 length 1 sub
				{
				AGMCORE_str256 exch 0 put
				}for
			/AGMCORE_tmp 0 def
			}{
				AGMCORE_str256 exch AGMCORE_tmp xpt
				/AGMCORE_tmp AGMCORE_tmp 1 add def
			}ifelse
		}forall
}bdf
/AGMCORE_CMYKDeviceNColorspaces[
	[/Separation/None/DeviceCMYK{0 0 0}]
	[/Separation(Black)/DeviceCMYK{0 0 0 4 -1 roll}bind]
	[/Separation(Yellow)/DeviceCMYK{0 0 3 -1 roll 0}bind]
	[/DeviceN[(Yellow)(Black)]/DeviceCMYK{0 0 4 2 roll}bind]
	[/Separation(Magenta)/DeviceCMYK{0 exch 0 0}bind]
	[/DeviceN[(Magenta)(Black)]/DeviceCMYK{0 3 1 roll 0 exch}bind]
	[/DeviceN[(Magenta)(Yellow)]/DeviceCMYK{0 3 1 roll 0}bind]
	[/DeviceN[(Magenta)(Yellow)(Black)]/DeviceCMYK{0 4 1 roll}bind]
	[/Separation(Cyan)/DeviceCMYK{0 0 0}]
	[/DeviceN[(Cyan)(Black)]/DeviceCMYK{0 0 3 -1 roll}bind]
	[/DeviceN[(Cyan)(Yellow)]/DeviceCMYK{0 exch 0}bind]
	[/DeviceN[(Cyan)(Yellow)(Black)]/DeviceCMYK{0 3 1 roll}bind]
	[/DeviceN[(Cyan)(Magenta)]/DeviceCMYK{0 0}]
	[/DeviceN[(Cyan)(Magenta)(Black)]/DeviceCMYK{0 exch}bind]
	[/DeviceN[(Cyan)(Magenta)(Yellow)]/DeviceCMYK{0}]
	[/DeviceCMYK]
]def
/ds{
	Adobe_AGM_Core begin
	/currentdistillerparams where
		{
		pop currentdistillerparams/CoreDistVersion get 5000 lt
			{<</DetectBlends false>>setdistillerparams}if
		}if	
	/AGMCORE_ps_version xdf
	/AGMCORE_ps_level xdf
	errordict/AGM_handleerror known not{
		errordict/AGM_handleerror errordict/handleerror get put
		errordict/handleerror{
			Adobe_AGM_Core begin
			$error/newerror get AGMCORE_cur_err null ne and{
				$error/newerror false put
				AGMCORE_cur_err compose_error_msg
			}if
			$error/newerror true put
			end
			errordict/AGM_handleerror get exec
			}bind put
		}if
	/AGMCORE_environ_ok 
		ps_level AGMCORE_ps_level ge
		ps_version AGMCORE_ps_version ge and 
		AGMCORE_ps_level -1 eq or
	def
	AGMCORE_environ_ok not
		{/AGMCORE_cur_err/AGMCORE_bad_environ def}if
	/AGMCORE_&setgray systemdict/setgray get def
	level2{
		/AGMCORE_&setcolor systemdict/setcolor get def
		/AGMCORE_&setcolorspace systemdict/setcolorspace get def
	}if
	/AGMCORE_currentbg currentblackgeneration def
	/AGMCORE_currentucr currentundercolorremoval def
	/AGMCORE_Default_flatness currentflat def
	/AGMCORE_distilling
		/product where{
			pop systemdict/setdistillerparams known product(Adobe PostScript Parser)ne and
		}{
			false
		}ifelse
	def
	/AGMCORE_GSTATE AGMCORE_key_known not{
		/AGMCORE_GSTATE 21 dict def
		/AGMCORE_tmpmatrix matrix def
		/AGMCORE_gstack 64 array def
		/AGMCORE_gstackptr 0 def
		/AGMCORE_gstacksaveptr 0 def
		/AGMCORE_gstackframekeys 14 def
		/AGMCORE_&gsave/gsave ldf
		/AGMCORE_&grestore/grestore ldf
		/AGMCORE_&grestoreall/grestoreall ldf
		/AGMCORE_&save/save ldf
		/AGMCORE_&setoverprint/setoverprint ldf
		/AGMCORE_gdictcopy{
			begin
			{def}forall
			end
		}def
		/AGMCORE_gput{
			AGMCORE_gstack AGMCORE_gstackptr get
			3 1 roll
			put
		}def
		/AGMCORE_gget{
			AGMCORE_gstack AGMCORE_gstackptr get
			exch
			get
		}def
		/gsave{
			AGMCORE_&gsave
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 64 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/grestore{
			AGMCORE_&grestore
			AGMCORE_gstackptr 1 sub
			dup AGMCORE_gstacksaveptr lt{1 add}if
			dup AGMCORE_gstack exch get dup/AGMCORE_currentoverprint known
				{/AGMCORE_currentoverprint get setoverprint}{pop}ifelse
			/AGMCORE_gstackptr exch store
		}def
		/grestoreall{
			AGMCORE_&grestoreall
			/AGMCORE_gstackptr AGMCORE_gstacksaveptr store 
		}def
		/save{
			AGMCORE_&save
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 64 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			/AGMCORE_gstacksaveptr AGMCORE_gstackptr store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/setoverprint{
			dup/AGMCORE_currentoverprint exch AGMCORE_gput AGMCORE_&setoverprint
		}def	
		0 1 AGMCORE_gstack length 1 sub{
				AGMCORE_gstack exch AGMCORE_gstackframekeys dict put
		}for
	}if
	level3/AGMCORE_&sysshfill AGMCORE_key_known not and
	{
		/AGMCORE_&sysshfill systemdict/shfill get def
		/AGMCORE_&sysmakepattern systemdict/makepattern get def
		/AGMCORE_&usrmakepattern/makepattern load def
	}if
	/currentcmykcolor[0 0 0 0]AGMCORE_gput
	/currentstrokeadjust false AGMCORE_gput
	/currentcolorspace[/DeviceGray]AGMCORE_gput
	/sep_tint 0 AGMCORE_gput
	/devicen_tints[0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]AGMCORE_gput
	/sep_colorspace_dict null AGMCORE_gput
	/devicen_colorspace_dict null AGMCORE_gput
	/indexed_colorspace_dict null AGMCORE_gput
	/currentcolor_intent()AGMCORE_gput
	/customcolor_tint 1 AGMCORE_gput
	/absolute_colorimetric_crd null AGMCORE_gput
	/relative_colorimetric_crd null AGMCORE_gput
	/saturation_crd null AGMCORE_gput
	/perceptual_crd null AGMCORE_gput
	currentcolortransfer cvlit/AGMCore_gray_xfer xdf cvlit/AGMCore_b_xfer xdf
		 cvlit/AGMCore_g_xfer xdf cvlit/AGMCore_r_xfer xdf
	<<
	/MaxPatternItem currentsystemparams/MaxPatternCache get
	>>
	setuserparams
	end
}def
/ps
{
	/setcmykcolor where{
		pop
		Adobe_AGM_Core/AGMCORE_&setcmykcolor/setcmykcolor load put
	}if
	Adobe_AGM_Core begin
	/setcmykcolor
	{
		4 copy AGMCORE_cmykbuf astore/currentcmykcolor exch AGMCORE_gput
		1 sub 4 1 roll
		3{
			3 index add neg dup 0 lt{
				pop 0
			}if
			3 1 roll
		}repeat
		setrgbcolor pop
	}ndf
	/currentcmykcolor
	{
		/currentcmykcolor AGMCORE_gget aload pop
	}ndf
	/setoverprint
	{pop}ndf
	/currentoverprint
	{false}ndf
	/AGMCORE_cyan_plate 1 0 0 0 test_cmyk_color_plate def
	/AGMCORE_magenta_plate 0 1 0 0 test_cmyk_color_plate def
	/AGMCORE_yellow_plate 0 0 1 0 test_cmyk_color_plate def
	/AGMCORE_black_plate 0 0 0 1 test_cmyk_color_plate def
	/AGMCORE_plate_ndx 
		AGMCORE_cyan_plate{
			0
		}{
			AGMCORE_magenta_plate{
				1
			}{
				AGMCORE_yellow_plate{
					2
				}{
					AGMCORE_black_plate{
						3
					}{
						4
					}ifelse
				}ifelse
			}ifelse
		}ifelse
		def
	/AGMCORE_have_reported_unsupported_color_space false def
	/AGMCORE_report_unsupported_color_space
	{
		AGMCORE_have_reported_unsupported_color_space false eq
		{
			(Warning: Job contains content that cannot be separated with on-host methods. This content appears on the black plate, and knocks out all other plates.)==
			Adobe_AGM_Core/AGMCORE_have_reported_unsupported_color_space true ddf
		}if
	}def
	/AGMCORE_composite_job
		AGMCORE_cyan_plate AGMCORE_magenta_plate and AGMCORE_yellow_plate and AGMCORE_black_plate and def
	/AGMCORE_in_rip_sep
		/AGMCORE_in_rip_sep where{
			pop AGMCORE_in_rip_sep
		}{
			AGMCORE_distilling 
			{
				false
			}{
				userdict/Adobe_AGM_OnHost_Seps known{
					false
				}{
					level2{
						currentpagedevice/Separations 2 copy known{
							get
						}{
							pop pop false
						}ifelse
					}{
						false
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	def
	/AGMCORE_producing_seps AGMCORE_composite_job not AGMCORE_in_rip_sep or def
	/AGMCORE_host_sep AGMCORE_producing_seps AGMCORE_in_rip_sep not and def
	/AGM_preserve_spots 
		/AGM_preserve_spots where{
			pop AGM_preserve_spots
		}{
			AGMCORE_distilling AGMCORE_producing_seps or
		}ifelse
	def
	/AGM_is_distiller_preserving_spotimages
	{
		currentdistillerparams/PreserveOverprintSettings known
		{
			currentdistillerparams/PreserveOverprintSettings get
				{
					currentdistillerparams/ColorConversionStrategy known
					{
						currentdistillerparams/ColorConversionStrategy get
						/sRGB ne
					}{
						true
					}ifelse
				}{
					false
				}ifelse
		}{
			false
		}ifelse
	}def
	/convert_spot_to_process where{pop}{
		/convert_spot_to_process
		{
			//Adobe_AGM_Core begin
			dup map_alias{
				/Name get exch pop
			}if
			dup dup(None)eq exch(All)eq or
				{
				pop false
				}{
				AGMCORE_host_sep
				{
					gsave
					1 0 0 0 setcmykcolor currentgray 1 exch sub
					0 1 0 0 setcmykcolor currentgray 1 exch sub
					0 0 1 0 setcmykcolor currentgray 1 exch sub
					0 0 0 1 setcmykcolor currentgray 1 exch sub
					add add add 0 eq
					{
						pop false
					}{
						false setoverprint
						current_spot_alias false set_spot_alias
						1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
						set_spot_alias
						currentgray 1 ne
					}ifelse
					grestore
				}{
					AGMCORE_distilling
					{
						pop AGM_is_distiller_preserving_spotimages not
					}{
						//Adobe_AGM_Core/AGMCORE_name xddf
						false
						//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 0 eq
						AGMUTIL_cpd/OverrideSeparations known and
						{
							AGMUTIL_cpd/OverrideSeparations get
							{
								/HqnSpots/ProcSet resourcestatus
								{
									pop pop pop true
								}if
							}if
						}if					
						{
							AGMCORE_name/HqnSpots/ProcSet findresource/TestSpot gx not
						}{
							gsave
							[/Separation AGMCORE_name/DeviceGray{}]AGMCORE_&setcolorspace
							false
							AGMUTIL_cpd/SeparationColorNames 2 copy known
							{
								get
								{AGMCORE_name eq or}forall
								not
							}{
								pop pop pop true
							}ifelse
							grestore
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			end
		}def
	}ifelse
	/convert_to_process where{pop}{
		/convert_to_process
		{
			dup length 0 eq
				{
				pop false
				}{
				AGMCORE_host_sep
				{
				dup true exch
					{
					dup(Cyan)eq exch
					dup(Magenta)eq 3 -1 roll or exch
					dup(Yellow)eq 3 -1 roll or exch
					dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process and}ifelse
					}
				forall
					{
					true exch
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						(Black)eq or and
						}forall
						not
					}{pop false}ifelse
				}{
				false exch
					{
					/PhotoshopDuotoneList where{pop false}{true}ifelse
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process or}ifelse
						}
						{
						convert_spot_to_process or
						}
					ifelse
					}
				forall
				}ifelse
			}ifelse
		}def
	}ifelse	
	/AGMCORE_avoid_L2_sep_space 
		version cvr 2012 lt 
		level2 and 
		AGMCORE_producing_seps not and
	def
	/AGMCORE_is_cmyk_sep
		AGMCORE_cyan_plate AGMCORE_magenta_plate or AGMCORE_yellow_plate or AGMCORE_black_plate or
	def
	/AGM_avoid_0_cmyk where{
		pop AGM_avoid_0_cmyk
	}{
		AGM_preserve_spots 
		userdict/Adobe_AGM_OnHost_Seps known 
		userdict/Adobe_AGM_InRip_Seps known or
		not and
	}ifelse
	{
		/setcmykcolor[
			{
				4 copy add add add 0 eq currentoverprint and{
					pop 0.0005
				}if
			}/exec cvx
			/AGMCORE_&setcmykcolor load dup type/operatortype ne{
				/exec cvx
			}if
		]cvx def
	}if
	/AGMCORE_IsSeparationAProcessColor
		{
		dup(Cyan)eq exch dup(Magenta)eq exch dup(Yellow)eq exch(Black)eq or or or
		}def
	AGMCORE_host_sep{
		/setcolortransfer
		{
			AGMCORE_cyan_plate{
				pop pop pop
			}{
			 	AGMCORE_magenta_plate{
			 		4 3 roll pop pop pop
			 	}{
			 		AGMCORE_yellow_plate{
			 			4 2 roll pop pop pop
			 		}{
			 			4 1 roll pop pop pop
			 		}ifelse
			 	}ifelse
			}ifelse
			settransfer 
		}	
		def
		/AGMCORE_get_ink_data
			AGMCORE_cyan_plate{
				{pop pop pop}
			}{
			 	AGMCORE_magenta_plate{
			 		{4 3 roll pop pop pop}
			 	}{
			 		AGMCORE_yellow_plate{
			 			{4 2 roll pop pop pop}
			 		}{
			 			{4 1 roll pop pop pop}
			 		}ifelse
			 	}ifelse
			}ifelse
		def
		/AGMCORE_RemoveProcessColorNames
			{
			1 dict begin
			/filtername
				{
				dup/Cyan eq 1 index(Cyan)eq or
					{pop(_cyan_)}if
				dup/Magenta eq 1 index(Magenta)eq or
					{pop(_magenta_)}if
				dup/Yellow eq 1 index(Yellow)eq or
					{pop(_yellow_)}if
				dup/Black eq 1 index(Black)eq or
					{pop(_black_)}if
				}def
			dup type/arraytype eq
				{[exch{filtername}forall]}
				{filtername}ifelse
			end
			}def
		level3{
			/AGMCORE_IsCurrentColor
				{
				dup AGMCORE_IsSeparationAProcessColor
					{
					AGMCORE_plate_ndx 0 eq
						{dup(Cyan)eq exch/Cyan eq or}if
					AGMCORE_plate_ndx 1 eq
						{dup(Magenta)eq exch/Magenta eq or}if
					AGMCORE_plate_ndx 2 eq
						{dup(Yellow)eq exch/Yellow eq or}if
					AGMCORE_plate_ndx 3 eq
						{dup(Black)eq exch/Black eq or}if
					AGMCORE_plate_ndx 4 eq
						{pop false}if
					}{
					gsave
					false setoverprint
					current_spot_alias false set_spot_alias
					1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
					set_spot_alias
					currentgray 1 ne
					grestore
					}ifelse
				}def
			/AGMCORE_filter_functiondatasource
				{	
				5 dict begin
				/data_in xdf
				data_in type/stringtype eq
					{
					/ncomp xdf
					/comp xdf
					/string_out data_in length ncomp idiv string def
					0 ncomp data_in length 1 sub
						{
						string_out exch dup ncomp idiv exch data_in exch ncomp getinterval comp get 255 exch sub put
						}for
					string_out
					}{
					string/string_in xdf
					/string_out 1 string def
					/component xdf
					[
					data_in string_in/readstring cvx
						[component/get cvx 255/exch cvx/sub cvx string_out/exch cvx 0/exch cvx/put cvx string_out]cvx
						[/pop cvx()]cvx/ifelse cvx
					]cvx/ReusableStreamDecode filter
				}ifelse
				end
				}def
			/AGMCORE_separateShadingFunction
				{
				2 dict begin
				/paint? xdf
				/channel xdf
				dup type/dicttype eq
					{
					begin
					FunctionType 0 eq
						{
						/DataSource channel Range length 2 idiv DataSource AGMCORE_filter_functiondatasource def
						currentdict/Decode known
							{/Decode Decode channel 2 mul 2 getinterval def}if
						paint? not
							{/Decode[1 1]def}if
						}if
					FunctionType 2 eq
						{
						paint?
							{
							/C0[C0 channel get 1 exch sub]def
							/C1[C1 channel get 1 exch sub]def
							}{
							/C0[1]def
							/C1[1]def
							}ifelse			
						}if
					FunctionType 3 eq
						{
						/Functions[Functions{channel paint? AGMCORE_separateShadingFunction}forall]def			
						}if
					currentdict/Range known
						{/Range[0 1]def}if
					currentdict
					end}{
					channel get 0 paint? AGMCORE_separateShadingFunction
					}ifelse
				end
				}def
			/AGMCORE_separateShading
				{
				3 -1 roll begin
				currentdict/Function known
					{
					currentdict/Background known
						{[1 index{Background 3 index get 1 exch sub}{1}ifelse]/Background xdf}if
					Function 3 1 roll AGMCORE_separateShadingFunction/Function xdf
					/ColorSpace[/DeviceGray]def
					}{
					ColorSpace dup type/arraytype eq{0 get}if/DeviceCMYK eq
						{
						/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
						}{
						ColorSpace dup 1 get AGMCORE_RemoveProcessColorNames 1 exch put
						}ifelse
					ColorSpace 0 get/Separation eq
						{
							{
								[1/exch cvx/sub cvx]cvx
							}{
								[/pop cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll put
							pop
						}{
							{
								[exch ColorSpace 1 get length 1 sub exch sub/index cvx 1/exch cvx/sub cvx ColorSpace 1 get length 1 add 1/roll cvx ColorSpace 1 get length{/pop cvx}repeat]cvx
							}{
								pop[ColorSpace 1 get length{/pop cvx}repeat cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll bind put
						}ifelse
					ColorSpace 2/DeviceGray put																		
					}ifelse
				end
				}def
			/AGMCORE_separateShadingDict
				{
				dup/ColorSpace get
				dup type/arraytype ne
					{[exch]}if
				dup 0 get/DeviceCMYK eq
					{
					exch begin 
					currentdict
					AGMCORE_cyan_plate
						{0 true}if
					AGMCORE_magenta_plate
						{1 true}if
					AGMCORE_yellow_plate
						{2 true}if
					AGMCORE_black_plate
						{3 true}if
					AGMCORE_plate_ndx 4 eq
						{0 false}if		
					dup not currentoverprint and
						{/AGMCORE_ignoreshade true def}if
					AGMCORE_separateShading
					currentdict
					end exch
					}if
				dup 0 get/Separation eq
					{
					exch begin
					ColorSpace 1 get dup/None ne exch/All ne and
						{
						ColorSpace 1 get AGMCORE_IsCurrentColor AGMCORE_plate_ndx 4 lt and ColorSpace 1 get AGMCORE_IsSeparationAProcessColor not and
							{
							ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
								{
								/ColorSpace
									[
									/Separation
									ColorSpace 1 get
									/DeviceGray
										[
										ColorSpace 3 get/exec cvx
										4 AGMCORE_plate_ndx sub -1/roll cvx
										4 1/roll cvx
										3[/pop cvx]cvx/repeat cvx
										1/exch cvx/sub cvx
										]cvx									
									]def
								}{
								AGMCORE_report_unsupported_color_space
								AGMCORE_black_plate not
									{
									currentdict 0 false AGMCORE_separateShading
									}if
								}ifelse
							}{
							currentdict ColorSpace 1 get AGMCORE_IsCurrentColor
							0 exch 
							dup not currentoverprint and
								{/AGMCORE_ignoreshade true def}if
							AGMCORE_separateShading
							}ifelse	
						}if			
					currentdict
					end exch
					}if
				dup 0 get/DeviceN eq
					{
					exch begin
					ColorSpace 1 get convert_to_process
						{
						ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
							{
							/ColorSpace
								[
								/DeviceN
								ColorSpace 1 get
								/DeviceGray
									[
									ColorSpace 3 get/exec cvx
									4 AGMCORE_plate_ndx sub -1/roll cvx
									4 1/roll cvx
									3[/pop cvx]cvx/repeat cvx
									1/exch cvx/sub cvx
									]cvx									
								]def
							}{
							AGMCORE_report_unsupported_color_space
							AGMCORE_black_plate not
								{
								currentdict 0 false AGMCORE_separateShading
								/ColorSpace[/DeviceGray]def
								}if
							}ifelse
						}{
						currentdict
						false -1 ColorSpace 1 get
							{
							AGMCORE_IsCurrentColor
								{
								1 add
								exch pop true exch exit
								}if
							1 add
							}forall
						exch 
						dup not currentoverprint and
							{/AGMCORE_ignoreshade true def}if
						AGMCORE_separateShading
						}ifelse
					currentdict
					end exch
					}if
				dup 0 get dup/DeviceCMYK eq exch dup/Separation eq exch/DeviceN eq or or not
					{
					exch begin
					ColorSpace dup type/arraytype eq
						{0 get}if
					/DeviceGray ne
						{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate not
							{
							ColorSpace 0 get/CIEBasedA eq
								{
								/ColorSpace[/Separation/_ciebaseda_/DeviceGray{}]def
								}if
							ColorSpace 0 get dup/CIEBasedABC eq exch dup/CIEBasedDEF eq exch/DeviceRGB eq or or
								{
								/ColorSpace[/DeviceN[/_red_/_green_/_blue_]/DeviceRGB{}]def
								}if
							ColorSpace 0 get/CIEBasedDEFG eq
								{
								/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
								}if
							currentdict 0 false AGMCORE_separateShading
							}if
						}if
					currentdict
					end exch
					}if
				pop
				dup/AGMCORE_ignoreshade known
					{
					begin
					/ColorSpace[/Separation(None)/DeviceGray{}]def
					currentdict end
					}if
				}def
			/shfill
				{
				AGMCORE_separateShadingDict 
				dup/AGMCORE_ignoreshade known
					{pop}
					{AGMCORE_&sysshfill}ifelse
				}def
			/makepattern
				{
				exch
				dup/PatternType get 2 eq
					{
					clonedict
					begin
					/Shading Shading AGMCORE_separateShadingDict def
					Shading/AGMCORE_ignoreshade known
					currentdict end exch
					{pop<</PatternType 1/PaintProc{pop}/BBox[0 0 1 1]/XStep 1/YStep 1/PaintType 1/TilingType 3>>}if
					exch AGMCORE_&sysmakepattern
					}{
					exch AGMCORE_&usrmakepattern
					}ifelse
				}def
		}if
	}if
	AGMCORE_in_rip_sep{
		/setcustomcolor
		{
			exch aload pop
			dup 7 1 roll inRip_spot_has_ink not	{
				4{4 index mul 4 1 roll}
				repeat
				/DeviceCMYK setcolorspace
				6 -2 roll pop pop
			}{
				//Adobe_AGM_Core begin
					/AGMCORE_k xdf/AGMCORE_y xdf/AGMCORE_m xdf/AGMCORE_c xdf
				end
				[/Separation 4 -1 roll/DeviceCMYK
				{dup AGMCORE_c mul exch dup AGMCORE_m mul exch dup AGMCORE_y mul exch AGMCORE_k mul}
				]
				setcolorspace
			}ifelse
			setcolor
		}ndf
		/setseparationgray
		{
			[/Separation(All)/DeviceGray{}]setcolorspace_opt
			1 exch sub setcolor
		}ndf
	}{
		/setseparationgray
		{
			AGMCORE_&setgray
		}ndf
	}ifelse
	/findcmykcustomcolor
	{
		5 makereadonlyarray
	}ndf
	/setcustomcolor
	{
		exch aload pop pop
		4{4 index mul 4 1 roll}repeat
		setcmykcolor pop
	}ndf
	/has_color
		/colorimage where{
			AGMCORE_producing_seps{
				pop true
			}{
				systemdict eq
			}ifelse
		}{
			false
		}ifelse
	def
	/map_index
	{
		1 index mul exch getinterval{255 div}forall
	}bdf
	/map_indexed_devn
	{
		Lookup Names length 3 -1 roll cvi map_index
	}bdf
	/n_color_components
	{
		base_colorspace_type
		dup/DeviceGray eq{
			pop 1
		}{
			/DeviceCMYK eq{
				4
			}{
				3
			}ifelse
		}ifelse
	}bdf
	level2{
		/mo/moveto ldf
		/li/lineto ldf
		/cv/curveto ldf
		/knockout_unitsq
		{
			1 setgray
			0 0 1 1 rectfill
		}def
		level2/setcolorspace AGMCORE_key_known not and{
			/AGMCORE_&&&setcolorspace/setcolorspace ldf
			/AGMCORE_ReplaceMappedColor
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					/AGMCORE_SpotAliasAry2 where{
						begin
						dup 0 get dup/Separation eq
						{
							pop
							dup length array copy
							dup dup 1 get
							current_spot_alias
							{
								dup map_alias
								{
									false set_spot_alias
									dup 1 exch setsepcolorspace
									true set_spot_alias
									begin
									/sep_colorspace_dict currentdict AGMCORE_gput
									pop pop	pop
									[
										/Separation Name 
										CSA map_csa
										MappedCSA 
										/sep_colorspace_proc load
									]
									dup Name
									end
								}if
							}if
							map_reserved_ink_name 1 xpt
						}{
							/DeviceN eq 
							{
								dup length array copy
								dup dup 1 get[
									exch{
										current_spot_alias{
											dup map_alias{
												/Name get exch pop
											}if
										}if
										map_reserved_ink_name
									}forall 
								]1 xpt
							}if
						}ifelse
						end
					}if
				}if
			}def
			/setcolorspace
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					dup 0 get/Indexed eq
					{
						AGMCORE_distilling
						{
							/PhotoshopDuotoneList where
							{
								pop false
							}{
								true
							}ifelse
						}{
							true
						}ifelse
						{
							aload pop 3 -1 roll
							AGMCORE_ReplaceMappedColor
							3 1 roll 4 array astore
						}if
					}{
						AGMCORE_ReplaceMappedColor
					}ifelse
				}if
				DeviceN_PS2_inRip_seps{AGMCORE_&&&setcolorspace}if
			}def
		}if	
	}{
		/adj
		{
			currentstrokeadjust{
				transform
				0.25 sub round 0.25 add exch
				0.25 sub round 0.25 add exch
				itransform
			}if
		}def
		/mo{
			adj moveto
		}def
		/li{
			adj lineto
		}def
		/cv{
			6 2 roll adj
			6 2 roll adj
			6 2 roll adj curveto
		}def
		/knockout_unitsq
		{
			1 setgray
			8 8 1[8 0 0 8 0 0]{<ffffffffffffffff>}image
		}def
		/currentstrokeadjust{
			/currentstrokeadjust AGMCORE_gget
		}def
		/setstrokeadjust{
			/currentstrokeadjust exch AGMCORE_gput
		}def
		/setcolorspace
		{
			/currentcolorspace exch AGMCORE_gput
		}def
		/currentcolorspace
		{
			/currentcolorspace AGMCORE_gget
		}def
		/setcolor_devicecolor
		{
			base_colorspace_type
			dup/DeviceGray eq{
				pop setgray
			}{
				/DeviceCMYK eq{
					setcmykcolor
				}{
					setrgbcolor
				}ifelse
			}ifelse
		}def
		/setcolor
		{
			currentcolorspace 0 get
			dup/DeviceGray ne{
				dup/DeviceCMYK ne{
					dup/DeviceRGB ne{
						dup/Separation eq{
							pop
							currentcolorspace 3 gx
							currentcolorspace 2 get
						}{
							dup/Indexed eq{
								pop
								currentcolorspace 3 get dup type/stringtype eq{
									currentcolorspace 1 get n_color_components
									3 -1 roll map_index
								}{
									exec
								}ifelse
								currentcolorspace 1 get
							}{
								/AGMCORE_cur_err/AGMCORE_invalid_color_space def
								AGMCORE_invalid_color_space
							}ifelse
						}ifelse
					}if
				}if
			}if
			setcolor_devicecolor
		}def
	}ifelse
	/sop/setoverprint ldf
	/lw/setlinewidth ldf
	/lc/setlinecap ldf
	/lj/setlinejoin ldf
	/ml/setmiterlimit ldf
	/dsh/setdash ldf
	/sadj/setstrokeadjust ldf
	/gry/setgray ldf
	/rgb/setrgbcolor ldf
	/cmyk[
		/currentcolorspace[/DeviceCMYK]/AGMCORE_gput cvx
		/setcmykcolor load dup type/operatortype ne{/exec cvx}if
	]cvx bdf
	level3 AGMCORE_host_sep not and{
		/nzopmsc{
			6 dict begin
			/kk exch def
			/yy exch def
			/mm exch def
			/cc exch def
			/sum 0 def
			cc 0 ne{/sum sum 2#1000 or def cc}if
			mm 0 ne{/sum sum 2#0100 or def mm}if
			yy 0 ne{/sum sum 2#0010 or def yy}if
			kk 0 ne{/sum sum 2#0001 or def kk}if
			AGMCORE_CMYKDeviceNColorspaces sum get setcolorspace
			sum 0 eq{0}if
			end
			setcolor
		}bdf
	}{
		/nzopmsc/cmyk ldf
	}ifelse
	/sep/setsepcolor ldf
	/devn/setdevicencolor ldf
	/idx/setindexedcolor ldf
	/colr/setcolor ldf
	/csacrd/set_csa_crd ldf
	/sepcs/setsepcolorspace ldf
	/devncs/setdevicencolorspace ldf
	/idxcs/setindexedcolorspace ldf
	/cp/closepath ldf
	/clp/clp_npth ldf
	/eclp/eoclp_npth ldf
	/f/fill ldf
	/ef/eofill ldf
	/@/stroke ldf
	/nclp/npth_clp ldf
	/gset/graphic_setup ldf
	/gcln/graphic_cleanup ldf
	/ct/concat ldf
	/cf/currentfile ldf
	/fl/filter ldf
	/rs/readstring ldf
	/AGMCORE_def_ht currenthalftone def
	/clonedict Adobe_AGM_Utils begin/clonedict load end def
	/clonearray Adobe_AGM_Utils begin/clonearray load end def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
	/getrampcolor
	{
		/indx exch def
		0 1 NumComp 1 sub
		{
			dup
			Samples exch get
			dup type/stringtype eq{indx get}if
			exch
			Scaling exch get aload pop
			3 1 roll
			mul add
		}for
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse
	}bdf
	/sssetbackground{
		aload pop 
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse	
	}bdf
	/RadialShade
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/r2 xdf
		/c2y xdf
		/c2x xdf
		/r1 xdf
		/c1y xdf
		/c1x xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		c1x c2x eq
		{
			c1y c2y lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope c2y c1y sub c2x c1x sub div def
			/theta slope 1 atan def
			c2x c1x lt c2y c1y ge and{/theta theta 180 sub def}if
			c2x c1x lt c2y c1y lt and{/theta theta 180 add def}if
		}ifelse
		gsave
		clippath
		c1x c1y translate
		theta rotate
		-90 rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax xdf
		/xMax xdf
		/yMin xdf
		/xMin xdf
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			/max{2 copy gt{pop}{exch pop}ifelse}bdf
			/min{2 copy lt{pop}{exch pop}ifelse}bdf
			rampdict begin
			40 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			c1x c1y translate
			theta rotate
			-90 rotate
			/c2y c1x c2x sub dup mul c1y c2y sub dup mul add sqrt def
			/c1y 0 def
			/c1x 0 def
			/c2x 0 def
			ext0
			{
				0 getrampcolor
				c2y r2 add r1 sub 0.0001 lt
				{
					c1x c1y r1 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2y r1 add r2 le
					{
						c1x c1y r1 0 360 arc
						fill
					}
					{
						c2x c2y r2 0 360 arc fill
						r1 r2 eq
						{
							/p1x r1 neg def
							/p1y c1y def
							/p2x r1 def
							/p2y c1y def
							p1x p1y moveto p2x p2y lineto p2x yMin lineto p1x yMin lineto
							fill
						}{
							/AA r2 r1 sub c2y div def
							AA -1 eq
							{/theta 89.99 def}
							{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
							ifelse
							/SS1 90 theta add dup sin exch cos div def
							/p1x r1 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
							/p1y p1x SS1 div neg def
							/SS2 90 theta sub dup sin exch cos div def
							/p2x r1 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
							/p2y p2x SS2 div neg def
							r1 r2 gt
							{
								/L1maxX p1x yMin p1y sub SS1 div add def
								/L2maxX p2x yMin p2y sub SS2 div add def
							}{
								/L1maxX 0 def
								/L2maxX 0 def
							}ifelse
							p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
							L1maxX L1maxX p1x sub SS1 mul p1y add lineto
							fill
						}ifelse
					}ifelse
				}ifelse
			}if
		c1x c2x sub dup mul
		c1y c2y sub dup mul
		add 0.5 exp
		0 dtransform
		dup mul exch dup mul add 0.5 exp 72 div
		0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		1 index 1 index lt{exch}if pop
		/hires xdf
		hires mul
		/numpix xdf
		/numsteps NumSamples def
		/rampIndxInc 1 def
		/subsampling false def
		numpix 0 ne
		{
			NumSamples numpix div 0.5 gt
			{
				/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
				/rampIndxInc NumSamples 1 sub numsteps div def
				/subsampling true def
			}if
		}if
		/xInc c2x c1x sub numsteps div def
		/yInc c2y c1y sub numsteps div def
		/rInc r2 r1 sub numsteps div def
		/cx c1x def
		/cy c1y def
		/radius r1 def
		np
		xInc 0 eq yInc 0 eq rInc 0 eq and and
		{
			0 getrampcolor
			cx cy radius 0 360 arc
			stroke
			NumSamples 1 sub getrampcolor
			cx cy radius 72 hires div add 0 360 arc
			0 setlinewidth
			stroke
		}{
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				cx cy radius 0 360 arc
				/cx cx xInc add def
				/cy cy yInc add def
				/radius radius rInc add def
				cx cy radius 360 0 arcn
				eofill
				rampIndxInc add
			}repeat
			pop
		}ifelse
		ext1
		{
			c2y r2 add r1 lt
			{
				c2x c2y r2 0 360 arc
				fill
			}{
				c2y r1 add r2 sub 0.0001 le
				{
					c2x c2y r2 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2x c2y r2 0 360 arc fill
					r1 r2 eq
					{
						/p1x r2 neg def
						/p1y c2y def
						/p2x r2 def
						/p2y c2y def
						p1x p1y moveto p2x p2y lineto p2x yMax lineto p1x yMax lineto
						fill
					}{
						/AA r2 r1 sub c2y div def
						AA -1 eq
						{/theta 89.99 def}
						{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
						ifelse
						/SS1 90 theta add dup sin exch cos div def
						/p1x r2 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
						/p1y c2y p1x SS1 div sub def
						/SS2 90 theta sub dup sin exch cos div def
						/p2x r2 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
						/p2y c2y p2x SS2 div sub def
						r1 r2 lt
						{
							/L1maxX p1x yMax p1y sub SS1 div add def
							/L2maxX p2x yMax p2y sub SS2 div add def
						}{
							/L1maxX 0 def
							/L2maxX 0 def
						}ifelse
						p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
						L1maxX L1maxX p1x sub SS1 mul p1y add lineto
						fill
					}ifelse
				}ifelse
			}ifelse
		}if
		grestore
		grestore
		end
		end
		end
		}ifelse
	}bdf
	/GenStrips
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/y2 xdf
		/x2 xdf
		/y1 xdf
		/x1 xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		x1 x2 eq
		{
			y1 y2 lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope y2 y1 sub x2 x1 sub div def
			/theta slope 1 atan def
			x2 x1 lt y2 y1 ge and{/theta theta 180 sub def}if
			x2 x1 lt y2 y1 lt and{/theta theta 180 add def}if
		}
		ifelse
		gsave
		clippath
		x1 y1 translate
		theta rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax exch def
		/xMax exch def
		/yMin exch def
		/xMin exch def
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			rampdict begin
			20 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			x1 y1 translate
			theta rotate
			/xStart 0 def
			/xEnd x2 x1 sub dup mul y2 y1 sub dup mul add 0.5 exp def
			/ySpan yMax yMin sub def
			/numsteps NumSamples def
			/rampIndxInc 1 def
			/subsampling false def
			xStart 0 transform
			xEnd 0 transform
			3 -1 roll
			sub dup mul
			3 1 roll
			sub dup mul
			add 0.5 exp 72 div
			0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			1 index 1 index lt{exch}if pop
			mul
			/numpix xdf
			numpix 0 ne
			{
				NumSamples numpix div 0.5 gt
				{
					/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
					/rampIndxInc NumSamples 1 sub numsteps div def
					/subsampling true def
				}if
			}if
			ext0
			{
				0 getrampcolor
				xMin xStart lt
				{
					xMin yMin xMin neg ySpan rectfill
				}if
			}if
			/xInc xEnd xStart sub numsteps div def
			/x xStart def
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				x yMin xInc ySpan rectfill
				/x x xInc add def
				rampIndxInc add
			}repeat
			pop
			ext1{
				xMax xEnd gt
				{
					xEnd yMin xMax xEnd sub ySpan rectfill
				}if
			}if
			grestore
			grestore
			end
			end
			end
		}ifelse
	}bdf
}def
/pt
{
	end
}def
/dt{
}def
/pgsv{
	//Adobe_AGM_Core/AGMCORE_save save put
}def
/pgrs{
	//Adobe_AGM_Core/AGMCORE_save get restore
}def
systemdict/findcolorrendering known{
	/findcolorrendering systemdict/findcolorrendering get def
}if
systemdict/setcolorrendering known{
	/setcolorrendering systemdict/setcolorrendering get def
}if
/test_cmyk_color_plate
{
	gsave
	setcmykcolor currentgray 1 ne
	grestore
}def
/inRip_spot_has_ink
{
	dup//Adobe_AGM_Core/AGMCORE_name xddf
	convert_spot_to_process not
}def
/map255_to_range
{
	1 index sub
	3 -1 roll 255 div mul add
}def
/set_csa_crd
{
	/sep_colorspace_dict null AGMCORE_gput
	begin
		CSA get_csa_by_name setcolorspace_opt
		set_crd
	end
}
def
/map_csa
{
	currentdict/MappedCSA known{MappedCSA null ne}{false}ifelse
	{pop}{get_csa_by_name/MappedCSA xdf}ifelse
}def
/setsepcolor
{
	/sep_colorspace_dict AGMCORE_gget begin
		dup/sep_tint exch AGMCORE_gput
		TintProc
	end
}def
/setdevicencolor
{
	/devicen_colorspace_dict AGMCORE_gget begin
		Names length copy
		Names length 1 sub -1 0
		{
			/devicen_tints AGMCORE_gget 3 1 roll xpt
		}for
		TintProc
	end
}def
/sep_colorspace_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	currentdict/Components known{
		Components aload pop 
		TintMethod/Lab eq{
			2{AGMCORE_tmp mul NComponents 1 roll}repeat
			LMax sub AGMCORE_tmp mul LMax add NComponents 1 roll
		}{
			TintMethod/Subtractive eq{
				NComponents{
					AGMCORE_tmp mul NComponents 1 roll
				}repeat
			}{
				NComponents{
					1 sub AGMCORE_tmp mul 1 add NComponents 1 roll
				}repeat
			}ifelse
		}ifelse
	}{
		ColorLookup AGMCORE_tmp ColorLookup length 1 sub mul round cvi get
		aload pop
	}ifelse
	end
}def
/sep_colorspace_gray_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	GrayLookup AGMCORE_tmp GrayLookup length 1 sub mul round cvi get
	end
}def
/sep_proc_name
{
	dup 0 get 
	dup/DeviceRGB eq exch/DeviceCMYK eq or level2 not and has_color not and{
		pop[/DeviceGray]
		/sep_colorspace_gray_proc
	}{
		/sep_colorspace_proc
	}ifelse
}def
/setsepcolorspace
{
	current_spot_alias{
		dup begin
			Name map_alias{
				exch pop
			}if
		end
	}if
	dup/sep_colorspace_dict exch AGMCORE_gput
	begin
	CSA map_csa
	/AGMCORE_sep_special Name dup()eq exch(All)eq or store
	AGMCORE_avoid_L2_sep_space{
		[/Indexed MappedCSA sep_proc_name 255 exch 
			{255 div}/exec cvx 3 -1 roll[4 1 roll load/exec cvx]cvx 
		]setcolorspace_opt
		/TintProc{
			255 mul round cvi setcolor
		}bdf
	}{
		MappedCSA 0 get/DeviceCMYK eq 
		currentdict/Components known and 
		AGMCORE_sep_special not and{
			/TintProc[
				Components aload pop Name findcmykcustomcolor 
				/exch cvx/setcustomcolor cvx
			]cvx bdf
		}{
 			AGMCORE_host_sep Name(All)eq and{
 				/TintProc{
					1 exch sub setseparationgray 
				}bdf
 			}{
				AGMCORE_in_rip_sep MappedCSA 0 get/DeviceCMYK eq and 
				AGMCORE_host_sep or
				Name()eq and{
					/TintProc[
						MappedCSA sep_proc_name exch 0 get/DeviceCMYK eq{
							cvx/setcmykcolor cvx
						}{
							cvx/setgray cvx
						}ifelse
					]cvx bdf
				}{
					AGMCORE_producing_seps MappedCSA 0 get dup/DeviceCMYK eq exch/DeviceGray eq or and AGMCORE_sep_special not and{
	 					/TintProc[
							/dup cvx
							MappedCSA sep_proc_name cvx exch
							0 get/DeviceGray eq{
								1/exch cvx/sub cvx 0 0 0 4 -1/roll cvx
							}if
							/Name cvx/findcmykcustomcolor cvx/exch cvx
							AGMCORE_host_sep{
								AGMCORE_is_cmyk_sep
								/Name cvx 
								/AGMCORE_IsSeparationAProcessColor load/exec cvx
								/not cvx/and cvx 
							}{
								Name inRip_spot_has_ink not
							}ifelse
							[
		 						/pop cvx 1
							]cvx/if cvx
							/setcustomcolor cvx
						]cvx bdf
 					}{
						/TintProc{setcolor}bdf
						[/Separation Name MappedCSA sep_proc_name load]setcolorspace_opt
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	}ifelse
	set_crd
	setsepcolor
	end
}def
/additive_blend
{
 	3 dict begin
 	/numarrays xdf
 	/numcolors xdf
 	0 1 numcolors 1 sub
 		{
 		/c1 xdf
 		1
 		0 1 numarrays 1 sub
 			{
			1 exch add/index cvx
 			c1/get cvx/mul cvx
 			}for
 		numarrays 1 add 1/roll cvx 
 		}for
 	numarrays[/pop cvx]cvx/repeat cvx
 	end
}def
/subtractive_blend
{
	3 dict begin
	/numarrays xdf
	/numcolors xdf
	0 1 numcolors 1 sub
		{
		/c1 xdf
		1 1
		0 1 numarrays 1 sub
			{
			1 3 3 -1 roll add/index cvx 
			c1/get cvx/sub cvx/mul cvx
			}for
		/sub cvx
		numarrays 1 add 1/roll cvx
		}for
	numarrays[/pop cvx]cvx/repeat cvx
	end
}def
/exec_tint_transform
{
	/TintProc[
		/TintTransform cvx/setcolor cvx
	]cvx bdf
	MappedCSA setcolorspace_opt
}bdf
/devn_makecustomcolor
{
	2 dict begin
	/names_index xdf
	/Names xdf
	1 1 1 1 Names names_index get findcmykcustomcolor
	/devicen_tints AGMCORE_gget names_index get setcustomcolor
	Names length{pop}repeat
	end
}bdf
/setdevicencolorspace
{
	dup/AliasedColorants known{false}{true}ifelse 
	current_spot_alias and{
		7 dict begin
		/names_index 0 def
		dup/names_len exch/Names get length def
		/new_names names_len array def
		/new_LookupTables names_len array def
		/alias_cnt 0 def
		dup/Names get
		{
			dup map_alias{
				exch pop
				dup/ColorLookup known{
					dup begin
					new_LookupTables names_index ColorLookup put
					end
				}{
					dup/Components known{
						dup begin
						new_LookupTables names_index Components put
						end
					}{
						dup begin
						new_LookupTables names_index[null null null null]put
						end
					}ifelse
				}ifelse
				new_names names_index 3 -1 roll/Name get put
				/alias_cnt alias_cnt 1 add def 
			}{
				/name xdf				
				new_names names_index name put
				dup/LookupTables known{
					dup begin
					new_LookupTables names_index LookupTables names_index get put
					end
				}{
					dup begin
					new_LookupTables names_index[null null null null]put
					end
				}ifelse
			}ifelse
			/names_index names_index 1 add def 
		}forall
		alias_cnt 0 gt{
			/AliasedColorants true def
			/lut_entry_len new_LookupTables 0 get dup length 256 ge{0 get length}{length}ifelse def
			0 1 names_len 1 sub{
				/names_index xdf
				new_LookupTables names_index get dup length 256 ge{0 get length}{length}ifelse lut_entry_len ne{
					/AliasedColorants false def
					exit
				}{
					new_LookupTables names_index get 0 get null eq{
						dup/Names get names_index get/name xdf
						name(Cyan)eq name(Magenta)eq name(Yellow)eq name(Black)eq
						or or or not{
							/AliasedColorants false def
							exit
						}if
					}if
				}ifelse
			}for
			lut_entry_len 1 eq{
				/AliasedColorants false def
			}if
			AliasedColorants{
				dup begin
				/Names new_names def
				/LookupTables new_LookupTables def
				/AliasedColorants true def
				/NComponents lut_entry_len def
				/TintMethod NComponents 4 eq{/Subtractive}{/Additive}ifelse def
				/MappedCSA TintMethod/Additive eq{/DeviceRGB}{/DeviceCMYK}ifelse def
				currentdict/TTTablesIdx known not{
					/TTTablesIdx -1 def
				}if
				end
			}if
		}if
		end
	}if
	dup/devicen_colorspace_dict exch AGMCORE_gput
	begin
	currentdict/AliasedColorants known{
		AliasedColorants
	}{
		false
	}ifelse
	dup not{
		CSA map_csa
	}if
	/TintTransform load type/nulltype eq or{
		/TintTransform[
			0 1 Names length 1 sub
				{
				/TTTablesIdx TTTablesIdx 1 add def
				dup LookupTables exch get dup 0 get null eq
					{
					1 index
					Names exch get
					dup(Cyan)eq
						{
						pop exch
						LookupTables length exch sub
						/index cvx
						0 0 0
						}
						{
						dup(Magenta)eq
							{
							pop exch
							LookupTables length exch sub
							/index cvx
							0/exch cvx 0 0
							}{
							(Yellow)eq
								{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 3 -1/roll cvx 0
								}{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 0 4 -1/roll cvx
								}ifelse
							}ifelse
						}ifelse
					5 -1/roll cvx/astore cvx
					}{
					dup length 1 sub
					LookupTables length 4 -1 roll sub 1 add
					/index cvx/mul cvx/round cvx/cvi cvx/get cvx
					}ifelse
					Names length TTTablesIdx add 1 add 1/roll cvx
				}for
			Names length[/pop cvx]cvx/repeat cvx
			NComponents Names length
 			TintMethod/Subtractive eq
 				{
 				subtractive_blend
 				}{
 				additive_blend
 				}ifelse
		]cvx bdf
	}if
	AGMCORE_host_sep{
		Names convert_to_process{
			exec_tint_transform
		}
		{	
			currentdict/AliasedColorants known{
				AliasedColorants not
			}{
				false
			}ifelse
			5 dict begin
			/AvoidAliasedColorants xdf
			/painted? false def
			/names_index 0 def
			/names_len Names length def
			AvoidAliasedColorants{
				/currentspotalias current_spot_alias def
				false set_spot_alias
			}if
			Names{
				AGMCORE_is_cmyk_sep{
					dup(Cyan)eq AGMCORE_cyan_plate and exch
					dup(Magenta)eq AGMCORE_magenta_plate and exch
					dup(Yellow)eq AGMCORE_yellow_plate and exch
					(Black)eq AGMCORE_black_plate and or or or{
						/devicen_colorspace_dict AGMCORE_gget/TintProc[
							Names names_index/devn_makecustomcolor cvx
						]cvx ddf
						/painted? true def
					}if
					painted?{exit}if
				}{
					0 0 0 0 5 -1 roll findcmykcustomcolor 1 setcustomcolor currentgray 0 eq{
					/devicen_colorspace_dict AGMCORE_gget/TintProc[
						Names names_index/devn_makecustomcolor cvx
					]cvx ddf
					/painted? true def
					exit
					}if
				}ifelse
				/names_index names_index 1 add def
			}forall
			AvoidAliasedColorants{
				currentspotalias set_spot_alias
			}if
			painted?{
				/devicen_colorspace_dict AGMCORE_gget/names_index names_index put
			}{
				/devicen_colorspace_dict AGMCORE_gget/TintProc[
					names_len[/pop cvx]cvx/repeat cvx 1/setseparationgray cvx
 					0 0 0 0/setcmykcolor cvx
				]cvx ddf
			}ifelse
			end
		}ifelse
	}
	{
		AGMCORE_in_rip_sep{
			Names convert_to_process not
		}{
			level3
		}ifelse
		{
			[/DeviceN Names MappedCSA/TintTransform load]setcolorspace_opt
			/TintProc level3 not AGMCORE_in_rip_sep and{
				[
					Names/length cvx[/pop cvx]cvx/repeat cvx
				]cvx bdf
			}{
				{setcolor}bdf
			}ifelse
		}{
			exec_tint_transform
		}ifelse
	}ifelse
	set_crd
	/AliasedColorants false def
	end
}def
/setindexedcolorspace
{
	dup/indexed_colorspace_dict exch AGMCORE_gput
	begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				currentdict devncs
			}{
				1 currentdict sepcs
			}ifelse
			AGMCORE_host_sep{
				4 dict begin
				/compCnt/Names where{pop Names length}{1}ifelse def
				/NewLookup HiVal 1 add string def
				0 1 HiVal{
					/tableIndex xdf
					Lookup dup type/stringtype eq{
						compCnt tableIndex map_index
					}{
						exec
					}ifelse
					/Names where{
						pop setdevicencolor
					}{
						setsepcolor
					}ifelse
					currentgray
					tableIndex exch
					255 mul cvi 
					NewLookup 3 1 roll put
				}for
				[/Indexed currentcolorspace HiVal NewLookup]setcolorspace_opt
				end
			}{
				level3
				{
					currentdict/Names known{
						[/Indexed[/DeviceN Names MappedCSA/TintTransform load]HiVal Lookup]setcolorspace_opt
					}{
						[/Indexed[/Separation Name MappedCSA sep_proc_name load]HiVal Lookup]setcolorspace_opt
					}ifelse
				}{
				[/Indexed MappedCSA HiVal
					[
					currentdict/Names known{
						Lookup dup type/stringtype eq
							{/exch cvx CSDBase/CSD get_res/Names get length dup/mul cvx exch/getinterval cvx{255 div}/forall cvx}
							{/exec cvx}ifelse
							/TintTransform load/exec cvx
					}{
						Lookup dup type/stringtype eq
							{/exch cvx/get cvx 255/div cvx}
							{/exec cvx}ifelse
							CSDBase/CSD get_res/MappedCSA get sep_proc_name exch pop/load cvx/exec cvx
					}ifelse
					]cvx
				]setcolorspace_opt
				}ifelse
			}ifelse
			end
			set_crd
		}
		{
			CSA map_csa
			AGMCORE_host_sep level2 not and{
				0 0 0 0 setcmykcolor
			}{
				[/Indexed MappedCSA 
				level2 not has_color not and{
					dup 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or{
						pop[/DeviceGray]
					}if
					HiVal GrayLookup
				}{
					HiVal 
					currentdict/RangeArray known{
						{
							/indexed_colorspace_dict AGMCORE_gget begin
							Lookup exch 
							dup HiVal gt{
								pop HiVal
							}if
							NComponents mul NComponents getinterval{}forall
							NComponents 1 sub -1 0{
								RangeArray exch 2 mul 2 getinterval aload pop map255_to_range
								NComponents 1 roll
							}for
							end
						}bind
					}{
						Lookup
					}ifelse
				}ifelse
				]setcolorspace_opt
				set_crd
			}ifelse
		}ifelse
	end
}def
/setindexedcolor
{
	AGMCORE_host_sep{
		/indexed_colorspace_dict AGMCORE_gget
		begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				map_indexed_devn
				devn
			}
			{
				Lookup 1 3 -1 roll map_index
				sep
			}ifelse
			end
		}{
			Lookup MappedCSA/DeviceCMYK eq{4}{1}ifelse 3 -1 roll
			map_index
			MappedCSA/DeviceCMYK eq{setcmykcolor}{setgray}ifelse
		}ifelse
		end
	}{
		level3 not AGMCORE_in_rip_sep and/indexed_colorspace_dict AGMCORE_gget/CSDBase known and{
			/indexed_colorspace_dict AGMCORE_gget/CSDBase get/CSD get_res begin
			map_indexed_devn
			devn
			end
		}
		{
			setcolor
		}ifelse
	}ifelse
}def
/ignoreimagedata
{
	currentoverprint not{
		gsave
		dup clonedict begin
		1 setgray
		/Decode[0 1]def
		/DataSource<FF>def
		/MultipleDataSources false def
		/BitsPerComponent 8 def
		currentdict end
		systemdict/image gx
		grestore
		}if
	consumeimagedata
}def
/add_res
{
	dup/CSD eq{
		pop 
		//Adobe_AGM_Core begin
		/AGMCORE_CSD_cache load 3 1 roll put
		end
	}{
		defineresource pop
	}ifelse
}def
/del_res
{
	{
		aload pop exch
		dup/CSD eq{
			pop 
			{//Adobe_AGM_Core/AGMCORE_CSD_cache get exch undef}forall
		}{
			exch
			{1 index undefineresource}forall
			pop
		}ifelse
	}forall
}def
/get_res
{
	dup/CSD eq{
		pop
		dup type dup/nametype eq exch/stringtype eq or{
			AGMCORE_CSD_cache exch get
		}if
	}{
		findresource
	}ifelse
}def
/get_csa_by_name
{
	dup type dup/nametype eq exch/stringtype eq or{
		/CSA get_res
	}if
}def
/paintproc_buf_init
{
	/count get 0 0 put
}def
/paintproc_buf_next
{
	dup/count get dup 0 get
	dup 3 1 roll
	1 add 0 xpt
	get				
}def
/cachepaintproc_compress
{
	5 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	/string_size 16000 def
	/readbuffer string_size string def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	/LZWFilter 
	{
		exch
		dup length 0 eq{
			pop
		}{
			ppdict dup length 1 sub 3 -1 roll put
		}ifelse
		{string_size}{0}ifelse string
	}/LZWEncode filter def
	{		
		ReadFilter readbuffer readstring
		exch LZWFilter exch writestring
		not{exit}if
	}loop
	LZWFilter closefile
	ppdict				
	end
}def
/cachepaintproc
{
	2 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	{
		ReadFilter 16000 string readstring exch
		ppdict dup length 1 sub 3 -1 roll put
		not{exit}if
	}loop
	ppdict dup dup length 1 sub()put					
	end	
}def
/make_pattern
{
	exch clonedict exch
	dup matrix currentmatrix matrix concatmatrix 0 0 3 2 roll itransform
	exch 3 index/XStep get 1 index exch 2 copy div cvi mul sub sub
	exch 3 index/YStep get 1 index exch 2 copy div cvi mul sub sub
	matrix translate exch matrix concatmatrix
			 1 index begin
		BBox 0 get XStep div cvi XStep mul/xshift exch neg def
		BBox 1 get YStep div cvi YStep mul/yshift exch neg def
		BBox 0 get xshift add
		BBox 1 get yshift add
		BBox 2 get xshift add
		BBox 3 get yshift add
		4 array astore
		/BBox exch def
		[xshift yshift/translate load null/exec load]dup
		3/PaintProc load put cvx/PaintProc exch def
		end
	gsave 0 setgray
	makepattern
	grestore
}def
/set_pattern
{
	dup/PatternType get 1 eq{
		dup/PaintType get 1 eq{
			currentoverprint sop[/DeviceGray]setcolorspace 0 setgray
		}if
	}if
	setpattern
}def
/setcolorspace_opt
{
	dup currentcolorspace eq{pop}{setcolorspace}ifelse
}def
/updatecolorrendering
{
	currentcolorrendering/RenderingIntent known{
		currentcolorrendering/RenderingIntent get
	}
	{
		Intent/AbsoluteColorimetric eq 
		{
			/absolute_colorimetric_crd AGMCORE_gget dup null eq
		}
		{
			Intent/RelativeColorimetric eq
			{
				/relative_colorimetric_crd AGMCORE_gget dup null eq
			}
			{
				Intent/Saturation eq
				{
					/saturation_crd AGMCORE_gget dup null eq
				}
				{
					/perceptual_crd AGMCORE_gget dup null eq
				}ifelse
			}ifelse
		}ifelse
		{
			pop null	
		}
		{
			/RenderingIntent known{null}{Intent}ifelse
		}ifelse
	}ifelse
	Intent ne{
		Intent/ColorRendering{findresource}stopped
		{
			pop pop systemdict/findcolorrendering known
			{
 				Intent findcolorrendering
 				{
 					/ColorRendering findresource true exch
 				}
 				{
 					/ColorRendering findresource
					product(Xerox Phaser 5400)ne
					exch
 				}ifelse
				dup Intent/AbsoluteColorimetric eq 
				{
					/absolute_colorimetric_crd exch AGMCORE_gput
				}
				{
					Intent/RelativeColorimetric eq
					{
						/relative_colorimetric_crd exch AGMCORE_gput
					}
					{
						Intent/Saturation eq
						{
							/saturation_crd exch AGMCORE_gput
						}
						{
							Intent/Perceptual eq
							{
								/perceptual_crd exch AGMCORE_gput
							}
							{
								pop
							}ifelse
						}ifelse
					}ifelse
				}ifelse
				1 index{exch}{pop}ifelse
			}
			{false}ifelse
		}
		{true}ifelse
		{
			dup begin
			currentdict/TransformPQR known{
				currentdict/TransformPQR get aload pop
				3{{}eq 3 1 roll}repeat or or
			}
			{true}ifelse
			currentdict/MatrixPQR known{
				currentdict/MatrixPQR get aload pop
				1.0 eq 9 1 roll 0.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 1.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 0.0 eq 9 1 roll 1.0 eq
				and and and and and and and and
			}
			{true}ifelse
			end
			or
			{
				clonedict begin
				/TransformPQR[
					{4 -1 roll 3 get dup 3 1 roll sub 5 -1 roll 3 get 3 -1 roll sub div
					3 -1 roll 3 get 3 -1 roll 3 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 4 get dup 3 1 roll sub 5 -1 roll 4 get 3 -1 roll sub div
					3 -1 roll 4 get 3 -1 roll 4 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 5 get dup 3 1 roll sub 5 -1 roll 5 get 3 -1 roll sub div
					3 -1 roll 5 get 3 -1 roll 5 get dup 4 1 roll sub mul add}bind
				]def
				/MatrixPQR[0.8951 -0.7502 0.0389 0.2664 1.7135 -0.0685 -0.1614 0.0367 1.0296]def
				/RangePQR[-0.3227950745 2.3229645538 -1.5003771057 3.5003465881 -0.1369979095 2.136967392]def
				currentdict end
			}if
			setcolorrendering_opt
		}if		
	}if
}def
/set_crd
{
	AGMCORE_host_sep not level2 and{
		currentdict/ColorRendering known{
			ColorRendering/ColorRendering{findresource}stopped not{setcolorrendering_opt}if
		}{
			currentdict/Intent known{
				updatecolorrendering
			}if
		}ifelse
		currentcolorspace dup type/arraytype eq
			{0 get}if
		/DeviceRGB eq
			{
			currentdict/UCR known
				{/UCR}{/AGMCORE_currentucr}ifelse
			load setundercolorremoval
			currentdict/BG known 
				{/BG}{/AGMCORE_currentbg}ifelse
			load setblackgeneration
			}if
	}if
}def
/set_ucrbg
{
	dup null eq {pop /AGMCORE_currentbg load}{/Procedure get_res}ifelse
	dup currentblackgeneration eq {pop}{setblackgeneration}ifelse
	dup null eq {pop /AGMCORE_currentucr load}{/Procedure get_res}ifelse
	dup currentundercolorremoval eq {pop}{setundercolorremoval}ifelse
}def
/setcolorrendering_opt
{
	dup currentcolorrendering eq{
		pop
	}{
		product(HP Color LaserJet 2605)anchorsearch{
			pop pop pop
		}{
			pop
			clonedict
			begin
				/Intent Intent def
				currentdict
			end
			setcolorrendering
		}ifelse
	}ifelse
}def
/cpaint_gcomp
{
	convert_to_process//Adobe_AGM_Core/AGMCORE_ConvertToProcess xddf
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get not
	{
		(%end_cpaint_gcomp)flushinput
	}if
}def
/cpaint_gsep
{
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get
	{	
		(%end_cpaint_gsep)flushinput
	}if
}def
/cpaint_gend
{np}def
/T1_path
{
	currentfile token pop currentfile token pop mo
	{
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 exch rlineto 
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 rlineto
	}loop
}def
/T1_gsave
	level3
	{/clipsave}
	{/gsave}ifelse
	load def
/T1_grestore
	level3
	{/cliprestore}
	{/grestore}ifelse 
	load def
/set_spot_alias_ary
{
	dup inherit_aliases
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry xddf
}def
/set_spot_normalization_ary
{
	dup inherit_aliases
	dup length
	/AGMCORE_SpotAliasAry where{pop AGMCORE_SpotAliasAry length add}if
	array
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry2 xddf
	/AGMCORE_SpotAliasAry where{
		pop
		AGMCORE_SpotAliasAry2 0 AGMCORE_SpotAliasAry putinterval
		AGMCORE_SpotAliasAry length
	}{0}ifelse
	AGMCORE_SpotAliasAry2 3 1 roll exch putinterval
	true set_spot_alias
}def
/inherit_aliases
{
	{dup/Name get map_alias{/CSD put}{pop}ifelse}forall
}def
/set_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias 3 -1 roll put
	}{
		pop
	}ifelse
}def
/current_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias get
	}{
		false
	}ifelse
}def
/map_alias
{
	/AGMCORE_SpotAliasAry2 where{
		begin
			/AGMCORE_name xdf
			false	
			AGMCORE_SpotAliasAry2{
				dup/Name get AGMCORE_name eq{
					/CSD get/CSD get_res
					exch pop true
					exit
				}{
					pop
				}ifelse
			}forall
		end
	}{
		pop false
	}ifelse
}bdf
/spot_alias
{
	true set_spot_alias
	/AGMCORE_&setcustomcolor AGMCORE_key_known not{
		//Adobe_AGM_Core/AGMCORE_&setcustomcolor/setcustomcolor load put
	}if
	/customcolor_tint 1 AGMCORE_gput
	//Adobe_AGM_Core begin
	/setcustomcolor
	{
		//Adobe_AGM_Core begin
		dup/customcolor_tint exch AGMCORE_gput
		1 index aload pop pop 1 eq exch 1 eq and exch 1 eq and exch 1 eq and not
		current_spot_alias and{1 index 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/sep_colorspace_dict AGMCORE_gget null ne
			{/sep_colorspace_dict AGMCORE_gget/ForeignContent known not}{false}ifelse
			3 1 roll 2 index{
				exch pop/sep_tint AGMCORE_gget exch
			}if
			mark 3 1 roll
			setsepcolorspace
			counttomark 0 ne{
				setsepcolor
			}if
			pop
			not{/sep_tint 1.0 AGMCORE_gput/sep_colorspace_dict AGMCORE_gget/ForeignContent true put}if
			pop
			true set_spot_alias
		}{
			AGMCORE_&setcustomcolor
		}ifelse
		end
	}bdf
	end
}def
/begin_feature
{
	Adobe_AGM_Core/AGMCORE_feature_dictCount countdictstack put
	count Adobe_AGM_Core/AGMCORE_feature_opCount 3 -1 roll put
	{Adobe_AGM_Core/AGMCORE_feature_ctm matrix currentmatrix put}if
}def
/end_feature
{
	2 dict begin
	/spd/setpagedevice load def
	/setpagedevice{get_gstate spd set_gstate}def
	stopped{$error/newerror false put}if
	end
	count Adobe_AGM_Core/AGMCORE_feature_opCount get sub dup 0 gt{{pop}repeat}{pop}ifelse
	countdictstack Adobe_AGM_Core/AGMCORE_feature_dictCount get sub dup 0 gt{{end}repeat}{pop}ifelse
	{Adobe_AGM_Core/AGMCORE_feature_ctm get setmatrix}if
}def
/set_negative
{
	//Adobe_AGM_Core begin
	/AGMCORE_inverting exch def
	level2{
		currentpagedevice/NegativePrint known AGMCORE_distilling not and{
			currentpagedevice/NegativePrint get//Adobe_AGM_Core/AGMCORE_inverting get ne{
				true begin_feature true{
						<</NegativePrint//Adobe_AGM_Core/AGMCORE_inverting get>>setpagedevice
				}end_feature
			}if
			/AGMCORE_inverting false def
		}if
	}if
	AGMCORE_inverting{
		[{1 exch sub}/exec load dup currenttransfer exch]cvx bind settransfer
 		AGMCORE_distilling{
 			erasepage
 		}{
 			gsave np clippath 1/setseparationgray where{pop setseparationgray}{setgray}ifelse
 			/AGMIRS_&fill where{pop AGMIRS_&fill}{fill}ifelse grestore
 		}ifelse
	}if
	end
}def
/lw_save_restore_override{
	/md where{
		pop
		md begin
		initializepage
		/initializepage{}def
		/pmSVsetup{}def
		/endp{}def
		/pse{}def
		/psb{}def
		/orig_showpage where
			{pop}
			{/orig_showpage/showpage load def}
		ifelse
		/showpage{orig_showpage gR}def
		end
	}if
}def
/pscript_showpage_override{
	/NTPSOct95 where
	{
		begin
		showpage
		save
		/showpage/restore load def
		/restore{exch pop}def
		end
	}if
}def
/driver_media_override
{
	/md where{
		pop
		md/initializepage known{
			md/initializepage{}put
		}if
		md/rC known{
			md/rC{4{pop}repeat}put
		}if
	}if
	/mysetup where{
		/mysetup[1 0 0 1 0 0]put
	}if
	Adobe_AGM_Core/AGMCORE_Default_CTM matrix currentmatrix put
	level2
		{Adobe_AGM_Core/AGMCORE_Default_PageSize currentpagedevice/PageSize get put}if
}def
/capture_mysetup
{
	/Pscript_Win_Data where{
		pop
		Pscript_Win_Data/mysetup known{
			Adobe_AGM_Core/save_mysetup Pscript_Win_Data/mysetup get put
		}if
	}if
}def
/restore_mysetup
{
	/Pscript_Win_Data where{
		pop
		Pscript_Win_Data/mysetup known{
			Adobe_AGM_Core/save_mysetup known{
				Pscript_Win_Data/mysetup Adobe_AGM_Core/save_mysetup get put
				Adobe_AGM_Core/save_mysetup undef
			}if
		}if
	}if
}def
/driver_check_media_override
{
 	/PrepsDict where
 		{pop}
		{
		Adobe_AGM_Core/AGMCORE_Default_CTM get matrix currentmatrix ne
		Adobe_AGM_Core/AGMCORE_Default_PageSize get type/arraytype eq
			{
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 0 get currentpagedevice/PageSize get 0 get eq and
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 1 get currentpagedevice/PageSize get 1 get eq and
			}if
			{
			Adobe_AGM_Core/AGMCORE_Default_CTM get setmatrix
			}if
		}ifelse
}def
AGMCORE_err_strings begin
	/AGMCORE_bad_environ(Environment not satisfactory for this job. Ensure that the PPD is correct or that the PostScript level requested is supported by this printer. )def
	/AGMCORE_color_space_onhost_seps(This job contains colors that will not separate with on-host methods. )def
	/AGMCORE_invalid_color_space(This job contains an invalid color space. )def
end
/set_def_ht
{AGMCORE_def_ht sethalftone}def
/set_def_flat
{AGMCORE_Default_flatness setflat}def
end
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_CoolType_Core 2.31 0
%%Copyright: Copyright 1997-2006 Adobe Systems Incorporated. All Rights Reserved.
%%Version: 2.31 0
10 dict begin
/Adobe_CoolType_Passthru currentdict def
/Adobe_CoolType_Core_Defined userdict/Adobe_CoolType_Core known def
Adobe_CoolType_Core_Defined
	{/Adobe_CoolType_Core userdict/Adobe_CoolType_Core get def}
if
userdict/Adobe_CoolType_Core 70 dict dup begin put
/Adobe_CoolType_Version 2.31 def
/Level2?
	systemdict/languagelevel known dup
		{pop systemdict/languagelevel get 2 ge}
	if def
Level2? not
	{
	/currentglobal false def
	/setglobal/pop load def
	/gcheck{pop false}bind def
	/currentpacking false def
	/setpacking/pop load def
	/SharedFontDirectory 0 dict def
	}
if
currentpacking
true setpacking
currentglobal false setglobal
userdict/Adobe_CoolType_Data 2 copy known not
	{2 copy 10 dict put}
if
get
	 begin
	/@opStackCountByLevel 32 dict def
	/@opStackLevel 0 def
	/@dictStackCountByLevel 32 dict def
	/@dictStackLevel 0 def
	 end
setglobal
currentglobal true setglobal
userdict/Adobe_CoolType_GVMFonts known not
	{userdict/Adobe_CoolType_GVMFonts 10 dict put}
if
setglobal
currentglobal false setglobal
userdict/Adobe_CoolType_LVMFonts known not
	{userdict/Adobe_CoolType_LVMFonts 10 dict put}
if
setglobal
/ct_VMDictPut
	{
	dup gcheck{Adobe_CoolType_GVMFonts}{Adobe_CoolType_LVMFonts}ifelse
	3 1 roll put
	}bind def
/ct_VMDictUndef
	{
	dup Adobe_CoolType_GVMFonts exch known
		{Adobe_CoolType_GVMFonts exch undef}
		{
			dup Adobe_CoolType_LVMFonts exch known
			{Adobe_CoolType_LVMFonts exch undef}
			{pop}
			ifelse
		}ifelse
	}bind def
/ct_str1 1 string def
/ct_xshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			_ct_x _ct_y moveto
			0
			rmoveto
		}
		ifelse
		/_ct_i _ct_i 1 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/ct_yshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			_ct_x _ct_y moveto
			0 exch
			rmoveto
		}
		ifelse
		/_ct_i _ct_i 1 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/ct_xyshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			{_ct_na _ct_i 1 add get}stopped 
			{pop pop pop}
			{
				_ct_x _ct_y moveto
				rmoveto
			}
			ifelse
		}
		ifelse
		/_ct_i _ct_i 2 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/xsh{{@xshow}stopped{Adobe_CoolType_Data begin ct_xshow end}if}bind def
/ysh{{@yshow}stopped{Adobe_CoolType_Data begin ct_yshow end}if}bind def
/xysh{{@xyshow}stopped{Adobe_CoolType_Data begin ct_xyshow end}if}bind def
currentglobal true setglobal
/ct_T3Defs
{
/BuildChar
{
	1 index/Encoding get exch get
	1 index/BuildGlyph get exec
}bind def
/BuildGlyph
{
	exch begin
	GlyphProcs exch get exec
	end
}bind def
}bind def
setglobal
/@_SaveStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@vmState currentglobal def false setglobal
		@opStackCountByLevel
		@opStackLevel
		2 copy known not
			{
			2 copy
			3 dict dup/args
			7 index
			5 add array put
			put get
			}
			{
			get dup/args get dup length 3 index lt
				{
				dup length 5 add array exch
				1 index exch 0 exch putinterval
				1 index exch/args exch put
				}
				{pop}
			ifelse
			}
		ifelse
			begin
			count 1 sub
			1 index lt
				{pop count}
			if
			dup/argCount exch def
			dup 0 gt
				{
				args exch 0 exch getinterval 
			astore pop
				}
				{pop}
			ifelse
			count
			/restCount exch def
			end
		/@opStackLevel @opStackLevel 1 add def
		countdictstack 1 sub
		@dictStackCountByLevel exch @dictStackLevel exch put
		/@dictStackLevel @dictStackLevel 1 add def
		@vmState setglobal
		end
	}bind def
/@_RestoreStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@opStackLevel @opStackLevel 1 sub def
		@opStackCountByLevel @opStackLevel get
			begin
			count restCount sub dup 0 gt
				{{pop}repeat}
				{pop}
			ifelse
			args 0 argCount getinterval{}forall
			end
		/@dictStackLevel @dictStackLevel 1 sub def
		@dictStackCountByLevel @dictStackLevel get
		end
	countdictstack exch sub dup 0 gt
		{{end}repeat}
		{pop}
	ifelse
	}bind def
/@_PopStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@opStackLevel @opStackLevel 1 sub def
		/@dictStackLevel @dictStackLevel 1 sub def
		end
	}bind def
/@Raise
	{
	exch cvx exch errordict exch get exec
	stop
	}bind def
/@ReRaise
	{
	cvx $error/errorname get errordict exch get exec
	stop
	}bind def
/@Stopped
	{
	0 @#Stopped
	}bind def
/@#Stopped
	{
	@_SaveStackLevels
	stopped
		{@_RestoreStackLevels true}
		{@_PopStackLevels false}
	ifelse
	}bind def
/@Arg
	{
	Adobe_CoolType_Data
		begin
		@opStackCountByLevel @opStackLevel 1 sub get
		begin
		args exch
		argCount 1 sub exch sub get
		end
		end
	}bind def
currentglobal true setglobal
/CTHasResourceForAllBug
	Level2?
		{
		1 dict dup
				/@shouldNotDisappearDictValue true def
				Adobe_CoolType_Data exch/@shouldNotDisappearDict exch put
				begin
				count @_SaveStackLevels
					{(*){pop stop}128 string/Category resourceforall}
				stopped pop
				@_RestoreStackLevels
				currentdict Adobe_CoolType_Data/@shouldNotDisappearDict get dup 3 1 roll ne dup 3 1 roll
					{
						 /@shouldNotDisappearDictValue known
								{
										 {
												end
												currentdict 1 index eq
													{pop exit}
												if
										 }
									 loop
								}
						 if
					}
					{
						 pop
						 end
					}
				ifelse
		}
		{false}
	ifelse
	def
true setglobal
/CTHasResourceStatusBug
	Level2?
		{
		mark
			{/steveamerige/Category resourcestatus}
		stopped
			{cleartomark true}
			{cleartomark currentglobal not}
		ifelse
		}
		{false}
	ifelse
	def
setglobal
/CTResourceStatus
		{
		mark 3 1 roll
		/Category findresource
			begin
			({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec
				{cleartomark false}
				{{3 2 roll pop true}{cleartomark false}ifelse}
			ifelse
			end
		}bind def
/CTWorkAroundBugs
	{
	Level2?
		{
		/cid_PreLoad/ProcSet resourcestatus
			{
			pop pop
			currentglobal
			mark
				{
				(*)
					{
					dup/CMap CTHasResourceStatusBug
						{CTResourceStatus}
						{resourcestatus}
					ifelse
						{
						pop dup 0 eq exch 1 eq or
							{
							dup/CMap findresource gcheck setglobal
							/CMap undefineresource
							}
							{
							pop CTHasResourceForAllBug
								{exit}
								{stop}
							ifelse
							}
						ifelse
						}
						{pop}
					ifelse
					}
				128 string/CMap resourceforall
				}
			stopped
				{cleartomark}
			stopped pop
			setglobal
			}
		if
		}
	if
	}bind def
/ds
	{
	Adobe_CoolType_Core
		begin
		CTWorkAroundBugs
		/mo/moveto load def
		/nf/newencodedfont load def
		/msf{makefont setfont}bind def
		/uf{dup undefinefont ct_VMDictUndef}bind def
		/ur/undefineresource load def
		/chp/charpath load def
		/awsh/awidthshow load def
		/wsh/widthshow load def
		/ash/ashow load def
		/@xshow/xshow load def
		/@yshow/yshow load def
		/@xyshow/xyshow load def
		/@cshow/cshow load def
		/sh/show load def
		/rp/repeat load def
		/.n/.notdef def
		end
		currentglobal false setglobal
	 userdict/Adobe_CoolType_Data 2 copy known not
		 {2 copy 10 dict put}
		if
		get
		begin
		/AddWidths? false def
		/CC 0 def
		/charcode 2 string def
		/@opStackCountByLevel 32 dict def
		/@opStackLevel 0 def
		/@dictStackCountByLevel 32 dict def
		/@dictStackLevel 0 def
		/InVMFontsByCMap 10 dict def
		/InVMDeepCopiedFonts 10 dict def
		end
		setglobal
	}bind def
/dt
	{
	currentdict Adobe_CoolType_Core eq
		{end}
	if
	}bind def
/ps
	{
	Adobe_CoolType_Core begin
	Adobe_CoolType_GVMFonts begin
	Adobe_CoolType_LVMFonts begin
	SharedFontDirectory begin
	}bind def
/pt
	{
	end
	end
	end
	end
	}bind def
/unload
	{
	systemdict/languagelevel known
		{
		systemdict/languagelevel get 2 ge
			{
			userdict/Adobe_CoolType_Core 2 copy known
				{undef}
				{pop pop}
			ifelse
			}
		if
		}
	if
	}bind def
/ndf
	{
	1 index where
		{pop pop pop}
		{dup xcheck{bind}if def}
	ifelse
	}def
/findfont systemdict
	begin
	userdict
		begin
		/globaldict where{/globaldict get begin}if
			dup where pop exch get
		/globaldict where{pop end}if
		end
	end
Adobe_CoolType_Core_Defined
	{/systemfindfont exch def}
	{
	/findfont 1 index def
	/systemfindfont exch def
	}
ifelse
/undefinefont
	{pop}ndf
/copyfont
	{
	currentglobal 3 1 roll
	1 index gcheck setglobal
	dup null eq{0}{dup length}ifelse
	2 index length add 1 add dict
		begin
		exch
			{
			1 index/FID eq
				{pop pop}
				{def}
			ifelse
			}
		forall
		dup null eq
			{pop}
			{{def}forall}
		ifelse
		currentdict
		end
	exch setglobal
	}bind def
/copyarray
	{
	currentglobal exch
	dup gcheck setglobal
	dup length array copy
	exch setglobal
	}bind def
/newencodedfont
	{
	currentglobal
		{
		SharedFontDirectory 3 index known
			{SharedFontDirectory 3 index get/FontReferenced known}
			{false}
		ifelse
		}
		{
		FontDirectory 3 index known
			{FontDirectory 3 index get/FontReferenced known}
			{
			SharedFontDirectory 3 index known
				{SharedFontDirectory 3 index get/FontReferenced known}
				{false}
			ifelse
			}
		ifelse
		}
	ifelse
	dup
		{
		3 index findfont/FontReferenced get
		2 index dup type/nametype eq
			{findfont}
		if ne
			{pop false}
		if
		}
	if
	dup
		{
		1 index dup type/nametype eq
			{findfont}
		 if
		dup/CharStrings known
			{
			/CharStrings get length
			4 index findfont/CharStrings get length
			ne
				{
				pop false
				}
			if 
			}
			{pop}
			ifelse
		}
	if
		{
		pop
		1 index findfont
		/Encoding get exch
		0 1 255
			{2 copy get 3 index 3 1 roll put}
		for
		pop pop pop
		}
		{
		currentglobal
	 4 1 roll
		dup type/nametype eq
		 {findfont}
	 if
	 dup gcheck setglobal
		dup dup maxlength 2 add dict
			begin
			exch
				{
				1 index/FID ne
				2 index/Encoding ne and
					{def}
					{pop pop}
				ifelse
				}
			forall
			/FontReferenced exch def
			/Encoding exch dup length array copy def
			/FontName 1 index dup type/stringtype eq{cvn}if def dup
			currentdict
			end
		definefont ct_VMDictPut
		setglobal
		}
	ifelse
	}bind def
/SetSubstituteStrategy
	{
	$SubstituteFont
		begin
		dup type/dicttype ne
			{0 dict}
		if
		currentdict/$Strategies known
			{
			exch $Strategies exch 
			2 copy known
				{
				get
				2 copy maxlength exch maxlength add dict
					begin
					{def}forall
					{def}forall
					currentdict
					dup/$Init known
						{dup/$Init get exec}
					if
					end
				/$Strategy exch def
				}
				{pop pop pop}
			ifelse
			}
			{pop pop}
		ifelse
		end
	}bind def
/scff
	{
	$SubstituteFont
		begin
		dup type/stringtype eq
			{dup length exch}
			{null}
		ifelse
		/$sname exch def
		/$slen exch def
		/$inVMIndex
			$sname null eq
				{
				1 index $str cvs
				dup length $slen sub $slen getinterval cvn
				}
				{$sname}
			ifelse def
		end
		{findfont}
	@Stopped
		{
		dup length 8 add string exch
		1 index 0(BadFont:)putinterval
		1 index exch 8 exch dup length string cvs putinterval cvn
			{findfont}
		@Stopped
			{pop/Courier findfont}
		if
		}
	if
	$SubstituteFont
		begin
		/$sname null def
		/$slen 0 def
		/$inVMIndex null def
		end
	}bind def
/isWidthsOnlyFont
	{
	dup/WidthsOnly known
		{pop pop true}
		{
		dup/FDepVector known
			{/FDepVector get{isWidthsOnlyFont dup{exit}if}forall}
			{
			dup/FDArray known
				{/FDArray get{isWidthsOnlyFont dup{exit}if}forall}
				{pop}
			ifelse
			}
		ifelse
		}
	ifelse
	}bind def
/ct_StyleDicts 4 dict dup begin
		 /Adobe-Japan1 4 dict dup begin
					 Level2?
								{
								/Serif
								/HeiseiMin-W3-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiMin-W3}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiMin-W3/CIDFont resourcestatus
								{pop pop/HeiseiMin-W3}
								{/Ryumin-Light}
								ifelse
							}
							{/Ryumin-Light}
							ifelse
								}
								ifelse
								def
								/SansSerif
								/HeiseiKakuGo-W5-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiKakuGo-W5}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiKakuGo-W5/CIDFont resourcestatus
								{pop pop/HeiseiKakuGo-W5}
								{/GothicBBB-Medium}
								ifelse
							}
							{/GothicBBB-Medium}
							ifelse
								}
								ifelse
								def
								/HeiseiMaruGo-W4-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiMaruGo-W4}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiMaruGo-W4/CIDFont resourcestatus
								{pop pop/HeiseiMaruGo-W4}
								{
									/Jun101-Light-RKSJ-H/Font resourcestatus
									{pop pop/Jun101-Light}
									{SansSerif}
									ifelse
								}
								ifelse
							}
							{
								/Jun101-Light-RKSJ-H/Font resourcestatus
								{pop pop/Jun101-Light}
								{SansSerif}
								ifelse
							}
							ifelse
								}
								ifelse
								/RoundSansSerif exch def
								/Default Serif def
								}
								{
								/Serif/Ryumin-Light def
								/SansSerif/GothicBBB-Medium def
								{
								(fonts/Jun101-Light-83pv-RKSJ-H)status
								}stopped
								{pop}{
										 {pop pop pop pop/Jun101-Light}
										 {SansSerif}
										 ifelse
										 /RoundSansSerif exch def
								}ifelse
								/Default Serif def
								}
					 ifelse
		 end
		 def
		 /Adobe-Korea1 4 dict dup begin
					/Serif/HYSMyeongJo-Medium def
					/SansSerif/HYGoThic-Medium def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
		 /Adobe-GB1 4 dict dup begin
					/Serif/STSong-Light def
					/SansSerif/STHeiti-Regular def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
		 /Adobe-CNS1 4 dict dup begin
					/Serif/MKai-Medium def
					/SansSerif/MHei-Medium def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
end
def
Level2?{currentglobal true setglobal}if
/ct_BoldRomanWidthProc 
	{
	stringwidth 1 index 0 ne{exch .03 add exch}if setcharwidth
	0 0
	}bind def
/ct_Type0WidthProc 
	{
	 dup stringwidth 0 0 moveto 
	 2 index true charpath pathbbox
	 0 -1 
	 7 index 2 div .88 
	 setcachedevice2
	 pop
	0 0
	}bind def
/ct_Type0WMode1WidthProc 
	{
	 dup stringwidth 
	 pop 2 div neg -0.88
	2 copy
	moveto 
	0 -1
	 5 -1 roll true charpath pathbbox
	 setcachedevice
	}bind def
/cHexEncoding
[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12
/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25
/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38
/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B
/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E
/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71
/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84
/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97
/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA
/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD
/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0
/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3
/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6
/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def
/ct_BoldBaseFont 
	 11 dict begin
		/FontType 3 def
		/FontMatrix[1 0 0 1 0 0]def
		/FontBBox[0 0 1 1]def
		/Encoding cHexEncoding def 
		/_setwidthProc/ct_BoldRomanWidthProc load def
		/_bcstr1 1 string def
		/BuildChar
		{
			exch begin
				_basefont setfont
				_bcstr1 dup 0 4 -1 roll put
				dup 
				_setwidthProc
				3 copy 
				moveto				
				show
				_basefonto setfont
				moveto
				show
			end
		}bind def
		 currentdict
	 end 
def
systemdict/composefont known
{
/ct_DefineIdentity-H
{
	/Identity-H/CMap resourcestatus
	{
		pop pop
	}
	{
		/CIDInit/ProcSet findresource begin
		 12 dict begin
		 begincmap
		 /CIDSystemInfo 3 dict dup begin
			 /Registry(Adobe)def
			 /Ordering(Identity)def
			 /Supplement 0 def
		 end def
		 /CMapName/Identity-H def
		 /CMapVersion 1.000 def
		 /CMapType 1 def
		 1 begincodespacerange
		 <0000><FFFF>
		 endcodespacerange
		 1 begincidrange
		 <0000><FFFF>0
		 endcidrange
		 endcmap
		 CMapName currentdict/CMap defineresource pop
		 end
		 end
	 }
	 ifelse
}
def
/ct_BoldBaseCIDFont 
	 11 dict begin
		/CIDFontType 1 def
		/CIDFontName/ct_BoldBaseCIDFont def
		/FontMatrix[1 0 0 1 0 0]def
		/FontBBox[0 0 1 1]def
		/_setwidthProc/ct_Type0WidthProc load def
		/_bcstr2 2 string def
		/BuildGlyph
		{
			exch begin		 
				_basefont setfont
				_bcstr2 1 2 index 256 mod put
				_bcstr2 0 3 -1 roll 256 idiv put
				_bcstr2 dup _setwidthProc		 
				3 copy 
				moveto
				show
				_basefonto setfont
				moveto
				show
			end
		}bind def
		 currentdict
	 end 
def
}if
Level2?{setglobal}if
/ct_CopyFont{
	{
		1 index/FID ne 2 index/UniqueID ne and
		{def}{pop pop}ifelse
	}forall
}bind def
/ct_Type0CopyFont 
{
	exch
	dup length dict
	begin
	ct_CopyFont
	[
	exch
	FDepVector 
	{
		 dup/FontType get 0 eq
		{	
		1 index ct_Type0CopyFont 
		/_ctType0 exch definefont
		}
		{
		/_ctBaseFont exch
		2 index exec
		}
		 ifelse 
		 exch
	}
	forall 
	pop
	]				
	/FDepVector exch def
	currentdict
	end
}bind def
/ct_MakeBoldFont
{
	 dup/ct_SyntheticBold known
	{
		dup length 3 add dict begin 
		ct_CopyFont 
		/ct_StrokeWidth .03 0 FontMatrix idtransform pop def 
		/ct_SyntheticBold true def
		currentdict 
		end 
		definefont
	}
	{
		dup dup length 3 add dict
		begin
			ct_CopyFont
			/PaintType 2 def
			/StrokeWidth .03 0 FontMatrix idtransform pop def
			/dummybold currentdict
		end
		definefont
		dup/FontType get dup 9 ge exch 11 le and 
		{
			ct_BoldBaseCIDFont
			dup length 3 add dict copy begin
			dup/CIDSystemInfo get/CIDSystemInfo exch def
			ct_DefineIdentity-H
			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont
			/_basefont exch def
			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont
			/_basefonto exch def
			currentdict
			end
			/CIDFont defineresource
		}
		{
			ct_BoldBaseFont
			dup length 3 add dict copy begin
			/_basefont exch def
			/_basefonto exch def
			currentdict
			end
			definefont
		}
		ifelse
	}
	ifelse
}bind def
/ct_MakeBold{
	1 index 
	1 index
	findfont
	currentglobal 5 1 roll
	dup gcheck setglobal
		dup
		 /FontType get 0 eq
			{
				dup/WMode known{dup/WMode get 1 eq}{false}ifelse
				version length 4 ge
				and
					{version 0 4 getinterval cvi 2015 ge}
					{true}
				ifelse 
					{/ct_Type0WidthProc}
					{/ct_Type0WMode1WidthProc}
				ifelse
				ct_BoldBaseFont/_setwidthProc 3 -1 roll load put
						{ct_MakeBoldFont}ct_Type0CopyFont definefont
			}
			{
				dup/_fauxfont known not 1 index/SubstMaster known not and
				{
					 ct_BoldBaseFont/_setwidthProc /ct_BoldRomanWidthProc load put
					 ct_MakeBoldFont 
				}
				{
				2 index 2 index eq
					{exch pop	}
					{
						dup length dict begin
						ct_CopyFont
						currentdict
						end
						definefont 
					}
				ifelse
				}
			ifelse
			}
		 ifelse
		 pop pop pop
		 setglobal
}bind def
/?str1 256 string def
/?set
	{
	$SubstituteFont
		begin
		/$substituteFound false def
		/$fontname 1 index def
		/$doSmartSub false def
		end
	dup
	 findfont
	$SubstituteFont
		begin
		$substituteFound
			{false}
			{
			dup/FontName known
				{
				dup/FontName get $fontname eq
				1 index/DistillerFauxFont known not and
				/currentdistillerparams where
					{pop false 2 index isWidthsOnlyFont not and}
				if
				}
				{false}
			ifelse
			}
		ifelse
		exch pop
		/$doSmartSub true def
		end
		{
		5 1 roll pop pop pop pop
		findfont
		}
		{
		1 index
		findfont
		dup/FontType get 3 eq
		{
			6 1 roll pop pop pop pop pop false
		}
		{pop true}
		ifelse
		{
		$SubstituteFont
		begin
		pop pop
		/$styleArray 1 index def
		/$regOrdering 2 index def
		pop pop
		0 1 $styleArray length 1 sub
		{
			$styleArray exch get
			ct_StyleDicts $regOrdering
			2 copy known
			{
				get
				exch 2 copy known not
				{pop/Default}
				if
				get
				dup type/nametype eq
				{
				?str1 cvs length dup 1 add exch
				?str1 exch(-)putinterval
				exch dup length exch ?str1 exch 3 index exch putinterval
				add ?str1 exch 0 exch getinterval cvn
				}
				{
				pop pop/Unknown
				}
				ifelse
			}
			{
				pop pop pop pop/Unknown
			}
			ifelse
		}
		for
		end
		findfont 
		}if
		}
	ifelse
	currentglobal false setglobal 3 1 roll
	null copyfont definefont pop
	setglobal
	}bind def
setpacking
userdict/$SubstituteFont 25 dict put
1 dict
	begin
	/SubstituteFont
		dup $error exch 2 copy known
			{get}
			{pop pop{pop/Courier}bind}
		ifelse def
	/currentdistillerparams where dup
		{
		pop pop
		currentdistillerparams/CannotEmbedFontPolicy 2 copy known
			{get/Error eq}
			{pop pop false}
		ifelse
		}
	if not
		{
		countdictstack array dictstack 0 get
			begin
			userdict
				begin
				$SubstituteFont
					begin
					/$str 128 string def
					/$fontpat 128 string def
					/$slen 0 def
					/$sname null def
					/$match false def
					/$fontname null def
					/$substituteFound false def
					/$inVMIndex null def
					/$doSmartSub true def
					/$depth 0 def
					/$fontname null def
					/$italicangle 26.5 def
					/$dstack null def
					/$Strategies 10 dict dup
						begin
						/$Type3Underprint
							{
							currentglobal exch false setglobal
							11 dict
								begin
								/UseFont exch
									$WMode 0 ne
										{
										dup length dict copy
										dup/WMode $WMode put
										/UseFont exch definefont
										}
									if def
								/FontName $fontname dup type/stringtype eq{cvn}if def
								/FontType 3 def
								/FontMatrix[.001 0 0 .001 0 0]def
								/Encoding 256 array dup 0 1 255{/.notdef put dup}for pop def
								/FontBBox[0 0 0 0]def
								/CCInfo 7 dict dup
									begin
									/cc null def
									/x 0 def
									/y 0 def
									end def
								/BuildChar
									{
									exch
										begin
										CCInfo
											begin
											1 string dup 0 3 index put exch pop
											/cc exch def
											UseFont 1000 scalefont setfont
											cc stringwidth/y exch def/x exch def
											x y setcharwidth
											$SubstituteFont/$Strategy get/$Underprint get exec
											0 0 moveto cc show
											x y moveto
											end
										end
									}bind def
								currentdict
								end
							exch setglobal
							}bind def
						/$GetaTint
							2 dict dup
								begin
								/$BuildFont
									{
									dup/WMode known
										{dup/WMode get}
										{0}
									ifelse
									/$WMode exch def
									$fontname exch
									dup/FontName known
										{
										dup/FontName get
										dup type/stringtype eq{cvn}if
										}
										{/unnamedfont}
									ifelse
									exch
									Adobe_CoolType_Data/InVMDeepCopiedFonts get
									1 index/FontName get known
										{
										pop
										Adobe_CoolType_Data/InVMDeepCopiedFonts get
										1 index get
										null copyfont
										}
										{$deepcopyfont}
									ifelse
									exch 1 index exch/FontBasedOn exch put
									dup/FontName $fontname dup type/stringtype eq{cvn}if put
									definefont
									Adobe_CoolType_Data/InVMDeepCopiedFonts get
										begin
										dup/FontBasedOn get 1 index def
										end
									}bind def
								/$Underprint
									{
									gsave
									x abs y abs gt
										{/y 1000 def}
										{/x -1000 def 500 120 translate}
									ifelse
									Level2?
										{
										[/Separation(All)/DeviceCMYK{0 0 0 1 pop}]
										setcolorspace
										}
										{0 setgray}
									ifelse
									10 setlinewidth
									x .8 mul
									[7 3]
										{
										y mul 8 div 120 sub x 10 div exch moveto
										0 y 4 div neg rlineto
										dup 0 rlineto
										0 y 4 div rlineto
										closepath
										gsave
										Level2?
											{.2 setcolor}
											{.8 setgray}
										ifelse
										fill grestore
										stroke
										}
									forall
									pop
									grestore
									}bind def
								end def
						/$Oblique
							1 dict dup
								begin
								/$BuildFont
									{
									currentglobal exch dup gcheck setglobal
									null copyfont
										begin
										/FontBasedOn
										currentdict/FontName known
											{
											FontName
											dup type/stringtype eq{cvn}if
											}
											{/unnamedfont}
										ifelse
										def
										/FontName $fontname dup type/stringtype eq{cvn}if def
										/currentdistillerparams where
											{pop}
											{
											/FontInfo currentdict/FontInfo known
												{FontInfo null copyfont}
												{2 dict}
											ifelse
											dup
												begin
												/ItalicAngle $italicangle def
												/FontMatrix FontMatrix
												[1 0 ItalicAngle dup sin exch cos div 1 0 0]
												matrix concatmatrix readonly
												end
											4 2 roll def
											def
											}
										ifelse
										FontName currentdict
										end
									definefont
									exch setglobal
									}bind def
								end def
						/$None
							1 dict dup
								begin
								/$BuildFont{}bind def
								end def
						end def
					/$Oblique SetSubstituteStrategy
					/$findfontByEnum
						{
						dup type/stringtype eq{cvn}if
						dup/$fontname exch def
						$sname null eq
							{$str cvs dup length $slen sub $slen getinterval}
							{pop $sname}
						ifelse
						$fontpat dup 0(fonts/*)putinterval exch 7 exch putinterval
						/$match false def
						$SubstituteFont/$dstack countdictstack array dictstack put
						mark
							{
							$fontpat 0 $slen 7 add getinterval
								{/$match exch def exit}
							$str filenameforall
							}
						stopped
							{
							cleardictstack
							currentdict
							true
							$SubstituteFont/$dstack get
								{
								exch
									{
									1 index eq
										{pop false}
										{true}
									ifelse
									}
									{begin false}
								ifelse
								}
							forall
							pop
							}
						if
						cleartomark
						/$slen 0 def
						$match false ne
							{$match(fonts/)anchorsearch pop pop cvn}
							{/Courier}
						ifelse
						}bind def
					/$ROS 1 dict dup
						begin
						/Adobe 4 dict dup
							begin
							/Japan1 [/Ryumin-Light/HeiseiMin-W3
										 /GothicBBB-Medium/HeiseiKakuGo-W5
										 /HeiseiMaruGo-W4/Jun101-Light]def
							/Korea1 [/HYSMyeongJo-Medium/HYGoThic-Medium]def
							/GB1	 [/STSong-Light/STHeiti-Regular]def
							/CNS1	[/MKai-Medium/MHei-Medium]def
							end def
						end def
					/$cmapname null def
					/$deepcopyfont
						{
						dup/FontType get 0 eq
							{
							1 dict dup/FontName/copied put copyfont
								begin
								/FDepVector FDepVector copyarray
								0 1 2 index length 1 sub
									{
									2 copy get $deepcopyfont
									dup/FontName/copied put
									/copied exch definefont
									3 copy put pop pop
									}
								for
								def
								currentdict
								end
							}
							{$Strategies/$Type3Underprint get exec}
						ifelse
						}bind def
					/$buildfontname
						{
						dup/CIDFont findresource/CIDSystemInfo get
							begin
							Registry length Ordering length Supplement 8 string cvs
							3 copy length 2 add add add string
							dup 5 1 roll dup 0 Registry putinterval
							dup 4 index(-)putinterval
							dup 4 index 1 add Ordering putinterval
							4 2 roll add 1 add 2 copy(-)putinterval
							end
						1 add 2 copy 0 exch getinterval $cmapname $fontpat cvs exch
						anchorsearch
							{pop pop 3 2 roll putinterval cvn/$cmapname exch def}
							{pop pop pop pop pop}
						ifelse
						length
						$str 1 index(-)putinterval 1 add
						$str 1 index $cmapname $fontpat cvs putinterval
						$cmapname length add
						$str exch 0 exch getinterval cvn
						}bind def
					/$findfontByROS
						{
						/$fontname exch def
						$ROS Registry 2 copy known
							{
							get Ordering 2 copy known
								{get}
								{pop pop[]}
							ifelse
							}
							{pop pop[]}
						ifelse
						false exch
							{
							dup/CIDFont resourcestatus
								{
								pop pop
								save
								1 index/CIDFont findresource
								dup/WidthsOnly known
									{dup/WidthsOnly get}
									{false}
								ifelse
								exch pop
								exch restore
									{pop}
									{exch pop true exit}
								ifelse
								}
								{pop}
							ifelse
							}
						forall
							{$str cvs $buildfontname}
							{
							false(*)
								{
								save exch
								dup/CIDFont findresource
								dup/WidthsOnly known
									{dup/WidthsOnly get not}
									{true}
								ifelse
								exch/CIDSystemInfo get
								dup/Registry get Registry eq
								exch/Ordering get Ordering eq and and
									{exch restore exch pop true exit}
									{pop restore}
								ifelse
								}
							$str/CIDFont resourceforall
								{$buildfontname}
								{$fontname $findfontByEnum}
							ifelse
							}
						ifelse
						}bind def
					end
				end
				currentdict/$error known currentdict/languagelevel known and dup
					{pop $error/SubstituteFont known}
				if
				dup
					{$error}
					{Adobe_CoolType_Core}
				ifelse
				begin
					{
					/SubstituteFont
					/CMap/Category resourcestatus
						{
						pop pop
						{
						$SubstituteFont
							begin
							/$substituteFound true def
							dup length $slen gt
							$sname null ne or
							$slen 0 gt and
								{
								$sname null eq
									{dup $str cvs dup length $slen sub $slen getinterval cvn}
									{$sname}
								ifelse
								Adobe_CoolType_Data/InVMFontsByCMap get
								1 index 2 copy known
									{
									get
									false exch
										{
										pop
										currentglobal
											{
											GlobalFontDirectory 1 index known
												{exch pop true exit}
												{pop}
											ifelse
											}
											{
											FontDirectory 1 index known
												{exch pop true exit}
												{
												GlobalFontDirectory 1 index known
													{exch pop true exit}
													{pop}
												ifelse
												}
											ifelse
											}
										ifelse
										}
									forall
									}
									{pop pop false}
								ifelse
									{
									exch pop exch pop
									}
									{
									dup/CMap resourcestatus
										{
										pop pop
										dup/$cmapname exch def
										/CMap findresource/CIDSystemInfo get{def}forall
										$findfontByROS
										}
										{
										128 string cvs
										dup(-)search
											{
											3 1 roll search
												{
												3 1 roll pop
													{dup cvi}
												stopped
													{pop pop pop pop pop $findfontByEnum}
													{
													4 2 roll pop pop
													exch length
													exch
													2 index length
													2 index
													sub
													exch 1 sub -1 0
														{
														$str cvs dup length
														4 index
														0
														4 index
														4 3 roll add
														getinterval
														exch 1 index exch 3 index exch
														putinterval
														dup/CMap resourcestatus
															{
															pop pop
															4 1 roll pop pop pop
															dup/$cmapname exch def
															/CMap findresource/CIDSystemInfo get{def}forall
															$findfontByROS
															true exit
															}
															{pop}
														ifelse
														}
													for
													dup type/booleantype eq
														{pop}
														{pop pop pop $findfontByEnum}
													ifelse
													}
												ifelse
												}
												{pop pop pop $findfontByEnum}
											ifelse
											}
											{pop pop $findfontByEnum}
										ifelse
										}
									ifelse
									}
								ifelse
								}
								{//SubstituteFont exec}
							ifelse
							/$slen 0 def
							end
						}
						}
						{
						{
						$SubstituteFont
							begin
							/$substituteFound true def
							dup length $slen gt
							$sname null ne or
							$slen 0 gt and
								{$findfontByEnum}
								{//SubstituteFont exec}
							ifelse
							end
						}
						}
					ifelse
					bind readonly def
					Adobe_CoolType_Core/scfindfont/systemfindfont load put
					}
					{
					/scfindfont
						{
						$SubstituteFont
							begin
							dup systemfindfont
							dup/FontName known
								{dup/FontName get dup 3 index ne}
								{/noname true}
							ifelse
							dup
								{
								/$origfontnamefound 2 index def
								/$origfontname 4 index def/$substituteFound true def
								}
							if
							exch pop
								{
								$slen 0 gt
								$sname null ne
								3 index length $slen gt or and
									{
									pop dup $findfontByEnum findfont
									dup maxlength 1 add dict
										begin
											{1 index/FID eq{pop pop}{def}ifelse}
										forall
										currentdict
										end
									definefont
									dup/FontName known{dup/FontName get}{null}ifelse
									$origfontnamefound ne
										{
										$origfontname $str cvs print
										( substitution revised, using )print
										dup/FontName known
											{dup/FontName get}{(unspecified font)}
										ifelse
										$str cvs print(.\n)print
										}
									if
									}
									{exch pop}
								ifelse
								}
								{exch pop}
							ifelse
							end
						}bind def
					}
				ifelse
				end
			end
		Adobe_CoolType_Core_Defined not
			{
			Adobe_CoolType_Core/findfont
				{
				$SubstituteFont
					begin
					$depth 0 eq
						{
						/$fontname 1 index dup type/stringtype ne{$str cvs}if def
						/$substituteFound false def
						}
					if
					/$depth $depth 1 add def
					end
				scfindfont
				$SubstituteFont
					begin
					/$depth $depth 1 sub def
					$substituteFound $depth 0 eq and
						{
						$inVMIndex null ne
							{dup $inVMIndex $AddInVMFont}
						if
						$doSmartSub
							{
							currentdict/$Strategy known
								{$Strategy/$BuildFont get exec}
							if
							}
						if
						}
					if
					end
				}bind put
			}
		if
		}
	if
	end
/$AddInVMFont
	{
	exch/FontName 2 copy known
		{
		get
		1 dict dup begin exch 1 index gcheck def end exch
		Adobe_CoolType_Data/InVMFontsByCMap get exch
		$DictAdd
		}
		{pop pop pop}
	ifelse
	}bind def
/$DictAdd
	{
	2 copy known not
		{2 copy 4 index length dict put}
	if
	Level2? not
		{
		2 copy get dup maxlength exch length 4 index length add lt
		2 copy get dup length 4 index length add exch maxlength 1 index lt
			{
			2 mul dict
				begin
				2 copy get{forall}def
				2 copy currentdict put
				end
			}
			{pop}
		ifelse
		}
	if
	get
		begin
			{def}
		forall
		end
	}bind def
end
end
%%EndResource
currentglobal true setglobal
%%BeginResource: procset Adobe_CoolType_Utility_MAKEOCF 1.23 0
%%Copyright: Copyright 1987-2006 Adobe Systems Incorporated.
%%Version: 1.23 0
systemdict/languagelevel known dup
	{currentglobal false setglobal}
	{false}
ifelse
exch
userdict/Adobe_CoolType_Utility 2 copy known
	{2 copy get dup maxlength 27 add dict copy}
	{27 dict}
ifelse put
Adobe_CoolType_Utility
	begin
	/@eexecStartData
		 <BAB431EA07F209EB8C4348311481D9D3F76E3D15246555577D87BC510ED54E
		 118C39697FA9F6DB58128E60EB8A12FA24D7CDD2FA94D221FA9EC8DA3E5E6A1C
		 4ACECC8C2D39C54E7C946031DD156C3A6B4A09AD29E1867A>def
	/@recognizeCIDFont null def
	/ct_Level2? exch def
	/ct_Clone? 1183615869 internaldict dup
			/CCRun known not
			exch/eCCRun known not
			ct_Level2? and or def
ct_Level2?
	{globaldict begin currentglobal true setglobal}
if
	/ct_AddStdCIDMap
		ct_Level2?
			{{
				mark
				Adobe_CoolType_Utility/@recognizeCIDFont currentdict put
					{
					((Hex)57 StartData
					 0615 1e27 2c39 1c60 d8a8 cc31 fe2b f6e0
					 7aa3 e541 e21c 60d8 a8c9 c3d0 6d9e 1c60
					 d8a8 c9c2 02d7 9a1c 60d8 a849 1c60 d8a8
					 cc36 74f4 1144 b13b 77)0()/SubFileDecode filter cvx exec
					}
				stopped
					{
					 cleartomark
					 Adobe_CoolType_Utility/@recognizeCIDFont get
					 countdictstack dup array dictstack
					 exch 1 sub -1 0
						 {
						 2 copy get 3 index eq
								{1 index length exch sub 1 sub{end}repeat exit}
								{pop}
						 ifelse
						 }
					 for
					 pop pop
					 Adobe_CoolType_Utility/@eexecStartData get eexec
					}
					{cleartomark}
				ifelse
			}}
			{{
				Adobe_CoolType_Utility/@eexecStartData get eexec
			}}
		ifelse bind def
userdict/cid_extensions known
dup{cid_extensions/cid_UpdateDB known and}if
	{
	 cid_extensions
	 begin
	/cid_GetCIDSystemInfo
		{
		 1 index type/stringtype eq
			{exch cvn exch}
		 if
		 cid_extensions
			 begin
			 dup load 2 index known
				{
				 2 copy
				 cid_GetStatusInfo
				 dup null ne
					{
					 1 index load
					 3 index get
					 dup null eq
						 {pop pop cid_UpdateDB}
						 {
						 exch
						 1 index/Created get eq
							 {exch pop exch pop}
							 {pop cid_UpdateDB}
						 ifelse
						 }
					 ifelse
					}
					{pop cid_UpdateDB}
				 ifelse
				}
				{cid_UpdateDB}
			 ifelse
			 end
		}bind def
	 end
	}
if
ct_Level2?
	{end setglobal}
if
	/ct_UseNativeCapability? systemdict/composefont known def
	/ct_MakeOCF 35 dict def
	/ct_Vars 25 dict def
	/ct_GlyphDirProcs 6 dict def
	/ct_BuildCharDict 15 dict dup
		begin
		/charcode 2 string def
		/dst_string 1500 string def
		/nullstring()def
		/usewidths? true def
		end def
	ct_Level2?{setglobal}{pop}ifelse
	ct_GlyphDirProcs
		begin
		/GetGlyphDirectory
			{
			systemdict/languagelevel known
				{pop/CIDFont findresource/GlyphDirectory get}
				{
				1 index/CIDFont findresource/GlyphDirectory
				get dup type/dicttype eq
					{
					dup dup maxlength exch length sub 2 index lt
						{
						dup length 2 index add dict copy 2 index
						/CIDFont findresource/GlyphDirectory 2 index put
						}
					if
					}
				if
				exch pop exch pop
				}
			ifelse
			+
			}def
		/+
			{
			systemdict/languagelevel known
				{
				currentglobal false setglobal
				3 dict begin
					/vm exch def
				}
				{1 dict begin}
			ifelse
			/$ exch def
			systemdict/languagelevel known
				{
				vm setglobal
				/gvm currentglobal def
				$ gcheck setglobal
				}
			if
			?{$ begin}if
			}def
		/?{$ type/dicttype eq}def
		/|{
			userdict/Adobe_CoolType_Data known
				{
			Adobe_CoolType_Data/AddWidths? known
				{
				 currentdict Adobe_CoolType_Data
					begin
					 begin
						AddWidths?
								{
								Adobe_CoolType_Data/CC 3 index put
								?{def}{$ 3 1 roll put}ifelse
								CC charcode exch 1 index 0 2 index 256 idiv put
								1 index exch 1 exch 256 mod put
								stringwidth 2 array astore
								currentfont/Widths get exch CC exch put
								}
								{?{def}{$ 3 1 roll put}ifelse}
							ifelse
					end
				end
				}
				{?{def}{$ 3 1 roll put}ifelse}	ifelse
				}
				{?{def}{$ 3 1 roll put}ifelse}
			ifelse
			}def
		/!
			{
			?{end}if
			systemdict/languagelevel known
				{gvm setglobal}
			if
			end
			}def
		/:{string currentfile exch readstring pop}executeonly def
		end
	ct_MakeOCF
		begin
		/ct_cHexEncoding
		[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12
		/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25
		/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38
		/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B
		/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E
		/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71
		/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84
		/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97
		/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA
		/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD
		/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0
		/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3
		/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6
		/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def
		/ct_CID_STR_SIZE 8000 def
		/ct_mkocfStr100 100 string def
		/ct_defaultFontMtx[.001 0 0 .001 0 0]def
		/ct_1000Mtx[1000 0 0 1000 0 0]def
		/ct_raise{exch cvx exch errordict exch get exec stop}bind def
		/ct_reraise
			{cvx $error/errorname get(Error: )print dup(						 )cvs print
					errordict exch get exec stop
			}bind def
		/ct_cvnsi
			{
			1 index add 1 sub 1 exch 0 4 1 roll
				{
				2 index exch get
				exch 8 bitshift
				add
				}
			for
			exch pop
			}bind def
		/ct_GetInterval
			{
			Adobe_CoolType_Utility/ct_BuildCharDict get
				begin
				/dst_index 0 def
				dup dst_string length gt
					{dup string/dst_string exch def}
				if
				1 index ct_CID_STR_SIZE idiv
				/arrayIndex exch def
				2 index arrayIndex get
				2 index
				arrayIndex ct_CID_STR_SIZE mul
				sub
					{
					dup 3 index add 2 index length le
						{
						2 index getinterval
						dst_string dst_index 2 index putinterval
						length dst_index add/dst_index exch def
						exit
						}
						{
						1 index length 1 index sub
						dup 4 1 roll
						getinterval
						dst_string dst_index 2 index putinterval
						pop dup dst_index add/dst_index exch def
						sub
						/arrayIndex arrayIndex 1 add def
						2 index dup length arrayIndex gt
							 {arrayIndex get}
							 {
							 pop
							 exit
							 }
						ifelse
						0
						}
					ifelse
					}
				loop
				pop pop pop
				dst_string 0 dst_index getinterval
				end
			}bind def
		ct_Level2?
			{
			/ct_resourcestatus
			currentglobal mark true setglobal
				{/unknowninstancename/Category resourcestatus}
			stopped
				{cleartomark setglobal true}
				{cleartomark currentglobal not exch setglobal}
			ifelse
				{
					{
					mark 3 1 roll/Category findresource
						begin
						ct_Vars/vm currentglobal put
						({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec
							{cleartomark false}
							{{3 2 roll pop true}{cleartomark false}ifelse}
						ifelse
						ct_Vars/vm get setglobal
						end
					}
				}
				{{resourcestatus}}
			ifelse bind def
			/CIDFont/Category ct_resourcestatus
				{pop pop}
				{
				currentglobal true setglobal
				/Generic/Category findresource
				dup length dict copy
				dup/InstanceType/dicttype put
				/CIDFont exch/Category defineresource pop
				setglobal
				}
			ifelse
			ct_UseNativeCapability?
				{
				/CIDInit/ProcSet findresource begin
				12 dict begin
				begincmap
				/CIDSystemInfo 3 dict dup begin
				 /Registry(Adobe)def
				 /Ordering(Identity)def
				 /Supplement 0 def
				end def
				/CMapName/Identity-H def
				/CMapVersion 1.000 def
				/CMapType 1 def
				1 begincodespacerange
				<0000><FFFF>
				endcodespacerange
				1 begincidrange
				<0000><FFFF>0
				endcidrange
				endcmap
				CMapName currentdict/CMap defineresource pop
				end
				end
				}
			if
			}
			{
			/ct_Category 2 dict begin
			/CIDFont 10 dict def
			/ProcSet	2 dict def
			currentdict
			end
			def
			/defineresource
				{
				ct_Category 1 index 2 copy known
					{
					get
					dup dup maxlength exch length eq
						{
						dup length 10 add dict copy
						ct_Category 2 index 2 index put
						}
					if
					3 index 3 index put
					pop exch pop
					}
					{pop pop/defineresource/undefined ct_raise}
				ifelse
				}bind def
			/findresource
				{
				ct_Category 1 index 2 copy known
					{
					get
					2 index 2 copy known
						{get 3 1 roll pop pop}
						{pop pop/findresource/undefinedresource ct_raise}
					ifelse
					}
					{pop pop/findresource/undefined ct_raise}
				ifelse
				}bind def
			/resourcestatus
				{
				ct_Category 1 index 2 copy known
					{
					get
					2 index known
					exch pop exch pop
						{
						0 -1 true
						}
						{
						false
						}
					ifelse
					}
					{pop pop/findresource/undefined ct_raise}
				ifelse
				}bind def
			/ct_resourcestatus/resourcestatus load def
			}
		ifelse
		/ct_CIDInit 2 dict
			begin
			/ct_cidfont_stream_init
				{
					{
					dup(Binary)eq
						{
						pop
						null
						currentfile
						ct_Level2?
							{
								{cid_BYTE_COUNT()/SubFileDecode filter}
							stopped
								{pop pop pop}
							if
							}
						if
						/readstring load
						exit
						}
					if
					dup(Hex)eq
						{
						pop
						currentfile
						ct_Level2?
							{
								{null exch/ASCIIHexDecode filter/readstring}
							stopped
								{pop exch pop(>)exch/readhexstring}
							if
							}
							{(>)exch/readhexstring}
						ifelse
						load
						exit
						}
					if
					/StartData/typecheck ct_raise
					}
				loop
				cid_BYTE_COUNT ct_CID_STR_SIZE le
					{
					2 copy cid_BYTE_COUNT string exch exec
					pop
					1 array dup
					3 -1 roll
					0 exch put
					}
					{
					cid_BYTE_COUNT ct_CID_STR_SIZE div ceiling cvi
					dup array exch 2 sub 0 exch 1 exch
						{
						2 copy
						5 index
						ct_CID_STR_SIZE
						string
						6 index exec
						pop
						put
						pop
						}
					for
					2 index
					cid_BYTE_COUNT ct_CID_STR_SIZE mod string
					3 index exec
					pop
					1 index exch
					1 index length 1 sub
					exch put
					}
				ifelse
				cid_CIDFONT exch/GlyphData exch put
				2 index null eq
					{
					pop pop pop
					}
					{
					pop/readstring load
					1 string exch
						{
						3 copy exec
						pop
						dup length 0 eq
							{
							pop pop pop pop pop
							true exit
							}
						if
						4 index
						eq
							{
							pop pop pop pop
							false exit
							}
						if
						}
					loop
					pop
					}
				ifelse
				}bind def
			/StartData
				{
				mark
					{
					currentdict
					dup/FDArray get 0 get/FontMatrix get
					0 get 0.001 eq
						{
						dup/CDevProc known not
							{
							/CDevProc 1183615869 internaldict/stdCDevProc 2 copy known
								{get}
								{
								pop pop
								{pop pop pop pop pop 0 -1000 7 index 2 div 880}
								}
							ifelse
							def
							}
						if
						}
						{
						/CDevProc
							{
							 pop pop pop pop pop
							 0
							 1 cid_temp/cid_CIDFONT get
							/FDArray get 0 get
							/FontMatrix get 0 get div
							 7 index 2 div
							 1 index 0.88 mul
							}def
						}
					ifelse
					/cid_temp 15 dict def
					cid_temp
						begin
						/cid_CIDFONT exch def
						3 copy pop
						dup/cid_BYTE_COUNT exch def 0 gt
							{
							ct_cidfont_stream_init
							FDArray
								{
								/Private get
								dup/SubrMapOffset known
									{
									begin
									/Subrs SubrCount array def
									Subrs
									SubrMapOffset
									SubrCount
									SDBytes
									ct_Level2?
										{
										currentdict dup/SubrMapOffset undef
										dup/SubrCount undef
										/SDBytes undef
										}
									if
									end
									/cid_SD_BYTES exch def
									/cid_SUBR_COUNT exch def
									/cid_SUBR_MAP_OFFSET exch def
									/cid_SUBRS exch def
									cid_SUBR_COUNT 0 gt
										{
										GlyphData cid_SUBR_MAP_OFFSET cid_SD_BYTES ct_GetInterval
										0 cid_SD_BYTES ct_cvnsi
										0 1 cid_SUBR_COUNT 1 sub
											{
											exch 1 index
											1 add
											cid_SD_BYTES mul cid_SUBR_MAP_OFFSET add
											GlyphData exch cid_SD_BYTES ct_GetInterval
											0 cid_SD_BYTES ct_cvnsi
											cid_SUBRS 4 2 roll
											GlyphData exch
											4 index
											1 index
											sub
											ct_GetInterval
											dup length string copy put
											}
										for
										pop
										}
									if
									}
									{pop}
								ifelse
								}
							forall
							}
						if
						cleartomark pop pop
						end
					CIDFontName currentdict/CIDFont defineresource pop
					end end
					}
				stopped
					{cleartomark/StartData ct_reraise}
				if
				}bind def
			currentdict
			end def
		/ct_saveCIDInit
			{
			/CIDInit/ProcSet ct_resourcestatus
				{true}
				{/CIDInitC/ProcSet ct_resourcestatus}
			ifelse
				{
				pop pop
				/CIDInit/ProcSet findresource
				ct_UseNativeCapability?
					{pop null}
					{/CIDInit ct_CIDInit/ProcSet defineresource pop}
				ifelse
				}
				{/CIDInit ct_CIDInit/ProcSet defineresource pop null}
			ifelse
			ct_Vars exch/ct_oldCIDInit exch put
			}bind def
		/ct_restoreCIDInit
			{
			ct_Vars/ct_oldCIDInit get dup null ne
				{/CIDInit exch/ProcSet defineresource pop}
				{pop}
			ifelse
			}bind def
		/ct_BuildCharSetUp
			{
			1 index
				begin
				CIDFont
					begin
					Adobe_CoolType_Utility/ct_BuildCharDict get
						begin
						/ct_dfCharCode exch def
						/ct_dfDict exch def
						CIDFirstByte ct_dfCharCode add
						dup CIDCount ge
							{pop 0}
						if
						/cid exch def
							{
							GlyphDirectory cid 2 copy known
								{get}
								{pop pop nullstring}
							ifelse
							dup length FDBytes sub 0 gt
								{
								dup
								FDBytes 0 ne
									{0 FDBytes ct_cvnsi}
									{pop 0}
								ifelse
								/fdIndex exch def
								dup length FDBytes sub FDBytes exch getinterval
								/charstring exch def
								exit
								}
								{
								pop
								cid 0 eq
									{/charstring nullstring def exit}
								if
								/cid 0 def
								}
							ifelse
							}
						loop
			}def
		/ct_SetCacheDevice
			{
			0 0 moveto
			dup stringwidth
			3 -1 roll
			true charpath
			pathbbox
			0 -1000
			7 index 2 div 880
			setcachedevice2
			0 0 moveto
			}def
		/ct_CloneSetCacheProc
			{
			1 eq
				{
				stringwidth
				pop -2 div -880
				0 -1000 setcharwidth
				moveto
				}
				{
				usewidths?
					{
					currentfont/Widths get cid
					2 copy known
						{get exch pop aload pop}
						{pop pop stringwidth}
					ifelse
					}
					{stringwidth}
				ifelse
				setcharwidth
				0 0 moveto
				}
			ifelse
			}def
		/ct_Type3ShowCharString
			{
			ct_FDDict fdIndex 2 copy known
				{get}
				{
				currentglobal 3 1 roll
				1 index gcheck setglobal
				ct_Type1FontTemplate dup maxlength dict copy
					begin
					FDArray fdIndex get
					dup/FontMatrix 2 copy known
						{get}
						{pop pop ct_defaultFontMtx}
					ifelse
					/FontMatrix exch dup length array copy def
					/Private get
					/Private exch def
					/Widths rootfont/Widths get def
					/CharStrings 1 dict dup/.notdef
						<d841272cf18f54fc13>dup length string copy put def
					currentdict
					end
				/ct_Type1Font exch definefont
				dup 5 1 roll put
				setglobal
				}
			ifelse
			dup/CharStrings get 1 index/Encoding get
			ct_dfCharCode get charstring put
			rootfont/WMode 2 copy known
				{get}
				{pop pop 0}
			ifelse
			exch
			1000 scalefont setfont
			ct_str1 0 ct_dfCharCode put
			ct_str1 exch ct_dfSetCacheProc
			ct_SyntheticBold
				{
				currentpoint
				ct_str1 show
				newpath
				moveto
				ct_str1 true charpath
				ct_StrokeWidth setlinewidth
				stroke
				}
				{ct_str1 show}
			ifelse
			}def
		/ct_Type4ShowCharString
			{
			ct_dfDict ct_dfCharCode charstring
			FDArray fdIndex get
			dup/FontMatrix get dup ct_defaultFontMtx ct_matrixeq not
				{ct_1000Mtx matrix concatmatrix concat}
				{pop}
			ifelse
			/Private get
			Adobe_CoolType_Utility/ct_Level2? get not
				{
				ct_dfDict/Private
				3 -1 roll
					{put}
				1183615869 internaldict/superexec get exec
				}
			if
			1183615869 internaldict
			Adobe_CoolType_Utility/ct_Level2? get
				{1 index}
				{3 index/Private get mark 6 1 roll}
			ifelse
			dup/RunInt known
				{/RunInt get}
				{pop/CCRun}
			ifelse
			get exec
			Adobe_CoolType_Utility/ct_Level2? get not
				{cleartomark}
			if
			}bind def
		/ct_BuildCharIncremental
			{
				{
				Adobe_CoolType_Utility/ct_MakeOCF get begin
				ct_BuildCharSetUp
				ct_ShowCharString
				}
			stopped
				{stop}
			if
			end
			end
			end
			end
			}bind def
		/BaseFontNameStr(BF00)def
		/ct_Type1FontTemplate 14 dict
			begin
			/FontType 1 def
			/FontMatrix [0.001 0 0 0.001 0 0]def
			/FontBBox [-250 -250 1250 1250]def
			/Encoding ct_cHexEncoding def
			/PaintType 0 def
			currentdict
			end def
		/BaseFontTemplate 11 dict
			begin
			/FontMatrix [0.001 0 0 0.001 0 0]def
			/FontBBox [-250 -250 1250 1250]def
			/Encoding ct_cHexEncoding def
			/BuildChar/ct_BuildCharIncremental load def
			ct_Clone?
				{
				/FontType 3 def
				/ct_ShowCharString/ct_Type3ShowCharString load def
				/ct_dfSetCacheProc/ct_CloneSetCacheProc load def
				/ct_SyntheticBold false def
				/ct_StrokeWidth 1 def
				}
				{
				/FontType 4 def
				/Private 1 dict dup/lenIV 4 put def
				/CharStrings 1 dict dup/.notdef<d841272cf18f54fc13>put def
				/PaintType 0 def
				/ct_ShowCharString/ct_Type4ShowCharString load def
				}
			ifelse
			/ct_str1 1 string def
			currentdict
			end def
		/BaseFontDictSize BaseFontTemplate length 5 add def
		/ct_matrixeq
			{
			true 0 1 5
				{
				dup 4 index exch get exch 3 index exch get eq and
				dup not
					{exit}
				if
				}
			for
			exch pop exch pop
			}bind def
		/ct_makeocf
			{
			15 dict
				begin
				exch/WMode exch def
				exch/FontName exch def
				/FontType 0 def
				/FMapType 2 def
			dup/FontMatrix known
				{dup/FontMatrix get/FontMatrix exch def}
				{/FontMatrix matrix def}
			ifelse
				/bfCount 1 index/CIDCount get 256 idiv 1 add
					dup 256 gt{pop 256}if def
				/Encoding
					256 array 0 1 bfCount 1 sub{2 copy dup put pop}for
					bfCount 1 255{2 copy bfCount put pop}for
					def
				/FDepVector bfCount dup 256 lt{1 add}if array def
				BaseFontTemplate BaseFontDictSize dict copy
					begin
					/CIDFont exch def
					CIDFont/FontBBox known
						{CIDFont/FontBBox get/FontBBox exch def}
					if
					CIDFont/CDevProc known
						{CIDFont/CDevProc get/CDevProc exch def}
					if
					currentdict
					end
				BaseFontNameStr 3(0)putinterval
				0 1 bfCount dup 256 eq{1 sub}if
					{
					FDepVector exch
					2 index BaseFontDictSize dict copy
						begin
						dup/CIDFirstByte exch 256 mul def
						FontType 3 eq
							{/ct_FDDict 2 dict def}
						if
						currentdict
						end
					1 index 16
					BaseFontNameStr 2 2 getinterval cvrs pop
					BaseFontNameStr exch definefont
					put
					}
				for
				ct_Clone?
					{/Widths 1 index/CIDFont get/GlyphDirectory get length dict def}
				if
				FontName
				currentdict
				end
			definefont
			ct_Clone?
				{
				gsave
				dup 1000 scalefont setfont
				ct_BuildCharDict
					begin
					/usewidths? false def
					currentfont/Widths get
						begin
						exch/CIDFont get/GlyphDirectory get
							{
							pop
							dup charcode exch 1 index 0 2 index 256 idiv put
							1 index exch 1 exch 256 mod put
							stringwidth 2 array astore def
							}
						forall
						end
					/usewidths? true def
					end
				grestore
				}
				{exch pop}
			ifelse
			}bind def
		currentglobal true setglobal
		/ct_ComposeFont
			{
			ct_UseNativeCapability?
				{				
				2 index/CMap ct_resourcestatus
					{pop pop exch pop}
					{
					/CIDInit/ProcSet findresource
						begin
						12 dict
							begin
							begincmap
							/CMapName 3 index def
							/CMapVersion 1.000 def
							/CMapType 1 def
							exch/WMode exch def
							/CIDSystemInfo 3 dict dup
								begin
								/Registry(Adobe)def
								/Ordering
								CMapName ct_mkocfStr100 cvs
								(Adobe-)search
									{
									pop pop
									(-)search
										{
										dup length string copy
										exch pop exch pop
										}
										{pop(Identity)}
									ifelse
									}
									{pop (Identity)}
								ifelse
								def
								/Supplement 0 def
								end def
							1 begincodespacerange
							<0000><FFFF>
							endcodespacerange
							1 begincidrange
							<0000><FFFF>0
							endcidrange
							endcmap
							CMapName currentdict/CMap defineresource pop
							end
						end
					}
				ifelse
				composefont
				}
				{
				3 2 roll pop
				0 get/CIDFont findresource
				ct_makeocf
				}
			ifelse
			}bind def
			setglobal
		/ct_MakeIdentity
			{
			ct_UseNativeCapability?
				{
				1 index/CMap ct_resourcestatus
					{pop pop}
					{
					/CIDInit/ProcSet findresource begin
					12 dict begin
					begincmap
					/CMapName 2 index def
					/CMapVersion 1.000 def
					/CMapType 1 def
					/CIDSystemInfo 3 dict dup
						begin
						/Registry(Adobe)def
						/Ordering
						CMapName ct_mkocfStr100 cvs
						(Adobe-)search
							{
							pop pop
							(-)search
								{dup length string copy exch pop exch pop}
								{pop(Identity)}
							ifelse
							}
							{pop(Identity)}
						ifelse
						def
						/Supplement 0 def
						end def
					1 begincodespacerange
					<0000><FFFF>
					endcodespacerange
					1 begincidrange
					<0000><FFFF>0
					endcidrange
					endcmap
					CMapName currentdict/CMap defineresource pop
					end
					end
					}
				ifelse
				composefont
				}
				{
				exch pop
				0 get/CIDFont findresource
				ct_makeocf
				}
			ifelse
			}bind def
		currentdict readonly pop
		end
	end
%%EndResource
setglobal
%%BeginResource: procset Adobe_CoolType_Utility_T42 1.0 0
%%Copyright: Copyright 1987-2004 Adobe Systems Incorporated.
%%Version: 1.0 0
userdict/ct_T42Dict 15 dict put
ct_T42Dict begin
/Is2015?
{
 version
 cvi
 2015
 ge
}bind def
/AllocGlyphStorage
{
 Is2015?
 {	
	pop
 }
 {
	{string}forall
 }ifelse
}bind def
/Type42DictBegin
{
25 dict begin
 /FontName exch def
 /CharStrings 256 dict 
begin
	 /.notdef 0 def
	 currentdict 
end def
 /Encoding exch def
 /PaintType 0 def
 /FontType 42 def
 /FontMatrix[1 0 0 1 0 0]def
 4 array astore cvx/FontBBox exch def
 /sfnts
}bind def
/Type42DictEnd 
{
 currentdict dup/FontName get exch definefont end
ct_T42Dict exch
dup/FontName get exch put
}bind def
/RD{string currentfile exch readstring pop}executeonly def
/PrepFor2015
{
Is2015?
{		 
	/GlyphDirectory 
	 16
	 dict def
	 sfnts 0 get
	 dup
	 2 index
	(glyx)
	 putinterval
	 2 index 
	(locx)
	 putinterval
	 pop
	 pop
}
{
	 pop
	 pop
}ifelse			
}bind def
/AddT42Char
{
Is2015?
{
	/GlyphDirectory get 
	begin
	def
	end
	pop
	pop
}
{
	/sfnts get
	4 index
	get
	3 index
 2 index
	putinterval
	pop
	pop
	pop
	pop
}ifelse
}bind def
/T0AddT42Mtx2
{
/CIDFont findresource/Metrics2 get begin def end
}bind def
end
%%EndResource
currentglobal true setglobal
%%BeginFile: MMFauxFont.prc
%%Copyright: Copyright 1987-2001 Adobe Systems Incorporated. 
%%All Rights Reserved.
userdict /ct_EuroDict 10 dict put
ct_EuroDict begin
/ct_CopyFont 
{
    { 1 index /FID ne {def} {pop pop} ifelse} forall
} def
/ct_GetGlyphOutline
{
   gsave
   initmatrix newpath
   exch findfont dup 
   length 1 add dict 
   begin 
		ct_CopyFont 
		/Encoding Encoding dup length array copy 
		dup
		4 -1 roll
		0 exch put   
		def
		currentdict
   end
   /ct_EuroFont exch definefont
   1000 scalefont setfont
   0 0 moveto
   [
       <00> stringwidth 
       <00> false charpath
       pathbbox
       [
       {/m cvx} {/l cvx} {/c cvx} {/cp cvx} pathforall
   grestore
   counttomark 8 add
}
def
/ct_MakeGlyphProc
{
   ] cvx
   /ct_PSBuildGlyph cvx
   ] cvx
} def
/ct_PSBuildGlyph 
{ 
 	gsave 
	8 -1 roll pop 
	7 1 roll 
        6 -2 roll ct_FontMatrix transform 6 2 roll
        4 -2 roll ct_FontMatrix transform 4 2 roll
        ct_FontMatrix transform 
	currentdict /PaintType 2 copy known {get 2 eq}{pop pop false} ifelse  
	dup  9 1 roll 
	{  
		currentdict /StrokeWidth 2 copy known  
		{   
			get 2 div   
			0 ct_FontMatrix dtransform pop
			5 1 roll  
			4 -1 roll 4 index sub   
			4 1 roll   
			3 -1 roll 4 index sub  
			3 1 roll   
			exch 4 index add exch  
			4 index add  
			5 -1 roll pop  
		}  
		{	 
			pop pop 
		}  
		ifelse  
	}       
    if  
	setcachedevice  
        ct_FontMatrix concat
        ct_PSPathOps begin 
		exec 
	end 
	{  
		currentdict /StrokeWidth 2 copy known  
			{ get }  
			{ pop pop 0 }  
  	    ifelse  
		setlinewidth stroke  
	}  
	{   
	    fill  
	}  
	ifelse  
    grestore
} def 
/ct_PSPathOps 4 dict dup begin 
	/m {moveto} def 
	/l {lineto} def 
	/c {curveto} def 
	/cp {closepath} def 
end 
def 
/ct_matrix1000 [1000 0 0 1000 0 0] def
/ct_AddGlyphProc  
{
   2 index findfont dup length 4 add dict 
   begin 
	ct_CopyFont 
	/CharStrings CharStrings dup length 1 add dict copy
      begin
         3 1 roll def  
         currentdict 
      end 
      def
      /ct_FontMatrix ct_matrix1000 FontMatrix matrix concatmatrix def
      /ct_PSBuildGlyph /ct_PSBuildGlyph load def
      /ct_PSPathOps /ct_PSPathOps load def
      currentdict
   end
   definefont pop
}
def
systemdict /languagelevel known
{
	/ct_AddGlyphToPrinterFont {
		2 copy
		ct_GetGlyphOutline 3 add -1 roll restore 
		ct_MakeGlyphProc 
		ct_AddGlyphProc
	} def
}
{
	/ct_AddGlyphToPrinterFont {
	    pop pop restore
		Adobe_CTFauxDict /$$$FONTNAME get
		/Euro
		Adobe_CTFauxDict /$$$SUBSTITUTEBASE get
		ct_EuroDict exch get
		ct_AddGlyphProc
	} def
} ifelse
/AdobeSansMM 
{ 
556 0 24 -19 541 703 
	{ 
	541 628 m 
	510 669 442 703 354 703 c 
	201 703 117 607 101 444 c 
	50 444 l 
	25 372 l 
	97 372 l 
	97 301 l 
	49 301 l 
	24 229 l 
	103 229 l 
	124 67 209 -19 350 -19 c 
	435 -19 501 25 509 32 c 
	509 131 l 
	492 105 417 60 343 60 c 
	267 60 204 127 197 229 c 
	406 229 l 
	430 301 l 
	191 301 l 
	191 372 l 
	455 372 l 
	479 444 l 
	194 444 l 
	201 531 245 624 348 624 c 
	433 624 484 583 509 534 c 
	cp 
	556 0 m 
	}
ct_PSBuildGlyph
} def
/AdobeSerifMM 
{ 
500 0 10 -12 484 692 
	{ 
	347 298 m 
	171 298 l 
	170 310 170 322 170 335 c 
	170 362 l 
	362 362 l 
	374 403 l 
	172 403 l 
	184 580 244 642 308 642 c 
	380 642 434 574 457 457 c 
	481 462 l 
	474 691 l 
	449 691 l 
	433 670 429 657 410 657 c 
	394 657 360 692 299 692 c 
	204 692 94 604 73 403 c 
	22 403 l 
	10 362 l 
	70 362 l 
	69 352 69 341 69 330 c 
	69 319 69 308 70 298 c 
	22 298 l 
	10 257 l 
	73 257 l 
	97 57 216 -12 295 -12 c 
	364 -12 427 25 484 123 c 
	458 142 l 
	425 101 384 37 316 37 c 
	256 37 189 84 173 257 c 
	335 257 l 
	cp 
	500 0 m 
	} 
ct_PSBuildGlyph 
} def 
end		
%%EndFile
setglobal
Adobe_CoolType_Core begin /$Oblique SetSubstituteStrategy end
%%BeginResource: procset Adobe_AGM_Image 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2006 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Image 71 dict dup begin put
/Adobe_AGM_Image_Id/Adobe_AGM_Image_1.0_0 def
/nd{
	null def
}bind def
/AGMIMG_&image nd
/AGMIMG_&colorimage nd
/AGMIMG_&imagemask nd
/AGMIMG_mbuf()def
/AGMIMG_ybuf()def
/AGMIMG_kbuf()def
/AGMIMG_c 0 def
/AGMIMG_m 0 def
/AGMIMG_y 0 def
/AGMIMG_k 0 def
/AGMIMG_tmp nd
/AGMIMG_imagestring0 nd
/AGMIMG_imagestring1 nd
/AGMIMG_imagestring2 nd
/AGMIMG_imagestring3 nd
/AGMIMG_imagestring4 nd
/AGMIMG_imagestring5 nd
/AGMIMG_cnt nd
/AGMIMG_fsave nd
/AGMIMG_colorAry nd
/AGMIMG_override nd
/AGMIMG_name nd
/AGMIMG_maskSource nd
/AGMIMG_flushfilters nd
/invert_image_samples nd
/knockout_image_samples	nd
/img nd
/sepimg nd
/devnimg nd
/idximg nd
/ds
{
	Adobe_AGM_Core begin
	Adobe_AGM_Image begin
	/AGMIMG_&image systemdict/image get def
	/AGMIMG_&imagemask systemdict/imagemask get def
	/colorimage where{
		pop
		/AGMIMG_&colorimage/colorimage ldf
	}if
	end
	end
}def
/ps
{
	Adobe_AGM_Image begin
	/AGMIMG_ccimage_exists{/customcolorimage where 
		{
			pop
			/Adobe_AGM_OnHost_Seps where
			{
			pop false
			}{
			/Adobe_AGM_InRip_Seps where
				{
				pop false
				}{
					true
				}ifelse
			}ifelse
			}{
			false
		}ifelse 
	}bdf
	level2{
		/invert_image_samples
		{
			Adobe_AGM_Image/AGMIMG_tmp Decode length ddf
			/Decode[Decode 1 get Decode 0 get]def
		}def
		/knockout_image_samples
		{
			Operator/imagemask ne{
				/Decode[1 1]def
			}if
		}def
	}{	
		/invert_image_samples
		{
			{1 exch sub}currenttransfer addprocs settransfer
		}def
		/knockout_image_samples
		{
			{pop 1}currenttransfer addprocs settransfer
		}def
	}ifelse
	/img/imageormask ldf
	/sepimg/sep_imageormask ldf
	/devnimg/devn_imageormask ldf
	/idximg/indexed_imageormask ldf
	/_ctype 7 def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
}def
/pt
{
	end
}def
/dt
{
}def
/AGMIMG_flushfilters
{
	dup type/arraytype ne
		{1 array astore}if
	dup 0 get currentfile ne
		{dup 0 get flushfile}if
		{
		dup type/filetype eq
			{
			dup status 1 index currentfile ne and
				{closefile}
				{pop}
			ifelse
			}{pop}ifelse
		}forall
}def
/AGMIMG_init_common
{
	currentdict/T known{/ImageType/T ldf currentdict/T undef}if
	currentdict/W known{/Width/W ldf currentdict/W undef}if
	currentdict/H known{/Height/H ldf currentdict/H undef}if
	currentdict/M known{/ImageMatrix/M ldf currentdict/M undef}if
	currentdict/BC known{/BitsPerComponent/BC ldf currentdict/BC undef}if
	currentdict/D known{/Decode/D ldf currentdict/D undef}if
	currentdict/DS known{/DataSource/DS ldf currentdict/DS undef}if
	currentdict/O known{
		/Operator/O load 1 eq{
			/imagemask
		}{
			/O load 2 eq{
				/image 
			}{
				/colorimage
			}ifelse
		}ifelse
		def
		currentdict/O undef
	}if
	currentdict/HSCI known{/HostSepColorImage/HSCI ldf currentdict/HSCI undef}if
	currentdict/MD known{/MultipleDataSources/MD ldf currentdict/MD undef}if
	currentdict/I known{/Interpolate/I ldf currentdict/I undef}if
	currentdict/SI known{/SkipImageProc/SI ldf currentdict/SI undef}if
	/DataSource load xcheck not{
		DataSource type/arraytype eq{
			DataSource 0 get type/filetype eq{
				/_Filters DataSource def
				currentdict/MultipleDataSources known not{
					/DataSource DataSource dup length 1 sub get def 
				}if
			}if
		}if
		currentdict/MultipleDataSources known not{
			/MultipleDataSources DataSource type/arraytype eq{
				DataSource length 1 gt
			}
			{false}ifelse def
		}if
	}if
	/NComponents Decode length 2 div def
	currentdict/SkipImageProc known not{/SkipImageProc{false}def}if
}bdf
/imageormask_sys
{
	begin
		AGMIMG_init_common
		save mark
		level2{
			currentdict
			Operator/imagemask eq{
				AGMIMG_&imagemask
			}{
				use_mask{
					process_mask AGMIMG_&image
				}{
					AGMIMG_&image
				}ifelse
			}ifelse
		}{
			Width Height
			Operator/imagemask eq{
				Decode 0 get 1 eq Decode 1 get 0 eq	and
				ImageMatrix/DataSource load
				AGMIMG_&imagemask
			}{
				BitsPerComponent ImageMatrix/DataSource load
				AGMIMG_&image
			}ifelse
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
		cleartomark restore
	end
}def
/overprint_plate
{
	currentoverprint{
		0 get dup type/nametype eq{
			dup/DeviceGray eq{
				pop AGMCORE_black_plate not
			}{
				/DeviceCMYK eq{
					AGMCORE_is_cmyk_sep not
				}if
			}ifelse
		}{
			false exch
			{
				 AGMOHS_sepink eq or
			}forall
			not
		}ifelse
	}{
		pop false
	}ifelse
}def
/process_mask
{
	level3{
		dup begin
		/ImageType 1 def
		end
		4 dict begin
			/DataDict exch def
			/ImageType 3 def
			/InterleaveType 3 def
			/MaskDict 9 dict begin
				/ImageType 1 def
				/Width DataDict dup/MaskWidth known{/MaskWidth}{/Width}ifelse get def
				/Height DataDict dup/MaskHeight known{/MaskHeight}{/Height}ifelse get def
				/ImageMatrix[Width 0 0 Height neg 0 Height]def
				/NComponents 1 def
				/BitsPerComponent 1 def
				/Decode DataDict dup/MaskD known{/MaskD}{[1 0]}ifelse get def
				/DataSource Adobe_AGM_Core/AGMIMG_maskSource get def
			currentdict end def
		currentdict end
	}if
}def
/use_mask
{
	dup/Mask known	{dup/Mask get}{false}ifelse
}def
/imageormask
{
	begin
		AGMIMG_init_common
		SkipImageProc{
			currentdict consumeimagedata
		}
		{
			save mark
			level2 AGMCORE_host_sep not and{
				currentdict
				Operator/imagemask eq DeviceN_PS2 not and{
					imagemask
				}{
					AGMCORE_in_rip_sep currentoverprint and currentcolorspace 0 get/DeviceGray eq and{
						[/Separation/Black/DeviceGray{}]setcolorspace
						/Decode[Decode 1 get Decode 0 get]def
					}if
					use_mask{
						process_mask image
					}{
						DeviceN_NoneName DeviceN_PS2 Indexed_DeviceN level3 not and or or AGMCORE_in_rip_sep and 
						{
							Names convert_to_process not{
								2 dict begin
								/imageDict xdf
								/names_index 0 def
								gsave
								imageDict write_image_file{
									Names{
										dup(None)ne{
											[/Separation 3 -1 roll/DeviceGray{1 exch sub}]setcolorspace
											Operator imageDict read_image_file
											names_index 0 eq{true setoverprint}if
											/names_index names_index 1 add def
										}{
											pop
										}ifelse
									}forall
									close_image_file
								}if
								grestore
								end
							}{
								Operator/imagemask eq{
									imagemask
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/imagemask eq{
								imagemask
							}{
								image
							}ifelse
						}ifelse
					}ifelse
				}ifelse
			}{
				Width Height
				Operator/imagemask eq{
					Decode 0 get 1 eq Decode 1 get 0 eq	and
					ImageMatrix/DataSource load
					/Adobe_AGM_OnHost_Seps where{
						pop imagemask
					}{
						currentgray 1 ne{
							currentdict imageormask_sys
						}{
							currentoverprint not{
								1 AGMCORE_&setgray
								currentdict imageormask_sys
							}{
								currentdict ignoreimagedata
							}ifelse				 		
						}ifelse
					}ifelse
				}{
					BitsPerComponent ImageMatrix 
					MultipleDataSources{
						0 1 NComponents 1 sub{
							DataSource exch get
						}for
					}{
						/DataSource load
					}ifelse
					Operator/colorimage eq{
						AGMCORE_host_sep{
							MultipleDataSources level2 or NComponents 4 eq and{
								AGMCORE_is_cmyk_sep{
									MultipleDataSources{
										/DataSource DataSource 0 get xcheck
											{
											[
											DataSource 0 get/exec cvx
											DataSource 1 get/exec cvx
											DataSource 2 get/exec cvx
											DataSource 3 get/exec cvx
											/AGMCORE_get_ink_data cvx
											]cvx
											}{
											DataSource aload pop AGMCORE_get_ink_data
											}ifelse def
									}{
										/DataSource 
										Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
										/DataSource load
										filter_cmyk 0()/SubFileDecode filter def
									}ifelse
									/Decode[Decode 0 get Decode 1 get]def
									/MultipleDataSources false def
									/NComponents 1 def
									/Operator/image def
									invert_image_samples
						 			1 AGMCORE_&setgray
									currentdict imageormask_sys
								}{
									currentoverprint not Operator/imagemask eq and{
 			 							1 AGMCORE_&setgray
 			 							currentdict imageormask_sys
 			 						}{
 			 							currentdict ignoreimagedata
 			 						}ifelse
								}ifelse
							}{	
								MultipleDataSources NComponents AGMIMG_&colorimage						
							}ifelse
						}{
							true NComponents colorimage
						}ifelse
					}{
						Operator/image eq{
							AGMCORE_host_sep{
								/DoImage true def
								currentdict/HostSepColorImage known{HostSepColorImage not}{false}ifelse
								{
									AGMCORE_black_plate not Operator/imagemask ne and{
										/DoImage false def
										currentdict ignoreimagedata
					 				}if
								}if
						 		1 AGMCORE_&setgray
								DoImage
									{currentdict imageormask_sys}if
							}{
								use_mask{
									process_mask image
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/knockout eq{
								pop pop pop pop pop
								currentcolorspace overprint_plate not{
									knockout_unitsq
								}if
							}if
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			cleartomark restore
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/sep_imageormask
{
 	/sep_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_avoid_L2_sep_space{
			/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
		}if
 		AGMIMG_ccimage_exists 
		MappedCSA 0 get/DeviceCMYK eq and
		currentdict/Components known and 
		Name()ne and 
		Name(All)ne and 
		Operator/image eq and
		AGMCORE_producing_seps not and
		level2 not and
		{
			Width Height BitsPerComponent ImageMatrix 
			[
			/DataSource load/exec cvx
			{
				0 1 2 index length 1 sub{
					1 index exch
					2 copy get 255 xor put
				}for
			}/exec cvx
			]cvx bind
			MappedCSA 0 get/DeviceCMYK eq{
				Components aload pop
			}{
				0 0 0 Components aload pop 1 exch sub
			}ifelse
			Name findcmykcustomcolor
			customcolorimage
		}{
			AGMCORE_producing_seps not{
				level2{
 					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne AGMCORE_avoid_L2_sep_space not and currentcolorspace 0 get/Separation ne and{
						[/Separation Name MappedCSA sep_proc_name exch dup 0 get 15 string cvs(/Device)anchorsearch{pop pop 0 get}{pop}ifelse exch load]setcolorspace_opt
						/sep_tint AGMCORE_gget setcolor
					}if
					currentdict imageormask
				}{
					currentdict
					Operator/imagemask eq{
						imageormask
					}{
						sep_imageormask_lev1
					}ifelse
				}ifelse
 			}{
				AGMCORE_host_sep{
					Operator/knockout eq{
						currentdict/ImageMatrix get concat
						knockout_unitsq
					}{
						currentgray 1 ne{
 							AGMCORE_is_cmyk_sep Name(All)ne and{
 								level2{
 									Name AGMCORE_IsSeparationAProcessColor 
 									{
 										Operator/imagemask eq{
 											//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
 												/sep_tint AGMCORE_gget 1 exch sub AGMCORE_&setcolor
 											}if
 										}{
											invert_image_samples
 										}ifelse
	 								}{
	 									//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
	 										[/Separation Name[/DeviceGray]
	 										{
	 											sep_colorspace_proc AGMCORE_get_ink_data
												1 exch sub
	 										}bind
											]AGMCORE_&setcolorspace
											/sep_tint AGMCORE_gget AGMCORE_&setcolor
										}if
 									}ifelse
 									currentdict imageormask_sys
	 							}{
	 								currentdict
									Operator/imagemask eq{
										imageormask_sys
									}{
										sep_image_lev1_sep
									}ifelse
	 							}ifelse
 							}{
 								Operator/imagemask ne{
									invert_image_samples
 								}if
		 						currentdict imageormask_sys
 							}ifelse
 						}{
 							currentoverprint not Name(All)eq or Operator/imagemask eq and{
								currentdict imageormask_sys 
								}{
								currentoverprint not
									{
 									gsave 
 									knockout_unitsq
 									grestore
									}if
								currentdict consumeimagedata 
		 					}ifelse
 						}ifelse
		 			}ifelse
 				}{
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
						currentcolorspace 0 get/Separation ne{
							[/Separation Name MappedCSA sep_proc_name exch 0 get exch load]setcolorspace_opt
							/sep_tint AGMCORE_gget setcolor
						}if
					}if
					currentoverprint 
					MappedCSA 0 get/DeviceCMYK eq and 
					Name AGMCORE_IsSeparationAProcessColor not and
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{Name inRip_spot_has_ink not and}{false}ifelse 
					Name(All)ne and{
						imageormask_l2_overprint
					}{
						currentdict imageormask
 					}ifelse
				}ifelse
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
}def
/colorSpaceElemCnt
{
	mark currentcolor counttomark dup 2 add 1 roll cleartomark
}bdf
/devn_sep_datasource
{
	1 dict begin
	/dataSource xdf
	[
		0 1 dataSource length 1 sub{
			dup currentdict/dataSource get/exch cvx/get cvx/exec cvx
			/exch cvx names_index/ne cvx[/pop cvx]cvx/if cvx
		}for
	]cvx bind
	end
}bdf		
/devn_alt_datasource
{
	11 dict begin
	/convProc xdf
	/origcolorSpaceElemCnt xdf
	/origMultipleDataSources xdf
	/origBitsPerComponent xdf
	/origDecode xdf
	/origDataSource xdf
	/dsCnt origMultipleDataSources{origDataSource length}{1}ifelse def
	/DataSource origMultipleDataSources
		{
			[
			BitsPerComponent 8 idiv origDecode length 2 idiv mul string
			0 1 origDecode length 2 idiv 1 sub
				{
				dup 7 mul 1 add index exch dup BitsPerComponent 8 idiv mul exch
				origDataSource exch get 0()/SubFileDecode filter
				BitsPerComponent 8 idiv string/readstring cvx/pop cvx/putinterval cvx
				}for 
			]bind cvx
		}{origDataSource}ifelse 0()/SubFileDecode filter def		
	[
		origcolorSpaceElemCnt string
		0 2 origDecode length 2 sub
			{
			dup origDecode exch get dup 3 -1 roll 1 add origDecode exch get exch sub 2 BitsPerComponent exp 1 sub div
			1 BitsPerComponent 8 idiv{DataSource/read cvx/not cvx{0}/if cvx/mul cvx}repeat/mul cvx/add cvx
			}for
		/convProc load/exec cvx
		origcolorSpaceElemCnt 1 sub -1 0
			{
			/dup cvx 2/add cvx/index cvx
			3 1/roll cvx/exch cvx 255/mul cvx/cvi cvx/put cvx
			}for
	]bind cvx 0()/SubFileDecode filter
	end
}bdf
/devn_imageormask
{
 	/devicen_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	2 dict begin
	dup
	/srcDataStrs[3 -1 roll begin
		AGMIMG_init_common
		currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
		{
			Width Decode length 2 div mul cvi
			{
				dup 65535 gt{1 add 2 div cvi}{exit}ifelse
			}loop
			string
		}repeat
		end]def
	/dstDataStr srcDataStrs 0 get length string def
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_producing_seps not{
			level3 not{
				Operator/imagemask ne{
					/DataSource[[
						DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
						colorSpaceElemCnt/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
						devn_alt_datasource 1/string cvx/readstring cvx/pop cvx]cvx colorSpaceElemCnt 1 sub{dup}repeat]def				
					/MultipleDataSources true def
					/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				}if
			}if
			currentdict imageormask
 		}{
			AGMCORE_host_sep{
				Names convert_to_process{
					CSA get_csa_by_name 0 get/DeviceCMYK eq{
						/DataSource
							Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
							DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
							4/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
							devn_alt_datasource
						filter_cmyk 0()/SubFileDecode filter def
						/MultipleDataSources false def
						/Decode[1 0]def
						/DeviceGray setcolorspace
			 			currentdict imageormask_sys
 					}{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate{
							/DataSource
								DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
								CSA get_csa_by_name 0 get/DeviceRGB eq{3}{1}ifelse/devicen_colorspace_dict AGMCORE_gget/TintTransform get
								devn_alt_datasource
							/MultipleDataSources false def
							/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				 			currentdict imageormask_sys
				 		}{
	 						gsave 
	 						knockout_unitsq
	 						grestore
							currentdict consumeimagedata 
						}ifelse
 					}ifelse
				}
				{	
					/devicen_colorspace_dict AGMCORE_gget/names_index known{
	 					Operator/imagemask ne{
	 						MultipleDataSources{
		 						/DataSource[DataSource devn_sep_datasource/exec cvx]cvx def
								/MultipleDataSources false def
	 						}{
								/DataSource/DataSource load dstDataStr srcDataStrs 0 get filter_devn def
	 						}ifelse
							invert_image_samples
	 					}if
			 			currentdict imageormask_sys
	 				}{
	 					currentoverprint not Operator/imagemask eq and{
							currentdict imageormask_sys 
							}{
							currentoverprint not
								{
	 							gsave 
	 							knockout_unitsq
	 							grestore
								}if
							currentdict consumeimagedata 
			 			}ifelse
	 				}ifelse
	 			}ifelse
 			}{
				currentdict imageormask
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
	end
}def
/imageormask_l2_overprint
{
	currentdict
	currentcmykcolor add add add 0 eq{
		currentdict consumeimagedata
	}{
		level3{			
			currentcmykcolor 
			/AGMIMG_k xdf 
			/AGMIMG_y xdf 
			/AGMIMG_m xdf 
			/AGMIMG_c xdf
			Operator/imagemask eq{
				[/DeviceN[
				AGMIMG_c 0 ne{/Cyan}if
				AGMIMG_m 0 ne{/Magenta}if
				AGMIMG_y 0 ne{/Yellow}if
				AGMIMG_k 0 ne{/Black}if
				]/DeviceCMYK{}]setcolorspace
				AGMIMG_c 0 ne{AGMIMG_c}if
				AGMIMG_m 0 ne{AGMIMG_m}if
				AGMIMG_y 0 ne{AGMIMG_y}if
				AGMIMG_k 0 ne{AGMIMG_k}if
				setcolor			
			}{	
				/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
				[/Indexed 				
					[
						/DeviceN[
							AGMIMG_c 0 ne{/Cyan}if
							AGMIMG_m 0 ne{/Magenta}if
							AGMIMG_y 0 ne{/Yellow}if
							AGMIMG_k 0 ne{/Black}if
						]
						/DeviceCMYK{
							AGMIMG_k 0 eq{0}if
							AGMIMG_y 0 eq{0 exch}if
							AGMIMG_m 0 eq{0 3 1 roll}if
							AGMIMG_c 0 eq{0 4 1 roll}if						
						}
					]
					255
					{
						255 div 
						mark exch
						dup	dup dup
						AGMIMG_k 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 1 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_y 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 2 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_m 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 3 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_c 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						counttomark 1 add -1 roll pop
					}
				]setcolorspace
			}ifelse
			imageormask_sys
		}{
	write_image_file{
		currentcmykcolor
		0 ne{
			[/Separation/Black/DeviceGray{}]setcolorspace
			gsave
			/Black
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 1 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Yellow/DeviceGray{}]setcolorspace
			gsave
			/Yellow
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 2 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Magenta/DeviceGray{}]setcolorspace
			gsave
			/Magenta
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 3 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Cyan/DeviceGray{}]setcolorspace
			gsave
			/Cyan 
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
				close_image_file
			}{
				imageormask
			}ifelse
		}ifelse
	}ifelse
}def
/indexed_imageormask
{
	begin
		AGMIMG_init_common
		save mark 
 		currentdict
 		AGMCORE_host_sep{
			Operator/knockout eq{
				/indexed_colorspace_dict AGMCORE_gget dup/CSA known{
					/CSA get get_csa_by_name
				}{
					/Names get
				}ifelse
				overprint_plate not{
					knockout_unitsq
				}if
			}{
				Indexed_DeviceN{
					/devicen_colorspace_dict AGMCORE_gget dup/names_index known exch/Names get convert_to_process or{
			 			indexed_image_lev2_sep
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}{
		 			AGMCORE_is_cmyk_sep{
						Operator/imagemask eq{
							imageormask_sys
						}{
							level2{
								indexed_image_lev2_sep
							}{
								indexed_image_lev1_sep
							}ifelse
						}ifelse
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}ifelse
			}ifelse
 		}{
			level2{
				Indexed_DeviceN{
					/indexed_colorspace_dict AGMCORE_gget begin
				}{
					/indexed_colorspace_dict AGMCORE_gget dup null ne
					{
						begin
						currentdict/CSDBase known{CSDBase/CSD get_res/MappedCSA get}{CSA}ifelse
						get_csa_by_name 0 get/DeviceCMYK eq ps_level 3 ge and ps_version 3015.007 lt and
						AGMCORE_in_rip_sep and{
							[/Indexed[/DeviceN[/Cyan/Magenta/Yellow/Black]/DeviceCMYK{}]HiVal Lookup]
							setcolorspace
						}if
						end
					}
					{pop}ifelse
				}ifelse
				imageormask
				Indexed_DeviceN{
					end
				}if
			}{
				Operator/imagemask eq{
					imageormask
				}{
					indexed_imageormask_lev1
				}ifelse
			}ifelse
 		}ifelse
		cleartomark restore
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/indexed_image_lev2_sep
{
	/indexed_colorspace_dict AGMCORE_gget begin
	begin
		Indexed_DeviceN not{
			currentcolorspace 
			dup 1/DeviceGray put
			dup 3
			currentcolorspace 2 get 1 add string
			0 1 2 3 AGMCORE_get_ink_data 4 currentcolorspace 3 get length 1 sub
			{
			dup 4 idiv exch currentcolorspace 3 get exch get 255 exch sub 2 index 3 1 roll put
			}for 
			put	setcolorspace
		}if
		currentdict 
		Operator/imagemask eq{
			AGMIMG_&imagemask
		}{
			use_mask{
				process_mask AGMIMG_&image
			}{
				AGMIMG_&image
			}ifelse
		}ifelse
	end end
}def
 /OPIimage
 {
 	dup type/dicttype ne{
 		10 dict begin
 			/DataSource xdf
 			/ImageMatrix xdf
 			/BitsPerComponent xdf
 			/Height xdf
 			/Width xdf
 			/ImageType 1 def
 			/Decode[0 1 def]
 			currentdict
 		end
 	}if
 	dup begin
 		/NComponents 1 cdndf
 		/MultipleDataSources false cdndf
 		/SkipImageProc{false}cdndf
 		/Decode[
 				0 
 				currentcolorspace 0 get/Indexed eq{
 					2 BitsPerComponent exp 1 sub
 				}{
 					1
 				}ifelse
 		]cdndf
 		/Operator/image cdndf
 	end
 	/sep_colorspace_dict AGMCORE_gget null eq{
 		imageormask
 	}{
 		gsave
 		dup begin invert_image_samples end
 		sep_imageormask
 		grestore
 	}ifelse
 }def
/cachemask_level2
{
	3 dict begin
	/LZWEncode filter/WriteFilter xdf
	/readBuffer 256 string def
	/ReadFilter
		currentfile
		0(%EndMask)/SubFileDecode filter
		/ASCII85Decode filter
		/RunLengthDecode filter
	def
	{
		ReadFilter readBuffer readstring exch
		WriteFilter exch writestring
		not{exit}if
	}loop
	WriteFilter closefile
	end
}def
/spot_alias
{
	/mapto_sep_imageormask 
	{
		dup type/dicttype ne{
			12 dict begin
				/ImageType 1 def
				/DataSource xdf
				/ImageMatrix xdf
				/BitsPerComponent xdf
				/Height xdf
				/Width xdf
				/MultipleDataSources false def
		}{
			begin
		}ifelse
				/Decode[/customcolor_tint AGMCORE_gget 0]def
				/Operator/image def
				/SkipImageProc{false}def
				currentdict 
			end
		sep_imageormask
	}bdf
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_colorAry xddf
		/customcolor_tint AGMCORE_gget
		<<
			/Name AGMIMG_colorAry 4 get
			/CSA[/DeviceCMYK]
			/TintMethod/Subtractive
			/TintProc null
			/MappedCSA null
			/NComponents 4 
			/Components[AGMIMG_colorAry aload pop pop]
		>>
		setsepcolorspace
		mapto_sep_imageormask
	}ndf
	Adobe_AGM_Image/AGMIMG_&customcolorimage/customcolorimage load put
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_override false put
		current_spot_alias{dup 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/customcolor_tint AGMCORE_gget exch setsepcolorspace
			pop
			mapto_sep_imageormask
			true set_spot_alias
		}{
			//Adobe_AGM_Image/AGMIMG_&customcolorimage get exec
		}ifelse			
	}bdf
}def
/snap_to_device
{
	6 dict begin
	matrix currentmatrix
	dup 0 get 0 eq 1 index 3 get 0 eq and
	1 index 1 get 0 eq 2 index 2 get 0 eq and or exch pop
	{
		1 1 dtransform 0 gt exch 0 gt/AGMIMG_xSign? exch def/AGMIMG_ySign? exch def
		0 0 transform
		AGMIMG_ySign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		AGMIMG_xSign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		itransform/AGMIMG_llY exch def/AGMIMG_llX exch def
		1 1 transform
		AGMIMG_ySign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		AGMIMG_xSign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		itransform/AGMIMG_urY exch def/AGMIMG_urX exch def			
		[AGMIMG_urX AGMIMG_llX sub 0 0 AGMIMG_urY AGMIMG_llY sub AGMIMG_llX AGMIMG_llY]concat
	}{
	}ifelse
	end
}def
level2 not{
	/colorbuf
	{
		0 1 2 index length 1 sub{
			dup 2 index exch get 
			255 exch sub 
			2 index 
			3 1 roll 
			put
		}for
	}def
	/tint_image_to_color
	{
		begin
			Width Height BitsPerComponent ImageMatrix 
			/DataSource load
		end
		Adobe_AGM_Image begin
			/AGMIMG_mbuf 0 string def
			/AGMIMG_ybuf 0 string def
			/AGMIMG_kbuf 0 string def
			{
				colorbuf dup length AGMIMG_mbuf length ne
					{
					dup length dup dup
					/AGMIMG_mbuf exch string def
					/AGMIMG_ybuf exch string def
					/AGMIMG_kbuf exch string def
					}if
				dup AGMIMG_mbuf copy AGMIMG_ybuf copy AGMIMG_kbuf copy pop
			}
			addprocs
			{AGMIMG_mbuf}{AGMIMG_ybuf}{AGMIMG_kbuf}true 4 colorimage	
		end
	}def			
	/sep_imageormask_lev1
	{
		begin
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{
					255 mul round cvi GrayLookup exch get
				}currenttransfer addprocs settransfer
				currentdict imageormask
			}{
				/sep_colorspace_dict AGMCORE_gget/Components known{
					MappedCSA 0 get/DeviceCMYK eq{
						Components aload pop
					}{
						0 0 0 Components aload pop 1 exch sub
					}ifelse
					Adobe_AGM_Image/AGMIMG_k xddf 
					Adobe_AGM_Image/AGMIMG_y xddf 
					Adobe_AGM_Image/AGMIMG_m xddf 
					Adobe_AGM_Image/AGMIMG_c xddf 
					AGMIMG_y 0.0 eq AGMIMG_m 0.0 eq and AGMIMG_c 0.0 eq and{
						{AGMIMG_k mul 1 exch sub}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						currentcolortransfer
						{AGMIMG_k mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_y mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_m mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_c mul 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer
						currentdict tint_image_to_color
					}ifelse
				}{
					MappedCSA 0 get/DeviceGray eq{
						{255 mul round cvi ColorLookup exch get 0 get}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						MappedCSA 0 get/DeviceCMYK eq{
							currentcolortransfer
							{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}{
							currentcolortransfer
							{pop 1}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}ifelse
					}ifelse
				}ifelse
			}ifelse
		end
	}def
	/sep_image_lev1_sep
	{
		begin
			/sep_colorspace_dict AGMCORE_gget/Components known{
				Components aload pop
				Adobe_AGM_Image/AGMIMG_k xddf 
				Adobe_AGM_Image/AGMIMG_y xddf 
				Adobe_AGM_Image/AGMIMG_m xddf 
				Adobe_AGM_Image/AGMIMG_c xddf 
				{AGMIMG_c mul 1 exch sub}
				{AGMIMG_m mul 1 exch sub}
				{AGMIMG_y mul 1 exch sub}
				{AGMIMG_k mul 1 exch sub}
			}{
				{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}
			}ifelse
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end
	}def
	/indexed_imageormask_lev1
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			currentdict
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{HiVal mul round cvi GrayLookup exch get HiVal div}currenttransfer addprocs settransfer
				imageormask
			}{
				MappedCSA 0 get/DeviceGray eq{
					{HiVal mul round cvi Lookup exch get HiVal div}currenttransfer addprocs settransfer
					imageormask
				}{
					MappedCSA 0 get/DeviceCMYK eq{
						currentcolortransfer
						{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}{
						currentcolortransfer
						{pop 1}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 2 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 1 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 		Lookup exch get HiVal div}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}ifelse
				}ifelse
			}ifelse
		end end
	}def
	/indexed_image_lev1_sep
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end end
	}def
}if
end
systemdict/setpacking known
{setpacking}if
%%EndResource
currentdict Adobe_AGM_Utils eq {end} if
%%EndProlog
%%BeginSetup
Adobe_AGM_Utils begin
2 2010 Adobe_AGM_Core/ds gx
Adobe_CoolType_Core/ds get exec
Adobe_AGM_Image/ds gx
currentdict Adobe_AGM_Utils eq {end} if
%%EndSetup
%%Page: 1 1
%%EndPageComments
%%BeginPageSetup
%ADOBeginClientInjection: PageSetup Start "AI11EPS"
%AI12_RMC_Transparency: Balance=75 RasterRes=300 GradRes=150 Text=0 Stroke=1 Clip=1 OP=0
%ADOEndClientInjection: PageSetup Start "AI11EPS"
Adobe_AGM_Utils begin
Adobe_AGM_Core/ps gx
Adobe_AGM_Utils/capture_cpd gx
Adobe_CoolType_Core/ps get exec
Adobe_AGM_Image/ps gx
%ADOBeginClientInjection: PageSetup End "AI11EPS"
/currentdistillerparams where{pop currentdistillerparams /CoreDistVersion get 5000 lt} {true} ifelse{ userdict /AI11_PDFMark5 /cleartomark load putuserdict /AI11_ReadMetadata_PDFMark5 {flushfile cleartomark } bind put}{ userdict /AI11_PDFMark5 /pdfmark load putuserdict /AI11_ReadMetadata_PDFMark5 {/PUT pdfmark} bind put } ifelse[/NamespacePush AI11_PDFMark5[/_objdef {ai_metadata_stream_123} /type /stream /OBJ AI11_PDFMark5[{ai_metadata_stream_123}currentfile 0 (%  &&end XMP packet marker&&)/SubFileDecode filter AI11_ReadMetadata_PDFMark5<?xpacket begin="﻿" id="W5M0MpCehiHzreSzNTczkc9d"?>
<x:xmpmeta xmlns:x="adobe:ns:meta/" x:xmptk="Adobe XMP Core 6.0-c004 79.164570, 2020/11/18-15:51:46        ">
 <rdf:RDF xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#">
  <rdf:Description rdf:about=""
    xmlns:dc="http://purl.org/dc/elements/1.1/"
    xmlns:xmp="http://ns.adobe.com/xap/1.0/"
    xmlns:xmpGImg="http://ns.adobe.com/xap/1.0/g/img/"
    xmlns:xmpMM="http://ns.adobe.com/xap/1.0/mm/"
    xmlns:stRef="http://ns.adobe.com/xap/1.0/sType/ResourceRef#"
    xmlns:stEvt="http://ns.adobe.com/xap/1.0/sType/ResourceEvent#"
    xmlns:illustrator="http://ns.adobe.com/illustrator/1.0/"
    xmlns:xmpTPg="http://ns.adobe.com/xap/1.0/t/pg/"
    xmlns:stDim="http://ns.adobe.com/xap/1.0/sType/Dimensions#"
    xmlns:xmpG="http://ns.adobe.com/xap/1.0/g/"
    xmlns:pdf="http://ns.adobe.com/pdf/1.3/"
   dc:format="application/postscript"
   dc:headline="Sand castle parts. Cartoon kids fortress constructions on the beach, building house sandcastle constructor summer season. Vector isolated set"
   xmp:MetadataDate="2023-02-17T18:07:07+02:00"
   xmp:ModifyDate="2023-02-17T18:07:09.312+02:00"
   xmp:CreateDate="2023-02-17T18:07:07+02:00"
   xmp:CreatorTool="Adobe Illustrator 25.2 (Windows)"
   xmpMM:InstanceID="xmp.iid:75eb84d5-412c-3a41-803d-e2b47d916a6c"
   xmpMM:DocumentID="xmp.did:75eb84d5-412c-3a41-803d-e2b47d916a6c"
   xmpMM:OriginalDocumentID="uuid:5D20892493BFDB11914A8590D31508C8"
   xmpMM:RenditionClass="proof:pdf"
   illustrator:StartupProfile="Print"
   illustrator:CreatorSubTool="Adobe Illustrator"
   xmpTPg:HasVisibleOverprint="False"
   xmpTPg:HasVisibleTransparency="True"
   xmpTPg:NPages="1"
   pdf:Producer="Adobe PDF library 15.00">
   <dc:title>
    <rdf:Alt>
     <rdf:li xml:lang="x-default">Sand castle parts. Cartoon kids fortress constructions on the beach, building house sandcastle constructor summer season. Vector isolated set</rdf:li>
    </rdf:Alt>
   </dc:title>
   <dc:description>
    <rdf:Alt>
     <rdf:li xml:lang="x-default">Sand castle parts. Cartoon kids fortress constructions on the beach, building house sandcastle constructor summer season. Vector isolated set of element sculpt architecture illustration</rdf:li>
    </rdf:Alt>
   </dc:description>
   <dc:creator>
    <rdf:Seq>
     <rdf:li>Lenovo</rdf:li>
    </rdf:Seq>
   </dc:creator>
   <dc:subject>
    <rdf:Bag>
     <rdf:li>element</rdf:li>
     <rdf:li> sculpt</rdf:li>
     <rdf:li> architecture</rdf:li>
     <rdf:li> recreation</rdf:li>
     <rdf:li> sandbox</rdf:li>
     <rdf:li> construction</rdf:li>
     <rdf:li> tower</rdf:li>
     <rdf:li> generator</rdf:li>
     <rdf:li> summertime</rdf:li>
     <rdf:li> fantasy</rdf:li>
     <rdf:li> outdoor</rdf:li>
     <rdf:li> activities</rdf:li>
     <rdf:li> background</rdf:li>
     <rdf:li> preschool</rdf:li>
     <rdf:li> collection</rdf:li>
     <rdf:li> play</rdf:li>
     <rdf:li> sea</rdf:li>
     <rdf:li> illustration</rdf:li>
     <rdf:li> set</rdf:li>
     <rdf:li> object</rdf:li>
     <rdf:li> coast</rdf:li>
     <rdf:li> game</rdf:li>
     <rdf:li> isolated</rdf:li>
     <rdf:li> cartoon</rdf:li>
     <rdf:li> decorative</rdf:li>
     <rdf:li> city</rdf:li>
     <rdf:li> house</rdf:li>
     <rdf:li> build</rdf:li>
     <rdf:li> sandy</rdf:li>
     <rdf:li> fortress</rdf:li>
     <rdf:li> coastline</rdf:li>
     <rdf:li> castle</rdf:li>
     <rdf:li> vector</rdf:li>
     <rdf:li> sand</rdf:li>
     <rdf:li> design</rdf:li>
     <rdf:li> detail</rdf:li>
     <rdf:li> handmade</rdf:li>
     <rdf:li> building</rdf:li>
     <rdf:li> roughness</rdf:li>
     <rdf:li> color</rdf:li>
     <rdf:li> sandcastle</rdf:li>
     <rdf:li> figure</rdf:li>
     <rdf:li> simple</rdf:li>
     <rdf:li> stairs</rdf:li>
     <rdf:li> fragment</rdf:li>
     <rdf:li> piece</rdf:li>
     <rdf:li> casual</rdf:li>
     <rdf:li> diy</rdf:li>
     <rdf:li> creative</rdf:li>
    </rdf:Bag>
   </dc:subject>
   <xmp:Thumbnails>
    <rdf:Alt>
     <rdf:li
      xmpGImg:width="256"
      xmpGImg:height="244"
      xmpGImg:format="JPEG"
      xmpGImg:image="/9j/4AAQSkZJRgABAgEASABIAAD/7QAsUGhvdG9zaG9wIDMuMAA4QklNA+0AAAAAABAASAAAAAEA&#xA;AQBIAAAAAQAB/+4ADkFkb2JlAGTAAAAAAf/bAIQABgQEBAUEBgUFBgkGBQYJCwgGBggLDAoKCwoK&#xA;DBAMDAwMDAwQDA4PEA8ODBMTFBQTExwbGxscHx8fHx8fHx8fHwEHBwcNDA0YEBAYGhURFRofHx8f&#xA;Hx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8f/8AAEQgA9AEAAwER&#xA;AAIRAQMRAf/EAaIAAAAHAQEBAQEAAAAAAAAAAAQFAwIGAQAHCAkKCwEAAgIDAQEBAQEAAAAAAAAA&#xA;AQACAwQFBgcICQoLEAACAQMDAgQCBgcDBAIGAnMBAgMRBAAFIRIxQVEGE2EicYEUMpGhBxWxQiPB&#xA;UtHhMxZi8CRygvElQzRTkqKyY3PCNUQnk6OzNhdUZHTD0uIIJoMJChgZhJRFRqS0VtNVKBry4/PE&#xA;1OT0ZXWFlaW1xdXl9WZ2hpamtsbW5vY3R1dnd4eXp7fH1+f3OEhYaHiImKi4yNjo+Ck5SVlpeYmZ&#xA;qbnJ2en5KjpKWmp6ipqqusra6voRAAICAQIDBQUEBQYECAMDbQEAAhEDBCESMUEFURNhIgZxgZEy&#xA;obHwFMHR4SNCFVJicvEzJDRDghaSUyWiY7LCB3PSNeJEgxdUkwgJChgZJjZFGidkdFU38qOzwygp&#xA;0+PzhJSktMTU5PRldYWVpbXF1eX1RlZmdoaWprbG1ub2R1dnd4eXp7fH1+f3OEhYaHiImKi4yNjo&#xA;+DlJWWl5iZmpucnZ6fkqOkpaanqKmqq6ytrq+v/aAAwDAQACEQMRAD8A9U4q7FXYq7FXYq7FXYq0&#xA;zKqlmNFUVJ9hgJAFlIFsbutTmNwLxOkbDgninSh+eaWeqlx8Y/AdrDTjh4SyK3njnhSaM1RxUHNz&#xA;CYkAQ6ucDE0V+SYuxV2KuxV2KuxV2KuxV2KuxV2KuxVbLKkUTSOaIgqTkZyERZZRiZGgxx9Unju1&#xA;vGrxLUeP/IPb6M0w1Uhk4/xTtPy4MeH8WySORJEV0PJGAKkdwc3USCLDqiCDRbwodirsVdirsVdi&#xA;rsVdirsVdirsVdirsVdiqT65eVIs4z1+KY/5PZfpzW67N/APi52kxfxn4JVIvKNl8QRmtLmg7q/l&#xA;vUfSl+qSH93Iaxnwbw+nM3Q56PCeRadbhscQ6MmzbuqdirsVdirsVdirsVdirsVdirsVdiqR6zee&#xA;rMLVD8EfxSnxbsuarW5rPAOnN2OlxUOI9UsuF5QuPav3b5gFy4ndH+WtR62Uh8WhJ+8r/HNhoM/8&#xA;B+Di67D/ABj4sgzaOtdirsVdirsVdirsVdirsVdirsVdirsVUL27S1t2lbcjZF8WPQZVmyiEbbMW&#xA;MzlTGhzLNJIeUkh5OffNCSSbPN2+3Icmwakih2xVLHBSVqbFTscr5N43DMNH1AXtoGJ/fJ8Mo9/H&#xA;6c32lz+JHzHN0upw8EvJHZkuO7FXYq7FXYq7FXYq7FXYq7FULqV79Vtiy7yt8MS+/wDZmPqc3hxv&#xA;r0bsGLjl5MdRSoNTVmNWbxJzSO1JcCGBFD4b4FS1HeKUMh4uhqCOxGRBINhvIBFFmunXyXlqsy7N&#xA;0kXwYdc6DBmGSNuizYjCVInLmp2KuxV2KuxV2KuxV2KuxV2KuxVxIAJOwHU4kqx/Urv6zOOJ/dR7&#xA;IPE92zS6rNxy25B2mDFwDzKErmM3tFh7/ccCoK5gkeUsitTY5EhthIAIjS7i4srpZeDGM/DKo7r/&#xA;AGZdp8pxyvo1Z4DJGurMEdXRXQ1VhUH2Ob+MgRYdKQQaLeFDsVdirsVdirsVdirsVad1RSzGiqKk&#xA;4CQBZSBZoMdvrk3NwZP2F+GMeA/tzR6jL4kr6O1w4+CNIeuUtrRYDx+44FpATW8rSllVuNa/PIkN&#xA;0ZCkdo11PZXPxq3oSbSDrTwb6MydLmOOW/IuPqcYyR25hloIIBBqDuDm9BdM7FXYq7FXYq7FXYq7&#xA;FXYq7FXYq4gEUO4PUYqxi/t447uVELKoOwBPcVzQ6iAjMgO3wzJiCUOYv8tvvymm23ej/wAWP9+N&#xA;LxKE/qIodJGKnbc4CzjR6LbN3lu4IndijyKrb9iwByWIXIA9SuQVEkdzN1VUUKoooFABnRAACg6E&#xA;m28KHYq7FXYq7FXYq7FXYq0yqylWFVOxBwEXsUg0xe6t0S5kRWYKrEAcj0rmgyxAkQO93GOZMQSo&#xA;mL/Lb78rpnbjDt/eP9+NLaHuPUjoVkYq3Qk5EtkaKppRM+oQRSMWRm+IVO9ATl2niJTAPJr1HpgS&#xA;GZgACg2A6DOgdG7FXYq7FXYq7FXYq7FXYq7FXYq7FWOaq1L2Y0rQjYdegzR6r+8LtdP9AQkkqxxt&#xA;I32VBY/ICuY7cA8Vm/M/zxJfG8geKO05co7AxoylOwZ6c608GyWztBpIVXV6/ZX8V/pNreEeml5D&#xA;HMqncr6qBwPorkS64xIkR3Nacf8Acja/8Zk/4kMOD+8j7wnN9EvcWdZ0boHYq7FXYq7FXYq7FXYq&#xA;7FXYqxnUGpdzGlfjOw+eaHUfWfe7fD9I9yA1O+Ww027vmUutrDJOyDYkRqWp9NMqbYxsgPHIfzP8&#xA;8x3wvZ2iktOXKTTxGiqE7hXp6lQOlWOHZ2Z0kKrq9klkilt1atBIAyV67ioyBdbEEF2hn/crb/M/&#xA;8ROXaT+9CNV/dlmmb90bsVdirsVdirsVdirsVdirsVdirsVYxqzhb+appuP1DNHqv7wu2049AQF0&#xA;S1tKo6lGAA+WY7fHm8ZhsohCgNAQoqD16ZC3ckvWvLw4eX9MjYUKWkClT2pGoyYdTl+s+9V01v8A&#xA;claj/i6P/iYyWD+8j7wub6Je4s9zonn3Yq7FXYq7FXYq7FXYq7FXYqxXUHAvZqmnxkD780Oo+s+9&#xA;3GEege5KPMKtLoGpRqCzPazqFG5JMbCmUlyMX1j3vI5LKMwMBQniaDvWmQt21vZojSzRWHSMAg/6&#xA;uTdOebtBaur23+sf+InLdJ/ehGq/uyzfN+6J2KuxV2KuxV2KuxV2KuxV2KuxV2KsK125dNWuFEiA&#xA;AjY9fsjNFqz+8Lu9LH92EB9cf/fseY9uRwDud9cf/fseNrwDud9cf/fseNrwDuQ+k3Ttq9mPUQ1u&#xA;IxQf64w4P7yPvDLPH93L+qfuemZ0jzTsVdirsVdirsVdirsVdirsVYNqt066lcqJEFJGFD165z+o&#xA;P7yXvd7gj6B7kJ9cf/fseVW3cA7nfXH/AN+x42vAO5p7x+DfvY+hwWogO53lq5ZtctFLoQWOw6/Z&#xA;OXaT+9DHWR/dSei50DzzsVdirsVdirsVdirsVdirsVdiqGbU7FWKmXcGh2b+mY51WMGrbhp59zDN&#xA;ZimutYumtyrpyFDt2AHX55qdSbyEh2+nIjjFpbPDdW9PXCoGJCmgNafKuY7kRIPJUFhqDAMEHEio&#xA;2X+tcNFHHFRhW5nZliUMy7kUA/WcDI0Oa2xtbqz1WyluuMcYnjZm2oFVwTuMli2mCe8LlkJQkB3F&#xA;6I+uaUjFWnAIND8LEfeBm8Orxjq6AabIeiOBBFR0OZDQ7FXYq7FXYq7FXYq7FUKNTsSwUS7nbo39&#xA;MxxqsZPNuOnn3MIv4Z7rUrqS3KvGZGIag6EmnXNNmNzJHe7nERGAB7kDOlxbkLNRGbcCgP6q5U3i&#xA;jyVWsNQUFig4gVOy/wBa4aLHjioRR3VwriFQ5Ub7AdenU4GRoc1bQYJ7LXrNrspEnI7mlN1IG498&#xA;u0xrICWGqIlilws9GuaWXCCf4mNB8LdTt1pm4Gqxk1bozpslXSOzIaHYq7FXYq7FXYq7FXYq7FXY&#xA;qxHXblNKmBulf0pi3pyIOQPem3Q5o9RhlCW/Iu5037wbcwlX+KNJHQSCvWkZzHtyfy8mm80aOwow&#xA;kI94zjajTzcfNek9zJ/wBxtfy0lh80aMAaF15dSEIxtP5eanJ5n0dxQlj80wWkaeaI0mVdZuXisQ&#xA;zFQDIzDiiCtASffLcWKWQ0GvOfCFyehKOKhfAUzfgOgLeFDsVdirsVdirsVdirDNXvotJuFhvEcc&#xA;xyjdV5Kw70p4ZoMuKWM0Xd4B4ouKXjzRpK9BIPlGcqtv/LyabzRo5I5CQkdKxnG1/Lzd/ivSe5k/&#xA;4A42v5aSmfNGjAUUulfBKY2n8vNTk8z6O3UsadKpgtkNPNH6Cf0xdE2gYxxMrSyOKKu/QeJ9syNP&#xA;hlOW3Rx9TLwo+rmWe5vXROxV2KuxV2KuxV2KuxV2KuxViP5jLWys/wDjI3/Ec1/aH0h2nZf1H3MD&#xA;9M5q3dW70zittCMkbimK270j9GK2hZrQqSy7r+rAQ2RmzT8rVpcah/qRfrbNh2dzLqe1+Ufi9Bza&#xA;ujdirsVdirsVdirsVdirB/zHUmax/wBWT9a5rO0OYdx2Xyl8GG+mc1ztrd6ZxW2hGSNxQ+GK24xV&#xA;BB3GK2hJrVkNRuvjkSGwSt6B+Vy0sb7/AIyr/wARza9nfSXSdr/VH3M2zYuodirsVdirsVdirsVd&#xA;irsVdirzX85XuYn8uzQOyhLthKoOzI3BWBHfY5ru0OQdx2QPr9zznz2dQkmtrS3maG3KGSURkqWa&#xA;tFBI7DNaC7rCBzR/k+W9bRJReOZ3tpWSN2PxFAiuAT/ssDDLsdmFMdfnn+vm9lW6Y814sQq13Che&#xA;lPbDYcihyZvrF5ft5TjuoG9G7uYoauv7Jl48uP0E0wOPEDipMvy08sIdGlury5nnaeRlETvVEC7V&#xA;Fd6t3wtOpzESoM58u6VY6Nqc13AZK3SpHMruWQKhJHFe3XL9Nl8OXk6/VE5Y0ejKbnUYI4WaKRXk&#xA;/ZUGu/0ZssuqiIkggl1uPBIncbJb+mL3xX7swfzuRy/ysEws9ThkhBmdUkGxB2r75m4NVGUfUaLi&#xA;5dOQdhshLvWJhOwgK+mNgaVrmNm1suL08m/HpRXq5tWusTGdROV9M7E0pT3xxa2XF6uS5NKK9PNF&#xA;3uqQxQEwOrynYAb098yc+qjGPpNlpxack7jZKv07f1I2FO5XY/LMH87kcv8AKQTS01a1kt1aaVI5&#xA;ejqTTf6cz8WqjKNk0XDyaeQlsNmHeaEt9S1WG9YyEWoeKFY2IVlc7l177jbNbqc/HLydrpIHHGu9&#xA;g35gaKX0tJ7e4mheGQD043orcu7U7jtmOC5+CdmihtFvb7/CstzcH1buzSbi7ftGIEqW+jbFsmPV&#xA;XewtG1+Gf6+t7K10vxtyYlW7lSvSnthsN9DkzXzhNfLokQtHMMlzIiO6khghRnPEjp9mmBx8QFpX&#xA;5KbUI5LqyuJWmt/S9WL1DyKsGAIBPY1xJbMgGxelfkx9ZL+Ynndmrdosak7Kic1UAfIZs+z+RdL2&#xA;xzj7i9LzYumdirsVdirsVdirsVdirsVdirBPzUsp7qHSvSjLiO4JYimw+E1Nflmt7R5Rdv2TIAyv&#xA;uYLr+mXNxdxSRQmRRHxJFNjyr3Oasu3xTAG6vomnXEFjcRyIY2eRmVTTcGNV9+4xCMkwSkkWhags&#xA;SA2r8lUAj4eoHzyO7ccke9ObrTblvL1taiMtNGkAeMUqCnEN3ptkjyaYzHGSyDylcQWGj+hdn6s6&#xA;SMaSUAIahBB6YQ4+oiZSsbpwNZ0gCn1yI/Nxhtp8Kfc79NaT/wAtkX/BjG0eDPud+mtI/wCWyL/g&#xA;xja+FPud+mtJ/wCWyL/gxja+DPuaOs6RWv1yL5cxTFPhT7nHWtJ/5a4v+CGNr4U+5adZ0r/lri/4&#xA;IY2vhS7lraxpX/LXF/wQxtPhS7lJ9W0z/lqj/wCCGNpGKXcoPqenEki5j/4IYGQxy7ko8wFb3TvT&#xA;th65Zwfg3G3XfAW7EOGW6WWWlXS6Dd2zRlJZlnCRkjfmtFriOTbKY4gUofQdQMDKLV+RUgD4etPn&#xA;kd23xI96ea5p9xPY20cUZkaORWdRTYCNlrufE5ItOOQBNoTR9Lure6mllhMaeiyVNNyWB7H2wBnO&#xA;YPJnn5U20kMWrs6FRJcAqTTcVc12+ebTs3lJ0/ax3j7me5s3TuxV2KuxV2KuxV2KuxV2KuxVjfnb&#xA;/eW1/wCMh/Vmv7Q+kOx7O+o+5iXHNW7R3HFXccVa9McuVN6UxTay4gjliZHFR1HzGBMTRSn6kn8o&#xA;wt/GXfUo/wCUYrxloWSEkcKAdD44F43fUY/5cNLxl31CL+X8TgpeMtLYIRUqQfCuNJ4y79Hx+B+/&#xA;Gl8QqcunMBWM/QcSEjIh/QYfPIs7bEBJA8cK2yO3tY4IhGg2Hc9a4XDlKzapxwsXccVaEYBJpueu&#xA;KbWzKPSf5HAUx5so/L0Us7v/AIyL/wARzadnfSXWdqfUPcyzNi6t2KuxV2KuxV2KuxV2KuxV2Ksb&#xA;87f7y2v/ABlzX9ofSPe7Hs76j7mL8c1bs2ipp8NK++Kt8cVa44q06ChPcA09sCQUL6Qws7d6QxW0&#xA;Hp+o6bqPrfUp1m+ruY5ePZh+seB6YspAjm3bahp11d3FpbzrJcWpAnjHVSf1+Bp0OKCCBbk1DT31&#xA;J9NWVTexoJJIu4U/7YxTRq3Pf6dHqEenPOq3sqGSOE9So/z6Yoo1bV3qOm2l3bWlxOsdxdtxt4z1&#xA;Y/wqdhXvikAkW3qGoadpyxNezrAJnEcfLux+XbxOKxBPJVkto5k5KN+xwKJEINYhyHzyLbafccm4&#xA;jRU7Up718MVb44q1xxVZMg9Nz3od8BZRO7JvIApaXf8AxkX/AIjm07O+kus7T+oe5lWbF1jsVdir&#xA;sVdirsVdirsVdirsVYz55jeS1tQjcaSkn7s13aP0j3uy7NNSPuYkLacV/fHf3Oaqna8Q7m/q8/8A&#xA;v0/ecaRxDuaMEw6y9em5xpPEO5sW9x/v0/ecaXiHcta3uOBrLvQ+ONLxDuVAmwyTG3GMEjcinhgW&#xA;2H/l5bel+kf8oxH/AInhtydQeTXlO24eaNZf+eSf/qIONrlPoCpaW9PzDvZfGID/AJJRY2gn92FL&#xA;VLav5gWMngqf8RkxtMT+7K7zXbc/NOjP/JJB/wAnxja4j6C1+Ylt6rad/kmY/wDJvG1055sxEYHT&#xA;vi41pdw+L6cg32jhbTj/AHcT8ycNNXEO5v6vP/v0/ecaRxDuaME4/wB27noKnfGk8Q7m/q8/+/T9&#xA;5xpHEO5ZLb3HotWU1pvucSGQkL5Mp/L1HSzu+TcqyLT/AIHNp2b9JdX2ofVH3MszZOrdirsVdirs&#xA;VdirsVdirsVQ51GyBIMoqNu5/hlB1OMdW0YJ9zG/M2orcyRwxqfTjJYSH9onbb5ZrtZqBPYcg7HR&#xA;4TEEnmUlSKWQ0jFSNz8sw3MJAXm0uQCTGdvpxRxBCNPbk/EakdNjgts4SiVt52UMsbFSKg9P14sL&#xA;CjdF4Fo6EFh8NemJLKItwGwxV1MKGM+TUWMXh8fS/wCN8iC5Wo6O8uxhde1JvF5/+T5xHNcv0Bfb&#xA;Rj/Gd03in/MqPHqg/wB2FO/jB84WjeHH/iL49Ux/uyu8wRhtf01vB4f+T2J5oxfQVvnSMM1l7CX/&#xA;AI0xKdP1ZPTJOKlzD94fn/HIN/RN44Jpf7tagdcm45IC57a4RSzIaLuT1/VigSCEM9uWBJqR02P9&#xA;MFtnCUULa4Ir6bUOFhYQ14zRKUdCGYbV6UyJLOAtNPJ+rpaSS28qH0ZSGMo34kbb+xzM0WoECQeR&#xA;cXXYDMAjmGWfprS6gfWFBO24I/hmy/NY+91f5bJ3I3MhodirsVdirsVdirsVaf7DfI4JckjmxTh8&#xA;fKp6U49s5x3VrJoI5lAft0IxUGnQ28cIIQHfqTikm1/IcuI6jriikE+jWTSmQhtzUqDtgpsGWVIs&#xA;g7caDx+WFrChdW0VxHwkGwNQRsQcSGUZEckrIpt4YG51MVS/SNIGnCb956hlIptSirXiPnvvgAbM&#xA;mTiasNHW0v7m6EhYTliqUpx5tzap779MQFnksALo9JCavLqPqV9RQPTp0NAp3+S4a3U5PTwtTaOs&#xA;urRagZCBGP7unVgCBv4fFgpRkqNLdQ0kXWoWtz6vD0SCyUryCNzFD2364kJhkoELtX0ddR9EmQxm&#xA;Imu1aq1OQ+fw7YkIx5OFMMLWl7L+/I/yv45FvHJlcMKQpxQbdTXLHAJtdUEkdabHAqBXRrJZBIA2&#xA;xqFrtgpsOWVIw8qilKd8LWhru0huVUSA/D0I2O+JDOMyOSlFaw26kR1+LcknEBkZEqUnLetPanhi&#xA;kM/i/u0+Q/VnRx5PPnmuwodirsVdirsVdirsVY95hs7q2jW4sI1ZASZw1TxG1CAKbda5qtXpuEcU&#xA;fi7LSZhI8Mj7mO/pPUv99xfc39c19l2Hhx83fpTU/wDfcX3N/XGyvhxa/Smp/wC+o/x/5qxsr4cU&#xA;Yp1hlBpbiu9Dzr+GO7D0eahc3WrQEBo4mDdCvKn4kY7soxge9q3n1W4LUjiUL+03Lv8AInHdZCA7&#xA;1z6fcKpYlTTcgE/xGFAmEMqlmCruSaDFkiv0ZP8AzL95/pjTHxAh5oXifg9K0rUYsgbVIbKaVOak&#xA;AHpXFBkA6aymiQuxBA60P9mKBIFTiieV+C9ffFkTSv8Ao+b+ZfvP9MWPGEMylWKnqDQ4slI6Vcs/&#xA;qAoATyAJNevsMjTPxRyRst7qsdKpC1fDl/EjDu1iED3rU1HVHr8EQp3PL+BxsqYR83NqGpAfZhPs&#xA;OX9cd14I+an+k9T/AN9R/j/zVjZZeHHvU31W/UVaJAPGh/rgspGOPepHV7o/sJ9x/rjxMvCDJPLW&#xA;lPeRG7v4qRkg26jYMN6lhvt0pmx0mm4hxSHuddrM/AeGJ36sqzauqdirsVdirsVdirsVdiqH1AVs&#xA;LkeMT/8AETlWb6Je4tmH6x7wwj0t+m2aB3lu9L2xW2kTkteJX2OxxSU0XdRTC0uZEcUYBh4HFbcq&#xA;KgooAHgMVbBBFRuMVWLBCrclQBvEDFbK/FC14onILqGI6VGKQXDivwLQU/ZHhirbAMCCKg9QcVWJ&#xA;FGhqihSfAYrbQ5UPKnXanhgSVjRRE8ioJ8aYptY3MuOJHAbMO9cUrXAIoRXFQouKKeNAe3hiyCiw&#xA;JoO/tilVEO3jii2mgDKQRsdjitpdJblHKkdMhTkCVvR9JFNKsx/xRH/xAZ0WD+7j7g85n/vJe8or&#xA;LWp2KuxV2KuxV2KuxV2KqN9/vFcf8Y3/AOInK830S9xbMX1j3vOfNOufoLSHvltzcyc1jSENwBLH&#xA;u1DQADwzn3fYoccqW6vryWXlhtbS3aUGKKWO3JCkmYqFDHelC4risIXPhdL5gRPK36eFuxBt1nFt&#xA;UcuTAUTl06nriox+vhX6Vq76nodrqYRrdZVZpIuVQhUlW3HUVU74lZQ4ZEKo1CP1Ahc0/mrtgtPh&#xA;mlR9RgRlXkW5dSp2HzxtAxlfLqFrGnLnzNacVNT+vGwgQJVP0hZiL1PUB2rwr8XypjYRwStuLULK&#xA;SMOZAnirGh/XjYQYSBag1KxlDVb0+J/bNK/LfGwmWOQcmpWDTtHy4hRtIT8J+RrjYU45Vbn1KwWd&#xA;I+RYN1kDfCPnvjYUY5U3PqOnxBSGMlTQhGrT5742FjjkW5r/AE+OMuJOZHRFYkn8cbCBCRLlvdNa&#xA;L1DJTavAseXypXHZeGV0tgvdOlTkW9M1pxdiD+vHZMoSCmNS09nZQpAU7MzEA/LfBYZeHJQa+gMx&#xA;QGi9mrUffgtmIGlPVtSTStHudTaIzCFAyRqQORYhV3PQEsKnJBiI8UgFODXoW8sfp5oHVfQM724I&#xA;LVUEFQenUdcKDjPHwu0rXY7/AMsrrckDQr6UsksCkMw9EsGCn4a14bYrKHDPhUdE1oa7osd+bc2z&#xA;+o0bRFg9CvgwArUU7YJMzDglT0vTP+Obaf8AGGP/AIgM6DB/dx9wefz/AFy95ROWtTsVdirsVdir&#xA;sVdirsVUb3/eOf8A4xv/AMROV5vol7izxfUPe8v/ADCi9TQAv/F6fqbOeL0Wl+tS16Hl+XqJ/wAU&#xA;WY+54seicX978S1ND/yDlE/5dox/wy49FH998UX5Xi4+TYU8Iph/w74Qwzf3iM9LFFtej7YrbRgJ&#xA;YdOPcUwJ4m/QX+Ufdijid9XX+UfdivEtFsN6gHfbYdMaTxN/Vo/5B9wxpeJr6rH/ACD7hjS8Rd9U&#xA;ipQIPuxpeMu+qRfyD7saXjLRs4uvEY0vGXfU4v5RjS8ZUp7EceUYoR1GAhlHJ3oT0jkW20T5qi5e&#xA;T518Y4f+Jpk+jTh/vPmg4Yf+Qcun/LtIP+GbHoyP998W9Ah4/l46f8UXg+95cPRcv998Qs8lxen5&#xA;b4/8vD/8RGRPJln+v4PVtN/451r/AMYY/wDiIzocH0R9weczfXL3lEZa1OxV2KuxV2KuxVK9ZuJo&#xA;3jWNygIJPE0/Vmu1uSUSADTmaWAIJIS6HULoMr+pIQD9lid6exzCjqJg3ZcqWGNVQTG41e3kt5I0&#xA;VuTqV3Apvt45m5dbExIAO7iw0shIEpHcW1rcp6c8STIDXg6hhXxoa5rHYAkckv1/TJLzRZbC1VEL&#xA;emI1PwqAkitTYbbLtiQ2YZ8MrLrKwEOkW9jcqkojjVJFI5ISPY9d8aWU7kSHFUggaCFRHFxZVjUB&#xA;VHKvQDbqcV5myq+nii3FQASdgO+KuCVxV3p4rbRjbam2+/yxW2/TxW3enitu9PFbd6eK2708Vt3p&#xA;4rbvTxW3GIEg9x0xW0Pc2ilTIoow3PvgIZwn0U5Ss8SwyqHh4qpiYVU8QOoOx3GK8ja+6svW0iex&#xA;twsYkjZI0A4oCfYdN8aRGVSBK/QNMez0WKxugjlfUEij4lIkkZqbjfZsICMs+KVhMIbO0hj9KGCO&#xA;OOvLgiqq18aAY01mRO9p5a6tbRW0cTI1Y1C7Up8IoO+bTFrIxiAb2cDJppGRPegJr+7Zywkf4j9l&#xA;WIAH4Zgy1EybsuTHDECqCYaNcTSPIsjlwACORr+vM3RZJSJBNuLqoAAEBNM2LhuxV2KuxVIfNF0l&#xA;qizurOsa1KoAWO9NqkZq+0OYdjoY3YYv/iyx/wCWe4/4Bf8AmvNfbsvyx7w1/i2x/wCWe5/4Bf8A&#xA;mrG1/LS7w1/izTx/x73AJ6ngm/8Aw2Np/LS7w0fN2n/74uP+BT/mrG1/Ky7wpSeatPYEGGeh2Pwr&#xA;/wA1YLSNNLvCnFr9lLPFEkUo5MqryC03NN/iONpOCQFp9xwuM7gMVt3HFXccVdxxV3HFXccVdxxV&#xA;3HFXccVcUqCOle4xW3BKADwxW3ccVWyp+7f/AFT+rEpHNjza1bxztF6cjMjFTQL2NP5sALleCSLR&#xA;cfmG2XrBN9yf81YWs4D3hWHmazpQwT/cn/NeKPy57wuXzPZDb0Z/nRP+asUflz3hv/FFj/vmb7k/&#xA;5qxX8ue8N/4nsf8AfU3/AAK/81Yo/Ly8k98q6rBeXMqRo60j5Veg6NTsT45n9nn1EeTg67EYxB82&#xA;S5tXWOxV2KqF9K0NpLIpoyjY++VZ5mMCQ2Yo8UgGNXFxJcH9+3qbUoelPCmaSeSUjZLtoQEeTF7m&#xA;1RbiQKKKGNB7VytzIy2UUiR1qvTFkTTf1ceGK8TlgqAaEV7HFbb+rjwxXiUYrL0763cD4TKn0HkM&#xA;iyM7iWX8ck4LuOKtEbbdcVcAaCvXvTFW+OKu44q7jiruOKu44q7jiruOKu44q7jiq11+BvkcVDE1&#xA;twbm4am/M/rORDnGWwVfq48Mkx4nfVx4YrxNG3oDQVPYYrxOFvtuKHFeJxgABNOmBQVaw1K8sJGk&#xA;tJPSdhxY0VqitafEDhx5ZQNxKMuKMxUhb0bRbqW70u2uJWDSulXYUFSDQ9M32nmZQBLz2ogIzIHJ&#xA;G5c0qdxcwW6c5nCKTQE+OQnkjEWSyhAyNBimpXcc17LJGxZCfhO/QCmaTUTEpkjk7fBAxgAUI04G&#xA;9SAOux/plLcAl8vF5GYbhjUHFsGyz0xWtN8CbSTzfq95pGkfWLONZLmSRYo/UrxXkCSxA67LhDbi&#xA;gJGikHlTzd5gv9aistQjgMEyvRo1ZWVkUsOpNelMJbcuKIjYZ00asKEVB7ZFxbcE/ew+0if8SGJW&#xA;+bIKZJxmCeffP1/ol5HpmkW8c12YxJPLNUpGrVCqFBWrbVxcvT6cTFnkivIHne68wC4tNRt0t9Rt&#xA;lElYq+nJGTTkASxBB674sdRg4NxyUPP/AJ91DQ7uLTdKtkmvJI/VlmmqUjViVUBQVqxoe/34stPp&#xA;xMWeSr+X/ni9197iy1K2SC/t0EoeKvpyRk8SaEtQgkd8UajAIbjks/MDz3f6FcQ6fpduk19LH60k&#xA;k1SkaElV2UrViVPf78V0+nExZ5N+QPPV9r089hqdskF9DH6ySQ19OSMMFbZi1CCw7/diuo04huOT&#xA;fn/zzeaDJBYaZbpPqE6eqzy1MccdSoNAVJJIPftiun04nueSzyB58vtduJtO1W3SG+jj9aKSGojk&#xA;QEK2zFqMCR3+7FOo04gLHJV8/wDni88vtb2em2yT39wpkLS19OOMHiCQCpJJr3xRp8AnueSh5A8+&#xA;6hrl3Lpuq2yQ3iRmWKaGoR1UgMCpLUYV8cU6jTiAsckR5/8AO115fFvaadbpcahcgvWWvpxxqaci&#xA;AVJJPTfFjp8HHueSD/L/AM932r38um6rbJDeMhlhnhqEcL9pSrFqNvXrjTPU4OEWOTPCPhO3bFw2&#xA;NxKPWn/1z+s5AOZI8lbgMkwtgnmvzd5gsNalstPjgEEKpVpFZmZnUMehFOtMIcrFiiY2U/8AJ+r3&#xA;ur6Qbi9REuI5Wif06hW4gEGhrT7WAtWaAiaCecBi1WslX929OtD+rAkHdLfU3O+3hkG+kx0G/W21&#xA;W2lklMcKv+8NTSh2NaZfp58MwSdnH1OPigQBu9Js76zvYzLayrMgPEsprQ9aZvoZIyFg289kxyga&#xA;kKYtrXmCG9hWOONk9MlySRUilOmarU6oZBQDtNNpTA2SkX6STwb8MwrDneGWm1FSpFDuPbG18NdC&#xA;waNSPl92IRLmvpihj/nWISaZAp/5aF/4g+At+n+r4JF5btVj1+0YD/fn/JtsALfm+gs8CKCSOp65&#xA;JwbbA/eR+0if8SGKp7knHeX+d7ZZPNN0xH+6of8AiJyBLtNN9ARX5dW6xeYLggdbQ/8AJxcYlhq/&#xA;oHvUfPtssnmV2I3+rxD8XxJZaX6Piv8Ay8tli8yyMB1spB/yVixiUav6Pj+tT8+WyyeZ5GI/49oR&#xA;/wAM+JKdL9HxVPy8t1i8yyEDrZSD/krFjEo1f0fH9bvzDtll8yxkjpZRj/krLjIrpPo+P6lPyHbL&#xA;H5njYD/j3mH/AAyYgp1X0fFEfmJbrLr0BI6Wqj/ko+Mix0n0n3qHkK2WPzKjAb/V5R+KYgstV9Hx&#xA;VvzFt1l8wW5I6Wg/5ONjIsdJ9B96F8kWyx+abVgP91Tf8RGILPU/QXqGTdWxyEfvp/8AXP6zkA5c&#xA;uithYMC8yWqya/dsR/vv/k2uRJc7D9AT3yVEI9MnUf8ALQ3/ABBMIaNR9XwZBTC0Lo4Gnb0lPEsD&#xA;ue22FBNboc+Vbkkn60u/+Sf64OFs/Mjud/hS5/5al/4E/wBceFfzI7k68s3q6NBNbTVm9STmGXYg&#xA;UCnY/LMvTaoYwQQ4erwHKQRsreYNDtLC3SWFnPqMUZWIOxBO1AMnqtNHGAQ16XUymaLF7iJIwvEk&#xA;18c15DsoytRrgZq0FzIpCbca/rwgsZRCOUtvUU32+WSaVK7s7a7i9K4QSR1DAbihHQgihGKYyINh&#xA;Qt9H023mWeGHjKoIVuTGlevUnGmUskiKKNxYOX+8j/4yJ/xIYqnuScZKr7y7o+oXrT3dqWl4hTKJ&#xA;JEqB02RlHfI03RzSiKBVdN8v6RpszzWcBjldeDOXkc8a1p8bNTfCAieaUhRK3UPLejahc/WbuAvN&#xA;xCcxJInwrUjZGUd8SFhmlEUC3p3l7R9Nna4s4DHMyemXLyOeJINPjZqbgYgLPNKQolrUPLmjahcf&#xA;Wbu3LzcQnNZJE+EEkA8GWvXEhYZpRFAt6d5d0fTrhrizgMczIYy5kkf4SQSPjZu6jEBZ5pSFEu1H&#xA;y9o+pTrcXkBkmVPTDh5EPEEmnwMtdycSFhmlEUC1p/lzRtPuPrNpblJuJTm0kj/CSCQObNTpiAs8&#xA;0pCiW9S8v6RqUyzXkBklReCsJJE+GtafAy9ziQsM0oigWtP8t6Np9z9ZtICk3EpzMkj/AAtQnZ2Y&#xA;dsQFnmlIUSu1Ly/pGpTJNeQGSVF4K4eRDxrWnwMtd8SFhmlEUCssPLWi2FyLm1tyk4UqHaSR6But&#xA;A7MO2IAWeechRKZ4Wpjsf9/cf65/WcgHLlyCoqqooooPDCxtCXOj6dczGaaENKQAzBmWtOlaEY0z&#xA;jkkBQVrSztrSL0rdBHHUsRuak9SSak4sZSJNlU4DnzqelKV2xRaaWttGipKKlyPHbcYWqUkSfmfw&#xA;xYIa5uJI2AU7EdwMBLZGIKN0TSLa/jkmmZgVbiAtB2qa1BzM0mljkBJcfVamWMgBks9vBcJwnjWR&#xA;K14sKiubeUBIURbqozMTYNMD8wWRg1GdUhKW4YFSVPGhA6H55pNTj4Zmhs7zS5OKAs7sfkJV2FKA&#xA;E0+WYrnBYJPfAmkx0xxL6gkmVSOPH1GptvWlckGnKK5BN5rCP0iYJAZNuPIjifuyTjie+7k09PRH&#xA;OQetTehHGv68VM9/Jq204lKzv8ddhGRSn0jEJlPuah0uX1i0z/AjBognU0NRyqMFKcgrZMsk0uxV&#xA;2KuxV2KuxV2KuxV2KuxV2KtNy4njSvauBIbFab9cKHYqlU+jyeuHgkoHNZeR8TXbbI03jKK3XXGk&#xA;v6f+jytzr0cilPoGNIjlHULm0k+j8MzetTavHjy+6tMaXxd+WzUOlN6Q9aVvV78OPH8VxpTk32Dr&#xA;O0ki5/WCshP2aCoAH0YQs5A8kXy22NMWtTnlQRt8VGptvvgLKI3WaRby3N/AJYzJEW+I0PHiPE5b&#xA;p8fFMWLC6iYjA0aLNYLeCBOEMaxqTUhRTfN9CAiKAp0cpmW5NqmSYoTVrWW6024t4qepIhCV2Fcr&#xA;zQMoEBtwTEZgl5trOnXunsLe5AWR1DrQ1BFadvlmjy4pQNF6DBljPcJO7shox38Mopyhut9YeOKa&#xA;ZZo2s2VwkFmoYTrGAajYlBvQ5IFwcuKQs9E24nkCDQdxTrhaG8KFsjOtOK8t996UGBIC4Gor44UO&#xA;xV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxVwIIqDUeIxS7FDTcuJ405dq9MCQovcKqlX/vKbgdMU8KF&#xA;M2/Qn7sWdLJLsRgFgaHbt/XBaRC1G2trrUrp0tU5PTmQSBQCg75LHilkNRZTyRxxuTO9Lt5LbT4I&#xA;JaeoigNTcV65vsEDGABdFnmJTJCKy1qdirsVYN+YfofXLSvP1fTNaU48eW301rmr19cQ76dz2ZfC&#xA;e62EXXpcxXnWntmuLt42on0aft/hgZbpr5W9H9LRU58uLca0pXj3+jCGjU3wM23yTrnb4q7fFV/7&#xA;r/K/DJelG7v3X+V+GPpXd37r/K/DH0ru791/lfhj6V3d+6/yvwx9K7u/df5X4Y+ld3fuv8r8MfSu&#xA;7v3X+V+GPpXd37r/ACvwx9K7u/df5X4Y+ld3fuv8r8MfSu7v3X+V+GPpXd37r/K/DH0ru791/lfh&#xA;j6V3UxSnw049sjslvfFXb4qlt9X1jWtaDpgbYckOOg+19NK4s1C8/uxWtK/wwFlDmnPkf0vr1x9r&#xA;1PS2rTjx5Cv09Mzuzq4j304faV8I7rZnm3dO7FX/2Q=="/>
    </rdf:Alt>
   </xmp:Thumbnails>
   <xmpMM:DerivedFrom
    stRef:instanceID="xmp.iid:f2b29506-bb3a-4358-9973-eb49c6d09137"
    stRef:documentID="xmp.did:f2b29506-bb3a-4358-9973-eb49c6d09137"
    stRef:originalDocumentID="uuid:5D20892493BFDB11914A8590D31508C8"
    stRef:renditionClass="proof:pdf"/>
   <xmpMM:History>
    <rdf:Seq>
     <rdf:li
      stEvt:action="saved"
      stEvt:instanceID="xmp.iid:df1b4794-538b-41ca-abb3-652f1acab45d"
      stEvt:when="2022-12-22T12:47:07+02:00"
      stEvt:softwareAgent="Adobe Illustrator 27.0 (Macintosh)"
      stEvt:changed="/"/>
     <rdf:li
      stEvt:action="saved"
      stEvt:instanceID="xmp.iid:f2b29506-bb3a-4358-9973-eb49c6d09137"
      stEvt:when="2022-12-22T13:34:36+02:00"
      stEvt:softwareAgent="Adobe Illustrator 27.0 (Macintosh)"
      stEvt:changed="/"/>
     <rdf:li
      stEvt:action="converted"
      stEvt:parameters="from application/postscript to application/vnd.adobe.illustrator"/>
     <rdf:li
      stEvt:action="converted"
      stEvt:parameters="from application/postscript to application/vnd.adobe.illustrator"/>
     <rdf:li
      stEvt:action="saved"
      stEvt:instanceID="xmp.iid:75eb84d5-412c-3a41-803d-e2b47d916a6c"
      stEvt:when="2023-02-17T18:07:07+02:00"
      stEvt:softwareAgent="Adobe Illustrator 25.2 (Windows)"
      stEvt:changed="/"/>
    </rdf:Seq>
   </xmpMM:History>
   <xmpTPg:MaxPageSize
    stDim:w="852.988950"
    stDim:h="811.977919"
    stDim:unit="Pixels"/>
   <xmpTPg:PlateNames>
    <rdf:Seq>
     <rdf:li>Cyan</rdf:li>
     <rdf:li>Magenta</rdf:li>
     <rdf:li>Yellow</rdf:li>
     <rdf:li>Black</rdf:li>
    </rdf:Seq>
   </xmpTPg:PlateNames>
   <xmpTPg:SwatchGroups>
    <rdf:Seq>
     <rdf:li>
      <rdf:Description
       xmpG:groupName="Default Swatch Group"
       xmpG:groupType="0">
      <xmpG:Colorants>
       <rdf:Seq>
        <rdf:li
         xmpG:swatchName="White"
         xmpG:mode="RGB"
         xmpG:type="PROCESS"
         xmpG:red="255"
         xmpG:green="255"
         xmpG:blue="255"/>
        <rdf:li
         xmpG:swatchName="Black"
         xmpG:mode="RGB"
         xmpG:type="PROCESS"
         xmpG:red="29"
         xmpG:green="29"
         xmpG:blue="27"/>
        <rdf:li
         xmpG:swatchName="C=0 M=0 Y=0 K=100"
         xmpG:mode="RGB"
         xmpG:type="PROCESS"
         xmpG:red="29"
         xmpG:green="29"
         xmpG:blue="27"/>
       </rdf:Seq>
      </xmpG:Colorants>
      </rdf:Description>
     </rdf:li>
    </rdf:Seq>
   </xmpTPg:SwatchGroups>
  </rdf:Description>
 </rdf:RDF>
</x:xmpmeta>
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                        
<?xpacket end="w"?>%  &&end XMP packet marker&&[{ai_metadata_stream_123}<</Type /Metadata /Subtype /XML>>/PUT AI11_PDFMark5[/Document1 dict begin /Metadata {ai_metadata_stream_123} defcurrentdict end /BDC AI11_PDFMark5
%ADOEndClientInjection: PageSetup End "AI11EPS"
%%EndPageSetup
1  -1  scale 0 -811.978 translate
pgsv
[1 0 0 1 0 0 ]ct
gsave
np
gsave
0 0 mo
0 811.978 li
852.989 811.978 li
852.989 0 li
cp
clp
75.1726 708.339 mo
12.8991 708.339 li
14.7586 708.339 16.2659 706.831 16.2659 704.973 cv
16.2659 690.977 li
16.2659 689.118 17.7727 687.611 19.6321 687.611 cv
29.1653 687.611 li
31.0241 687.611 32.5319 686.103 32.5319 684.244 cv
32.5319 670.249 li
32.5319 668.391 34.0388 666.883 35.8977 666.883 cv
45.4308 666.883 li
47.2903 666.883 48.7976 665.376 48.7976 663.517 cv
48.7976 649.521 li
48.7976 647.662 50.3044 646.155 52.1638 646.155 cv
61.697 646.155 li
63.5564 646.155 65.0632 644.647 65.0632 642.789 cv
65.0632 628.793 li
65.0632 627.987 65.3465 627.248 65.8191 626.668 cv
66.5438 628.373 68.2342 629.568 70.2034 629.568 cv
74.7906 629.568 li
74.8801 637.408 li
74.9025 639.384 76.1769 641.099 78.0379 641.765 cv
78.1006 641.787 78.1634 641.81 78.2255 641.834 cv
78.269 641.911 78.3646 641.944 78.4874 641.944 cv
78.491 641.944 78.4946 641.944 78.4982 641.944 cv
81.8262 643.341 84.1634 646.631 84.1634 650.467 cv
84.1634 686.61 li
43.3533 687.611 li
75.2546 687.611 li
77.0784 687.611 78.5559 689.103 78.5388 690.925 cv
78.5384 690.977 li
78.5384 704.973 li
78.5384 706.831 77.0315 708.339 75.1726 708.339 cv
56.9432 702.286 mo
56.7387 702.286 56.4089 702.352 56.3338 702.763 cv
56.3095 702.895 56.4302 702.946 56.6123 702.946 cv
56.9346 702.946 57.4496 702.785 57.694 702.623 cv
57.9383 702.462 57.9122 702.301 57.1538 702.301 cv
57.1392 702.301 57.1243 702.301 57.1091 702.301 cv
57.1091 702.301 57.0403 702.286 56.9432 702.286 cv
65.6062 680.864 mo
65.6062 680.864 63.1394 681.171 64.7268 682.455 cv
65.0096 682.684 65.3071 682.778 65.5862 682.778 cv
66.7725 682.778 67.6265 681.082 65.6062 680.864 cv
70.8679 673.721 mo
69.6852 673.721 66.4146 673.972 68.8489 676.921 cv
69.2466 677.403 69.737 677.599 70.2399 677.599 cv
72.3605 677.599 74.7048 674.103 71.2649 673.731 cv
71.2649 673.731 71.1102 673.721 70.8679 673.721 cv
44.5314 672.154 mo
44.367 672.154 43.1428 672.185 43.425 673.105 cv
43.6235 673.753 43.9855 673.991 44.3664 673.991 cv
44.8977 673.991 45.4659 673.528 45.6794 673.064 cv
45.8926 672.601 45.7511 672.138 44.8631 672.138 cv
44.7674 672.138 44.6631 672.143 44.5495 672.154 cv
44.5495 672.154 44.5432 672.154 44.5314 672.154 cv
75.0797 644.21 mo
74.3028 644.21 72.1535 644.374 73.7533 646.313 cv
74.0145 646.629 74.3369 646.758 74.6674 646.758 cv
76.061 646.759 77.6013 644.461 75.3405 644.217 cv
75.3405 644.217 75.2388 644.21 75.0797 644.21 cv
68.2555 640.677 mo
68.2555 640.677 65.761 640.677 67.3484 641.962 cv
67.6106 642.174 67.8612 642.26 68.083 642.26 cv
68.9781 642.26 69.4064 640.858 68.2555 640.677 cv
false sop
/0 
[/DeviceRGB] /CSA add_res
level3{
gsave
clp
[5.77565e-15 -94.3237 94.3237 5.77565e-15 90.7144 708.135 ]ct
/0 
<<
/ShadingType 2 
/ColorSpace /0 /CSA get_res
/Coords [0 0 1 0 ]
/Domain [0 1 ]
/Extend[ true true]
/Function
<<
/Domain[0 1 ] 
/FunctionType 3
/Functions [
<<
/Domain[0 1 ] 
/FunctionType 2
/C0 [.952941 .745098 .564706 ]
/C1 [.952941 .745098 .564706 ]
/N 1 
>>
<<
/Domain[0 1 ] 
/FunctionType 2
/C0 [1 .85098 .658824 ]
/C1 [.952941 .745098 .564706 ]
/N 2.18495 
>>
]
/Bounds [1.89999e-07 ]
/Encode [0 1 1 0 ]
>>
>>/Gradient add_res /0 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[5.77565e-15 -94.3237 94.3237 5.77565e-15 90.7144 708.135 ]ct
clp
/0 {
/0 /CSA get_res setcolorspace
<<
/NumSamples 256 
/NumComp 3 
/Scaling[[.00392157 0 ][.00392157 0 ][.00392157 0 ]]
/Samples[
<~oCMSFoCMSFoCMVHo^qeJo^qeJo_%nMp%A"Np%A"Np@e4Rp@e4Rp@e4Rp\4FVp\4FVp\4FVq"XXZq"XXZ
q"XXZq"X[\q>'j^q>'j^q>'j^q>0saqYL'bqYL'bqYL'bqYL*dqtp9fqtp9fqtp9fqtp9fqu$Bir;?Kj
r;?Kjr;?Kjr;?Kjr;?KjrVc]nrVc]nrVc]nrVc]nrVc]nrVc]nrVc]nrVc`prr2orrr2orrr2orrr2or
rr2orrr2orrr2orrr2orrr2orrr2orrr2orrr2orrr2orrr2orrr2orrr2orrr2orrr2orrr2orrr2or
~>
<~^:q=q^;%Ft^VIY#^qde&_83t)_SX1-_o'C0`5KU4`5T^7`Pog9`l?$<a2c6@a2l?CaN2HEaiVZHai_cK
b0%lMbKJ)PbKS2Sbfn;Tc-=MXc-=MYcHa_\cHab^cd0q`cd0tbd*U.dd*U1fdF$@hdF$CjdaHRldaHRl
e'ldpe'ldpe'lgreC<!teC<!teC<%!e^`4#e^`4#e^`4$f%/F'f%/F'f%/F'f%/F(f@SX+f@SX+f@SX+
f@SX+f@SX+f\"j/f\"j/f\"j/f\"j/f\"j/f\"j/f\"j/f\"j/f\"j/f\"j/f\"j/f\"j/f\"j/f\"j/
~>
<~OH>QcOHGZfOcbfiP*1ukPEV2oPE_;rPa%GuQ'IW"QBmi&QBml(Q^=&*R$a8.R$a;0R@0J2R[T\6R[T\7
S"#n:S"#q<S=H+>S=Q4ASXl=BSXuFESt;OFStDXIT:_aJT:_dLTV.sNTV.sOTqS0RTqS0RTq\9UU8"BV
U8"BVUSFTZUSFTZUSFTZUnjf^Unjf^Unjf^Unji`V5:#bV5:#bV5:#bV5:&dVP^5fVP^5fVP^5fVP^5f
VP^5fVPg>iVl-GjVl-GjVl-GjVl-GjVl-GjVl-GjVl-GjVl-GjVl-GjVl-GjVl-GjVl-GjVl-GjVl-Gj
~>
]
>>
0 0 1 0 []true true []
/DeviceRGB
GenStrips
} /Gradient add_res /0 /Gradient get_res exec grestore
}if
np
84.1634 708.339 mo
83.9539 708.339 li
75.1726 708.339 li
77.0315 708.339 78.5384 706.831 78.5384 704.973 cv
78.5384 690.977 li
78.5388 690.925 li
78.5559 689.103 77.0784 687.611 75.2546 687.611 cv
43.3533 687.611 li
84.1634 686.61 li
84.1634 708.339 li
level3{
gsave
clp
[5.77565e-15 -94.3237 94.3237 5.77565e-15 90.7144 708.135 ]ct
/1 
<<
/ShadingType 2 
/ColorSpace /0 /CSA get_res
/Coords [0 0 1 0 ]
/Domain [0 1 ]
/Extend[ true true]
/Function
<<
/Domain[0 1 ] 
/FunctionType 3
/Functions [
<<
/Domain[0 1 ] 
/Range[0 1 0 1 0 1 ] 
/FunctionType 0
/Order 1 
/DataSource <~m]1a'X*j?9I."%_m]1a'X*j?9I."%_m]1a'X*j?9I."%_m]1a'X*j?9I."%_m]1a'X*j?9I."%_m]1a'
X*j?9I."%_m]1a'X*j?9I."%_m]1a'X*j?9I."%_m]1a'X*j?9I."%_m]1a'X*j?9I."%_m]1a'X*j?9
I."%_m]1a'X*j?9I."%_m]1a'X*j?9I."%_m]1a'X*j?9I."%_m]1a'X*j?9I."%_m]1a'X*j?9I."%_
~>
/BitsPerSample 8 
/Encode [0 63 ]
/Decode [0 1 0 1 0 1 ]
/Size [64 ]
>>
<<
/Domain[0 1 ] 
/Range[0 1 0 1 0 1 ] 
/FunctionType 0
/Order 1 
/DataSource <~qS\Nm`0'o7Oo!"YqS\Nm`0'o7Oo!"YqS\Nm`0'o7OnutWqSSEk_iX`4OSQeUq88<i_N=T1O86YRq8/3g
_N4N/O86VPq8&*d^lJ3*NqgDLpqMg`^Q&$'NVC/HpV)X]]o;^!N;(#Dp:ZCX]o)NrMY=]?p:H1S\r$*k
M"S<7osokM\;0^cL\/'1o<sDF[>"4[L%;U(o!<u>Z\.eSK(6-tnZdZ7Y^u;IJFKaln#h-.Xa]]>II=.`
~>
/BitsPerSample 8 
/Encode [0 63 ]
/Decode [0 1 0 1 0 1 ]
/Size [64 ]
>>
]
/Bounds [1.89999e-07 ]
/Encode [0 1 1 0 ]
>>
>>/Gradient add_res /1 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[5.77565e-15 -94.3237 94.3237 5.77565e-15 90.7144 708.135 ]ct
clp
/1 {
/0 /CSA get_res setcolorspace
<<
/NumSamples 256 
/NumComp 3 
/Scaling[[.00392157 0 ][.00392157 0 ][.00392157 0 ]]
/Samples[
<~mHs<.mI'E1mdBN2mdKW5n*f`6n*f`6n*oi9nF5r:nF5r:nF?&=naZ/>naZ/>nac8Ao()ABo()ABo(2JE
oCMSFoCMSFoCMVHo^qeJo^qeJo^qeJo^qhLp%A"Np%A"Np%A"Np%A"Np%A%Pp@e4Rp@e4Rp@e4Rp@e4R
p@e4Sp\4FVp\4FVp\4FVp\4FVp\4FVp\4FWq"XXZq"XXZq"XXZq"XXZq"XXZq"XXZq"XXZq"XXZq"XXZ
q"XXZq>'j^q>'j^q>'j^q>'j^q>'j^q>'j^q>'j^q>'j^q>'j^q>'j^q>'j^q>'j^q>'j^q>'j^q>'j^
~>
<~WiN2$X/rD(XKAV,Xfeh0Y-+q1Y-5%4YHY78Yd(I<Z*L[@ZEgdAZEgdAZEpmDZa@*H['[3I['d<L[C3NP
[^NWQ[^NZS\$rlW\@B&Y\@B)[\[f8]\[f;_]"5Mc]=Y\e]=Y_g]Y(ni]Y(ni]Y(ni]Y(ni]Y(qk]tM+m
]tM+n^:q=q^:q=q^:q=r^V@Ou^V@Ou^V@P!^qdb$^qdb$^qdb%_83t(_83t(_83t(_83t(_83t)_SX1,
_SX1,_SX1,_SX1,_SX1,_SX1,_o'C0_o'C0_o'C0_o'C0_o'C0_o'C0_o'C0_o'C0_o'C0_o'C0_o'C0
~>
<~H[L3gI!pEkI=6NlI=?WoIXcisIt3'"J:N0#J:N0#J:W9&JV&K*JqAT+JqJ].K7no2KS5#3KS>,6KnY57
KnY89L5(G;L5(G;L5(J=LPLY?LPL\ALkpkCLkpnEM2@(GM2@(GM2@+IMMd:KMMd=MMi3LOMi3OQN/W^S
N/W^SN/W^SN/W^SN/W^SN/W^TNK&pWNK&pWNK&pWNK&pXNfK-[NfK-[NfK-[NfK-[NfK-\O,o?_O,o?_
O,o?_O,o?_O,o?_O,o?_O,o?_OH>QcOH>QcOH>QcOH>QcOH>QcOH>QcOH>QcOH>QcOH>QcOH>QcOH>Qc
~>
]
>>
0 0 1 0 []true true []
/DeviceRGB
GenStrips
} /Gradient add_res /1 /Gradient get_res exec grestore
}if
np
70.2399 677.599 mo
69.737 677.599 69.2466 677.403 68.8489 676.921 cv
66.4146 673.972 69.6852 673.721 70.8679 673.721 cv
71.1102 673.721 71.2649 673.731 71.2649 673.731 cv
74.7048 674.103 72.3605 677.599 70.2399 677.599 cv
level3{
gsave
clp
[5.77565e-15 -94.3237 94.3237 5.77565e-15 90.7144 708.135 ]ct
/1 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[5.77565e-15 -94.3237 94.3237 5.77565e-15 90.7144 708.135 ]ct
clp
/1 /Gradient get_res exec grestore
}if
np
65.5862 682.778 mo
65.3071 682.778 65.0096 682.684 64.7268 682.455 cv
63.1394 681.171 65.6062 680.864 65.6062 680.864 cv
67.6265 681.082 66.7725 682.778 65.5862 682.778 cv
level3{
gsave
clp
[5.77565e-15 -94.3237 94.3237 5.77565e-15 90.7144 708.135 ]ct
/1 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[5.77565e-15 -94.3237 94.3237 5.77565e-15 90.7144 708.135 ]ct
clp
/1 /Gradient get_res exec grestore
}if
np
74.6674 646.758 mo
74.3369 646.758 74.0145 646.629 73.7533 646.313 cv
72.1535 644.374 74.3028 644.21 75.0797 644.21 cv
75.2388 644.21 75.3405 644.217 75.3405 644.217 cv
77.6013 644.461 76.061 646.759 74.6674 646.758 cv
level3{
gsave
clp
[5.77565e-15 -94.3237 94.3237 5.77565e-15 90.7144 708.135 ]ct
/1 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[5.77565e-15 -94.3237 94.3237 5.77565e-15 90.7144 708.135 ]ct
clp
/1 /Gradient get_res exec grestore
}if
np
68.083 642.26 mo
67.8612 642.26 67.6106 642.174 67.3484 641.962 cv
65.761 640.677 68.2555 640.677 68.2555 640.677 cv
69.4064 640.858 68.9781 642.26 68.083 642.26 cv
level3{
gsave
clp
[5.77565e-15 -94.3237 94.3237 5.77565e-15 90.7144 708.135 ]ct
/1 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[5.77565e-15 -94.3237 94.3237 5.77565e-15 90.7144 708.135 ]ct
clp
/1 /Gradient get_res exec grestore
}if
np
78.4874 641.944 mo
78.3646 641.944 78.269 641.911 78.2255 641.834 cv
78.3172 641.869 78.408 641.906 78.4982 641.944 cv
78.4946 641.944 78.491 641.944 78.4874 641.944 cv
level3{
gsave
clp
[5.77565e-15 -94.3237 94.3237 5.77565e-15 90.7144 708.135 ]ct
/1 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[5.77565e-15 -94.3237 94.3237 5.77565e-15 90.7144 708.135 ]ct
clp
/1 /Gradient get_res exec grestore
}if
np
56.6123 702.946 mo
56.4302 702.946 56.3095 702.895 56.3338 702.763 cv
56.4089 702.352 56.7387 702.286 56.9432 702.286 cv
57.0403 702.286 57.1091 702.301 57.1091 702.301 cv
57.1243 702.301 57.1392 702.301 57.1538 702.301 cv
57.9122 702.301 57.9383 702.462 57.694 702.623 cv
57.4496 702.785 56.9346 702.946 56.6123 702.946 cv
level3{
gsave
clp
[5.77565e-15 -94.3237 94.3237 5.77565e-15 90.7144 708.135 ]ct
/1 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[5.77565e-15 -94.3237 94.3237 5.77565e-15 90.7144 708.135 ]ct
clp
/1 /Gradient get_res exec grestore
}if
np
44.3664 673.991 mo
43.9855 673.991 43.6235 673.753 43.425 673.105 cv
43.1428 672.185 44.367 672.154 44.5314 672.154 cv
44.5432 672.154 44.5495 672.154 44.5495 672.154 cv
44.6631 672.143 44.7674 672.138 44.8631 672.138 cv
45.7511 672.138 45.8926 672.601 45.6794 673.064 cv
45.4659 673.528 44.8977 673.991 44.3664 673.991 cv
level3{
gsave
clp
[5.77565e-15 -94.3237 94.3237 5.77565e-15 90.7144 708.135 ]ct
/1 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[5.77565e-15 -94.3237 94.3237 5.77565e-15 90.7144 708.135 ]ct
clp
/1 /Gradient get_res exec grestore
}if
np
778.065 708.845 mo
769.446 708.845 li
769.013 708.845 li
769.013 688.219 li
771.485 688.219 li
773.334 688.219 774.834 689.719 774.834 691.568 cv
774.834 705.614 li
774.834 707.398 776.28 708.845 778.065 708.845 cv
836.803 691.568 mo
836.803 689.719 835.303 688.219 833.453 688.219 cv
826.994 688.219 li
823.966 688.219 li
776.647 688.219 li
817.356 687.033 li
818.312 687.005 819.21 686.571 819.826 685.84 cv
820.336 685.234 820.616 684.468 820.616 683.676 cv
820.616 684.869 li
820.616 686.719 822.116 688.219 823.966 688.219 cv
833.453 688.219 li
835.303 688.219 836.803 689.719 836.803 691.568 cv
836.803 691.568 li
801.08 646.965 mo
801.08 646.965 li
791.594 646.965 li
779.721 646.965 li
780.116 646.443 780.22 646.061 780.151 645.782 cv
784.198 645.644 li
785.259 645.606 786.266 645.169 787.017 644.418 cv
787.803 643.633 788.244 642.567 788.244 641.456 cv
788.244 643.615 li
788.244 645.466 789.743 646.965 791.594 646.965 cv
801.08 646.965 li
801.08 646.965 li
777.397 646.965 mo
769.7 646.965 li
769.817 646.677 769.949 646.397 770.095 646.125 cv
776.875 645.893 li
776.865 646.247 777.076 646.645 777.397 646.965 cv
level3{
gsave
clp
[5.64184e-15 92.1383 -92.1383 5.64184e-15 762.718 617.606 ]ct
/2 
<<
/ShadingType 2 
/ColorSpace /0 /CSA get_res
/Coords [0 0 1 0 ]
/Domain [0 1 ]
/Extend[ true true]
/Function
<<
/Domain[0 1 ] 
/FunctionType 3
/Functions [
<<
/Domain[0 1 ] 
/FunctionType 2
/C0 [.952941 .745098 .564706 ]
/C1 [.952941 .745098 .564706 ]
/N 1 
>>
<<
/Domain[0 1 ] 
/FunctionType 2
/C0 [.952941 .745098 .564706 ]
/C1 [.901961 .603922 .458824 ]
/N 4.97729 
>>
]
/Bounds [1.89999e-07 ]
/Encode [0 1 0 1 ]
>>
>>/Gradient add_res /2 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[5.64184e-15 92.1383 -92.1383 5.64184e-15 762.718 617.606 ]ct
clp
/2 {
/0 /CSA get_res setcolorspace
<<
/NumSamples 256 
/NumComp 3 
/Scaling[[.00392157 0 ][.00392157 0 ][.00392157 0 ]]
/Samples[
<~oCDJCo()ABo()ABo()ABo()ABo()ABo()ABo()ABo()ABo()ABo()ABo()ABo()ABo()ABo()ABo()AB
o()ABo()ABo()ABo()ABo()ABo()ABo()ABo()ABo()ABo()ABo()ABo()ABo()ABo()ABo()ABo()AB
o()ABo()ABo()ABo()ABo()ABo()ABo'u8?naZ/>naZ/>naZ/>naZ/>naZ/>nF5r:nF5r:nF5r:nF5r9
n*f`6n*f`6n*f`5mdBN2mdBN2mHs<.mHs<.m-O**m-O*)lg*m&lg!d#lK[Wul07Hrkih6okND$kk2tgg
~>
<~^:h4n]tM+m]tM+m]tM+m]tM+m]tM+m]tM+m]tM+m]tM+m]tM+m]tM+m]tM+m]tM+m]tM+m]tM+m]tM+m
]tM+m]tM+m]tM+m]tM+m]tM+m]tM+m]tM+m]tM+m]tM+m]tM+m]tM+m]tM+m]tM+m]tM+m]tM+m]tD"j
]Y(ni]Y(ni]Y(ni]Y(ni]=Y\e]=Y\e]=Y\e]"5Ja]"5Ja]",A^\[f8]\[]/Z\@B&X\$riU\$i`R[^NTO
[C*BK['[0GZa6sCZEga?Z*:I:YHP.4Y-+n/XfSV)X/i8#WMuhpVl-DhV59u`USFQXTqS-OT:VXFS=H(;
~>
<~OH5H`O,o?_O,o?_O,o?_O,o?_O,o?_O,o?_O,o?_O,o?_O,o?_O,o?_O,o?_O,o?_O,o?_O,o?_O,o?_
O,o?_O,o?_O,o?_O,o?_O,o?_O,o?_O,o?_O,o?_O,o?_O,o?_O,o?_O,o?_O,o?_O,o?_O,o?_O,o?_
O,o?_O,f6\NfK-[NfK-[NfK-[NfK-[NK&pWNK&pWNK&pWNJrgTN/W^SN/W^RMi3LOMi3LNMMd:KMMd7I
M2@(GLkpkCLkgb@LPLV=L5(D9KnY25KS4u1K7ec-Jq8K(J:N0"It)orI=6NkI!g9fH?sj^G^+IWGBS.P
~>
]
>>
0 0 1 0 []true true []
/DeviceRGB
GenStrips
} /Gradient add_res /2 /Gradient get_res exec grestore
}if
np
807.781 667.592 mo
807.779 667.592 li
806.045 667.592 804.619 666.273 804.447 664.585 cv
804.619 666.273 806.045 667.592 807.781 667.592 cv
804.43 650.294 mo
804.418 648.453 802.923 646.965 801.08 646.965 cv
802.924 646.965 804.418 648.453 804.43 650.294 cv
.980392 .901961 .862745 rgb
f
840.153 708.845 mo
778.065 708.845 li
776.28 708.845 774.834 707.398 774.834 705.614 cv
774.834 691.568 li
774.834 689.719 773.334 688.219 771.485 688.219 cv
769.013 688.219 li
769.013 650.467 li
769.013 649.227 769.257 648.045 769.7 646.965 cv
777.397 646.965 li
777.746 647.312 778.225 647.566 778.686 647.566 cv
779.015 647.566 779.336 647.437 779.596 647.122 cv
779.64 647.068 779.682 647.016 779.721 646.965 cv
791.594 646.965 li
801.08 646.965 li
801.08 646.965 li
802.923 646.965 804.418 648.453 804.43 650.294 cv
804.43 650.301 804.43 650.308 804.43 650.315 cv
804.43 664.242 li
804.43 664.242 li
804.43 664.358 804.436 664.472 804.447 664.585 cv
804.619 666.273 806.045 667.592 807.779 667.592 cv
807.781 667.592 li
807.781 667.592 li
817.267 667.592 li
819.116 667.592 820.616 669.092 820.616 670.941 cv
820.616 683.676 li
820.616 684.468 820.336 685.234 819.826 685.84 cv
819.21 686.571 818.312 687.005 817.356 687.033 cv
776.647 688.219 li
823.966 688.219 li
826.994 688.219 li
833.453 688.219 li
835.303 688.219 836.803 689.719 836.803 691.568 cv
836.803 705.495 li
836.803 705.495 li
836.803 707.346 838.303 708.845 840.153 708.845 cv
796.118 702.836 mo
795.36 702.836 795.333 702.997 795.576 703.157 cv
795.819 703.318 796.332 703.479 796.653 703.479 cv
796.835 703.479 796.955 703.427 796.931 703.296 cv
796.856 702.887 796.526 702.821 796.323 702.821 cv
796.227 702.821 796.159 702.836 796.159 702.836 cv
796.145 702.836 796.131 702.836 796.118 702.836 cv
787.704 681.505 mo
785.694 681.722 786.543 683.41 787.724 683.41 cv
788.002 683.41 788.298 683.316 788.579 683.089 cv
790.158 681.81 787.704 681.505 787.704 681.505 cv
782.469 674.397 mo
782.227 674.397 782.072 674.407 782.072 674.407 cv
778.649 674.777 780.982 678.256 783.092 678.256 cv
783.593 678.256 784.081 678.06 784.477 677.581 cv
786.898 674.646 783.647 674.397 782.469 674.397 cv
808.347 672.82 mo
807.462 672.82 807.321 673.282 807.533 673.743 cv
807.745 674.204 808.311 674.665 808.84 674.665 cv
809.219 674.665 809.579 674.428 809.777 673.784 cv
810.058 672.867 808.835 672.837 808.675 672.837 cv
808.664 672.837 808.658 672.837 808.658 672.837 cv
808.545 672.826 808.442 672.82 808.347 672.82 cv
770.095 646.125 mo
770.945 644.531 772.248 643.216 773.833 642.351 cv
774.094 642.568 774.576 642.774 774.885 642.774 cv
775.07 642.774 775.193 642.7 775.168 642.511 cv
775.12 642.141 774.97 641.967 774.814 641.888 cv
774.921 641.845 775.029 641.804 775.139 641.765 cv
776.999 641.099 778.274 639.384 778.296 637.408 cv
778.386 629.568 li
782.973 629.568 li
784.742 629.568 786.285 628.604 787.106 627.173 cv
787.804 627.787 788.244 628.686 788.244 629.689 cv
788.244 641.456 li
788.244 642.567 787.803 643.633 787.017 644.418 cv
786.266 645.169 785.259 645.606 784.198 645.644 cv
780.151 645.782 li
779.984 645.107 778.806 645.029 778.275 645.029 cv
778.117 645.029 778.017 645.036 778.017 645.036 cv
777.206 645.124 776.886 645.477 776.875 645.893 cv
770.095 646.125 li
785.068 641.514 mo
783.922 641.694 784.348 643.089 785.239 643.089 cv
785.46 643.089 785.709 643.003 785.97 642.792 cv
787.549 641.514 785.068 641.514 785.068 641.514 cv
level3{
gsave
clp
[5.64184e-15 92.1383 -92.1383 5.64184e-15 762.718 617.606 ]ct
/3 
<<
/ShadingType 2 
/ColorSpace /0 /CSA get_res
/Coords [0 0 1 0 ]
/Domain [0 1 ]
/Extend[ true true]
/Function
<<
/Domain[0 1 ] 
/FunctionType 3
/Functions [
<<
/Domain[0 1 ] 
/Range[0 1 0 1 0 1 ] 
/FunctionType 0
/Order 1 
/DataSource <~m]1a'X*j?9I."%_m]1a'X*j?9I."%_m]1a'X*j?9I."%_m]1a'X*j?9I."%_m]1a'X*j?9I."%_m]1a'
X*j?9I."%_m]1a'X*j?9I."%_m]1a'X*j?9I."%_m]1a'X*j?9I."%_m]1a'X*j?9I."%_m]1a'X*j?9
I."%_m]1a'X*j?9I."%_m]1a'X*j?9I."%_m]1a'X*j?9I."%_m]1a'X*j?9I."%_m]1a'X*j?9I."%_
~>
/BitsPerSample 8 
/Encode [0 63 ]
/Decode [0 1 0 1 0 1 ]
/Size [64 ]
>>
<<
/Domain[0 1 ] 
/Range[0 1 0 1 0 1 ] 
/FunctionType 0
/Order 1 
/DataSource <~m]1a'X*j?9I."%_m]1a'X*j?9I."%_m]1a'X*j?9I."%_m]1a'X*j?9I."%_m]1a'X*j?9I."%_m]1a'
X*j?9I."%_m]1a'X*j?9I.""^m]([&WdF06Hg[n\m](X$WdF-5HgRh[mAbO#WI+$3HgReZmAP?tW-[g.
H0hGSm&#$oV0M=%GO)&Kl_AXgU35apFQoH?l(<(^Soa+cET`g1kF$8NQu;#OD<7!ujH=9<O(dO5BAnb[
~>
/BitsPerSample 8 
/Encode [0 63 ]
/Decode [0 1 0 1 0 1 ]
/Size [64 ]
>>
]
/Bounds [1.89999e-07 ]
/Encode [0 1 0 1 ]
>>
>>/Gradient add_res /3 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[5.64184e-15 92.1383 -92.1383 5.64184e-15 762.718 617.606 ]ct
clp
/3 {
/0 /CSA get_res setcolorspace
<<
/NumSamples 256 
/NumComp 3 
/Scaling[[.00392157 0 ][.00392157 0 ][.00392157 0 ]]
/Samples[
<~mHs<.mHs<.mHs<.mHs<.mHs<.mHs<.mHs<.mHs<.mHs<.mHs<.mHs<.mHs<.mHs<.mHs<.mHs<.mHs<.
mHs<.mHs<.mHs<.mHs<.mHs<.mHs<.mHs<.mHs<.mHs<.mHs<.mHs<.mHs<.mHs<.mHs<.mHs<.mHs<.
mHs<.mHs<-m-O**m-O**m-O**m-O**m-O**m-O**m-O**m-O*)lg*m&lg*m&lg*m&lg*m&lg*m%lK[["
lK[["lK[["l07Hsl07Hskih6okih6okih6okND$kk2tggk2tggjlPUcjQ,C_jQ,C_j5]1[io8tWiSibS
~>
<~WiE)!WiE)!WiE)!WiE)!WiE)!WiE)!WiE)!WiE)!WiE)!WiE)!WiE)!WiE)!WiE)!WiE)!WiE)!WiE)!
WiE)!WiE)!WiE)!WiE)!WiE)!WiE)!WiE)!WiE)!WiE)!WiE)!WiE)!WiE%tWMukrWMukrWMukrWMukr
WMukrWMukrWMukrWMukrWMukrWMukqW2QYnW2QYnW2QYmVl-GjVl-GiVP^5fVP^5eV5:#aUnjf]USFTZ
USFTZU8"BVTqS0RTV.sNT:_aJSt;OFSXl:@S"#n:R[TY4R$a8.Q^=#(Q'ISuPEV/mOcb`dNfK-[NK&mT
~>
<~H[C*dH[C*dH[C*dH[C*dH[C*dH[C*dH[C*dH[C*dH[C*dH[C*dH[C*dH[C*dH[C*dH[C*dH[C*dH[C*d
H[C*dH[C*dH[C*dH[C*dH[C*dH[C*dH[C*dH[C*dH[C*dH[C*dH[C*dH[C*dH[C*dH[C'bH?sm`H?sm`
H?sm`H?sm`H?sm`H?sm`H?sm`H?sm`H?sm`H?sm`H?sm_H$O[\H$O[[G^+IXG^+IWGB\7TGB\7SG'8%P
G'8%PF`hhLFEDVHF)uDDF)uDDF)uDDEcQ/>E,]c8Df9Q4DJj?0D/F-,Ci!p(CMR["Bk_6oB4kjiAnGUc
~>
]
>>
0 0 1 0 []true true []
/DeviceRGB
GenStrips
} /Gradient add_res /3 /Gradient get_res exec grestore
}if
np
783.092 678.256 mo
780.982 678.256 778.649 674.777 782.072 674.407 cv
782.072 674.407 782.227 674.397 782.469 674.397 cv
783.647 674.397 786.898 674.646 784.477 677.581 cv
784.081 678.06 783.593 678.256 783.092 678.256 cv
level3{
gsave
clp
[5.64184e-15 92.1383 -92.1383 5.64184e-15 762.718 617.606 ]ct
/4 
<<
/ShadingType 2 
/ColorSpace /0 /CSA get_res
/Coords [0 0 1 0 ]
/Domain [0 1 ]
/Extend[ true true]
/Function
<<
/Domain[0 1 ] 
/FunctionType 3
/Functions [
<<
/Domain[0 1 ] 
/Range[0 1 0 1 0 1 ] 
/FunctionType 0
/Order 1 
/DataSource <~l'cDPRVV/VC[%:'l'cDPRVV/VC[%:'l'cDPRVV/VC[%:'l'cDPRVV/VC[%:'l'cDPRVV/VC[%:'l'cDP
RVV/VC[%:'l'cDPRVV/VC[%:'l'cDPRVV/VC[%:'l'cDPRVV/VC[%:'l'cDPRVV/VC[%:'l'cDPRVV/V
C[%:'l'cDPRVV/VC[%:'l'cDPRVV/VC[%:'l'cDPRVV/VC[%:'l'cDPRVV/VC[%:'l'cDPRVV/VC[%:'
~>
/BitsPerSample 8 
/Encode [0 63 ]
/Decode [0 1 0 1 0 1 ]
/Size [64 ]
>>
<<
/Domain[0 1 ] 
/Range[0 1 0 1 0 1 ] 
/FunctionType 0
/Order 1 
/DataSource <~l'cDPRVV/VC[%:'l'cDPRVV/VC[%:'l'cDPRVV/VC[%:'l'cDPRVV/VC[%:'l'cDPRVV/VC[%:'l'cDP
RVV/VC[%:'l'cDPRVV/VC[%7&l'Z>OR;1uSC?_.$l'Z;MR;1rRC?V(#ka?2LQtkiPC?V%"ka6)IQtb`M
B]k^qkE]fEQ"]<EBBGFkk*'E=P%Ea;AE8h_jH!j4O(740@H*5Sieh.&M-o4s?K$TDi.P=lJQgo\=l"L-
~>
/BitsPerSample 8 
/Encode [0 63 ]
/Decode [0 1 0 1 0 1 ]
/Size [64 ]
>>
]
/Bounds [1.89999e-07 ]
/Encode [0 1 0 1 ]
>>
>>/Gradient add_res /4 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[5.64184e-15 92.1383 -92.1383 5.64184e-15 762.718 617.606 ]ct
clp
/4 {
/0 /CSA get_res setcolorspace
<<
/NumSamples 256 
/NumComp 3 
/Scaling[[.00392157 0 ][.00392157 0 ][.00392157 0 ]]
/Samples[
<~kih6okih6okih6okih6okih6okih6okih6okih6okih6okih6okih6okih6okih6okih6okih6okih6o
kih6okih6okih6okih6okih6okih6okih6okih6okih6okih6okih6okih6okih6okih6okih6okih6o
kih6okih6nkND$kkND$kkND$kkND$kkND$kkND$kkND$kkND$jk2tggk2tggk2tggk2tggk2tgfjlPUc
jlPUcjlPUcjQ,C_jQ,C_j5]1[j5]1[j5]1[io8tWiSibSiSibSi8EPOi8EPOi8EPOhr!>KhVR,Gh;-oC
~>
<~R@0J2R@0J2R@0J2R@0J2R@0J2R@0J2R@0J2R@0J2R@0J2R@0J2R@0J2R@0J2R@0J2R@0J2R@0J2R@0J2
R@0J2R@0J2R@0J2R@0J2R@0J2R@0J2R@0J2R@0J2R@0J2R@0J2R@0J2R@0G0R$a8.R$a8.R$a8.R$a8.
R$a8.R$a8.R$a8.R$a8.R$a8.R$a8-Q^=&*Q^=&*Q^=&*Q^=&*Q^=&)QBmi&QBmi%Q'IW!Pa%DrPEV2o
PEV2oP*1ukOcbcgOH>QcO,o?_NfK-[NfK*YN/W^SMi3IMM2@(GLkphAL5(D9KS5#3K7ec,J:N0#It)oq
~>
<~C2.KuC2.KuC2.KuC2.KuC2.KuC2.KuC2.KuC2.KuC2.KuC2.KuC2.KuC2.KuC2.KuC2.KuC2.KuC2.Ku
C2.KuC2.KuC2.KuC2.KuC2.KuC2.KuC2.KuC2.KuC2.KuC2.KuC2.KuC2.KuC2.KuC2.HsBk_9qBk_9q
Bk_9qBk_9qBk_9qBk_9qBk_9qBk_9qBk_9qBk_9qBk_9pBP;'mBP;'lB4kjiB4kjiB4kjiB4kjhAnGXe
AnGXeAS#FaA7T4]@q0"Y@q0"Y@q0"Y@U`bS?smAM?smAM?XI/I?=$rE?!U`A>[1K;>$>*5=]nm1=BJX+
~>
]
>>
0 0 1 0 []true true []
/DeviceRGB
GenStrips
} /Gradient add_res /4 /Gradient get_res exec grestore
}if
np
787.724 683.41 mo
786.543 683.41 785.694 681.722 787.704 681.505 cv
787.704 681.505 790.158 681.81 788.579 683.089 cv
788.298 683.316 788.002 683.41 787.724 683.41 cv
level3{
gsave
clp
[5.64184e-15 92.1383 -92.1383 5.64184e-15 762.718 617.606 ]ct
/4 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[5.64184e-15 92.1383 -92.1383 5.64184e-15 762.718 617.606 ]ct
clp
/4 /Gradient get_res exec grestore
}if
np
779.721 646.965 mo
777.397 646.965 li
777.076 646.645 776.865 646.247 776.875 645.893 cv
780.151 645.782 li
780.22 646.061 780.116 646.443 779.721 646.965 cv
level3{
gsave
clp
[5.64184e-15 92.1383 -92.1383 5.64184e-15 762.718 617.606 ]ct
/3 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[5.64184e-15 92.1383 -92.1383 5.64184e-15 762.718 617.606 ]ct
clp
/3 /Gradient get_res exec grestore
}if
np
778.686 647.566 mo
778.225 647.566 777.746 647.312 777.397 646.965 cv
779.721 646.965 li
779.682 647.016 779.64 647.068 779.596 647.122 cv
779.336 647.437 779.015 647.566 778.686 647.566 cv
776.875 645.893 mo
776.886 645.477 777.206 645.124 778.017 645.036 cv
778.017 645.036 778.117 645.029 778.275 645.029 cv
778.806 645.029 779.984 645.107 780.151 645.782 cv
776.875 645.893 li
level3{
gsave
clp
[5.64184e-15 92.1383 -92.1383 5.64184e-15 762.718 617.606 ]ct
/4 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[5.64184e-15 92.1383 -92.1383 5.64184e-15 762.718 617.606 ]ct
clp
/4 /Gradient get_res exec grestore
}if
np
785.239 643.089 mo
784.348 643.089 783.922 641.694 785.068 641.514 cv
785.068 641.514 787.549 641.514 785.97 642.792 cv
785.709 643.003 785.46 643.089 785.239 643.089 cv
level3{
gsave
clp
[5.64184e-15 92.1383 -92.1383 5.64184e-15 762.718 617.606 ]ct
/4 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[5.64184e-15 92.1383 -92.1383 5.64184e-15 762.718 617.606 ]ct
clp
/4 /Gradient get_res exec grestore
}if
np
774.885 642.774 mo
774.576 642.774 774.094 642.568 773.833 642.351 cv
774.149 642.178 774.476 642.023 774.814 641.888 cv
774.97 641.967 775.12 642.141 775.168 642.511 cv
775.193 642.7 775.07 642.774 774.885 642.774 cv
level3{
gsave
clp
[5.64184e-15 92.1383 -92.1383 5.64184e-15 762.718 617.606 ]ct
/4 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[5.64184e-15 92.1383 -92.1383 5.64184e-15 762.718 617.606 ]ct
clp
/4 /Gradient get_res exec grestore
}if
np
796.653 703.479 mo
796.332 703.479 795.819 703.318 795.576 703.157 cv
795.333 702.997 795.36 702.836 796.118 702.836 cv
796.131 702.836 796.145 702.836 796.159 702.836 cv
796.159 702.836 796.227 702.821 796.323 702.821 cv
796.526 702.821 796.856 702.887 796.931 703.296 cv
796.955 703.427 796.835 703.479 796.653 703.479 cv
level3{
gsave
clp
[5.64184e-15 92.1383 -92.1383 5.64184e-15 762.718 617.606 ]ct
/4 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[5.64184e-15 92.1383 -92.1383 5.64184e-15 762.718 617.606 ]ct
clp
/4 /Gradient get_res exec grestore
}if
np
808.84 674.665 mo
808.311 674.665 807.745 674.204 807.533 673.743 cv
807.321 673.282 807.462 672.82 808.347 672.82 cv
808.442 672.82 808.545 672.826 808.658 672.837 cv
808.658 672.837 808.664 672.837 808.675 672.837 cv
808.835 672.837 810.058 672.867 809.777 673.784 cv
809.579 674.428 809.219 674.665 808.84 674.665 cv
level3{
gsave
clp
[5.64184e-15 92.1383 -92.1383 5.64184e-15 762.718 617.606 ]ct
/4 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[5.64184e-15 92.1383 -92.1383 5.64184e-15 762.718 617.606 ]ct
clp
/4 /Gradient get_res exec grestore
}if
np
172.729 242.084 mo
162.989 242.084 li
161.354 242.084 160.028 240.758 160.028 239.122 cv
160.028 238.67 li
160.604 238.392 161.251 238.236 161.935 238.236 cv
162.034 238.236 li
164.461 238.236 166.427 236.269 166.427 233.844 cv
166.427 115.639 li
166.427 115 166.291 114.394 166.046 113.847 cv
244.625 116.051 li
250.675 116.22 255.709 120.753 256.51 126.753 cv
256.702 128.187 257.143 129.577 257.816 130.858 cv
266.014 146.471 li
266.943 148.241 267.429 150.209 267.429 152.208 cv
267.486 161.142 li
267.217 161.039 266.887 160.961 266.491 160.918 cv
266.491 160.918 262.434 161.422 265.045 163.536 cv
265.509 163.912 265.999 164.066 266.458 164.066 cv
266.837 164.066 267.195 163.961 267.503 163.789 cv
267.71 196.472 li
166.427 196.472 li
166.427 202.002 li
267.746 202.002 li
267.791 209.208 li
166.427 209.208 li
166.427 214.739 li
267.827 214.739 li
267.872 221.945 li
231.318 221.945 li
231.23 221.345 230.645 220.788 229.472 220.788 cv
229.472 220.788 225.829 220.788 226.673 221.945 cv
166.427 221.945 li
166.427 227.475 li
266.713 227.475 li
265.4 229.566 263.101 230.98 260.456 231.059 cv
194.126 233.239 li
196.016 232.417 197.382 229.628 194.217 229.286 cv
194.217 229.286 194.049 229.274 193.787 229.274 cv
192.508 229.274 188.975 229.545 191.606 232.732 cv
191.823 232.995 192.066 233.18 192.323 233.298 cv
186.98 233.474 li
178.652 233.474 li
177.034 233.474 175.691 234.787 175.691 236.435 cv
175.691 239.122 li
175.691 240.74 174.378 242.084 172.729 242.084 cv
236.139 216.188 mo
236.139 216.188 232.036 216.188 234.647 218.302 cv
235.079 218.651 235.491 218.793 235.856 218.793 cv
237.328 218.793 238.032 216.487 236.139 216.188 cv
181.755 183.384 mo
181.39 183.384 178.636 183.434 179.27 184.949 cv
179.716 186.014 180.529 186.406 181.384 186.406 cv
182.578 186.406 183.854 185.644 184.332 184.882 cv
184.811 184.12 184.492 183.357 182.496 183.357 cv
182.282 183.357 182.049 183.366 181.795 183.385 cv
181.795 183.385 181.781 183.384 181.755 183.384 cv
215.43 185.562 mo
215.452 185.563 215.475 185.563 215.497 185.563 cv
240.153 185.563 li
240.176 185.563 240.198 185.563 240.221 185.562 cv
241.624 185.527 242.751 184.378 242.751 182.966 cv
242.751 182.966 li
242.751 155.27 li
242.751 155.27 li
242.751 147.027 236.069 140.345 227.825 140.345 cv
227.825 140.345 li
219.63 140.345 212.979 146.949 212.901 155.126 cv
212.9 155.174 212.9 155.222 212.9 155.27 cv
212.9 182.966 li
212.9 182.966 li
212.9 182.966 li
212.9 184.378 214.027 185.527 215.43 185.562 cv
206.836 167.87 mo
206.494 167.87 205.94 168.026 205.814 168.999 cv
205.773 169.312 205.976 169.434 206.281 169.434 cv
206.822 169.434 207.685 169.052 208.094 168.669 cv
208.503 168.287 208.458 167.905 207.181 167.905 cv
207.159 167.905 207.136 167.905 207.113 167.905 cv
207.113 167.905 206.998 167.87 206.836 167.87 cv
261.453 154.012 mo
259.508 154.012 254.129 154.424 258.133 159.275 cv
258.787 160.067 259.594 160.391 260.421 160.391 cv
263.909 160.392 267.765 154.641 262.106 154.029 cv
262.106 154.029 261.851 154.012 261.453 154.012 cv
184.431 151.006 mo
184.064 151.006 181.312 151.085 181.946 153.464 cv
182.392 155.137 183.205 155.752 184.06 155.752 cv
185.254 155.753 186.53 154.555 187.008 153.358 cv
187.487 152.161 187.169 150.964 185.173 150.964 cv
184.959 150.964 184.725 150.977 184.471 151.006 cv
184.471 151.006 184.457 151.006 184.431 151.006 cv
243.345 129.392 mo
243.345 129.392 237.891 129.392 241.876 131.511 cv
242.547 131.868 243.13 132.013 243.612 132.013 cv
245.665 132.013 245.89 129.392 243.345 129.392 cv
250.011 124.792 mo
250.011 124.792 245.909 124.792 248.52 126.905 cv
248.951 127.254 249.363 127.396 249.728 127.396 cv
251.2 127.396 251.904 125.09 250.011 124.792 cv
208.93 117.516 mo
208.93 117.516 204.828 117.516 207.439 119.629 cv
207.87 119.978 208.282 120.12 208.647 120.12 cv
210.119 120.12 210.823 117.815 208.93 117.516 cv
295.652 238.694 mo
295.063 238.401 294.399 238.236 293.696 238.236 cv
293.596 238.236 li
293.586 238.236 293.576 238.236 293.566 238.236 cv
293.576 238.236 293.586 238.236 293.596 238.236 cv
293.696 238.236 li
294.399 238.236 295.063 238.401 295.652 238.694 cv
295.652 238.694 li
293.451 238.233 mo
293.438 238.233 293.425 238.232 293.412 238.232 cv
293.425 238.232 293.438 238.233 293.451 238.233 cv
293.386 238.231 mo
292.26 238.178 291.244 237.7 290.496 236.955 cv
291.244 237.7 292.26 238.178 293.386 238.231 cv
290.491 236.949 mo
290.488 236.947 290.486 236.945 290.484 236.942 cv
290.486 236.945 290.488 236.947 290.491 236.949 cv
290.472 236.931 mo
290.471 236.93 290.47 236.929 290.469 236.928 cv
290.47 236.929 290.471 236.93 290.472 236.931 cv
289.207 233.986 mo
289.205 233.949 289.205 233.911 289.204 233.874 cv
289.205 233.911 289.205 233.949 289.207 233.986 cv
162.243 111.251 mo
162.243 111.251 162.243 111.251 162.243 111.251 cv
162.243 111.251 162.243 111.251 162.243 111.251 cv
162.224 111.25 mo
162.222 111.25 162.22 111.25 162.219 111.25 cv
162.22 111.25 162.222 111.25 162.224 111.25 cv
162.187 111.249 mo
162.185 111.249 162.182 111.249 162.18 111.249 cv
162.182 111.249 162.185 111.249 162.187 111.249 cv
162.168 111.248 mo
162.163 111.248 162.159 111.248 162.155 111.248 cv
162.159 111.248 162.163 111.248 162.168 111.248 cv
162.143 111.248 mo
162.138 111.248 162.132 111.248 162.127 111.247 cv
162.132 111.248 162.138 111.248 162.143 111.248 cv
162.118 111.247 mo
162.111 111.247 162.102 111.247 162.095 111.247 cv
162.103 111.247 162.111 111.247 162.118 111.247 cv
162.086 111.247 mo
162.08 111.247 162.074 111.247 162.068 111.247 cv
162.074 111.247 162.08 111.247 162.086 111.247 cv
162.06 111.247 mo
162.052 111.246 162.043 111.246 162.035 111.246 cv
162.043 111.246 162.052 111.246 162.06 111.247 cv
293.696 111.246 mo
293.596 111.246 li
293.596 111.246 li
162.035 111.246 li
162.035 111.246 li
161.935 111.246 li
159.509 111.246 157.543 109.28 157.543 106.854 cv
157.543 105.507 158.15 104.301 159.105 103.495 cv
163.28 99.9745 166.377 95.3442 169.268 90.7108 cv
224.841 1.65427 li
225.529 .551459 226.676 .000106768 227.823 .000106768 cv
228.961 .000106768 230.1 .54313 230.79 1.62899 cv
230.103 .547548 228.973 .0131692 227.84 .0131692 cv
227.498 .0131692 227.156 .0619094 226.825 .159085 cv
226.827 .158739 226.849 .155824 226.887 .155824 cv
227.272 .155824 229.378 .453139 231.066 6.69715 cv
232.684 12.686 245.403 78.813 248.732 96.1605 cv
249.15 98.3407 247.506 100.357 245.287 100.409 cv
194.889 101.613 li
289.302 101.613 li
291.833 101.613 294.322 102.263 296.531 103.5 cv
292.359 99.9706 289.256 95.3446 286.364 90.7089 cv
230.806 1.6547 li
230.806 1.6547 li
230.806 1.6547 li
286.364 90.7089 li
289.256 95.3446 292.359 99.9706 296.531 103.5 cv
297.483 104.305 298.088 105.509 298.088 106.854 cv
298.088 109.28 296.122 111.246 293.696 111.246 cv
223.6 8.36808 mo
171.213 92.3192 li
196.835 58.4683 li
223.6 8.36808 li
204.662 84.9795 mo
204.662 84.9795 200.56 84.9795 203.17 87.0927 cv
203.602 87.4419 204.014 87.5837 204.379 87.5837 cv
205.85 87.5838 206.554 85.2779 204.662 84.9795 cv
222.459 72.3402 mo
221.181 72.3402 217.645 72.6109 220.276 75.7994 cv
220.706 76.3196 221.236 76.5321 221.779 76.5322 cv
224.071 76.5325 226.605 72.7538 222.887 72.3516 cv
222.887 72.3516 222.72 72.3402 222.459 72.3402 cv
229.546 32.7333 mo
229.546 32.7333 225.443 32.7333 228.054 34.8466 cv
228.485 35.1959 228.898 35.3376 229.262 35.3377 cv
230.734 35.3379 231.438 33.0322 229.546 32.7333 cv
level3{
gsave
clp
[1.00234e-14 163.696 -163.696 1.00234e-14 227.816 52.3047 ]ct
/5 
<<
/ShadingType 2 
/ColorSpace /0 /CSA get_res
/Coords [0 0 1 0 ]
/Domain [0 1 ]
/Extend[ true true]
/Function
<<
/Domain[0 1 ] 
/FunctionType 3
/Functions [
<<
/Domain[0 1 ] 
/FunctionType 2
/C0 [1 .85098 .658824 ]
/C1 [.952941 .745098 .564706 ]
/N 4.97729 
>>
]
/Bounds []
/Encode [0 1 ]
>>
>>/Gradient add_res /5 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[1.00234e-14 163.696 -163.696 1.00234e-14 227.816 52.3047 ]ct
clp
/5 {
/0 /CSA get_res setcolorspace
<<
/NumSamples 256 
/NumComp 3 
/Scaling[[.00392157 0 ][.00392157 0 ][.00392157 0 ]]
/Samples[
<~s8N#srr2orrr2orrr2orrr2orrr2orrr2orrr2orrr2orrr2orrr2orrr2orrr2orrr2orrr2orrr2or
rr2orrr2orrr2orrr2orrr2orrr2orrr2orrr2orrr2orrr2orrr2orrr2orrr2orrr2orrr2orrr2or
rr2orrr2orrr2orrr2orrr2orrr2orrr2orrVc]nrVc]nrVc]nrVc]nrVc]nrVc]mr;?Kjr;?Kjr;?Kj
r;?Hhqtp9fqtp9fqtp6dqYL'bqYL'aq>'j^q>'j]q"XXZq"XUXp\4FVp@e4Rp@e1Pp%A"Mo^qeJoCMSF
~>
<~g"=s0f\"j/f\"j/f\"j/f\"j/f\"j/f\"j/f\"j/f\"j/f\"j/f\"j/f\"j/f\"j/f\"j/f\"j/f\"j/
f\"j/f\"j/f\"j/f\"j/f\"j/f\"j/f\"j/f\"j/f\"j/f\"j/f\"j/f\"j/f\"j/f\"j/f\"j/f\"j/
f\"j/f[na,f@SX+f@SX+f@SX+f@SX+f%/F'f%/F'f%/F'f%&=$e^`4#e^`4"eC<!teC<!se'ldpe'lan
daHRldF$@hdEp7ed*U+bcd0n^cHa\Zc-=JVbfn8RbK@uMaiVZGaN2EB`l?$;`Pod6_o'@._83t'^q[Xu
~>
<~W2HPkVl-GjVl-GjVl-GjVl-GjVl-GjVl-GjVl-GjVl-GjVl-GjVl-GjVl-GjVl-GjVl-GjVl-GjVl-Gj
Vl-GjVl-GjVl-GjVl-GjVl-GjVl-GjVl-GjVl-GjVl-GjVl-GjVl-GjVl-GjVl-GjVl-GjVl-GjVl-Gj
Vl-GjVl-GjVP^5fVP^5fVP^5fVP^5fVP^5fV5:#bV5:#bV5:#bV50o_Unjf^Unjf]USFTZUSFTYU8"BV
U8"?TTqS0RTV.sNTV.pLT:_aISt;OESXl=AS=H+=S"#n9R[TY4R@'A/Q^=&)QBmf$Q'@MsPEV/mOcb`e
~>
]
>>
0 0 1 0 []true true []
/DeviceRGB
GenStrips
} /Gradient add_res /5 /Gradient get_res exec grestore
}if
np
267.746 202.002 mo
166.427 202.002 li
166.427 196.472 li
267.71 196.472 li
267.746 202.002 li
level3{
gsave
clp
[1.00234e-14 163.696 -163.696 1.00234e-14 227.816 52.3047 ]ct
/6 
<<
/ShadingType 2 
/ColorSpace /0 /CSA get_res
/Coords [0 0 1 0 ]
/Domain [0 1 ]
/Extend[ true true]
/Function
<<
/Domain[0 1 ] 
/FunctionType 3
/Functions [
<<
/Domain[0 1 ] 
/Range[0 1 0 1 0 1 ] 
/FunctionType 0
/Order 1 
/DataSource <~qS\Nm`0'o7Oo!"YqS\Nm`0'o7Oo!"YqS\Nm`0'o7Oo!"YqS\Nm`0'o7Oo!"YqS\Nm`0'o7Oo!"YqS\Nm
`0'o7Oo!"YqS\Nm`0'o7Oo!"YqS\Nm_iX`4OSZkVqSSEk_iX]3OSQeUq8/6h_N4N0O86YRq8&*e_2e<+
NqgDLpqMg`^Q&!%NVC/GpUuO[]o2TsMY=]?ot-(R\qp!gL\/'2o<sDF[=n+WKCQ:"nZdZ7YCQ)DIdX7a
~>
/BitsPerSample 8 
/Encode [0 63 ]
/Decode [0 1 0 1 0 1 ]
/Size [64 ]
>>
]
/Bounds []
/Encode [0 1 ]
>>
>>/Gradient add_res /6 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[1.00234e-14 163.696 -163.696 1.00234e-14 227.816 52.3047 ]ct
clp
/6 {
/0 /CSA get_res setcolorspace
<<
/NumSamples 256 
/NumComp 3 
/Scaling[[.00392157 0 ][.00392157 0 ][.00392157 0 ]]
/Samples[
<~q>'j^q>'j^q>'j^q>'j^q>'j^q>'j^q>'j^q>'j^q>'j^q>'j^q>'j^q>'j^q>'j^q>'j^q>'j^q>'j^
q>'j^q>'j^q>'j^q>'j^q>'j^q>'j^q>'j^q>'j^q>'j^q>'j^q>'j^q>'j^q>'j^q>'j^q>'j^q>'j^
q>'j^q>'j^q>'j]q"XXZq"XXZq"XXZq"XXZq"XXZq"XXZq"XXZq"XXYp\4FVp\4FVp\4FVp\4FUp@e4R
p@e4Rp@e4Rp@e4Rp%A"Np%A"No^qeJo^qeJoCMSFoCMSFo()ABo()ABnaZ/>nF5r:nF5r:n*f`6mdBN2
~>
<~_o'C0_o'C0_o'C0_o'C0_o'C0_o'C0_o'C0_o'C0_o'C0_o'C0_o'C0_o'C0_o'C0_o'C0_o'C0_o'C0
_o'C0_o'C0_o'C0_o'C0_o'C0_o'C0_o'C0_o'C0_o'C0_o'C0_o'C0_o'C0_o'C0_o'@._SX1,_SX1,
_SX1,_SX1,_SX1,_SX1,_SX1+_83t(_83t(_83t(_83t'^qdb$^qdb#^V@Ou^V@Ot^:q=q^:q=p]tM+m
]tM+m]Y(ni]Y(ni]=Y\e]=Y\e]"5Ja\[f5[\$riU[^NWQ[C*EM['[0GZEgdAZEga?Yct=7Y-+n/XK8J'
~>
<~OH>QcOH>QcOH>QcOH>QcOH>QcOH>QcOH>QcOH>QcOH>QcOH>QcOH>QcOH>QcOH>QcOH>QcOH>QcOH>Qc
OH>QcOH>QcOH>QcOH>QcOH>QcOH>QcOH>QcOH>QcOH>QcOH>QcOH>QcOH>QcOH>QcOH>NaO,o?_O,o?_
O,o?_O,o?_O,o?_O,o?_O,o?_O,o?^NfK-[NfK-[NfK-ZNK&pWNK&pWNK&pVN/W^SN/W^SN/W^SN/W^R
Mi3LOMi3LOMMd:KM2@(GM2@(GLkpkCLPLY?L5(G;L5(G;KnY25K7ef/JqAT+JUrB'J:N0#It)orI=6Kj
~>
]
>>
0 0 1 0 []true true []
/DeviceRGB
GenStrips
} /Gradient add_res /6 /Gradient get_res exec grestore
}if
np
267.827 214.739 mo
166.427 214.739 li
166.427 209.208 li
267.791 209.208 li
267.827 214.739 li
level3{
gsave
clp
[1.00234e-14 163.696 -163.696 1.00234e-14 227.816 52.3047 ]ct
/6 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[1.00234e-14 163.696 -163.696 1.00234e-14 227.816 52.3047 ]ct
clp
/6 /Gradient get_res exec grestore
}if
np
266.713 227.475 mo
166.427 227.475 li
166.427 221.945 li
226.673 221.945 li
226.862 222.204 227.275 222.52 228.003 222.908 cv
228.675 223.265 229.258 223.409 229.74 223.409 cv
230.846 223.41 231.422 222.648 231.318 221.945 cv
267.872 221.945 li
267.882 223.41 li
267.882 224.902 267.454 226.296 266.713 227.475 cv
level3{
gsave
clp
[1.00234e-14 163.696 -163.696 1.00234e-14 227.816 52.3047 ]ct
/6 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[1.00234e-14 163.696 -163.696 1.00234e-14 227.816 52.3047 ]ct
clp
/6 /Gradient get_res exec grestore
}if
np
168.525 462.654 mo
152.049 462.654 li
149.281 462.654 147.039 460.411 147.039 457.645 cv
147.039 453.118 li
147.039 450.351 144.796 448.108 142.029 448.108 cv
137.141 448.108 li
137.141 447.988 li
137.141 444.863 139.677 442.327 142.801 442.327 cv
142.925 442.327 li
146.05 442.327 148.586 439.79 148.586 436.666 cv
148.586 263.453 li
148.586 262.83 148.487 262.232 148.305 261.673 cv
256.782 264.957 li
262.498 265.13 267.615 268.546 269.967 273.758 cv
270.979 276.001 272.529 277.96 274.478 279.46 cv
286.021 288.346 li
289.701 291.179 291.857 295.559 291.857 300.203 cv
291.857 301.979 li
281.834 301.979 li
279.601 297.997 275.81 295.378 271.509 295.378 cv
271.509 295.378 li
271.509 295.378 li
264.639 295.378 259.07 302.06 259.07 310.303 cv
259.07 337.998 li
259.07 339.432 260.04 340.596 261.236 340.596 cv
280.076 340.596 li
281.426 341.38 282.996 341.829 284.67 341.829 cv
285.06 341.829 li
285.149 349.648 li
285.152 349.838 li
285.174 351.857 286.476 353.609 288.377 354.29 cv
289.698 354.763 290.883 355.521 291.857 356.492 cv
291.857 403.876 li
155.449 403.876 li
156.196 395.966 li
152.615 351.491 li
152.615 403.876 li
148.611 403.876 li
148.611 414.204 li
152.615 414.204 li
152.615 433.914 li
154.475 414.204 li
291.857 414.204 li
291.857 433.449 li
291.857 438.621 288.579 443.225 283.692 444.916 cv
282.675 445.267 281.616 445.483 280.543 445.556 cv
192.279 448.108 li
178.545 448.108 li
175.777 448.108 173.535 450.351 173.535 453.118 cv
173.535 457.645 li
173.535 460.411 171.292 462.654 168.525 462.654 cv
179.572 436.139 mo
177.52 436.139 177.295 438.76 179.84 438.76 cv
179.84 438.76 185.294 438.76 181.309 436.641 cv
180.637 436.283 180.054 436.139 179.572 436.139 cv
232.93 423.851 mo
229.443 423.851 225.587 429.601 231.245 430.213 cv
231.245 430.213 231.5 430.23 231.898 430.23 cv
233.843 430.23 239.223 429.818 235.218 424.967 cv
234.564 424.174 233.758 423.851 232.93 423.851 cv
240.585 415.334 mo
238.634 415.334 237.229 418.123 240.552 418.481 cv
240.552 418.481 244.609 417.978 241.998 415.864 cv
241.533 415.488 241.044 415.334 240.585 415.334 cv
207.536 383.999 mo
204.806 383.999 203.472 388.819 207.323 388.819 cv
207.323 388.819 213.166 388.819 210.182 385.463 cv
209.245 384.408 208.331 383.999 207.536 383.999 cv
254.527 383.225 mo
254.527 383.225 254.639 383.25 254.798 383.25 cv
255.134 383.25 255.678 383.141 255.802 382.466 cv
255.842 382.248 255.643 382.163 255.342 382.163 cv
254.811 382.163 253.964 382.428 253.563 382.694 cv
253.162 382.96 253.207 383.226 254.462 383.226 cv
254.483 383.226 254.505 383.226 254.527 383.225 cv
275.906 381.607 mo
275.906 381.607 276.02 381.642 276.182 381.642 cv
276.525 381.642 277.078 381.486 277.204 380.515 cv
277.245 380.201 277.042 380.079 276.736 380.079 cv
276.195 380.079 275.333 380.461 274.924 380.843 cv
274.515 381.225 274.56 381.608 275.837 381.608 cv
275.859 381.608 275.882 381.608 275.906 381.607 cv
283.019 372.16 mo
280.727 372.16 278.193 375.939 281.911 376.341 cv
281.911 376.341 282.079 376.352 282.341 376.352 cv
283.619 376.352 287.153 376.081 284.522 372.893 cv
284.092 372.373 283.563 372.16 283.019 372.16 cv
181.184 360.754 mo
179.712 360.754 179.008 363.06 180.901 363.359 cv
180.901 363.359 185.004 363.359 182.393 361.245 cv
181.962 360.896 181.549 360.754 181.184 360.754 cv
224.532 357.439 mo
223.06 357.439 222.356 359.745 224.249 360.044 cv
224.249 360.044 228.352 360.044 225.74 357.931 cv
225.309 357.581 224.897 357.439 224.532 357.439 cv
252.558 347.64 mo
249.828 347.64 248.493 352.461 252.345 352.461 cv
252.345 352.461 258.188 352.461 255.204 349.104 cv
254.266 348.049 253.353 347.64 252.558 347.64 cv
148.593 340.604 mo
148.593 340.604 li
155.244 340.604 li
156.018 340.604 156.636 339.428 156.636 338.005 cv
156.636 310.318 li
156.636 310.318 li
156.636 302.059 153.048 295.377 148.593 295.377 cv
148.593 340.604 li
212.891 337.998 mo
212.891 337.998 li
212.891 339.432 214.054 340.596 215.488 340.596 cv
240.145 340.596 li
241.579 340.596 242.742 339.432 242.742 337.998 cv
242.742 310.303 li
242.742 310.303 li
242.742 302.06 236.06 295.378 227.817 295.378 cv
219.573 295.378 212.891 302.06 212.891 310.303 cv
212.891 337.998 li
212.891 337.998 li
171.669 337.998 mo
171.669 337.998 li
171.669 339.432 172.637 340.596 173.833 340.596 cv
194.38 340.596 li
195.576 340.596 196.545 339.432 196.545 337.998 cv
196.545 310.303 li
196.545 310.303 li
196.545 302.06 190.976 295.378 184.107 295.378 cv
177.237 295.378 171.669 302.06 171.669 310.303 cv
171.669 337.998 li
171.669 337.998 li
205.771 325.122 mo
204.578 325.122 203.302 326.319 202.823 327.516 cv
202.344 328.714 202.662 329.911 204.659 329.911 cv
204.873 329.911 205.106 329.897 205.36 329.868 cv
205.36 329.868 205.374 329.869 205.4 329.869 cv
205.765 329.869 208.52 329.79 207.885 327.41 cv
207.439 325.738 206.626 325.122 205.771 325.122 cv
208.447 294.468 mo
207.254 294.468 205.978 295.23 205.499 295.993 cv
205.021 296.755 205.339 297.517 207.336 297.517 cv
207.55 297.517 207.783 297.508 208.036 297.49 cv
208.036 297.49 208.05 297.49 208.076 297.49 cv
208.44 297.49 211.196 297.44 210.562 295.925 cv
210.116 294.86 209.303 294.468 208.447 294.468 cv
218.8 281.006 mo
217.607 281.006 216.331 282.203 215.852 283.4 cv
215.373 284.597 215.692 285.795 217.688 285.795 cv
217.902 285.795 218.135 285.781 218.389 285.752 cv
218.389 285.752 218.403 285.752 218.429 285.752 cv
218.794 285.752 221.549 285.674 220.914 283.294 cv
220.468 281.621 219.655 281.006 218.8 281.006 cv
160.731 283.366 mo
160.731 283.366 160.846 283.4 161.007 283.4 cv
161.35 283.4 161.904 283.245 162.03 282.272 cv
162.07 281.959 161.868 281.837 161.562 281.837 cv
161.021 281.837 160.158 282.219 159.749 282.601 cv
159.341 282.984 159.386 283.366 160.663 283.366 cv
160.686 283.366 160.708 283.366 160.731 283.366 cv
249.887 278.144 mo
249.887 278.144 250.041 278.169 250.257 278.169 cv
250.716 278.169 251.459 278.06 251.628 277.384 cv
251.682 277.167 251.41 277.082 251.001 277.082 cv
250.276 277.082 249.12 277.347 248.572 277.613 cv
248.024 277.879 248.086 278.145 249.797 278.145 cv
249.827 278.145 249.857 278.145 249.887 278.144 cv
143.013 257.761 mo
143.013 257.761 143.013 257.761 143.013 257.761 cv
143.013 257.761 143.013 257.761 143.013 257.761 cv
142.985 257.761 mo
142.985 257.761 142.984 257.761 142.984 257.761 cv
142.984 257.761 142.985 257.761 142.985 257.761 cv
142.957 257.761 mo
142.955 257.761 142.954 257.761 142.952 257.761 cv
142.954 257.761 142.955 257.761 142.957 257.761 cv
312.849 257.761 mo
312.694 257.761 li
312.694 257.761 li
142.925 257.761 li
142.925 257.761 li
142.801 257.761 li
142.662 257.761 142.525 257.756 142.388 257.746 cv
142.423 257.746 142.458 257.747 142.493 257.747 cv
313.155 257.747 li
313.191 257.747 313.227 257.746 313.263 257.746 cv
313.127 257.756 312.988 257.761 312.849 257.761 cv
level3{
gsave
clp
[1.1274e-14 -184.12 184.12 1.1274e-14 227.826 455.678 ]ct
/7 
<<
/ShadingType 2 
/ColorSpace /0 /CSA get_res
/Coords [0 0 1 0 ]
/Domain [0 1 ]
/Extend[ true true]
/Function
<<
/Domain[0 1 ] 
/FunctionType 3
/Functions [
<<
/Domain[0 1 ] 
/FunctionType 2
/C0 [.952941 .745098 .564706 ]
/C1 [.952941 .745098 .564706 ]
/N 1 
>>
<<
/Domain[0 1 ] 
/FunctionType 2
/C0 [.952941 .745098 .564706 ]
/C1 [.901961 .603922 .458824 ]
/N 2.33779 
>>
]
/Bounds [1.89999e-07 ]
/Encode [0 1 0 1 ]
>>
>>/Gradient add_res /7 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[1.1274e-14 -184.12 184.12 1.1274e-14 227.826 455.678 ]ct
clp
/7 {
/0 /CSA get_res setcolorspace
<<
/NumSamples 256 
/NumComp 3 
/Scaling[[.00392157 0 ][.00392157 0 ][.00392157 0 ]]
/Samples[
<~oCDJCo()ABo()ABo()ABo()ABo()ABo()ABo()ABo()ABo()ABo()ABo()ABo()ABo()ABo()ABo()AB
o()ABo()ABo()ABo()ABo()ABo()>@naZ/>naZ/>naZ/>naZ/>naZ/>naZ/>naZ/=nF5r:nF5r:nF5r:
nF5r:nF5r:nF,i7n*f`6n*f`6n*f`6n*f`5mdBN2mdBN2mdBN2mdBN1mHs<.mHs<.mHs<.m-O**m-O**
m-O**m-F!'lg*m&lg*m&lK[["lK[["lK[[!l07Hsl07Hsl0.?pkih6okih6nkND$kkND$kk2tggk2tgg
~>
<~^:h4n]tM+m]tM+m]tM+m]tM+m]tM+m]tM+m]tM+m]tM+m]tM+m]tM+m]tM+m]tM+m]tM+m]Y(ni]Y(ni
]Y(ni]Y(ni]Y(nh]=Y\e]=Y\e]=Y\e]=PSb]"5Ja]"5Ja]",A^\[f8]\[f8\\@B&Y\@B&X\$riU\$riU
[^NWQ[^NWP[C*EM[C*BK['[3I['R*FZa7!DZEgdAZE^[>Z*CO;Yct@8YHP.5YHG%2Y-"h.Xf\\+XK8M(
X/i;$WiE)!WMukrW2QYnVl-GjVP^5fV5:#bUnjf]USFTYU8"?TTqS-PTV%jKT:VXGSXl=AS=H(<S!oe7
~>
<~OH5H`O,o?_O,o?_O,o?_O,o?_O,o?_O,o?_O,o?_O,o?_O,o?_O,o?_O,o?_O,o?_O,o?_O,o?_O,o?^
NfK-[NfK-[NfK-[NfK-[NfK-[NfB$XNK&pWNK&pWNK&pWNJrgTN/W^SN/W^SN/W[QMi3LOMi3LOMi*CL
MMd:KMMd:JM2@(GM2@(GLkpkCLkpkCLkgb@LPLY?LPCP<L5(G;KnY57KnY56KS5#3KS+o0K7ef/JqAT+
JqAQ)JUrB'J:N0#J:E&uIt)rsIXZ`pI=6NlI=-EiI!g9fH[C'bH?sm_H$O[\G^+IXGB\7TG'8%PF`hhL
~>
]
>>
0 0 1 0 []true true []
/DeviceRGB
GenStrips
} /Gradient add_res /7 /Gradient get_res exec grestore
}if
np
148.305 261.673 mo
148.277 261.672 li
147.54 259.427 145.479 257.799 143.013 257.761 cv
145.483 257.799 147.571 259.422 148.305 261.673 cv
143.013 257.761 mo
143.004 257.761 142.994 257.761 142.985 257.761 cv
142.994 257.761 143.004 257.761 143.013 257.761 cv
142.984 257.761 mo
142.975 257.761 142.966 257.761 142.957 257.761 cv
142.966 257.761 142.975 257.761 142.984 257.761 cv
142.952 257.761 mo
142.943 257.761 142.934 257.761 142.925 257.761 cv
142.925 257.761 li
142.934 257.761 142.943 257.761 142.952 257.761 cv
.980392 .901961 .862745 rgb
f
294.636 462.654 mo
287.126 462.654 li
284.359 462.654 282.116 460.411 282.116 457.645 cv
282.116 453.118 li
282.116 450.351 279.873 448.108 277.106 448.108 cv
246.083 448.108 li
243.316 448.108 241.073 450.351 241.073 453.117 cv
241.073 457.645 li
241.073 460.411 238.831 462.654 236.064 462.654 cv
227.825 462.654 li
219.588 462.654 li
216.821 462.654 214.577 460.411 214.577 457.645 cv
214.577 453.118 li
214.577 450.351 212.334 448.108 209.567 448.108 cv
192.279 448.108 li
280.543 445.556 li
281.616 445.483 282.675 445.267 283.692 444.916 cv
288.579 443.225 291.857 438.621 291.857 433.449 cv
291.857 414.204 li
294.636 414.204 li
294.636 462.654 li
294.636 403.876 mo
291.857 403.876 li
291.857 356.492 li
293.574 358.201 294.636 360.567 294.636 363.181 cv
294.636 379.769 li
294.358 379.622 294.092 379.559 293.848 379.559 cv
292.376 379.559 291.672 381.864 293.565 382.163 cv
293.565 382.163 294.084 382.163 294.636 382.068 cv
294.636 403.876 li
307.033 301.979 mo
307.022 301.979 li
307.022 295.377 li
307.022 295.377 li
304.234 295.377 301.785 297.995 300.343 301.979 cv
291.857 301.979 li
291.857 300.203 li
291.857 295.559 289.701 291.179 286.021 288.346 cv
274.478 279.46 li
272.529 277.96 270.979 276.001 269.967 273.758 cv
267.615 268.546 262.498 265.13 256.782 264.957 cv
148.305 261.673 li
147.571 259.422 145.483 257.799 143.013 257.761 cv
143.013 257.761 143.013 257.761 143.013 257.761 cv
143.004 257.761 142.994 257.761 142.985 257.761 cv
142.985 257.761 142.984 257.761 142.984 257.761 cv
142.975 257.761 142.966 257.761 142.957 257.761 cv
142.955 257.761 142.954 257.761 142.952 257.761 cv
142.943 257.761 142.934 257.761 142.925 257.761 cv
312.694 257.761 li
309.57 257.761 307.033 260.297 307.033 263.453 cv
307.033 301.979 li
278.639 268.454 mo
277.167 268.454 276.463 270.759 278.356 271.058 cv
278.356 271.058 282.458 271.058 279.848 268.945 cv
279.416 268.596 279.004 268.454 278.639 268.454 cv
level3{
gsave
clp
[1.1274e-14 -184.12 184.12 1.1274e-14 227.826 455.678 ]ct
/8 
<<
/ShadingType 2 
/ColorSpace /0 /CSA get_res
/Coords [0 0 1 0 ]
/Domain [0 1 ]
/Extend[ true true]
/Function
<<
/Domain[0 1 ] 
/FunctionType 3
/Functions [
<<
/Domain[0 1 ] 
/Range[0 1 0 1 0 1 ] 
/FunctionType 0
/Order 1 
/DataSource <~m]1a'X*j?9I."%_m]1a'X*j?9I."%_m]1a'X*j?9I."%_m]1a'X*j?9I."%_m]1a'X*j?9I."%_m]1a'
X*j?9I."%_m]1a'X*j?9I."%_m]1a'X*j?9I."%_m]1a'X*j?9I."%_m]1a'X*j?9I."%_m]1a'X*j?9
I."%_m]1a'X*j?9I."%_m]1a'X*j?9I."%_m]1a'X*j?9I."%_m]1a'X*j?9I."%_m]1a'X*j?9I."%_
~>
/BitsPerSample 8 
/Encode [0 63 ]
/Decode [0 1 0 1 0 1 ]
/Size [64 ]
>>
<<
/Domain[0 1 ] 
/Range[0 1 0 1 0 1 ] 
/FunctionType 0
/Order 1 
/DataSource <~m]1a'X*j?9I."%_m]1a'X*j?9I."%_m]1a'X*j?9I.""^m](X%WdF06Hg[n\mAbO#WdF-5HgRh[mAbO#
WI+$3HgReYmAP?uW-[g.HL.PTm&,-qVKqO*GjM8Ol_SgkUj)."GO)#IlCrIeU35apFm>ZBlCi=aTQKFj
FQoB<kacbXST<qaET`g1kF-AQR;_5TDW[=(k*KuIQ>P`KCupmsjHF?>P%s$=C#b7fif@d4Nb@=0B&SYZ
~>
/BitsPerSample 8 
/Encode [0 63 ]
/Decode [0 1 0 1 0 1 ]
/Size [64 ]
>>
]
/Bounds [1.89999e-07 ]
/Encode [0 1 0 1 ]
>>
>>/Gradient add_res /8 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[1.1274e-14 -184.12 184.12 1.1274e-14 227.826 455.678 ]ct
clp
/8 {
/0 /CSA get_res setcolorspace
<<
/NumSamples 256 
/NumComp 3 
/Scaling[[.00392157 0 ][.00392157 0 ][.00392157 0 ]]
/Samples[
<~mHs<.mHs<.mHs<.mHs<.mHs<.mHs<.mHs<.mHs<.mHs<.mHs<.mHs<.mHs<.mHs<.mHs<.mHs<.mHs<.
mHs9,m-O**m-O**m-O**m-O**m-O**m-O**m-O**m-O**m-O**m-O'(lg*m&lg*m&lg*m&lg*m&lg*m&
lg*m%lK[["lK[["lK[["lK[[!l07Hsl07Hsl07Hsl07Hsl07Hrkih6okih6okih6nkND$kkND$kkND$j
k2tggk2tggk2tggjlPUcjlPUcjlPUcjQ,C_jQ,C_jQ,C_j5]1[j5]1[io8tWio8tWiSibSiSibSi8EPO
~>
<~WiE)!WiE)!WiE)!WiE)!WiE)!WiE)!WiE)!WiE)!WiE)!WiE)!WiE)!Wi;tsWMukrWMukrWMukrWMukr
WMukrWMukrWMukrWMukrWMukrWMuhpW2QYnW2QYnW2QVlVl-GjVl-DhVP^5fVP^5fVP^2dV5:#bV59u`
Unjf^Unjf]USFTYU8"BVU8"BUTqS0RTqS0QTV.sNTV.sNTV.sMT:_aISt;OESXl=AS=H+>S=H+=S"#n9
R[T\6R@0J2R$a8.Q^=&*Q^=&*QBmi&Q'IW"Pa%DsPEV2oP*1ukOcb`eO,o?_NfK-[NfK-[NK&mUMi3LO
~>
<~H[C*dH[C*dH[C*dH[C*dH[C*dH[C*dH[C*dH[C*dH[C*dH[C*dH[C*dH[C*dH[:!aH?sm`H?sm`H?sm`
H?sm`H?sm`H?sm`H?sm`H?sm`H?sm`H?sm`H?sj^H$O[\H$O[\H$O[\H$OXZG^+IXG^+IXG^+FVGB\7T
GB\7SG'8%PG'8%PG'8%OF`hhLF`hhKFEDVHFEDVGF)uDDF)uDDF)uDDF)uDCEcQ2?EH,u<EH,u;E,]c7
Df9Q4Df9Q4DJj?0D/F-,D/F-,D/F-,Ci!p(CMR^$C2.KuBk_9qBk_9qBP;'mB4kjiB4kjiAnGXeAS#Fa
~>
]
>>
0 0 1 0 []true true []
/DeviceRGB
GenStrips
} /Gradient add_res /8 /Gradient get_res exec grestore
}if
np
291.857 414.204 mo
154.475 414.204 li
155.449 403.876 li
291.857 403.876 li
291.857 414.204 li
270.499 410.25 mo
269.625 410.25 268.69 411.013 268.339 411.774 cv
267.989 412.537 268.222 413.299 269.684 413.299 cv
269.841 413.299 270.012 413.29 270.198 413.271 cv
270.198 413.271 270.208 413.272 270.227 413.272 cv
270.497 413.272 272.512 413.221 272.048 411.707 cv
271.721 410.642 271.126 410.25 270.499 410.25 cv
168.052 404.342 mo
165.76 404.342 163.226 408.121 166.945 408.523 cv
166.945 408.523 167.112 408.534 167.374 408.534 cv
168.652 408.534 172.186 408.263 169.555 405.075 cv
169.126 404.555 168.596 404.342 168.052 404.342 cv
152.615 414.204 mo
148.611 414.204 li
148.611 403.876 li
152.615 403.876 li
152.615 414.204 li
level3{
gsave
clp
[1.1274e-14 -184.12 184.12 1.1274e-14 227.826 455.678 ]ct
/8 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[1.1274e-14 -184.12 184.12 1.1274e-14 227.826 455.678 ]ct
clp
/8 /Gradient get_res exec grestore
}if
np
294.636 414.204 mo
291.857 414.204 li
291.857 403.876 li
294.636 403.876 li
294.636 414.204 li
level3{
gsave
clp
[1.1274e-14 -184.12 184.12 1.1274e-14 227.826 455.678 ]ct
/9 
<<
/ShadingType 2 
/ColorSpace /0 /CSA get_res
/Coords [0 0 1 0 ]
/Domain [0 1 ]
/Extend[ true true]
/Function
<<
/Domain[0 1 ] 
/FunctionType 3
/Functions [
<<
/Domain[0 1 ] 
/Range[0 1 0 1 0 1 ] 
/FunctionType 0
/Order 1 
/DataSource <~l'cDPRVV/VC[%:'l'cDPRVV/VC[%:'l'cDPRVV/VC[%:'l'cDPRVV/VC[%:'l'cDPRVV/VC[%:'l'cDP
RVV/VC[%:'l'cDPRVV/VC[%:'l'cDPRVV/VC[%:'l'cDPRVV/VC[%:'l'cDPRVV/VC[%:'l'cDPRVV/V
C[%:'l'cDPRVV/VC[%:'l'cDPRVV/VC[%:'l'cDPRVV/VC[%:'l'cDPRVV/VC[%:'l'cDPRVV/VC[%:'
~>
/BitsPerSample 8 
/Encode [0 63 ]
/Decode [0 1 0 1 0 1 ]
/Size [64 ]
>>
<<
/Domain[0 1 ] 
/Range[0 1 0 1 0 1 ] 
/FunctionType 0
/Order 1 
/DataSource <~l'cDPRVV/VC[%:'l'cDPRVV/VC[%:'l'cDPRVV/VC[%7&l'Z;NR;1uSC?_.$ka?2LR;1rRC?V(#ka?2L
QtkiPC?V%!ka6)JQtb`MC$1grkEflFQ>#HIB]kXok*9TAP\9-BBBGCijcX6;P%Ea;A`]%bjcO*7OC[F5
AE8e]j,RU/Nah%.@H*5Sieq7)MI>D"?f?iKiJ:k"LL/qo?/^KBi.YCnKNm>c>Mk!8hLSkeJ6C]W=P\C,
~>
/BitsPerSample 8 
/Encode [0 63 ]
/Decode [0 1 0 1 0 1 ]
/Size [64 ]
>>
]
/Bounds [1.89999e-07 ]
/Encode [0 1 0 1 ]
>>
>>/Gradient add_res /9 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[1.1274e-14 -184.12 184.12 1.1274e-14 227.826 455.678 ]ct
clp
/9 {
/0 /CSA get_res setcolorspace
<<
/NumSamples 256 
/NumComp 3 
/Scaling[[.00392157 0 ][.00392157 0 ][.00392157 0 ]]
/Samples[
<~kih6okih6okih6okih6okih6okih6okih6okih6okih6okih6okih6okih6okih6okih6okih6okih6o
kih3mkND$kkND$kkND$kkND$kkND$kkND$kkND$kkND$kkND$kkND!ik2tggk2tggk2tggk2tggk2tgg
k2tgfjlPUcjlPUcjlPUcjlPUbjQ,C_jQ,C_jQ,C_jQ,C_jQ,C^j5]1[j5]1[j5]1Zio8tWio8tWio8tV
iSibSiSibSiSibSi8EPOi8EPOi8EPOi8EPOi8EPOi8EPOhr!>Khr!>KhVR,GhVR,Gh;-oCh;-oCgt^]?
~>
<~R@0J2R@0J2R@0J2R@0J2R@0J2R@0J2R@0J2R@0J2R@0J2R@0J2R@0J2R@'A/R$a8.R$a8.R$a8.R$a8.
R$a8.R$a8.R$a8.R$a8.R$a8.R$a5,Q^=&*Q^=&*Q^=&*Q^=&*Q^=#(QBmi&QBmi&QBmf$Q'IW"Q'ISu
Pa%DsPa%DrPEV2nP*1ukP*1ujOcbcgOcbcfOH>QcOH>QcOH>QbO,o?^NfK-[NfK-ZNK&pWNK&pVN/W^R
Mi3LOMMd:KM2@(GLkpkCLkpkCLPLY?L5(G;KnY57KS5#3KS5#3K7ec-JUrB'J:N0#J:N0#It)orI=6Nl
~>
<~C2.KuC2.KuC2.KuC2.KuC2.KuC2.KuC2.KuC2.KuC2.KuC2.KuC2.KuC2.KuC2%BrBk_9qBk_9qBk_9q
Bk_9qBk_9qBk_9qBk_9qBk_9qBk_9qBk_9qBk_6oBP;'mBP;'mBP;'mBP;$kB4kjiB4kjiB4kjiB4kji
B4kjhAnGXeAnGXeAnGXdAS#FaAS#F`A7T4]A7T4\@q0"Y@q0"Y@q0"Y@q0"X@U`eT@:<SQ@:<SP?smAM
?smAM?smAM?XI/I?=$rE?=$rE?=$rE?!U`A>[1N=>?b<9>$>*5>$>*5>$>*5=]nm1=]nm1=BJ[-='&I)
~>
]
>>
0 0 1 0 []true true []
/DeviceRGB
GenStrips
} /Gradient add_res /9 /Gradient get_res exec grestore
}if
np
237.862 339.103 mo
217.772 339.103 li
216.603 339.103 215.656 338.156 215.656 336.987 cv
215.656 314.422 li
215.656 307.706 221.1 302.262 227.817 302.262 cv
234.533 302.262 239.977 307.706 239.977 314.422 cv
239.977 336.987 li
239.977 338.156 239.03 339.103 237.862 339.103 cv
level3{
gsave
clp
[2.22083e-15 -36.269 36.269 2.22083e-15 227.817 339.91 ]ct
/10 
<<
/ShadingType 2 
/ColorSpace /0 /CSA get_res
/Coords [0 0 1 0 ]
/Domain [0 1 ]
/Extend[ true true]
/Function
<<
/Domain[0 1 ] 
/FunctionType 3
/Functions [
<<
/Domain[0 1 ] 
/FunctionType 2
/C0 [.847059 .509804 .341176 ]
/C1 [.847059 .509804 .341176 ]
/N 1 
>>
<<
/Domain[0 1 ] 
/FunctionType 2
/C0 [.847059 .509804 .341176 ]
/C1 [.690196 .321569 .219608 ]
/N 2.06553 
>>
<<
/Domain[0 1 ] 
/FunctionType 2
/C0 [.690196 .321569 .219608 ]
/C1 [.690196 .321569 .219608 ]
/N 1 
>>
]
/Bounds [1.89999e-07 .998385 ]
/Encode [0 1 0 1 0 1 ]
>>
>>/Gradient add_res /10 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[2.22083e-15 -36.269 36.269 2.22083e-15 227.817 339.91 ]ct
clp
/10 {
/0 /CSA get_res setcolorspace
<<
/NumSamples 256 
/NumComp 3 
/Scaling[[.00392157 0 ][.00392157 0 ][.00392157 0 ]]
/Samples[
<~f[na,f@SX+f@SX+f@SX+f@SX+f@SX+f@SX+f@SX+f@SX+f@SX+f@SX*f%/F'f%/F'f%/F'f%/F'e^`4#
e^`4#e^`4#e^W*ueC<!teC<!te'ldpe'ldpe'landaHRldaHRkdF$@hdF$=fd*U.dd*U+bcd0q`cd'h]
cHa_[c-=MXc-4DUbfn;SbKJ)PbK@uMb0%iJaiVZGaN2HDaN)?Aa2Z-=`l?!:`Pog7`5KU3_o'C0_SX1,
_83t(^qdb$^V@Ou^:q=q]tM+m]Y(ni]=Y\d]"5J`\[f5[\@B#W\$i`R[^ENN['[3HZa7!DZEga?Z*:I:
~>
<~Jq8K(JUrB'JUrB'JUrB'JUrB'JUrB'JUrB'JUrB'JUrB'JUrB'J:N0#J:N0#J:N0#J:N0"It)rtIt)rt
It)rsIXZ`pIXZ`pIXQWmI=6NlI=6KjI!g<hI!g9fH[C*dH[:!aH?sm`H$O[\H$OXZG^+IXGB\7TGB\4R
G'8%OF`hhLFEDVHFE;MEF)uABEcQ2?EH,u;E,]c7Df9Q4DJj?0D/F-,Ci!p(CMR^#C2.KtBk_9pBP;$k
B4kggAn>ObARo=^@q0"X@U`eT@:<PO?sd8J?=$rD?!U]?>[(E:>$>'3=]ed.='&I(<`W4#<)cgq;c6Lk
~>
<~=&r@&<`W7%<`W7%<`W7%<`W7%<`W7%<`W7%<`W7%<`W7%<`W7%<`W7%<`W7%<`N."<E3%!<E3%!<E3%!
<E3%!<)cgr<)cgr<)cgr<)cgq;c?Un;c?Un;c?Um;GpCj;GpCj;Gp@h;,L1f;,L1f:f'tb:f'tb:esk_
:JXb^:JOY[:/4PZ:/+GW9he>V9MA,R9MA,Q91qoN91qlL8kM]J8P)KF8P)HD84Z9B7n6'>7n6$<7Rfj:
77BX6779O36psC06UO4-6:+"*5s[e&5sR\#5X7Ou5<h=q5!D.n4Ztqj4?P_g4$,Mc3]];_3B9)[3&ilW
~>
]
>>
0 0 1 0 []true true []
/DeviceRGB
GenStrips
} /Gradient add_res /10 /Gradient get_res exec grestore
}if
np
278.15 339.103 mo
263.138 339.103 li
262.164 339.103 261.375 338.156 261.375 336.987 cv
261.375 314.422 li
261.375 307.706 265.912 302.262 271.509 302.262 cv
271.509 302.262 li
273.337 302.262 275.051 302.842 276.532 303.858 cv
275.891 304.682 275.509 305.718 275.509 306.843 cv
275.509 332.668 li
275.509 335.176 276.516 337.449 278.15 339.103 cv
level3{
gsave
clp
[2.22083e-15 -36.269 36.269 2.22083e-15 271.509 339.91 ]ct
/10 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[2.22083e-15 -36.269 36.269 2.22083e-15 271.509 339.91 ]ct
clp
/10 /Gradient get_res exec grestore
}if
np
192.477 339.103 mo
175.736 339.103 li
174.762 339.103 173.973 338.156 173.973 336.987 cv
173.973 314.422 li
173.973 307.706 178.509 302.262 184.107 302.262 cv
189.704 302.262 194.241 307.706 194.241 314.422 cv
194.241 336.987 li
194.241 338.156 193.451 339.103 192.477 339.103 cv
level3{
gsave
clp
[2.22083e-15 -36.269 36.269 2.22083e-15 184.107 339.91 ]ct
/10 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[2.22083e-15 -36.269 36.269 2.22083e-15 184.107 339.91 ]ct
clp
/10 /Gradient get_res exec grestore
}if
np
148.593 340.604 mo
148.593 340.604 li
148.593 295.377 li
153.048 295.377 156.636 302.059 156.636 310.318 cv
156.636 310.318 li
156.636 302.059 153.048 295.377 148.593 295.377 cv
148.593 302.262 li
152.222 302.262 155.145 307.705 155.145 314.433 cv
155.145 336.987 li
155.145 338.146 154.641 339.103 154.011 339.103 cv
148.593 339.103 li
148.593 340.604 li
level3{
gsave
clp
[2.22081e-15 -36.2686 36.2686 2.22081e-15 152.615 339.91 ]ct
/10 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[2.22081e-15 -36.2686 36.2686 2.22081e-15 152.615 339.91 ]ct
clp
/10 /Gradient get_res exec grestore
}if
np
180.222 604.388 mo
173.394 604.388 li
173.146 604.388 172.903 604.369 172.665 604.332 cv
173.309 602.935 172.885 601.149 170.541 601.149 cv
170.541 601.149 169.774 601.149 168.938 601.309 cv
168.741 600.786 168.633 600.219 168.633 599.627 cv
168.633 595.325 li
168.633 592.695 166.501 590.563 163.871 590.563 cv
162.145 590.563 li
162.145 551.072 li
162.145 548.243 159.852 545.95 157.023 545.95 cv
157.023 545.95 li
157.023 545.95 157.023 545.95 157.023 545.95 cv
154.194 545.95 151.901 548.243 151.901 551.072 cv
151.901 590.563 li
134.389 590.563 li
132.618 590.563 131.073 591.53 130.253 592.965 cv
130.253 508.55 li
130.253 504.33 127.564 500.738 123.807 499.394 cv
121.855 498.694 120.515 496.899 120.484 494.827 cv
120.497 495.587 120.734 496.285 121.064 496.931 cv
215.704 498.714 li
214.971 499.552 214.527 500.648 214.527 501.848 cv
214.527 523.033 li
214.527 530.245 220.374 536.092 227.585 536.092 cv
228.234 536.092 li
228.295 541.47 li
228.295 541.479 228.295 541.489 228.296 541.498 cv
228.296 552.873 li
228.296 554.162 229.34 555.207 230.629 555.207 cv
236.864 555.207 li
236.864 604.334 li
234.574 603.99 232.818 602.014 232.818 599.627 cv
232.818 595.325 li
232.818 592.695 230.686 590.563 228.056 590.563 cv
218.787 590.563 li
218.787 551.072 li
218.787 551.072 li
218.787 548.243 216.494 545.95 213.665 545.95 cv
210.836 545.95 208.543 548.243 208.543 551.072 cv
208.543 590.563 li
198.574 590.563 li
195.945 590.563 193.813 592.695 193.813 595.325 cv
193.813 599.627 li
193.813 601.764 192.405 603.572 190.466 604.174 cv
190.466 551.072 li
190.466 548.287 188.244 546.022 185.476 545.952 cv
185.432 545.951 185.388 545.95 185.344 545.95 cv
182.515 545.95 180.222 548.243 180.222 551.072 cv
180.222 604.388 li
168.089 570.361 mo
167.753 570.361 167.208 570.469 167.084 571.146 cv
167.044 571.363 167.243 571.448 167.542 571.448 cv
168.073 571.448 168.921 571.182 169.322 570.916 cv
169.724 570.65 169.679 570.384 168.426 570.384 cv
168.404 570.384 168.382 570.385 168.359 570.385 cv
168.359 570.385 168.247 570.361 168.089 570.361 cv
182.333 535.129 mo
182.333 535.129 178.277 535.633 180.887 537.746 cv
181.352 538.122 181.842 538.277 182.3 538.277 cv
184.252 538.277 185.657 535.488 182.333 535.129 cv
190.988 523.38 mo
189.043 523.38 183.663 523.792 187.668 528.644 cv
188.321 529.436 189.128 529.759 189.955 529.759 cv
193.443 529.759 197.298 524.009 191.64 523.397 cv
191.64 523.397 191.386 523.38 190.988 523.38 cv
147.674 520.802 mo
147.408 520.802 145.388 520.852 145.853 522.367 cv
146.179 523.432 146.775 523.824 147.402 523.824 cv
148.276 523.824 149.211 523.062 149.561 522.3 cv
149.912 521.538 149.678 520.775 148.216 520.775 cv
148.059 520.775 147.888 520.784 147.702 520.803 cv
147.702 520.803 147.692 520.802 147.674 520.802 cv
273.951 510.911 mo
258.293 510.911 li
255.663 510.911 253.532 508.779 253.532 506.15 cv
253.532 501.849 li
253.532 500.959 253.288 500.127 252.864 499.415 cv
279.124 499.91 li
278.86 500.502 278.713 501.158 278.713 501.848 cv
278.713 506.15 li
278.713 508.779 276.581 510.911 273.951 510.911 cv
level3{
gsave
clp
[1.4561e-14 237.8 -237.8 1.4561e-14 227.826 500.311 ]ct
/11 
<<
/ShadingType 2 
/ColorSpace /0 /CSA get_res
/Coords [0 0 1 0 ]
/Domain [0 1 ]
/Extend[ true true]
/Function
<<
/Domain[0 1 ] 
/FunctionType 3
/Functions [
<<
/Domain[0 1 ] 
/FunctionType 2
/C0 [.952941 .745098 .564706 ]
/C1 [.952941 .745098 .564706 ]
/N 1 
>>
<<
/Domain[0 1 ] 
/FunctionType 2
/C0 [1 .85098 .658824 ]
/C1 [.952941 .745098 .564706 ]
/N 4.97729 
>>
]
/Bounds [1.89999e-07 ]
/Encode [0 1 1 0 ]
>>
>>/Gradient add_res /11 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[1.4561e-14 237.8 -237.8 1.4561e-14 227.826 500.311 ]ct
clp
/11 {
/0 /CSA get_res setcolorspace
<<
/NumSamples 256 
/NumComp 3 
/Scaling[[.00392157 0 ][.00392157 0 ][.00392157 0 ]]
/Samples[
<~oCMSFoCV\Io^qhLp%A"Op@e4Rp@n=Up\4FWq"XXZq"X[\q>'j^q>'m`qYL'bqYL'cqtp9fqtp9fqtp9g
r;?Kjr;?Kjr;?Kjr;?NlrVc]nrVc]nrVc]nrVc]nrVc]nrVlfqrr2orrr2orrr2orrr2orrr2orrr2or
rr2orrr2orrr2orrr2orrr2orrr2orrr2orrr2orrr2orrr2orrr2orrr2orrr2orrr2orrr2orrr2or
rr2orrr2orrr2orrr2orrr2orrr2orrr2orrr2orrr2orrr2orrr2orrr2orrr2orrr2orrr2orrr2or
~>
<~^:q@s^qde&_8=(,_o0L4`Poj:`lH-@aN2KFai_cKbKJ)Qbfn;Uc-=MYcHa_]cd0qad*U.ddF$@hdF-Ik
daHRme'ldpe'lgreC<!teC<%!e^`4#e^`4#f%/F'f%/F'f%/F'f%8O*f@SX+f@SX+f@SX+f@SX+f\"j/
f\"j/f\"j/f\"j/f\"j/f\"j/f\"j/f\"j/f\"j/f\"j/f\"j/f\"j/f\"j/f\"j/f\"j/f\"j/f\"j/
f\"j/f\"j/f\"j/f\"j/f\"j/f\"j/f\"j/f\"j/f\"j/f\"j/f\"j/f\"j/f\"j/f\"j/f\"j/f\"j/
~>
<~OH>QdOcklkPEV5qQ'IW#QBml(Q^F/-R@0J3R[T_8S"#q<S=H.@SXl@DSt;RHT:_aKTV.sNTV8'QTqS0S
U8"BVU8"EXUSFTZUSFW\Unjf^Unjf^V5:#bV5:#bV5:#bV5C,eVP^5fVP^5fVP^5fVP^5fVPg>iVl-Gj
Vl-GjVl-GjVl-GjVl-GjVl-GjVl-GjVl-GjVl-GjVl-GjVl-GjVl-GjVl-GjVl-GjVl-GjVl-GjVl-Gj
Vl-GjVl-GjVl-GjVl-GjVl-GjVl-GjVl-GjVl-GjVl-GjVl-GjVl-GjVl-GjVl-GjVl-GjVl-GjVl-Gj
~>
]
>>
0 0 1 0 []true true []
/DeviceRGB
GenStrips
} /Gradient add_res /11 /Gradient get_res exec grestore
}if
np
120.484 494.827 mo
120.484 494.821 120.484 494.815 120.484 494.808 cv
120.42 489.15 li
120.484 494.808 li
120.484 494.815 120.484 494.821 120.484 494.827 cv
.980392 .901961 .862745 rgb
f
279.124 499.91 mo
252.864 499.415 li
252.033 498.021 250.511 497.087 248.771 497.087 cv
219.288 497.087 li
217.859 497.087 216.577 497.717 215.704 498.714 cv
121.064 496.931 li
120.734 496.285 120.497 495.587 120.484 494.827 cv
120.484 494.821 120.484 494.815 120.484 494.808 cv
120.42 489.15 li
147.039 489.15 li
173.535 489.15 li
214.577 489.15 li
227.825 489.15 li
241.073 489.15 li
282.116 489.15 li
294.636 489.15 li
294.636 497.087 li
283.474 497.087 li
281.534 497.087 279.866 498.246 279.124 499.91 cv
level3{
gsave
clp
[1.4561e-14 237.8 -237.8 1.4561e-14 227.826 500.311 ]ct
/12 
<<
/ShadingType 2 
/ColorSpace /0 /CSA get_res
/Coords [0 0 1 0 ]
/Domain [0 1 ]
/Extend[ true true]
/Function
<<
/Domain[0 1 ] 
/FunctionType 3
/Functions [
<<
/Domain[0 1 ] 
/Range[0 1 0 1 0 1 ] 
/FunctionType 0
/Order 1 
/DataSource <~m]1a'X*j?9I."%_m]1a'X*j?9I."%_m]1a'X*j?9I."%_m]1a'X*j?9I."%_m]1a'X*j?9I."%_m]1a'
X*j?9I."%_m]1a'X*j?9I."%_m]1a'X*j?9I."%_m]1a'X*j?9I."%_m]1a'X*j?9I."%_m]1a'X*j?9
I."%_m]1a'X*j?9I."%_m]1a'X*j?9I."%_m]1a'X*j?9I."%_m]1a'X*j?9I."%_m]1a'X*j?9I."%_
~>
/BitsPerSample 8 
/Encode [0 63 ]
/Decode [0 1 0 1 0 1 ]
/Size [64 ]
>>
<<
/Domain[0 1 ] 
/Range[0 1 0 1 0 1 ] 
/FunctionType 0
/Order 1 
/DataSource <~qS\Nm`0'o7Oo!"YqS\Nm`0'o7Oo!"YqS\Nm`0'o7Oo!"YqS\Nm`0'o7Oo!"YqS\Nm`0'o7Oo!"YqS\Nm
`0'o7Oo!"YqS\Nm`0'o7Oo!"YqS\Nm_iX`4OSZkVqSSEk_iX]3OSQeUq8/6h_N4N0O86YRq8&*e_2e<+
NqgDLpqMg`^Q&!%NVC/GpUuO[]o2TsMY=]?ot-(R\qp!gL\/'2o<sDF[=n+WKCQ:"nZdZ7YCQ)DIdX7a
~>
/BitsPerSample 8 
/Encode [0 63 ]
/Decode [0 1 0 1 0 1 ]
/Size [64 ]
>>
]
/Bounds [1.89999e-07 ]
/Encode [0 1 1 0 ]
>>
>>/Gradient add_res /12 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[1.4561e-14 237.8 -237.8 1.4561e-14 227.826 500.311 ]ct
clp
/12 {
/0 /CSA get_res setcolorspace
<<
/NumSamples 256 
/NumComp 3 
/Scaling[[.00392157 0 ][.00392157 0 ][.00392157 0 ]]
/Samples[
<~mI'E1mdKW5n*oi9nF5r:nF?&=nac8Ao()ABo(2JEoCMSFoCV\Io^qeJo_%nMp%A"Np%J+Qp@e4Rp@e4R
p@e4Rp@e7Tp\4FVp\4FVp\4FVp\4IXq"XXZq"XXZq"XXZq"XXZq"XXZq"XXZq"XXZq"X[\q>'j^q>'j^
q>'j^q>'j^q>'j^q>'j^q>'j^q>'j^q>'j^q>'j^q>'j^q>'j^q>'j^q>'j^q>'j^q>'j^q>'j^q>'j^
q>'j^q>'j^q>'j^q>'j^q>'j^q>'j^q>'j^q>'j^q>'j^q>'j^q>'j^q>'j^q>'j^q>'j^q>'j^q>'j^
~>
<~WiN2%XKAV-Y-5%5Yd(I=ZEgdAZEpmE['d<L[C3NP[^W`T\%&rY\[oA`]">Sd]=Y\e]=beh]Y(ni]Y2"l
]tM+m]tM.o^:q=q^:q@s^V@Ou^V@S"^qdb$^qde&_83t(_83t(_83t(_84"*_SX1,_SX1,_SX1,_SX1,
_SX1,_SX1,_SX1-_o'C0_o'C0_o'C0_o'C0_o'C0_o'C0_o'C0_o'C0_o'C0_o'C0_o'C0_o'C0_o'C0
_o'C0_o'C0_o'C0_o'C0_o'C0_o'C0_o'C0_o'C0_o'C0_o'C0_o'C0_o'C0_o'C0_o'C0_o'C0_o'C0
~>
<~H[L3hI=?WpIt3'"J:W9&JV&K*JqJ].K7no3Knb>:L5(G;L51P>LPUbBLl$tFM2@(GM2I1JMMmCNMi3LO
Mi3OQN/W^SN/W^SN/W^SN/WaUNK&pWNK&pWNK&sYNfK-[NfK-[NfK0]O,o?_O,o?_O,o?_O,o?_O,o?_
O,o?_O,o?_O,o?`OH>QcOH>QcOH>QcOH>QcOH>QcOH>QcOH>QcOH>QcOH>QcOH>QcOH>QcOH>QcOH>Qc
OH>QcOH>QcOH>QcOH>QcOH>QcOH>QcOH>QcOH>QcOH>QcOH>QcOH>QcOH>QcOH>QcOH>QcOH>QcOH>Qc
~>
]
>>
0 0 1 0 []true true []
/DeviceRGB
GenStrips
} /Gradient add_res /12 /Gradient get_res exec grestore
}if
np
294.636 489.15 mo
282.116 489.15 li
241.073 489.15 li
227.825 489.15 li
214.577 489.15 li
173.535 489.15 li
147.039 489.15 li
120.42 489.15 li
119.92 489.15 li
112.23 489.15 105.996 482.917 105.996 475.227 cv
105.996 453.117 li
105.996 450.351 108.239 448.108 111.006 448.108 cv
137.141 448.108 li
142.029 448.108 li
144.796 448.108 147.039 450.351 147.039 453.118 cv
147.039 457.645 li
147.039 460.411 149.281 462.654 152.049 462.654 cv
168.525 462.654 li
171.292 462.654 173.535 460.411 173.535 457.645 cv
173.535 453.118 li
173.535 450.351 175.777 448.108 178.545 448.108 cv
192.279 448.108 li
209.567 448.108 li
212.334 448.108 214.577 450.351 214.577 453.118 cv
214.577 457.645 li
214.577 460.411 216.821 462.654 219.588 462.654 cv
227.825 462.654 li
236.064 462.654 li
238.831 462.654 241.073 460.411 241.073 457.645 cv
241.073 453.117 li
241.073 450.351 243.316 448.108 246.083 448.108 cv
277.106 448.108 li
279.873 448.108 282.116 450.351 282.116 453.118 cv
282.116 457.645 li
282.116 460.411 284.359 462.654 287.126 462.654 cv
294.636 462.654 li
294.636 489.15 li
281.944 480.222 mo
281.601 480.222 281.048 480.378 280.923 481.35 cv
280.882 481.663 281.085 481.785 281.39 481.785 cv
281.931 481.785 282.794 481.403 283.202 481.021 cv
283.611 480.639 283.566 480.256 282.29 480.256 cv
282.267 480.256 282.244 480.257 282.221 480.257 cv
282.221 480.257 282.106 480.222 281.944 480.222 cv
197.914 474.844 mo
196.635 474.844 193.103 475.115 195.734 478.303 cv
196.163 478.823 196.693 479.036 197.237 479.036 cv
199.529 479.036 202.063 475.257 198.344 474.855 cv
198.344 474.855 198.177 474.844 197.914 474.844 cv
186.692 469.032 mo
186.692 469.032 182.589 469.032 185.2 471.146 cv
185.631 471.496 186.043 471.637 186.408 471.637 cv
187.88 471.638 188.584 469.331 186.692 469.032 cv
204.075 469.553 mo
203.732 469.553 203.178 469.709 203.051 470.682 cv
203.011 470.994 203.213 471.116 203.519 471.116 cv
204.06 471.117 204.923 470.734 205.332 470.352 cv
205.741 469.97 205.696 469.587 204.42 469.587 cv
204.397 469.587 204.374 469.588 204.351 469.588 cv
204.351 469.588 204.236 469.553 204.075 469.553 cv
259.54 463.358 mo
259.172 463.358 256.421 463.437 257.055 465.815 cv
257.501 467.488 258.314 468.103 259.169 468.103 cv
260.362 468.104 261.638 466.906 262.117 465.709 cv
262.596 464.512 262.278 463.315 260.283 463.315 cv
260.068 463.315 259.835 463.329 259.58 463.358 cv
259.58 463.358 259.566 463.358 259.54 463.358 cv
120.985 456.936 mo
119.04 456.936 113.66 457.348 117.665 462.199 cv
118.319 462.992 119.125 463.315 119.952 463.315 cv
123.44 463.315 127.296 457.565 121.637 456.953 cv
121.637 456.953 121.383 456.936 120.985 456.936 cv
level3{
gsave
clp
[243.659 0 0 243.659 105.996 468.629 ]ct
/5 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[243.659 0 0 243.659 105.996 468.629 ]ct
clp
/5 /Gradient get_res exec grestore
}if
np
240.145 340.596 mo
215.488 340.596 li
214.054 340.596 212.891 339.432 212.891 337.998 cv
212.891 310.303 li
212.891 302.06 219.573 295.378 227.817 295.378 cv
236.06 295.378 242.742 302.06 242.742 310.303 cv
242.742 337.998 li
242.742 339.432 241.579 340.596 240.145 340.596 cv
227.817 302.262 mo
221.1 302.262 215.656 307.706 215.656 314.422 cv
215.656 336.987 li
215.656 338.156 216.603 339.103 217.772 339.103 cv
237.862 339.103 li
239.03 339.103 239.977 338.156 239.977 336.987 cv
239.977 314.422 li
239.977 307.706 234.533 302.262 227.817 302.262 cv
level3{
gsave
clp
[2.22083e-15 -36.269 36.269 2.22083e-15 227.817 339.91 ]ct
/13 
<<
/ShadingType 2 
/ColorSpace /0 /CSA get_res
/Coords [0 0 1 0 ]
/Domain [0 1 ]
/Extend[ true true]
/Function
<<
/Domain[0 1 ] 
/FunctionType 3
/Functions [
<<
/Domain[0 1 ] 
/Range[0 1 0 1 0 1 ] 
/FunctionType 0
/Order 1 
/DataSource <~`F:pJ@QVP<42kYj`F:pJ@QVP<42kYj`F:pJ@QVP<42kYj`F:pJ@QVP<42kYj`F:pJ@QVP<42kYj`F:pJ
@QVP<42kYj`F:pJ@QVP<42kYj`F:pJ@QVP<42kYj`F:pJ@QVP<42kYj`F:pJ@QVP<42kYj`F:pJ@QVP<
42kYj`F:pJ@QVP<42kYj`F:pJ@QVP<42kYj`F:pJ@QVP<42kYj`F:pJ@QVP<42kYj`F:pJ@QVP<42kYj
~>
/BitsPerSample 8 
/Encode [0 63 ]
/Decode [0 1 0 1 0 1 ]
/Size [64 ]
>>
<<
/Domain[0 1 ] 
/Range[0 1 0 1 0 1 ] 
/FunctionType 0
/Order 1 
/DataSource <~`F:pJ@QVP<42kYj`F:pJ@QVP<42kYj`*tgH@QMG:3lGJg`*k^E@62;73l>Ae_dGOB?ol/33l55a_-]4=
?TGo/35Ai[^g/q7>r]T(35/WW^0EV1>;s3!2S<3O]3.&(=Z3lp27cmI\Q:Vu<]%<e1q-I@[T#&k;_kaY
1:0q7ZV`H_:bf4N0X4D,YYHjT9J<PB0!.buX@b(F8M$l4/#c#hW(&;774P0&.A]B\Ud?K)5UW6j-_NXM
~>
/BitsPerSample 8 
/Encode [0 63 ]
/Decode [0 1 0 1 0 1 ]
/Size [64 ]
>>
<<
/Domain[0 1 ] 
/Range[0 1 0 1 0 1 ] 
/FunctionType 0
/Order 1 
/DataSource <~TKX]q4slpd-D3OLTKX]q4slpd-D3OLTKX]q4slpd-D3OLTKX]q4slpd-D3OLTKX]q4slpd-D3OLTKX]q
4slpd-D3OLTKX]q4slpd-D3OLTKX]q4slpd-D3OLTKX]q4slpd-D3OLTKX]q4slpd-D3OLTKX]q4slpd
-D3OLTKX]q4slpd-D3OLTKX]q4slpd-D3OLTKX]q4slpd-D3OLTKX]q4slpd-D3OLTKX]q4slpd-D3OL
~>
/BitsPerSample 8 
/Encode [0 63 ]
/Decode [0 1 0 1 0 1 ]
/Size [64 ]
>>
]
/Bounds [1.89999e-07 .998385 ]
/Encode [0 1 0 1 0 1 ]
>>
>>/Gradient add_res /13 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[2.22083e-15 -36.269 36.269 2.22083e-15 227.817 339.91 ]ct
clp
/13 {
/0 /CSA get_res setcolorspace
<<
/NumSamples 256 
/NumComp 3 
/Scaling[[.00392157 0 ][.00392157 0 ][.00392157 0 ]]
/Samples[
<~`5KU4`5KU4`5KU4`5KU4`5KU4`5KU4`5KU4`5KU4`5BL1_o'C0_o'C0_o'C0_o'C0_ns:-_SX1,_SX1,
_SX1,_SO()_83t(_83t(_83q&^qdb$^qd_"^V@Ou^V@Ou^V@Ls^:q=q^:q:o]tM+m]tM(k]Y(kg]=Y\e
]=YYc]"5Ja]"5Ja]"5G_\[f8\\@B&Y\@B&X\$riT[^NWP[C*EM[C*EL['[3HZa7!DZEgd@Z*CR<Yct@9
Yct@8YHP.4Y-+q0Xf\_,XK8M(X/i;%WiE)!WMukrW2QYnVl-DhV5:#bV5:#bUnjf^USFTZU8"?TTV.sN
~>
<~@:<SQ@:<SQ@:<SQ@:<SQ@:<SQ@:<SQ@:<SQ@:<SQ@:<SQ@:<SQ@:<SQ@:<SQ@:3JN?smAM?smAM?smAM
?sd8J?XI/I?XI,G?=$rE?=$rE?=$rE?=$rE?=$oC?!U]?>[1N=>[1K;>?b<9>?b<9>?b97>$>*5>$>'3
=]nj/=BJ[-=BJ[-=BJX+='&I(<`W7$<E3%!<E3$u<)cgq;c?Um;GpCi;,L1f;,L1e:f'ta:JXb]:/4PZ
:/4PY9h\5R91qoN91qoM8kM]I8P)KF84Z9B7n6'>7Rfj:77BX66psF26UO4.6:+"*5s[b$5<h@s5<h=q
~>
<~3]];_3]];_3]];_3]];_3]];_3]];_3]];_3]];_3]];_3]T2\3B9)[3B9)[3B9)[3B9)[3B9)[3B9)[
3B9)[3B9)[3B9)[3B9&Y3&ilW3&ilW3&iiU2`EZS2`EZS2`EZS2`EZS2`EZS2`EWQ2E!HO2E!EM2)R6K
2)R6K2)R6K2)R3I1c.$G1c.$F1G^gC1G^gC1G^gB1,:U?1,:U>0ekC;0ekC;0ekC:0JG170JG160/"t2
/hSb//hSb//hSb./M/P*/1`>'/1`>'.k<,#.Olnt.Olnt.Olnt.4H\p-n$Jl-n$Jl-RU8h-71&d-71&d
~>
]
>>
0 0 1 0 []true true []
/DeviceRGB
GenStrips
} /Gradient add_res /13 /Gradient get_res exec grestore
}if
np
280.076 340.596 mo
261.236 340.596 li
260.04 340.596 259.07 339.432 259.07 337.998 cv
259.07 310.303 li
259.07 302.06 264.639 295.378 271.509 295.378 cv
271.509 295.378 li
264.639 295.378 259.071 302.06 259.071 310.303 cv
259.071 337.998 li
259.071 339.432 260.04 340.596 261.236 340.596 cv
280.076 340.596 li
280.076 340.596 li
level3{
gsave
clp
[1.1274e-14 -184.12 184.12 1.1274e-14 227.826 455.678 ]ct
/14 
<<
/ShadingType 2 
/ColorSpace /0 /CSA get_res
/Coords [0 0 1 0 ]
/Domain [0 1 ]
/Extend[ true true]
/Function
<<
/Domain[0 1 ] 
/FunctionType 3
/Functions [
<<
/Domain[0 1 ] 
/Range[0 1 0 1 0 1 ] 
/FunctionType 0
/Order 1 
/DataSource <~h2l+%OCI%-@bm,Th2l+%OCI%-@bm,Th2l+%OCI%-@bm,Th2l+%OCI%-@bm,Th2l+%OCI%-@bm,Th2l+%
OCI%-@bm,Th2l+%OCI%-@bm,Th2l+%OCI%-@bm,Th2l+%OCI%-@bm,Th2l+%OCI%-@bm,Th2l+%OCI%-
@bm,Th2l+%OCI%-@bm,Th2l+%OCI%-@bm,Th2l+%OCI%-@bm,Th2l+%OCI%-@bm,Th2l+%OCI%-@bm,T
~>
/BitsPerSample 8 
/Encode [0 63 ]
/Decode [0 1 0 1 0 1 ]
/Size [64 ]
>>
<<
/Domain[0 1 ] 
/Range[0 1 0 1 0 1 ] 
/FunctionType 0
/Order 1 
/DataSource <~h2l+%OCI%-@bm,Th2l+%OCI%-@bm,Th2l+%OCI%-@bm)Sh2c"#O($k*@GQuQglGn!Na^_'@GHlNgl>dt
NaUY&@,-cMgl5^sNF:M"@,$WIgPfLoMdP4s?JCBEg5B:kMI,"n?J:6Afn`qeLg8Vg>hOm;fnWhcL0N>b
>M4[5fS!G\KNd#\=kA7-f7@&UJQUKR=4Vk&ep^ZMIT=pH<RlIre9b-DHW/C=;q#thdWeX;G>Zb1:sjD]
~>
/BitsPerSample 8 
/Encode [0 63 ]
/Decode [0 1 0 1 0 1 ]
/Size [64 ]
>>
]
/Bounds [1.89999e-07 ]
/Encode [0 1 0 1 ]
>>
>>/Gradient add_res /14 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[1.1274e-14 -184.12 184.12 1.1274e-14 227.826 455.678 ]ct
clp
/14 {
/0 /CSA get_res setcolorspace
<<
/NumSamples 256 
/NumComp 3 
/Scaling[[.00392157 0 ][.00392157 0 ][.00392157 0 ]]
/Samples[
<~gt^]?gt^]?gt^]?gt^]?gt^]?gt^]?gt^]?gt^]?gt^]?gt^]?gt^]?gt^]?gt^]?gt^]?gt^]?gt^]?
gt^Z=gY:K;gY:K;gY:K;gY:K;gY:K;gY:K;gY:K;gY:K;gY:K;gY:H9g=k97g=k97g=k97g=k97g=k97
g=k96g"G'3g"G'3g"G'3g"G'2f\"j/f\"j/f\"j/f\"j/f\"j/f\"j/f\"j/f\"j.f@SX+f@SX+f@SX*
f%/F'f%/F'f%/F'e^`4#e^`4#e^`4#eC<!teC<!teC<!te'ldpe'ldpdaHRldaHRldF$@hdF$@hd*U.d
~>
<~O,o?_O,o?_O,o?_O,o?_O,o?_O,o?_O,o?_O,o?_O,o?_O,o?_O,o?_O,f6\NfK-[NfK-[NfK-[NfK-[
NfK-[NfK*YNK&pWNK&pWNK&pWNK&pWNK&pWNK&pWNK&mUN/W^SN/W[QMi3LOMi3LOMi3IMMMd:KMMd:K
MMd:KMMd:JM2@(FLkpkCLkpkBLPLY?LPLY>L5(G;L5(G;L5(G:KnY56KS5#2K7ef/K7ef/K7ef.JqAT*
JUrB'J:N0#J:N0#It)rtIXZ`pI=6NlI=6NlI!g<hH[C*dH?sm`H?sj^G^+IXGB\7TGB\7TG'8"NFEDVH
~>
<~@:<SQ@:<SQ@:<SQ@:<SQ@:<SQ@:<SQ@:<SQ@:<SQ@:<SQ@:<SQ@:<SQ@:<SQ@:3JN?smAM?smAM?smAM
?smAM?smAM?smAM?sm>K?XI/I?XI/I?XI/I?XI/I?XI/I?XI/I?XI/I?XI,G?=$rE?=$rE?=$oC?!U`A
?!U`A?!U`A?!U`A?!U`@>[1N=>[1N<>?b<9>?b<9>?b<9>?b<8>$>*5>$>*4=]nm1=]nm1=]nm0=BJ[,
='&I)='&I)='&I)<`W7%<`W7%<E3%!<)cgr<)cgr;c?Un;GpCj;GpCj;GpCj;,L1f:f'tb:f'tb:JXb^
~>
]
>>
0 0 1 0 []true true []
/DeviceRGB
GenStrips
} /Gradient add_res /14 /Gradient get_res exec grestore
}if
np
280.076 340.596 mo
261.236 340.596 li
260.04 340.596 259.071 339.432 259.071 337.998 cv
259.071 310.303 li
259.071 302.06 264.639 295.378 271.509 295.378 cv
271.509 295.378 li
275.81 295.378 279.601 297.997 281.834 301.979 cv
280.373 301.979 li
278.811 301.979 277.422 302.714 276.532 303.858 cv
275.051 302.842 273.337 302.262 271.509 302.262 cv
271.509 302.262 li
265.912 302.262 261.375 307.706 261.375 314.422 cv
261.375 336.987 li
261.375 338.156 262.164 339.103 263.138 339.103 cv
278.15 339.103 li
278.721 339.682 279.368 340.185 280.076 340.596 cv
level3{
gsave
clp
[2.22083e-15 -36.269 36.269 2.22083e-15 271.509 339.91 ]ct
/13 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[2.22083e-15 -36.269 36.269 2.22083e-15 271.509 339.91 ]ct
clp
/13 /Gradient get_res exec grestore
}if
np
307.022 301.979 mo
300.343 301.979 li
301.785 297.995 304.234 295.377 307.022 295.377 cv
307.022 301.979 li
level3{
gsave
clp
[2.22081e-15 -36.2686 36.2686 2.22081e-15 303.001 339.91 ]ct
/13 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[2.22081e-15 -36.2686 36.2686 2.22081e-15 303.001 339.91 ]ct
clp
/13 /Gradient get_res exec grestore
}if
np
194.38 340.596 mo
173.833 340.596 li
172.637 340.596 171.669 339.432 171.669 337.998 cv
171.669 310.303 li
171.669 302.06 177.237 295.378 184.107 295.378 cv
190.976 295.378 196.545 302.06 196.545 310.303 cv
196.545 337.998 li
196.545 339.432 195.576 340.596 194.38 340.596 cv
184.107 302.262 mo
178.509 302.262 173.973 307.706 173.973 314.422 cv
173.973 336.987 li
173.973 338.156 174.762 339.103 175.736 339.103 cv
192.477 339.103 li
193.451 339.103 194.241 338.156 194.241 336.987 cv
194.241 314.422 li
194.241 307.706 189.704 302.262 184.107 302.262 cv
level3{
gsave
clp
[2.22083e-15 -36.269 36.269 2.22083e-15 184.107 339.91 ]ct
/13 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[2.22083e-15 -36.269 36.269 2.22083e-15 184.107 339.91 ]ct
clp
/13 /Gradient get_res exec grestore
}if
np
155.244 340.604 mo
148.593 340.604 li
148.593 339.103 li
154.011 339.103 li
154.641 339.103 155.145 338.146 155.145 336.987 cv
155.145 314.433 li
155.145 307.705 152.222 302.262 148.593 302.262 cv
148.593 295.377 li
153.048 295.377 156.636 302.059 156.636 310.318 cv
156.636 338.005 li
156.636 339.428 156.018 340.604 155.244 340.604 cv
level3{
gsave
clp
[2.22081e-15 -36.2686 36.2686 2.22081e-15 152.615 339.91 ]ct
/13 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[2.22081e-15 -36.2686 36.2686 2.22081e-15 152.615 339.91 ]ct
clp
/13 /Gradient get_res exec grestore
}if
np
240.221 185.562 mo
241.624 185.527 242.751 184.377 242.751 182.966 cv
242.751 184.378 241.624 185.527 240.221 185.562 cv
215.43 185.562 mo
214.027 185.527 212.9 184.378 212.9 182.966 cv
212.9 184.377 214.027 185.527 215.43 185.562 cv
237.87 184.071 mo
217.781 184.071 li
216.612 184.071 215.665 183.124 215.665 181.955 cv
215.665 159.39 li
215.665 152.673 221.109 147.229 227.825 147.229 cv
234.542 147.229 239.986 152.673 239.986 159.39 cv
239.986 181.955 li
239.986 183.124 239.039 184.071 237.87 184.071 cv
level3{
gsave
clp
[2.31506e-15 -37.8079 37.8079 2.31506e-15 227.826 187.878 ]ct
/10 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[2.31506e-15 -37.8079 37.8079 2.31506e-15 227.826 187.878 ]ct
clp
/10 /Gradient get_res exec grestore
}if
np
212.901 155.126 mo
212.979 146.949 219.63 140.345 227.825 140.345 cv
219.631 140.345 212.979 146.949 212.901 155.126 cv
level3{
gsave
clp
[1.00234e-14 163.696 -163.696 1.00234e-14 227.816 52.3047 ]ct
/15 
<<
/ShadingType 2 
/ColorSpace /0 /CSA get_res
/Coords [0 0 1 0 ]
/Domain [0 1 ]
/Extend[ true true]
/Function
<<
/Domain[0 1 ] 
/FunctionType 3
/Functions [
<<
/Domain[0 1 ] 
/Range[0 1 0 1 0 1 ] 
/FunctionType 0
/Order 1 
/DataSource <~kbN7_UiP[pEp0<>kbN7_UiP[pEp0<>kbN7_UiP[pEp0<>kbN7_UiP[pEp0<>kbN7_UiP[pEp0<>kbN7_
UiP[pEp0<>kbN7_UiP[pEp0<>kbN7_UN,LmETj0;kbE.]UN,IlETa*:kG*%[UN,IlETa*:kFuqYU2]7g
E9<j4k+HYTTPrqbDrmX0je$GPSo*PZD<.7)j.1#HS87/RCZCjuigFN?QtYHFBAf(fi07g1P@WO4A)35U
~>
/BitsPerSample 8 
/Encode [0 63 ]
/Decode [0 1 0 1 0 1 ]
/Size [64 ]
>>
]
/Bounds []
/Encode [0 1 ]
>>
>>/Gradient add_res /15 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[1.00234e-14 163.696 -163.696 1.00234e-14 227.816 52.3047 ]ct
clp
/15 {
/0 /CSA get_res setcolorspace
<<
/NumSamples 256 
/NumComp 3 
/Scaling[[.00392157 0 ][.00392157 0 ][.00392157 0 ]]
/Samples[
<~kND$kkND$kkND$kkND$kkND$kkND$kkND$kkND$kkND$kkND$kkND$kkND$kkND$kkND$kkND$kkND$k
kND$kkND$kkND$kkND$kkND$kkND$kkND$kkND$kkND$kkND$kkND$kkND$kkND$kkND$kkND$kkND$k
kND$kkND$kkND$jk2tggk2tggk2tggk2tggk2tggk2tggk2tggk2tgfjlPUcjlPUcjlPUcjlPUbjQ,C_
jQ,C_jQ,C_jQ,C_j5]1[j5]1[io8tWio8tWio8tWio8tWiSibSiSibSi8EPOhr!>Khr!>KhVR,Gh;-oC
~>
<~USFTZUSFTZUSFTZUSFTZUSFTZUSFTZUSFTZUSFTZUSFTZUSFTZUSFTZUSFTZUSFTZUSFTZUSFTZUSFTZ
USFTZUSFTZUSFTZUSFTZUSFTZUSFTZUSFTZUSFTZUSFTZUSFTZUSFTZUSFTZUSFTZUSFQXU8"BVU8"BV
U8"BVU8"BVU8"BVU8"BVU8"BVU8"BVU8"BVU8"BVU8"BUTqS0RTqS0QTV.sNTV.sMT:_aJT:_aJT:_aJ
T:_aJSt;OFSXl=BS=H+>S=H+>S=H+>S"#k8R@0J2R@0J2R$a8.Q^=&*QBmi&Q'ISuPEV2oP*1riOH>Qc
~>
<~EH,u<EH,u<EH,u<EH,u<EH,u<EH,u<EH,u<EH,u<EH,u<EH,u<EH,u<EH,u<EH,u<EH,u<EH,u<EH,u<
EH,u<EH,u<EH,u<EH,u<EH,u<EH,u<EH,u<EH,u<EH,u<EH,u<EH,u<EH,u<EH,u<EH,r:E,]c8E,]c8
E,]c8E,]c8E,]c8E,]c8E,]c8E,]c8E,]c8E,]c8E,]c7Df9Q4Df9Q4Df9Q3DJj?0DJj?0DJj?0DJj?/
D/F-,D/F-,Ci!p(Ci!p(Ci!p(CMR^$C2.KuC2.KuBk_9qBP;'mB4kjiAnGXeAS#FaA7T4]@q0"Y@U`eU
~>
]
>>
0 0 1 0 []true true []
/DeviceRGB
GenStrips
} /Gradient add_res /15 /Gradient get_res exec grestore
}if
np
240.153 185.563 mo
215.497 185.563 li
215.475 185.563 215.452 185.563 215.43 185.562 cv
214.027 185.527 212.9 184.377 212.9 182.966 cv
212.9 182.966 li
212.9 155.27 li
212.9 155.222 212.9 155.174 212.901 155.126 cv
212.979 146.949 219.631 140.345 227.825 140.345 cv
227.825 140.345 li
236.069 140.345 242.751 147.027 242.751 155.27 cv
242.751 182.966 li
242.751 182.966 li
242.751 184.377 241.624 185.527 240.221 185.562 cv
240.198 185.563 240.176 185.563 240.153 185.563 cv
227.825 147.229 mo
221.109 147.229 215.665 152.673 215.665 159.39 cv
215.665 181.955 li
215.665 183.124 216.612 184.071 217.781 184.071 cv
237.87 184.071 li
239.039 184.071 239.986 183.124 239.986 181.955 cv
239.986 159.39 li
239.986 152.673 234.542 147.229 227.825 147.229 cv
level3{
gsave
clp
[2.31506e-15 -37.8079 37.8079 2.31506e-15 227.826 187.878 ]ct
/13 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[2.31506e-15 -37.8079 37.8079 2.31506e-15 227.826 187.878 ]ct
clp
/13 /Gradient get_res exec grestore
}if
np
293.566 238.236 mo
293.528 238.235 293.49 238.235 293.451 238.233 cv
293.49 238.235 293.528 238.235 293.566 238.236 cv
293.412 238.232 mo
293.403 238.232 293.395 238.231 293.386 238.231 cv
293.395 238.231 293.403 238.232 293.412 238.232 cv
290.496 236.955 mo
290.494 236.953 290.492 236.951 290.491 236.949 cv
290.492 236.951 290.494 236.953 290.496 236.955 cv
290.484 236.942 mo
290.48 236.938 290.476 236.934 290.472 236.931 cv
290.476 236.935 290.48 236.938 290.484 236.942 cv
290.469 236.928 mo
289.718 236.166 289.243 235.131 289.207 233.986 cv
289.243 235.131 289.718 236.166 290.469 236.928 cv
289.204 233.874 mo
289.204 233.864 289.204 233.854 289.204 233.844 cv
289.204 233.854 289.204 233.864 289.204 233.874 cv
166.046 113.847 mo
166.037 113.847 li
165.378 112.376 163.939 111.331 162.243 111.251 cv
163.941 111.331 165.387 112.374 166.046 113.847 cv
162.243 111.251 mo
162.236 111.251 162.23 111.251 162.224 111.25 cv
162.23 111.251 162.236 111.251 162.243 111.251 cv
162.219 111.25 mo
162.208 111.25 162.197 111.249 162.187 111.249 cv
162.197 111.249 162.208 111.25 162.219 111.25 cv
162.18 111.249 mo
162.176 111.249 162.172 111.249 162.168 111.248 cv
162.172 111.249 162.176 111.249 162.18 111.249 cv
162.155 111.248 mo
162.151 111.248 162.147 111.248 162.143 111.248 cv
162.147 111.248 162.151 111.248 162.155 111.248 cv
162.127 111.247 mo
162.124 111.247 162.121 111.247 162.118 111.247 cv
162.121 111.247 162.124 111.247 162.127 111.247 cv
162.095 111.247 mo
162.092 111.247 162.089 111.247 162.086 111.247 cv
162.089 111.247 162.092 111.247 162.095 111.247 cv
162.068 111.247 mo
162.066 111.247 162.063 111.247 162.06 111.247 cv
162.063 111.247 162.066 111.247 162.068 111.247 cv
.980392 .901961 .862745 rgb
f
292.66 242.084 mo
282.92 242.084 li
281.285 242.084 279.958 240.758 279.958 239.122 cv
279.958 236.435 li
279.958 234.787 278.615 233.474 276.997 233.474 cv
258.616 233.474 li
256.998 233.474 255.655 234.787 255.655 236.435 cv
255.655 239.122 li
255.655 240.74 254.342 242.084 252.693 242.084 cv
242.953 242.084 li
241.301 242.084 239.961 240.744 239.961 239.092 cv
239.961 236.435 li
239.961 234.8 238.635 233.474 236.999 233.474 cv
218.649 233.474 li
217.014 233.474 215.688 234.8 215.688 236.435 cv
215.688 239.122 li
215.688 240.751 214.355 242.084 212.726 242.084 cv
202.956 242.084 li
201.32 242.084 199.994 240.758 199.994 239.122 cv
199.994 236.435 li
199.994 234.787 198.651 233.474 197.033 233.474 cv
186.98 233.474 li
192.323 233.298 li
192.574 233.414 192.84 233.466 193.109 233.466 cv
193.45 233.466 193.796 233.382 194.126 233.239 cv
260.456 231.059 li
263.101 230.98 265.4 229.566 266.713 227.475 cv
289.204 227.475 li
289.204 233.844 li
289.204 233.844 li
289.204 233.844 li
289.204 233.854 289.204 233.864 289.204 233.874 cv
289.205 233.911 289.205 233.949 289.207 233.986 cv
289.243 235.131 289.718 236.166 290.469 236.928 cv
290.47 236.929 290.471 236.93 290.472 236.931 cv
290.476 236.934 290.48 236.938 290.484 236.942 cv
290.486 236.945 290.488 236.947 290.491 236.949 cv
290.492 236.951 290.494 236.953 290.496 236.955 cv
291.244 237.7 292.26 238.178 293.386 238.231 cv
293.395 238.231 293.403 238.232 293.412 238.232 cv
293.425 238.232 293.438 238.233 293.451 238.233 cv
293.49 238.235 293.528 238.235 293.566 238.236 cv
293.576 238.236 293.586 238.236 293.596 238.236 cv
293.696 238.236 li
294.399 238.236 295.063 238.401 295.652 238.694 cv
295.652 239.092 li
295.652 240.738 294.305 242.084 292.66 242.084 cv
289.204 221.945 mo
267.872 221.945 li
267.827 214.739 li
289.204 214.739 li
289.204 221.945 li
289.204 209.208 mo
267.791 209.208 li
267.746 202.002 li
289.204 202.002 li
289.204 209.208 li
289.204 196.472 mo
267.71 196.472 li
267.503 163.789 li
268.588 163.18 269.033 161.736 267.486 161.142 cv
267.429 152.208 li
267.429 150.209 266.943 148.241 266.014 146.471 cv
257.816 130.858 li
257.143 129.577 256.702 128.187 256.51 126.753 cv
255.709 120.753 250.675 116.22 244.625 116.051 cv
166.046 113.847 li
165.387 112.374 163.941 111.331 162.243 111.251 cv
162.243 111.251 162.243 111.251 162.243 111.251 cv
162.236 111.251 162.23 111.251 162.224 111.25 cv
162.222 111.25 162.22 111.25 162.219 111.25 cv
162.208 111.25 162.197 111.249 162.187 111.249 cv
162.185 111.249 162.182 111.249 162.18 111.249 cv
162.176 111.249 162.172 111.249 162.168 111.248 cv
162.163 111.248 162.159 111.248 162.155 111.248 cv
162.151 111.248 162.147 111.248 162.143 111.248 cv
162.138 111.248 162.132 111.248 162.127 111.247 cv
162.124 111.247 162.121 111.247 162.118 111.247 cv
162.111 111.247 162.103 111.247 162.095 111.247 cv
162.092 111.247 162.089 111.247 162.086 111.247 cv
162.08 111.247 162.074 111.247 162.068 111.247 cv
162.066 111.247 162.063 111.247 162.06 111.247 cv
162.052 111.246 162.043 111.246 162.035 111.246 cv
162.035 111.246 li
293.596 111.246 li
291.171 111.246 289.204 113.212 289.204 115.639 cv
289.204 196.472 li
level3{
gsave
clp
[1.00234e-14 163.696 -163.696 1.00234e-14 227.816 52.3047 ]ct
/6 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[1.00234e-14 163.696 -163.696 1.00234e-14 227.816 52.3047 ]ct
clp
/6 /Gradient get_res exec grestore
}if
np
289.204 202.002 mo
267.746 202.002 li
267.71 196.472 li
289.204 196.472 li
289.204 202.002 li
level3{
gsave
clp
[1.00234e-14 163.696 -163.696 1.00234e-14 227.816 52.3047 ]ct
/16 
<<
/ShadingType 2 
/ColorSpace /0 /CSA get_res
/Coords [0 0 1 0 ]
/Domain [0 1 ]
/Extend[ true true]
/Function
<<
/Domain[0 1 ] 
/FunctionType 3
/Functions [
<<
/Domain[0 1 ] 
/Range[0 1 0 1 0 1 ] 
/FunctionType 0
/Order 1 
/DataSource <~os&r<Z$l;MIJ'jnos&r<Z$l;MIJ'jnos&r<Z$l;MIJ'jnos&r<Z$l;MIJ'jnos&r<Z$l;MIJ'jnos&r<
Z$l;MIJ'jnos&r<Z$l;MIJ'jnos&r<Y^H,JI.a^korri:Y^H)II.XXjoWNZ7YC#oFHh=LgoWEQ5Y']cB
Hh4@co;m90XEsH<HLe+^nu@!+Wd+'6GO_\Wn>UU#W-.R+FRQ&Jm\FsmUN5aqEU9B<m%A:_So3h`D<[L)
~>
/BitsPerSample 8 
/Encode [0 63 ]
/Decode [0 1 0 1 0 1 ]
/Size [64 ]
>>
]
/Bounds []
/Encode [0 1 ]
>>
>>/Gradient add_res /16 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[1.00234e-14 163.696 -163.696 1.00234e-14 227.816 52.3047 ]ct
clp
/16 {
/0 /CSA get_res setcolorspace
<<
/NumSamples 256 
/NumComp 3 
/Scaling[[.00392157 0 ][.00392157 0 ][.00392157 0 ]]
/Samples[
<~o^qeJo^qeJo^qeJo^qeJo^qeJo^qeJo^qeJo^qeJo^qeJo^qeJo^qeJo^qeJo^qeJo^qeJo^qeJo^qeJ
o^qeJo^qeJo^qeJo^qeJo^qeJo^qeJo^qeJo^qeJo^qeJo^qeJo^qeJo^qeJo^qeJo^qeJo^qeJo^qeJ
o^qeJo^qeJo^qeIoCMSFoCMSFoCMSFoCMSFoCMSFoCMSFoCMSFoCMSEo()ABo()ABo()ABo()AAnaZ/>
naZ/>naZ/>naZ/>nF5r:nF5r:n*f`6n*f`6mdBN2mdBN2mHs<.mHs<.m-O**lg*m&lg*m&lK[["l07Hs
~>
<~Yct@9Yct@9Yct@9Yct@9Yct@9Yct@9Yct@9Yct@9Yct@9Yct@9Yct@9Yct@9Yct@9Yct@9Yct@9Yct@9
Yct@9Yct@9Yct@9Yct@9Yct@9Yct@9Yct@9Yct@9Yct@9Yct@9Yct@9Yct@9Yct@9Yct=7YHP.5YHP.5
YHP.5YHP.5YHP.5YHP.5YHP.4Y-+q1Y-+q1Y-+q1Y-+q0Xf\_-Xf\_,XK8M)XK8M(X/i;%X/i;$WiE)!
WiE)!WMukrWMukrWMukrWMukrW2QYnVl-DhV5:#bUnjf^USFTZU8"?TTV.sNTV.sNT:_^HSXl:@S"#k8
~>
<~I!g<hI!g<hI!g<hI!g<hI!g<hI!g<hI!g<hI!g<hI!g<hI!g<hI!g<hI!g<hI!g<hI!g<hI!g<hI!g<h
I!g<hI!g<hI!g<hI!g<hI!g<hI!g<hI!g<hI!g<hI!g<hI!g<hI!g<hI!g<hI!g<hI!g9fH[C*dH[C*d
H[C*dH[C*dH[C*dH[C*dH[C*dH[C*cH?sm`H?sm`H?sm`H?sm`H?sm`H?sm_H$O[\H$O[\H$O[\H$O[[
G^+IXG^+IXGB\7TG'8%PG'8%PF`hhLFEDVHF)uDDF)uDDF)uABEH,u<E,]c8Df9Q4DJj?0D/F-,Ci!m&
~>
]
>>
0 0 1 0 []true true []
/DeviceRGB
GenStrips
} /Gradient add_res /16 /Gradient get_res exec grestore
}if
np
289.204 214.739 mo
267.827 214.739 li
267.791 209.208 li
289.204 209.208 li
289.204 214.739 li
level3{
gsave
clp
[1.00234e-14 163.696 -163.696 1.00234e-14 227.816 52.3047 ]ct
/16 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[1.00234e-14 163.696 -163.696 1.00234e-14 227.816 52.3047 ]ct
clp
/16 /Gradient get_res exec grestore
}if
np
289.204 227.475 mo
266.713 227.475 li
267.454 226.296 267.882 224.902 267.882 223.41 cv
267.872 221.945 li
289.204 221.945 li
289.204 227.475 li
275.669 223.41 mo
275.669 223.41 271.566 223.41 274.177 225.523 cv
274.608 225.872 275.02 226.014 275.385 226.014 cv
276.857 226.014 277.561 223.709 275.669 223.41 cv
level3{
gsave
clp
[1.00234e-14 163.696 -163.696 1.00234e-14 227.816 52.3047 ]ct
/16 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[1.00234e-14 163.696 -163.696 1.00234e-14 227.816 52.3047 ]ct
clp
/16 /Gradient get_res exec grestore
}if
np
230.806 1.6547 mo
230.801 1.64608 230.795 1.63754 230.79 1.62899 cv
230.795 1.63755 230.801 1.64607 230.806 1.6547 cv
.980392 .901961 .862745 rgb
f
296.531 103.5 mo
294.322 102.263 291.833 101.613 289.302 101.613 cv
194.889 101.613 li
245.287 100.409 li
247.506 100.357 249.15 98.3407 248.732 96.1605 cv
245.403 78.813 232.684 12.686 231.066 6.69715 cv
229.378 .453139 227.272 .155824 226.887 .155824 cv
226.849 .155824 226.827 .158739 226.825 .159085 cv
227.156 .0619094 227.498 .0131692 227.84 .0131692 cv
228.973 .0131692 230.103 .547548 230.79 1.62899 cv
230.795 1.63754 230.801 1.64608 230.806 1.6547 cv
230.806 1.6547 li
286.364 90.7089 li
289.256 95.3446 292.359 99.9706 296.531 103.5 cv
259.864 85.232 mo
259.499 85.232 256.745 85.3104 257.379 87.6899 cv
257.824 89.3624 258.637 89.978 259.493 89.978 cv
260.686 89.978 261.962 88.7808 262.441 87.5836 cv
262.92 86.3865 262.601 85.1894 260.606 85.1894 cv
260.392 85.1894 260.158 85.2032 259.904 85.2323 cv
259.904 85.2323 259.89 85.232 259.864 85.232 cv
level3{
gsave
clp
[1.00234e-14 163.696 -163.696 1.00234e-14 227.816 52.3047 ]ct
/6 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[1.00234e-14 163.696 -163.696 1.00234e-14 227.816 52.3047 ]ct
clp
/6 /Gradient get_res exec grestore
}if
np
171.213 92.3192 mo
223.6 8.36808 li
196.835 58.4683 li
171.213 92.3192 li
level3{
gsave
clp
[1.00234e-14 163.696 -163.696 1.00234e-14 227.816 52.3047 ]ct
/6 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[1.00234e-14 163.696 -163.696 1.00234e-14 227.816 52.3047 ]ct
clp
/6 /Gradient get_res exec grestore
}if
np
152.615 433.914 mo
152.615 414.204 li
154.475 414.204 li
152.615 433.914 li
155.449 403.876 mo
152.615 403.876 li
152.615 351.491 li
156.196 395.966 li
155.449 403.876 li
level3{
gsave
clp
[1.1274e-14 -184.12 184.12 1.1274e-14 227.826 455.678 ]ct
/8 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[1.1274e-14 -184.12 184.12 1.1274e-14 227.826 455.678 ]ct
clp
/8 /Gradient get_res exec grestore
}if
np
154.475 414.204 mo
152.615 414.204 li
152.615 403.876 li
155.449 403.876 li
154.475 414.204 li
level3{
gsave
clp
[1.1274e-14 -184.12 184.12 1.1274e-14 227.826 455.678 ]ct
/9 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[1.1274e-14 -184.12 184.12 1.1274e-14 227.826 455.678 ]ct
clp
/9 /Gradient get_res exec grestore
}if
np
189.955 529.759 mo
189.128 529.759 188.321 529.436 187.668 528.644 cv
183.663 523.792 189.043 523.38 190.988 523.38 cv
191.386 523.38 191.64 523.397 191.64 523.397 cv
197.298 524.009 193.443 529.759 189.955 529.759 cv
level3{
gsave
clp
[1.4561e-14 237.8 -237.8 1.4561e-14 227.826 500.311 ]ct
/12 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[1.4561e-14 237.8 -237.8 1.4561e-14 227.826 500.311 ]ct
clp
/12 /Gradient get_res exec grestore
}if
np
119.952 463.315 mo
119.125 463.315 118.319 462.992 117.665 462.199 cv
113.66 457.348 119.04 456.936 120.985 456.936 cv
121.383 456.936 121.637 456.953 121.637 456.953 cv
127.296 457.565 123.44 463.315 119.952 463.315 cv
level3{
gsave
clp
[243.659 0 0 243.659 105.996 468.629 ]ct
/6 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[243.659 0 0 243.659 105.996 468.629 ]ct
clp
/6 /Gradient get_res exec grestore
}if
np
182.3 538.277 mo
181.842 538.277 181.352 538.122 180.887 537.746 cv
178.277 535.633 182.333 535.129 182.333 535.129 cv
185.657 535.488 184.252 538.277 182.3 538.277 cv
level3{
gsave
clp
[1.4561e-14 237.8 -237.8 1.4561e-14 227.826 500.311 ]ct
/12 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[1.4561e-14 237.8 -237.8 1.4561e-14 227.826 500.311 ]ct
clp
/12 /Gradient get_res exec grestore
}if
np
197.237 479.036 mo
196.693 479.036 196.163 478.823 195.734 478.303 cv
193.103 475.115 196.635 474.844 197.914 474.844 cv
198.177 474.844 198.344 474.855 198.344 474.855 cv
202.063 475.257 199.529 479.036 197.237 479.036 cv
level3{
gsave
clp
[243.659 0 0 243.659 105.996 468.629 ]ct
/6 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[243.659 0 0 243.659 105.996 468.629 ]ct
clp
/6 /Gradient get_res exec grestore
}if
np
186.408 471.637 mo
186.043 471.637 185.631 471.496 185.2 471.146 cv
182.589 469.032 186.692 469.032 186.692 469.032 cv
188.584 469.331 187.88 471.638 186.408 471.637 cv
level3{
gsave
clp
[243.659 0 0 243.659 105.996 468.629 ]ct
/6 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[243.659 0 0 243.659 105.996 468.629 ]ct
clp
/6 /Gradient get_res exec grestore
}if
np
281.39 481.785 mo
281.085 481.785 280.882 481.663 280.923 481.35 cv
281.048 480.378 281.601 480.222 281.944 480.222 cv
282.106 480.222 282.221 480.257 282.221 480.257 cv
282.244 480.257 282.267 480.256 282.29 480.256 cv
283.566 480.256 283.611 480.639 283.202 481.021 cv
282.794 481.403 281.931 481.785 281.39 481.785 cv
level3{
gsave
clp
[243.659 0 0 243.659 105.996 468.629 ]ct
/6 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[243.659 0 0 243.659 105.996 468.629 ]ct
clp
/6 /Gradient get_res exec grestore
}if
np
203.519 471.116 mo
203.213 471.116 203.011 470.994 203.051 470.682 cv
203.178 469.709 203.732 469.553 204.075 469.553 cv
204.236 469.553 204.351 469.588 204.351 469.588 cv
204.374 469.588 204.397 469.587 204.42 469.587 cv
205.696 469.587 205.741 469.97 205.332 470.352 cv
204.923 470.734 204.06 471.117 203.519 471.116 cv
level3{
gsave
clp
[243.659 0 0 243.659 105.996 468.629 ]ct
/6 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[243.659 0 0 243.659 105.996 468.629 ]ct
clp
/6 /Gradient get_res exec grestore
}if
np
259.169 468.103 mo
258.314 468.103 257.501 467.488 257.055 465.815 cv
256.421 463.437 259.172 463.358 259.54 463.358 cv
259.566 463.358 259.58 463.358 259.58 463.358 cv
259.835 463.329 260.068 463.315 260.283 463.315 cv
262.278 463.315 262.596 464.512 262.117 465.709 cv
261.638 466.906 260.362 468.104 259.169 468.103 cv
level3{
gsave
clp
[243.659 0 0 243.659 105.996 468.629 ]ct
/6 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[243.659 0 0 243.659 105.996 468.629 ]ct
clp
/6 /Gradient get_res exec grestore
}if
np
172.665 604.332 mo
170.949 604.069 169.535 602.89 168.938 601.309 cv
169.774 601.149 170.541 601.149 170.541 601.149 cv
172.885 601.149 173.309 602.935 172.665 604.332 cv
level3{
gsave
clp
[1.4561e-14 237.8 -237.8 1.4561e-14 227.826 500.311 ]ct
/12 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[1.4561e-14 237.8 -237.8 1.4561e-14 227.826 500.311 ]ct
clp
/12 /Gradient get_res exec grestore
}if
np
231.318 221.945 mo
226.673 221.945 li
225.829 220.788 229.472 220.788 229.472 220.788 cv
230.645 220.788 231.23 221.345 231.318 221.945 cv
level3{
gsave
clp
[1.00234e-14 163.696 -163.696 1.00234e-14 227.816 52.3047 ]ct
/6 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[1.00234e-14 163.696 -163.696 1.00234e-14 227.816 52.3047 ]ct
clp
/6 /Gradient get_res exec grestore
}if
np
229.74 223.409 mo
229.258 223.409 228.675 223.265 228.003 222.908 cv
227.275 222.52 226.862 222.204 226.673 221.945 cv
231.318 221.945 li
231.422 222.648 230.846 223.41 229.74 223.409 cv
level3{
gsave
clp
[1.00234e-14 163.696 -163.696 1.00234e-14 227.816 52.3047 ]ct
/16 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[1.00234e-14 163.696 -163.696 1.00234e-14 227.816 52.3047 ]ct
clp
/16 /Gradient get_res exec grestore
}if
np
192.323 233.298 mo
192.066 233.18 191.823 232.995 191.606 232.732 cv
188.975 229.545 192.508 229.274 193.787 229.274 cv
194.049 229.274 194.217 229.286 194.217 229.286 cv
197.382 229.628 196.016 232.417 194.126 233.239 cv
192.323 233.298 li
level3{
gsave
clp
[1.00234e-14 163.696 -163.696 1.00234e-14 227.816 52.3047 ]ct
/6 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[1.00234e-14 163.696 -163.696 1.00234e-14 227.816 52.3047 ]ct
clp
/6 /Gradient get_res exec grestore
}if
np
193.109 233.466 mo
192.84 233.466 192.574 233.414 192.323 233.298 cv
194.126 233.239 li
193.796 233.382 193.45 233.466 193.109 233.466 cv
level3{
gsave
clp
[1.00234e-14 163.696 -163.696 1.00234e-14 227.816 52.3047 ]ct
/16 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[1.00234e-14 163.696 -163.696 1.00234e-14 227.816 52.3047 ]ct
clp
/16 /Gradient get_res exec grestore
}if
np
260.421 160.391 mo
259.594 160.391 258.787 160.067 258.133 159.275 cv
254.129 154.424 259.508 154.012 261.453 154.012 cv
261.851 154.012 262.106 154.029 262.106 154.029 cv
267.765 154.641 263.909 160.392 260.421 160.391 cv
level3{
gsave
clp
[1.00234e-14 163.696 -163.696 1.00234e-14 227.816 52.3047 ]ct
/6 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[1.00234e-14 163.696 -163.696 1.00234e-14 227.816 52.3047 ]ct
clp
/6 /Gradient get_res exec grestore
}if
np
266.458 164.066 mo
265.999 164.066 265.509 163.912 265.045 163.536 cv
262.434 161.422 266.491 160.918 266.491 160.918 cv
266.887 160.961 267.217 161.039 267.486 161.142 cv
267.503 163.789 li
267.195 163.961 266.837 164.066 266.458 164.066 cv
level3{
gsave
clp
[1.00234e-14 163.696 -163.696 1.00234e-14 227.816 52.3047 ]ct
/6 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[1.00234e-14 163.696 -163.696 1.00234e-14 227.816 52.3047 ]ct
clp
/6 /Gradient get_res exec grestore
}if
np
267.503 163.789 mo
267.486 161.142 li
269.033 161.736 268.588 163.18 267.503 163.789 cv
level3{
gsave
clp
[1.00234e-14 163.696 -163.696 1.00234e-14 227.816 52.3047 ]ct
/16 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[1.00234e-14 163.696 -163.696 1.00234e-14 227.816 52.3047 ]ct
clp
/16 /Gradient get_res exec grestore
}if
np
235.856 218.793 mo
235.491 218.793 235.079 218.651 234.647 218.302 cv
232.036 216.188 236.139 216.188 236.139 216.188 cv
238.032 216.487 237.328 218.793 235.856 218.793 cv
level3{
gsave
clp
[1.00234e-14 163.696 -163.696 1.00234e-14 227.816 52.3047 ]ct
/6 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[1.00234e-14 163.696 -163.696 1.00234e-14 227.816 52.3047 ]ct
clp
/6 /Gradient get_res exec grestore
}if
np
275.385 226.014 mo
275.02 226.014 274.608 225.872 274.177 225.523 cv
271.566 223.41 275.669 223.41 275.669 223.41 cv
277.561 223.709 276.857 226.014 275.385 226.014 cv
level3{
gsave
clp
[1.00234e-14 163.696 -163.696 1.00234e-14 227.816 52.3047 ]ct
/17 
<<
/ShadingType 2 
/ColorSpace /0 /CSA get_res
/Coords [0 0 1 0 ]
/Domain [0 1 ]
/Extend[ true true]
/Function
<<
/Domain[0 1 ] 
/FunctionType 3
/Functions [
<<
/Domain[0 1 ] 
/Range[0 1 0 1 0 1 ] 
/FunctionType 0
/Order 1 
/DataSource <~n=XUeTPX+jD"+*6n=XUeTPX+jD"+*6n=XUeTPX+jD"+*6n=XUeTPX+jD"+*6n=XUeTPX+jD"+*6n=XUe
TPX+jD"+*6n=XUeTPX+jD"+*6n=XUeT53qgC[ds3n=OLcT53nfC[[m2n"+=`Snd_cC@@a/n""4^SSIS_
C@7U+m[IqYRq_8YC$h@&m?qYTR:trTBC)%!l^2;MQt>QKAEoFjl',`CP@Ea<@HWb]kE'*6O'h".?K@#L
~>
/BitsPerSample 8 
/Encode [0 63 ]
/Decode [0 1 0 1 0 1 ]
/Size [64 ]
>>
]
/Bounds []
/Encode [0 1 ]
>>
>>/Gradient add_res /17 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[1.00234e-14 163.696 -163.696 1.00234e-14 227.816 52.3047 ]ct
clp
/17 {
/0 /CSA get_res setcolorspace
<<
/NumSamples 256 
/NumComp 3 
/Scaling[[.00392157 0 ][.00392157 0 ][.00392157 0 ]]
/Samples[
<~n*f`6n*f`6n*f`6n*f`6n*f`6n*f`6n*f`6n*f`6n*f`6n*f`6n*f`6n*f`6n*f`6n*f`6n*f`6n*f`6
n*f`6n*f`6n*f`6n*f`6n*f`6n*f`6n*f`6n*f`6n*f`6n*f`6n*f`6n*f`6n*f`6n*f`6n*f`6n*f`6
n*f`6n*f`6n*f`5mdBN2mdBN2mdBN2mdBN2mdBN2mdBN2mdBN2mdBN1mHs<.mHs<.mHs<.mHs<-m-O**
m-O**m-O**m-O**lg*m&lg*m&lK[["lK[["l07Hsl07Hskih6okih6okND$kk2tggk2tggjlPUcjQ,C_
~>
<~T:_aJT:_aJT:_aJT:_aJT:_aJT:_aJT:_aJT:_aJT:_aJT:_aJT:_aJT:_aJT:_aJT:_aJT:_aJT:_aJ
T:_aJT:_aJT:_aJT:_aJT:_aJT:_aJT:_aJT:_aJT:_aJT:_aJT:_aJT:_aJT:_aJT:_^HSt;OFSt;OF
St;OFSt;OFSt;OFSt;OFSt;OESXl=BSXl=BSXl=BSXl=AS=H+>S=H+=S"#n:S"#n9R[T\6R[T\5R@0J2
R@0J2R$a8.R$a8.R$a8.R$a8.Q^=&*Q^=#(Q'IW"Pa%DsPEV2oP*1riOH>QcOH>QcO,o?_NfK*YN/W[Q
~>
<~CMR^$CMR^$CMR^$CMR^$CMR^$CMR^$CMR^$CMR^$CMR^$CMR^$CMR^$CMR^$CMR^$CMR^$CMR^$CMR^$
CMR^$CMR^$CMR^$CMR^$CMR^$CMR^$CMR^$CMR^$CMR^$CMR^$CMR^$CMR^$CMR^$CMR["C2.KuC2.Ku
C2.KuC2.KuC2.KuC2.KuC2.KuC2.KtBk_9qBk_9qBk_9qBk_9qBk_9qBk_9pBP;'mBP;'mBP;'mBP;'l
B4kjiB4kjiB4kjiAnGXeAnGXeAS#FaA7T4]@q0"Y@q0"Y@q/tW@:<SQ?smAM?smAM?XI/I?=$rE?!U]?
~>
]
>>
0 0 1 0 []true true []
/DeviceRGB
GenStrips
} /Gradient add_res /17 /Gradient get_res exec grestore
}if
np
208.647 120.12 mo
208.282 120.12 207.87 119.978 207.439 119.629 cv
204.828 117.516 208.93 117.516 208.93 117.516 cv
210.823 117.815 210.119 120.12 208.647 120.12 cv
level3{
gsave
clp
[1.00234e-14 163.696 -163.696 1.00234e-14 227.816 52.3047 ]ct
/6 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[1.00234e-14 163.696 -163.696 1.00234e-14 227.816 52.3047 ]ct
clp
/6 /Gradient get_res exec grestore
}if
np
229.262 35.3377 mo
228.898 35.3376 228.485 35.1959 228.054 34.8466 cv
225.443 32.7333 229.546 32.7333 229.546 32.7333 cv
231.438 33.0322 230.734 35.3379 229.262 35.3377 cv
level3{
gsave
clp
[1.00234e-14 163.696 -163.696 1.00234e-14 227.816 52.3047 ]ct
/6 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[1.00234e-14 163.696 -163.696 1.00234e-14 227.816 52.3047 ]ct
clp
/6 /Gradient get_res exec grestore
}if
np
206.281 169.434 mo
205.976 169.434 205.773 169.312 205.814 168.999 cv
205.94 168.026 206.494 167.87 206.836 167.87 cv
206.998 167.87 207.113 167.905 207.113 167.905 cv
207.136 167.905 207.159 167.905 207.181 167.905 cv
208.458 167.905 208.503 168.287 208.094 168.669 cv
207.685 169.052 206.822 169.434 206.281 169.434 cv
level3{
gsave
clp
[1.00234e-14 163.696 -163.696 1.00234e-14 227.816 52.3047 ]ct
/6 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[1.00234e-14 163.696 -163.696 1.00234e-14 227.816 52.3047 ]ct
clp
/6 /Gradient get_res exec grestore
}if
np
181.384 186.406 mo
180.529 186.406 179.716 186.014 179.27 184.949 cv
178.636 183.434 181.39 183.384 181.755 183.384 cv
181.781 183.384 181.795 183.385 181.795 183.385 cv
182.049 183.366 182.282 183.357 182.496 183.357 cv
184.492 183.357 184.811 184.12 184.332 184.882 cv
183.854 185.644 182.578 186.406 181.384 186.406 cv
level3{
gsave
clp
[1.00234e-14 163.696 -163.696 1.00234e-14 227.816 52.3047 ]ct
/6 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[1.00234e-14 163.696 -163.696 1.00234e-14 227.816 52.3047 ]ct
clp
/6 /Gradient get_res exec grestore
}if
np
184.06 155.752 mo
183.205 155.752 182.392 155.137 181.946 153.464 cv
181.312 151.085 184.064 151.006 184.431 151.006 cv
184.457 151.006 184.471 151.006 184.471 151.006 cv
184.725 150.977 184.959 150.964 185.173 150.964 cv
187.169 150.964 187.487 152.161 187.008 153.358 cv
186.53 154.555 185.254 155.753 184.06 155.752 cv
level3{
gsave
clp
[1.00234e-14 163.696 -163.696 1.00234e-14 227.816 52.3047 ]ct
/6 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[1.00234e-14 163.696 -163.696 1.00234e-14 227.816 52.3047 ]ct
clp
/6 /Gradient get_res exec grestore
}if
np
259.493 89.978 mo
258.637 89.978 257.824 89.3624 257.379 87.6899 cv
256.745 85.3104 259.499 85.232 259.864 85.232 cv
259.89 85.232 259.904 85.2323 259.904 85.2323 cv
260.158 85.2032 260.392 85.1894 260.606 85.1894 cv
262.601 85.1894 262.92 86.3865 262.441 87.5836 cv
261.962 88.7808 260.686 89.978 259.493 89.978 cv
level3{
gsave
clp
[1.00234e-14 163.696 -163.696 1.00234e-14 227.816 52.3047 ]ct
/16 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[1.00234e-14 163.696 -163.696 1.00234e-14 227.816 52.3047 ]ct
clp
/16 /Gradient get_res exec grestore
}if
np
243.612 132.013 mo
243.13 132.013 242.547 131.868 241.876 131.511 cv
237.891 129.392 243.345 129.392 243.345 129.392 cv
245.89 129.392 245.665 132.013 243.612 132.013 cv
level3{
gsave
clp
[1.00234e-14 163.696 -163.696 1.00234e-14 227.816 52.3047 ]ct
/6 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[1.00234e-14 163.696 -163.696 1.00234e-14 227.816 52.3047 ]ct
clp
/6 /Gradient get_res exec grestore
}if
np
221.779 76.5322 mo
221.236 76.5321 220.706 76.3196 220.276 75.7994 cv
217.645 72.6109 221.181 72.3402 222.459 72.3402 cv
222.72 72.3402 222.887 72.3516 222.887 72.3516 cv
226.605 72.7538 224.071 76.5325 221.779 76.5322 cv
level3{
gsave
clp
[1.00234e-14 163.696 -163.696 1.00234e-14 227.816 52.3047 ]ct
/6 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[1.00234e-14 163.696 -163.696 1.00234e-14 227.816 52.3047 ]ct
clp
/6 /Gradient get_res exec grestore
}if
np
249.728 127.396 mo
249.363 127.396 248.951 127.254 248.52 126.905 cv
245.909 124.792 250.011 124.792 250.011 124.792 cv
251.904 125.09 251.2 127.396 249.728 127.396 cv
level3{
gsave
clp
[1.00234e-14 163.696 -163.696 1.00234e-14 227.816 52.3047 ]ct
/6 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[1.00234e-14 163.696 -163.696 1.00234e-14 227.816 52.3047 ]ct
clp
/6 /Gradient get_res exec grestore
}if
np
204.379 87.5837 mo
204.014 87.5837 203.602 87.4419 203.17 87.0927 cv
200.56 84.9795 204.662 84.9795 204.662 84.9795 cv
206.554 85.2779 205.85 87.5838 204.379 87.5837 cv
level3{
gsave
clp
[1.00234e-14 163.696 -163.696 1.00234e-14 227.816 52.3047 ]ct
/6 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[1.00234e-14 163.696 -163.696 1.00234e-14 227.816 52.3047 ]ct
clp
/6 /Gradient get_res exec grestore
}if
np
167.542 571.448 mo
167.243 571.448 167.044 571.363 167.084 571.146 cv
167.208 570.469 167.753 570.361 168.089 570.361 cv
168.247 570.361 168.359 570.385 168.359 570.385 cv
168.382 570.385 168.404 570.384 168.426 570.384 cv
169.679 570.384 169.724 570.65 169.322 570.916 cv
168.921 571.182 168.073 571.448 167.542 571.448 cv
level3{
gsave
clp
[1.4561e-14 237.8 -237.8 1.4561e-14 227.826 500.311 ]ct
/12 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[1.4561e-14 237.8 -237.8 1.4561e-14 227.826 500.311 ]ct
clp
/12 /Gradient get_res exec grestore
}if
np
147.402 523.824 mo
146.775 523.824 146.179 523.432 145.853 522.367 cv
145.388 520.852 147.408 520.802 147.674 520.802 cv
147.692 520.802 147.702 520.803 147.702 520.803 cv
147.888 520.784 148.059 520.775 148.216 520.775 cv
149.678 520.775 149.912 521.538 149.561 522.3 cv
149.211 523.062 148.276 523.824 147.402 523.824 cv
level3{
gsave
clp
[1.4561e-14 237.8 -237.8 1.4561e-14 227.826 500.311 ]ct
/12 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[1.4561e-14 237.8 -237.8 1.4561e-14 227.826 500.311 ]ct
clp
/12 /Gradient get_res exec grestore
}if
np
207.323 388.819 mo
203.472 388.819 204.806 383.999 207.536 383.999 cv
208.331 383.999 209.245 384.408 210.182 385.463 cv
213.166 388.819 207.323 388.819 207.323 388.819 cv
level3{
gsave
clp
[1.1274e-14 -184.12 184.12 1.1274e-14 227.826 455.678 ]ct
/8 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[1.1274e-14 -184.12 184.12 1.1274e-14 227.826 455.678 ]ct
clp
/8 /Gradient get_res exec grestore
}if
np
282.341 376.352 mo
282.079 376.352 281.911 376.341 281.911 376.341 cv
278.193 375.939 280.727 372.16 283.019 372.16 cv
283.563 372.16 284.092 372.373 284.522 372.893 cv
287.153 376.081 283.619 376.352 282.341 376.352 cv
level3{
gsave
clp
[1.1274e-14 -184.12 184.12 1.1274e-14 227.826 455.678 ]ct
/8 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[1.1274e-14 -184.12 184.12 1.1274e-14 227.826 455.678 ]ct
clp
/8 /Gradient get_res exec grestore
}if
np
231.898 430.23 mo
231.5 430.23 231.245 430.213 231.245 430.213 cv
225.587 429.601 229.443 423.851 232.93 423.851 cv
233.758 423.851 234.564 424.174 235.218 424.967 cv
239.223 429.818 233.843 430.23 231.898 430.23 cv
level3{
gsave
clp
[1.1274e-14 -184.12 184.12 1.1274e-14 227.826 455.678 ]ct
/8 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[1.1274e-14 -184.12 184.12 1.1274e-14 227.826 455.678 ]ct
clp
/8 /Gradient get_res exec grestore
}if
np
240.552 418.481 mo
237.229 418.123 238.634 415.334 240.585 415.334 cv
241.044 415.334 241.533 415.488 241.998 415.864 cv
244.609 417.978 240.552 418.481 240.552 418.481 cv
level3{
gsave
clp
[1.1274e-14 -184.12 184.12 1.1274e-14 227.826 455.678 ]ct
/8 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[1.1274e-14 -184.12 184.12 1.1274e-14 227.826 455.678 ]ct
clp
/8 /Gradient get_res exec grestore
}if
np
278.356 271.058 mo
276.463 270.759 277.167 268.454 278.639 268.454 cv
279.004 268.454 279.416 268.596 279.848 268.945 cv
282.458 271.058 278.356 271.058 278.356 271.058 cv
level3{
gsave
clp
[1.1274e-14 -184.12 184.12 1.1274e-14 227.826 455.678 ]ct
/9 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[1.1274e-14 -184.12 184.12 1.1274e-14 227.826 455.678 ]ct
clp
/9 /Gradient get_res exec grestore
}if
np
293.565 382.163 mo
291.672 381.864 292.376 379.559 293.848 379.559 cv
294.092 379.559 294.358 379.622 294.636 379.769 cv
294.636 382.068 li
294.084 382.163 293.565 382.163 293.565 382.163 cv
level3{
gsave
clp
[1.1274e-14 -184.12 184.12 1.1274e-14 227.826 455.678 ]ct
/9 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[1.1274e-14 -184.12 184.12 1.1274e-14 227.826 455.678 ]ct
clp
/9 /Gradient get_res exec grestore
}if
np
179.84 438.76 mo
177.295 438.76 177.52 436.139 179.572 436.139 cv
180.054 436.139 180.637 436.283 181.309 436.641 cv
185.294 438.76 179.84 438.76 179.84 438.76 cv
level3{
gsave
clp
[1.1274e-14 -184.12 184.12 1.1274e-14 227.826 455.678 ]ct
/8 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[1.1274e-14 -184.12 184.12 1.1274e-14 227.826 455.678 ]ct
clp
/8 /Gradient get_res exec grestore
}if
np
180.901 363.359 mo
179.008 363.06 179.712 360.754 181.184 360.754 cv
181.549 360.754 181.962 360.896 182.393 361.245 cv
185.004 363.359 180.901 363.359 180.901 363.359 cv
level3{
gsave
clp
[1.1274e-14 -184.12 184.12 1.1274e-14 227.826 455.678 ]ct
/8 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[1.1274e-14 -184.12 184.12 1.1274e-14 227.826 455.678 ]ct
clp
/8 /Gradient get_res exec grestore
}if
np
250.257 278.169 mo
250.041 278.169 249.887 278.144 249.887 278.144 cv
249.857 278.145 249.827 278.145 249.797 278.145 cv
248.086 278.145 248.024 277.879 248.572 277.613 cv
249.12 277.347 250.276 277.082 251.001 277.082 cv
251.41 277.082 251.682 277.167 251.628 277.384 cv
251.459 278.06 250.716 278.169 250.257 278.169 cv
level3{
gsave
clp
[1.1274e-14 -184.12 184.12 1.1274e-14 227.826 455.678 ]ct
/8 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[1.1274e-14 -184.12 184.12 1.1274e-14 227.826 455.678 ]ct
clp
/8 /Gradient get_res exec grestore
}if
np
161.007 283.4 mo
160.846 283.4 160.731 283.366 160.731 283.366 cv
160.708 283.366 160.686 283.366 160.663 283.366 cv
159.386 283.366 159.341 282.984 159.749 282.601 cv
160.158 282.219 161.021 281.837 161.562 281.837 cv
161.868 281.837 162.07 281.959 162.03 282.272 cv
161.904 283.245 161.35 283.4 161.007 283.4 cv
level3{
gsave
clp
[1.1274e-14 -184.12 184.12 1.1274e-14 227.826 455.678 ]ct
/8 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[1.1274e-14 -184.12 184.12 1.1274e-14 227.826 455.678 ]ct
clp
/8 /Gradient get_res exec grestore
}if
np
276.182 381.642 mo
276.02 381.642 275.906 381.607 275.906 381.607 cv
275.882 381.608 275.859 381.608 275.837 381.608 cv
274.56 381.608 274.515 381.225 274.924 380.843 cv
275.333 380.461 276.195 380.079 276.736 380.079 cv
277.042 380.079 277.245 380.201 277.204 380.515 cv
277.078 381.486 276.525 381.642 276.182 381.642 cv
level3{
gsave
clp
[1.1274e-14 -184.12 184.12 1.1274e-14 227.826 455.678 ]ct
/8 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[1.1274e-14 -184.12 184.12 1.1274e-14 227.826 455.678 ]ct
clp
/8 /Gradient get_res exec grestore
}if
np
207.336 297.517 mo
205.339 297.517 205.021 296.755 205.499 295.993 cv
205.978 295.23 207.254 294.468 208.447 294.468 cv
209.303 294.468 210.116 294.86 210.562 295.925 cv
211.196 297.44 208.44 297.49 208.076 297.49 cv
208.05 297.49 208.036 297.49 208.036 297.49 cv
207.783 297.508 207.55 297.517 207.336 297.517 cv
level3{
gsave
clp
[1.1274e-14 -184.12 184.12 1.1274e-14 227.826 455.678 ]ct
/8 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[1.1274e-14 -184.12 184.12 1.1274e-14 227.826 455.678 ]ct
clp
/8 /Gradient get_res exec grestore
}if
np
204.659 329.911 mo
202.662 329.911 202.344 328.714 202.823 327.516 cv
203.302 326.319 204.578 325.122 205.771 325.122 cv
206.626 325.122 207.439 325.738 207.885 327.41 cv
208.52 329.79 205.765 329.869 205.4 329.869 cv
205.374 329.869 205.36 329.868 205.36 329.868 cv
205.106 329.897 204.873 329.911 204.659 329.911 cv
level3{
gsave
clp
[1.1274e-14 -184.12 184.12 1.1274e-14 227.826 455.678 ]ct
/8 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[1.1274e-14 -184.12 184.12 1.1274e-14 227.826 455.678 ]ct
clp
/8 /Gradient get_res exec grestore
}if
np
217.688 285.795 mo
215.692 285.795 215.373 284.597 215.852 283.4 cv
216.331 282.203 217.607 281.006 218.8 281.006 cv
219.655 281.006 220.468 281.621 220.914 283.294 cv
221.549 285.674 218.794 285.752 218.429 285.752 cv
218.403 285.752 218.389 285.752 218.389 285.752 cv
218.135 285.781 217.902 285.795 217.688 285.795 cv
level3{
gsave
clp
[1.1274e-14 -184.12 184.12 1.1274e-14 227.826 455.678 ]ct
/8 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[1.1274e-14 -184.12 184.12 1.1274e-14 227.826 455.678 ]ct
clp
/8 /Gradient get_res exec grestore
}if
np
252.345 352.461 mo
248.493 352.461 249.828 347.64 252.558 347.64 cv
253.353 347.64 254.266 348.049 255.204 349.104 cv
258.188 352.461 252.345 352.461 252.345 352.461 cv
level3{
gsave
clp
[1.1274e-14 -184.12 184.12 1.1274e-14 227.826 455.678 ]ct
/8 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[1.1274e-14 -184.12 184.12 1.1274e-14 227.826 455.678 ]ct
clp
/8 /Gradient get_res exec grestore
}if
np
167.374 408.534 mo
167.112 408.534 166.945 408.523 166.945 408.523 cv
163.226 408.121 165.76 404.342 168.052 404.342 cv
168.596 404.342 169.126 404.555 169.555 405.075 cv
172.186 408.263 168.652 408.534 167.374 408.534 cv
level3{
gsave
clp
[1.1274e-14 -184.12 184.12 1.1274e-14 227.826 455.678 ]ct
/9 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[1.1274e-14 -184.12 184.12 1.1274e-14 227.826 455.678 ]ct
clp
/9 /Gradient get_res exec grestore
}if
np
224.249 360.044 mo
222.356 359.745 223.06 357.439 224.532 357.439 cv
224.897 357.439 225.309 357.581 225.74 357.931 cv
228.352 360.044 224.249 360.044 224.249 360.044 cv
level3{
gsave
clp
[1.1274e-14 -184.12 184.12 1.1274e-14 227.826 455.678 ]ct
/8 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[1.1274e-14 -184.12 184.12 1.1274e-14 227.826 455.678 ]ct
clp
/8 /Gradient get_res exec grestore
}if
np
254.798 383.25 mo
254.639 383.25 254.527 383.225 254.527 383.225 cv
254.505 383.226 254.483 383.226 254.462 383.226 cv
253.207 383.226 253.162 382.96 253.563 382.694 cv
253.964 382.428 254.811 382.163 255.342 382.163 cv
255.643 382.163 255.842 382.248 255.802 382.466 cv
255.678 383.141 255.134 383.25 254.798 383.25 cv
level3{
gsave
clp
[1.1274e-14 -184.12 184.12 1.1274e-14 227.826 455.678 ]ct
/8 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[1.1274e-14 -184.12 184.12 1.1274e-14 227.826 455.678 ]ct
clp
/8 /Gradient get_res exec grestore
}if
np
269.684 413.299 mo
268.222 413.299 267.989 412.537 268.339 411.774 cv
268.69 411.013 269.625 410.25 270.499 410.25 cv
271.126 410.25 271.721 410.642 272.048 411.707 cv
272.512 413.221 270.497 413.272 270.227 413.272 cv
270.208 413.272 270.198 413.271 270.198 413.271 cv
270.012 413.29 269.841 413.299 269.684 413.299 cv
level3{
gsave
clp
[1.1274e-14 -184.12 184.12 1.1274e-14 227.826 455.678 ]ct
/9 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[1.1274e-14 -184.12 184.12 1.1274e-14 227.826 455.678 ]ct
clp
/9 /Gradient get_res exec grestore
}if
np
161.162 590.563 mo
152.884 590.563 li
152.884 553.55 li
152.884 551.264 154.737 549.411 157.023 549.411 cv
159.309 549.411 161.162 551.264 161.162 553.55 cv
161.162 590.563 li
151.901 590.563 mo
151.901 590.563 li
151.901 551.072 li
151.901 548.243 154.194 545.95 157.023 545.95 cv
157.023 545.95 li
154.194 545.95 151.901 548.243 151.901 551.072 cv
151.901 590.563 li
level3{
gsave
clp
[3.62122e-15 -59.1391 59.1391 3.62122e-15 157.023 607.431 ]ct
/10 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[3.62122e-15 -59.1391 59.1391 3.62122e-15 157.023 607.431 ]ct
clp
/10 /Gradient get_res exec grestore
}if
np
189.052 604.388 mo
181.205 604.388 li
181.205 553.55 li
181.205 551.264 183.058 549.411 185.344 549.411 cv
187.63 549.411 189.483 551.264 189.483 553.55 cv
189.483 604.368 li
189.341 604.381 189.197 604.388 189.052 604.388 cv
180.222 604.388 mo
180.222 604.388 li
180.222 551.072 li
180.222 548.243 182.515 545.95 185.344 545.95 cv
185.388 545.95 185.432 545.951 185.476 545.952 cv
185.432 545.951 185.388 545.95 185.344 545.95 cv
182.515 545.95 180.222 548.243 180.222 551.072 cv
180.222 604.388 li
level3{
gsave
clp
[3.62122e-15 -59.1391 59.1391 3.62122e-15 185.344 607.431 ]ct
/10 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[3.62122e-15 -59.1391 59.1391 3.62122e-15 185.344 607.431 ]ct
clp
/10 /Gradient get_res exec grestore
}if
np
217.804 590.563 mo
209.526 590.563 li
209.526 553.55 li
209.526 551.264 211.379 549.411 213.665 549.411 cv
215.951 549.411 217.804 551.264 217.804 553.55 cv
217.804 590.563 li
level3{
gsave
clp
[3.62122e-15 -59.1391 59.1391 3.62122e-15 213.665 607.431 ]ct
/10 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[3.62122e-15 -59.1391 59.1391 3.62122e-15 213.665 607.431 ]ct
clp
/10 /Gradient get_res exec grestore
}if
np
270.307 545.95 mo
267.479 545.95 265.185 548.243 265.185 551.072 cv
265.185 612.433 li
265.185 615.262 267.479 617.555 270.307 617.555 cv
273.136 617.555 275.429 615.262 275.429 612.433 cv
275.429 551.072 li
275.429 548.243 273.136 545.95 270.307 545.95 cv
level3{
gsave
clp
[3.62122e-15 -59.1391 59.1391 3.62122e-15 270.307 607.431 ]ct
/10 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[3.62122e-15 -59.1391 59.1391 3.62122e-15 270.307 607.431 ]ct
clp
/10 /Gradient get_res exec grestore
}if
np
298.628 545.95 mo
295.799 545.95 293.507 548.243 293.507 551.072 cv
293.507 612.433 li
293.507 615.262 295.799 617.555 298.628 617.555 cv
301.457 617.555 303.75 615.262 303.75 612.433 cv
303.75 551.072 li
303.75 548.243 301.457 545.95 298.628 545.95 cv
level3{
gsave
clp
[3.62122e-15 -59.1391 59.1391 3.62122e-15 298.628 607.431 ]ct
/10 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[3.62122e-15 -59.1391 59.1391 3.62122e-15 298.628 607.431 ]ct
clp
/10 /Gradient get_res exec grestore
}if
np
237.579 615.044 mo
237.579 615.044 li
237.579 604.388 li
237.336 604.388 237.098 604.369 236.864 604.334 cv
236.864 555.207 li
237.579 555.207 li
237.579 615.044 li
level3{
gsave
clp
[3.62122e-15 -59.1391 59.1391 3.62122e-15 241.986 607.431 ]ct
/13 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[3.62122e-15 -59.1391 59.1391 3.62122e-15 241.986 607.431 ]ct
clp
/13 /Gradient get_res exec grestore
}if
np
218.787 590.563 mo
217.804 590.563 li
217.804 553.55 li
217.804 551.264 215.951 549.411 213.665 549.411 cv
211.379 549.411 209.526 551.264 209.526 553.55 cv
209.526 590.563 li
208.543 590.563 li
208.543 551.072 li
208.543 548.243 210.836 545.95 213.665 545.95 cv
216.494 545.95 218.787 548.243 218.787 551.072 cv
218.787 590.563 li
level3{
gsave
clp
[3.62122e-15 -59.1391 59.1391 3.62122e-15 213.665 607.431 ]ct
/13 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[3.62122e-15 -59.1391 59.1391 3.62122e-15 213.665 607.431 ]ct
clp
/13 /Gradient get_res exec grestore
}if
np
190.466 604.174 mo
190.466 551.072 li
190.466 548.287 188.244 546.022 185.476 545.952 cv
188.244 546.022 190.466 548.287 190.466 551.072 cv
190.466 604.174 li
190.466 604.174 190.466 604.174 190.466 604.174 cv
level3{
gsave
clp
[1.4561e-14 237.8 -237.8 1.4561e-14 227.826 500.311 ]ct
/18 
<<
/ShadingType 2 
/ColorSpace /0 /CSA get_res
/Coords [0 0 1 0 ]
/Domain [0 1 ]
/Extend[ true true]
/Function
<<
/Domain[0 1 ] 
/FunctionType 3
/Functions [
<<
/Domain[0 1 ] 
/Range[0 1 0 1 0 1 ] 
/FunctionType 0
/Order 1 
/DataSource <~h2l+%OCI%-@bm,Th2l+%OCI%-@bm,Th2l+%OCI%-@bm,Th2l+%OCI%-@bm,Th2l+%OCI%-@bm,Th2l+%
OCI%-@bm,Th2l+%OCI%-@bm,Th2l+%OCI%-@bm,Th2l+%OCI%-@bm,Th2l+%OCI%-@bm,Th2l+%OCI%-
@bm,Th2l+%OCI%-@bm,Th2l+%OCI%-@bm,Th2l+%OCI%-@bm,Th2l+%OCI%-@bm,Th2l+%OCI%-@bm,T
~>
/BitsPerSample 8 
/Encode [0 63 ]
/Decode [0 1 0 1 0 1 ]
/Size [64 ]
>>
<<
/Domain[0 1 ] 
/Range[0 1 0 1 0 1 ] 
/FunctionType 0
/Order 1 
/DataSource <~kbN7_UiP[pEp0<>kbN7_UiP[pEp0<>kbN7_UiP[pEp0<>kbN7_UiP[pEp0<>kbN7_UiP[pEp0<>kbN7_
UiP[pEp0<>kbN7_UiP[pEp0<>kbN7_UN,LmETj0;kbE.]UN,IlETa*:kG*%[UN,IlETa*:kFuqYU2]7g
E9<j4k+HYTTPrqbDrmX0je$GPSo*PZD<.7)j.1#HS87/RCZCjuigFN?QtYHFBAf(fi07g1P@WO4A)35U
~>
/BitsPerSample 8 
/Encode [0 63 ]
/Decode [0 1 0 1 0 1 ]
/Size [64 ]
>>
]
/Bounds [1.89999e-07 ]
/Encode [0 1 1 0 ]
>>
>>/Gradient add_res /18 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[1.4561e-14 237.8 -237.8 1.4561e-14 227.826 500.311 ]ct
clp
/18 {
/0 /CSA get_res setcolorspace
<<
/NumSamples 256 
/NumComp 3 
/Scaling[[.00392157 0 ][.00392157 0 ][.00392157 0 ]]
/Samples[
<~gtgfBh;7#FhV[5Jhr!>Khr*GNi8NYRiSibSiSrkVio8tWio8tWio8tWioB(Zj5]1[j5f:^jQ,C_jQ,C_
jQ,C_jQ,FajlPUcjlPUcjlPUcjlPXek2tggk2tggk2tggk2tggk2tggk2tggk2tggk2tjikND$kkND$k
kND$kkND$kkND$kkND$kkND$kkND$kkND$kkND$kkND$kkND$kkND$kkND$kkND$kkND$kkND$kkND$k
kND$kkND$kkND$kkND$kkND$kkND$kkND$kkND$kkND$kkND$kkND$kkND$kkND$kkND$kkND$kkND$k
~>
<~O-#HbOHGZgP*;)nPE_;sQ'R`%QC!r)Q^F/-R$jA1R@0J2R@9S6S"-"=S=H+>S=H+>S=Q4ASXuFEStDXI
T:_aJT:_aJT:_aJT:_dLTV.sNTV/!PTqS0RTqS3TU8"BVU8"BVU8"BVU8"BVU8"BVU8"BVU8"BVU8"BV
U8"BVU8"BVU8"BWUSFTZUSFTZUSFTZUSFTZUSFTZUSFTZUSFTZUSFTZUSFTZUSFTZUSFTZUSFTZUSFTZ
USFTZUSFTZUSFTZUSFTZUSFTZUSFTZUSFTZUSFTZUSFTZUSFTZUSFTZUSFTZUSFTZUSFTZUSFTZUSFTZ
~>
<~@:E\T@UinX@q9+\A7]=`AS,OdAnPahB4tslBPD0pBkhBtC2.KuC27U#CM[g'Ci!p(Ci!p(Ci+$+D/F-,
D/F0.DJj?0DJj?0DJj?0DJjB2Df9Q4Df9Q4Df9T6E,]c8E,]c8E,]c8E,]c8E,]c8E,]c8E,]c8E,]c8
E,]c8E,]c8E,]c9EH,u<EH,u<EH,u<EH,u<EH,u<EH,u<EH,u<EH,u<EH,u<EH,u<EH,u<EH,u<EH,u<
EH,u<EH,u<EH,u<EH,u<EH,u<EH,u<EH,u<EH,u<EH,u<EH,u<EH,u<EH,u<EH,u<EH,u<EH,u<EH,u<
~>
]
>>
0 0 1 0 []true true []
/DeviceRGB
GenStrips
} /Gradient add_res /18 /Gradient get_res exec grestore
}if
np
181.205 604.388 mo
180.222 604.388 li
180.222 551.072 li
180.222 548.243 182.515 545.95 185.344 545.95 cv
185.388 545.95 185.432 545.951 185.476 545.952 cv
188.244 546.022 190.466 548.287 190.466 551.072 cv
190.466 604.174 li
190.151 604.272 189.822 604.338 189.483 604.368 cv
189.483 553.55 li
189.483 551.264 187.63 549.411 185.344 549.411 cv
183.058 549.411 181.205 551.264 181.205 553.55 cv
181.205 604.388 li
level3{
gsave
clp
[3.62122e-15 -59.1391 59.1391 3.62122e-15 185.344 607.431 ]ct
/13 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[3.62122e-15 -59.1391 59.1391 3.62122e-15 185.344 607.431 ]ct
clp
/13 /Gradient get_res exec grestore
}if
np
162.145 590.563 mo
162.144 590.563 li
162.144 551.072 li
162.144 548.243 159.852 545.95 157.023 545.95 cv
157.023 545.95 157.023 545.95 157.023 545.95 cv
159.852 545.95 162.145 548.243 162.145 551.072 cv
162.145 590.563 li
level3{
gsave
clp
[1.4561e-14 237.8 -237.8 1.4561e-14 227.826 500.311 ]ct
/18 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[1.4561e-14 237.8 -237.8 1.4561e-14 227.826 500.311 ]ct
clp
/18 /Gradient get_res exec grestore
}if
np
162.144 590.563 mo
161.162 590.563 li
161.162 553.55 li
161.162 551.264 159.309 549.411 157.023 549.411 cv
154.737 549.411 152.884 551.264 152.884 553.55 cv
152.884 590.563 li
151.901 590.563 li
151.901 551.072 li
151.901 548.243 154.194 545.95 157.023 545.95 cv
159.852 545.95 162.144 548.243 162.144 551.072 cv
162.144 590.563 li
level3{
gsave
clp
[3.62122e-15 -59.1391 59.1391 3.62122e-15 157.023 607.431 ]ct
/13 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[3.62122e-15 -59.1391 59.1391 3.62122e-15 157.023 607.431 ]ct
clp
/13 /Gradient get_res exec grestore
}if
np
313.155 257.747 mo
142.493 257.747 li
142.458 257.747 142.423 257.746 142.388 257.746 cv
138.698 257.69 135.724 254.681 135.724 250.977 cv
135.724 236.435 li
135.724 234.8 137.05 233.474 138.685 233.474 cv
157.035 233.474 li
158.681 233.474 160.028 234.82 160.028 236.466 cv
160.028 238.67 li
160.028 239.122 li
160.028 240.758 161.354 242.084 162.989 242.084 cv
172.729 242.084 li
174.378 242.084 175.691 240.74 175.691 239.122 cv
175.691 236.435 li
175.691 234.787 177.034 233.474 178.652 233.474 cv
186.98 233.474 li
197.033 233.474 li
198.651 233.474 199.994 234.787 199.994 236.435 cv
199.994 239.122 li
199.994 240.758 201.32 242.084 202.956 242.084 cv
212.726 242.084 li
214.355 242.084 215.688 240.751 215.688 239.122 cv
215.688 236.435 li
215.688 234.8 217.014 233.474 218.649 233.474 cv
236.999 233.474 li
238.635 233.474 239.961 234.8 239.961 236.435 cv
239.961 239.092 li
239.961 240.744 241.301 242.084 242.953 242.084 cv
252.693 242.084 li
254.342 242.084 255.655 240.74 255.655 239.122 cv
255.655 236.435 li
255.655 234.787 256.998 233.474 258.616 233.474 cv
276.997 233.474 li
278.615 233.474 279.958 234.787 279.958 236.435 cv
279.958 239.122 li
279.958 240.758 281.285 242.084 282.92 242.084 cv
292.66 242.084 li
294.305 242.084 295.652 240.738 295.652 239.092 cv
295.652 238.694 li
295.652 236.435 li
295.652 234.8 296.977 233.474 298.613 233.474 cv
316.963 233.474 li
318.599 233.474 319.925 234.8 319.925 236.436 cv
319.925 250.977 li
319.925 254.68 316.953 257.688 313.263 257.746 cv
313.227 257.746 313.191 257.747 313.155 257.747 cv
219.14 254.296 mo
219.14 254.296 215.087 254.296 218.049 255.872 cv
218.547 256.137 218.98 256.245 219.338 256.245 cv
220.864 256.245 221.031 254.296 219.14 254.296 cv
298.146 253.525 mo
298.146 253.525 295.131 253.899 297.071 255.469 cv
297.417 255.749 297.78 255.864 298.121 255.864 cv
299.571 255.864 300.615 253.791 298.146 253.525 cv
147.363 253.582 mo
147.164 253.582 145.665 253.619 146.01 254.744 cv
146.253 255.535 146.695 255.826 147.161 255.826 cv
147.81 255.827 148.505 255.26 148.766 254.694 cv
149.026 254.128 148.853 253.562 147.767 253.562 cv
147.65 253.562 147.523 253.568 147.385 253.582 cv
147.385 253.582 147.377 253.582 147.363 253.582 cv
182.189 253.887 mo
181.94 253.887 181.536 253.968 181.444 254.47 cv
181.414 254.631 181.562 254.694 181.785 254.694 cv
182.179 254.694 182.809 254.497 183.107 254.299 cv
183.405 254.102 183.372 253.905 182.442 253.905 cv
182.426 253.905 182.409 253.905 182.391 253.905 cv
182.391 253.905 182.308 253.887 182.189 253.887 cv
224.093 250.879 mo
224.093 250.879 221.045 250.879 222.985 252.449 cv
223.306 252.709 223.612 252.814 223.883 252.814 cv
224.977 252.814 225.5 251.101 224.093 250.879 cv
304.576 244.795 mo
303.131 244.795 299.133 245.101 302.109 248.706 cv
302.594 249.295 303.194 249.535 303.809 249.535 cv
306.401 249.536 309.266 245.262 305.061 244.808 cv
305.061 244.808 304.872 244.795 304.576 244.795 cv
264.414 245.418 mo
264.141 245.418 262.096 245.476 262.567 247.244 cv
262.898 248.487 263.502 248.944 264.138 248.944 cv
265.025 248.944 265.973 248.055 266.328 247.165 cv
266.684 246.276 266.448 245.386 264.965 245.386 cv
264.806 245.386 264.632 245.396 264.443 245.418 cv
264.443 245.418 264.433 245.418 264.414 245.418 cv
level3{
gsave
clp
[184.201 0 0 184.201 135.724 245.61 ]ct
/5 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[184.201 0 0 184.201 135.724 245.61 ]ct
clp
/5 /Gradient get_res exec grestore
}if
np
303.809 249.535 mo
303.194 249.535 302.594 249.295 302.109 248.706 cv
299.133 245.101 303.131 244.795 304.576 244.795 cv
304.872 244.795 305.061 244.808 305.061 244.808 cv
309.266 245.262 306.401 249.536 303.809 249.535 cv
level3{
gsave
clp
[184.201 0 0 184.201 135.724 245.61 ]ct
/6 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[184.201 0 0 184.201 135.724 245.61 ]ct
clp
/6 /Gradient get_res exec grestore
}if
np
298.121 255.864 mo
297.78 255.864 297.417 255.749 297.071 255.469 cv
295.131 253.899 298.146 253.525 298.146 253.525 cv
300.615 253.791 299.571 255.864 298.121 255.864 cv
level3{
gsave
clp
[184.201 0 0 184.201 135.724 245.61 ]ct
/6 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[184.201 0 0 184.201 135.724 245.61 ]ct
clp
/6 /Gradient get_res exec grestore
}if
np
219.338 256.245 mo
218.98 256.245 218.547 256.137 218.049 255.872 cv
215.087 254.296 219.14 254.296 219.14 254.296 cv
221.031 254.296 220.864 256.245 219.338 256.245 cv
level3{
gsave
clp
[184.201 0 0 184.201 135.724 245.61 ]ct
/6 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[184.201 0 0 184.201 135.724 245.61 ]ct
clp
/6 /Gradient get_res exec grestore
}if
np
223.883 252.814 mo
223.612 252.814 223.306 252.709 222.985 252.449 cv
221.045 250.879 224.093 250.879 224.093 250.879 cv
225.5 251.101 224.977 252.814 223.883 252.814 cv
level3{
gsave
clp
[184.201 0 0 184.201 135.724 245.61 ]ct
/6 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[184.201 0 0 184.201 135.724 245.61 ]ct
clp
/6 /Gradient get_res exec grestore
}if
np
264.138 248.944 mo
263.502 248.944 262.898 248.487 262.567 247.244 cv
262.096 245.476 264.141 245.418 264.414 245.418 cv
264.433 245.418 264.443 245.418 264.443 245.418 cv
264.632 245.396 264.806 245.386 264.965 245.386 cv
266.448 245.386 266.684 246.276 266.328 247.165 cv
265.973 248.055 265.025 248.944 264.138 248.944 cv
level3{
gsave
clp
[184.201 0 0 184.201 135.724 245.61 ]ct
/6 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[184.201 0 0 184.201 135.724 245.61 ]ct
clp
/6 /Gradient get_res exec grestore
}if
np
181.785 254.694 mo
181.562 254.694 181.414 254.631 181.444 254.47 cv
181.536 253.968 181.94 253.887 182.189 253.887 cv
182.308 253.887 182.391 253.905 182.391 253.905 cv
182.409 253.905 182.426 253.905 182.442 253.905 cv
183.372 253.905 183.405 254.102 183.107 254.299 cv
182.809 254.497 182.179 254.694 181.785 254.694 cv
level3{
gsave
clp
[184.201 0 0 184.201 135.724 245.61 ]ct
/6 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[184.201 0 0 184.201 135.724 245.61 ]ct
clp
/6 /Gradient get_res exec grestore
}if
np
147.161 255.826 mo
146.695 255.826 146.253 255.535 146.01 254.744 cv
145.665 253.619 147.164 253.582 147.363 253.582 cv
147.377 253.582 147.385 253.582 147.385 253.582 cv
147.523 253.568 147.65 253.562 147.767 253.562 cv
148.853 253.562 149.026 254.128 148.766 254.694 cv
148.505 255.26 147.81 255.827 147.161 255.826 cv
level3{
gsave
clp
[184.201 0 0 184.201 135.724 245.61 ]ct
/6 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[184.201 0 0 184.201 135.724 245.61 ]ct
clp
/6 /Gradient get_res exec grestore
}if
np
570.254 242.084 mo
560.514 242.084 li
558.878 242.084 557.552 240.758 557.552 239.122 cv
557.552 238.67 li
558.129 238.392 558.776 238.236 559.46 238.236 cv
559.56 238.236 li
561.986 238.236 563.952 236.269 563.952 233.844 cv
563.952 115.639 li
563.952 115 563.816 114.394 563.571 113.847 cv
642.15 116.051 li
648.2 116.22 653.235 120.753 654.035 126.753 cv
654.227 128.187 654.669 129.577 655.342 130.858 cv
663.539 146.471 li
664.468 148.241 664.953 150.209 664.953 152.208 cv
665.01 161.142 li
664.741 161.039 664.412 160.961 664.015 160.918 cv
664.015 160.918 659.959 161.422 662.57 163.536 cv
663.034 163.912 663.524 164.066 663.983 164.066 cv
664.362 164.066 664.72 163.961 665.027 163.789 cv
665.235 196.472 li
563.952 196.472 li
563.952 202.002 li
665.27 202.002 li
665.316 209.208 li
563.952 209.208 li
563.952 214.739 li
665.351 214.739 li
665.397 221.945 li
628.843 221.945 li
628.755 221.345 628.17 220.788 626.997 220.788 cv
626.997 220.788 623.354 220.788 624.199 221.945 cv
563.952 221.945 li
563.952 227.475 li
664.238 227.475 li
662.924 229.566 660.626 230.98 657.981 231.059 cv
591.65 233.239 li
593.541 232.417 594.907 229.628 591.741 229.286 cv
591.741 229.286 591.574 229.274 591.311 229.274 cv
590.033 229.274 586.5 229.545 589.131 232.732 cv
589.348 232.995 589.59 233.18 589.848 233.298 cv
584.505 233.474 li
576.177 233.474 li
574.559 233.474 573.216 234.787 573.216 236.435 cv
573.216 239.122 li
573.216 240.74 571.902 242.084 570.254 242.084 cv
633.664 216.188 mo
633.664 216.188 629.561 216.188 632.172 218.302 cv
632.604 218.651 633.016 218.793 633.381 218.793 cv
634.853 218.793 635.557 216.487 633.664 216.188 cv
579.28 183.384 mo
578.915 183.384 576.161 183.434 576.795 184.949 cv
577.24 186.014 578.054 186.406 578.909 186.406 cv
580.102 186.406 581.378 185.644 581.857 184.882 cv
582.336 184.12 582.017 183.357 580.021 183.357 cv
579.807 183.357 579.574 183.366 579.32 183.385 cv
579.32 183.385 579.306 183.384 579.28 183.384 cv
612.955 185.562 mo
612.977 185.563 613 185.563 613.022 185.563 cv
637.679 185.563 li
637.701 185.563 637.724 185.563 637.746 185.562 cv
639.149 185.527 640.276 184.378 640.276 182.966 cv
640.276 182.966 li
640.276 155.27 li
640.276 155.27 li
640.276 147.027 633.593 140.345 625.351 140.345 cv
625.351 140.345 li
625.35 140.345 li
618.121 140.345 612.093 145.484 610.719 152.308 cv
610.526 153.266 610.425 154.256 610.425 155.27 cv
610.425 182.966 li
610.425 182.966 li
610.425 182.966 li
610.425 184.378 611.552 185.527 612.955 185.562 cv
604.361 167.87 mo
604.019 167.87 603.465 168.026 603.339 168.999 cv
603.298 169.312 603.501 169.434 603.806 169.434 cv
604.347 169.434 605.21 169.052 605.619 168.669 cv
606.028 168.287 605.982 167.905 604.706 167.905 cv
604.684 167.905 604.661 167.905 604.637 167.905 cv
604.637 167.905 604.523 167.87 604.361 167.87 cv
658.978 154.012 mo
657.033 154.012 651.654 154.424 655.658 159.275 cv
656.312 160.067 657.119 160.391 657.946 160.391 cv
661.433 160.392 665.289 154.641 659.631 154.029 cv
659.631 154.029 659.376 154.012 658.978 154.012 cv
581.957 151.006 mo
581.59 151.006 578.837 151.085 579.471 153.464 cv
579.917 155.137 580.73 155.752 581.585 155.752 cv
582.779 155.753 584.055 154.555 584.534 153.358 cv
585.012 152.161 584.694 150.964 582.698 150.964 cv
582.484 150.964 582.251 150.977 581.997 151.006 cv
581.997 151.006 581.983 151.006 581.957 151.006 cv
640.87 129.392 mo
640.87 129.392 635.415 129.392 639.401 131.511 cv
640.072 131.868 640.656 132.013 641.138 132.013 cv
643.19 132.013 643.415 129.392 640.87 129.392 cv
647.536 124.792 mo
647.536 124.792 643.434 124.792 646.045 126.905 cv
646.476 127.254 646.888 127.396 647.253 127.396 cv
648.725 127.396 649.429 125.09 647.536 124.792 cv
606.455 117.516 mo
606.455 117.516 602.353 117.516 604.964 119.629 cv
605.395 119.978 605.807 120.12 606.172 120.12 cv
607.644 120.12 608.348 117.815 606.455 117.516 cv
559.855 111.256 mo
559.853 111.256 559.851 111.256 559.849 111.256 cv
559.851 111.256 559.853 111.256 559.855 111.256 cv
559.834 111.255 mo
559.831 111.255 559.827 111.254 559.823 111.254 cv
559.827 111.254 559.83 111.255 559.834 111.255 cv
559.811 111.254 mo
559.803 111.253 559.795 111.253 559.788 111.252 cv
559.795 111.253 559.803 111.253 559.811 111.254 cv
559.781 111.252 mo
559.775 111.252 559.768 111.251 559.761 111.251 cv
559.768 111.251 559.774 111.252 559.781 111.252 cv
559.754 111.251 mo
559.747 111.25 559.739 111.25 559.732 111.25 cv
559.739 111.25 559.747 111.25 559.754 111.251 cv
559.729 111.25 mo
559.72 111.249 559.711 111.249 559.702 111.249 cv
559.711 111.249 559.72 111.249 559.729 111.25 cv
559.699 111.249 mo
559.691 111.248 559.684 111.248 559.676 111.248 cv
559.684 111.248 559.691 111.248 559.699 111.249 cv
559.671 111.248 mo
559.654 111.247 559.636 111.247 559.618 111.247 cv
559.636 111.247 559.654 111.247 559.671 111.248 cv
559.613 111.247 mo
559.606 111.247 559.599 111.247 559.592 111.247 cv
559.599 111.247 559.606 111.247 559.613 111.247 cv
559.586 111.247 mo
559.577 111.246 559.568 111.246 559.56 111.246 cv
559.46 111.246 li
557.034 111.246 555.068 109.28 555.068 106.854 cv
555.068 105.507 555.675 104.301 556.63 103.495 cv
560.805 99.9745 563.902 95.3442 566.793 90.7108 cv
622.366 1.65427 li
623.054 .551459 624.201 .000106768 625.348 .000106768 cv
626.486 .000106768 627.625 .54313 628.315 1.62899 cv
627.627 .547548 626.498 .0131692 625.365 .0131692 cv
625.023 .0131692 624.681 .0619094 624.35 .159085 cv
624.352 .158739 624.373 .155824 624.412 .155824 cv
624.797 .155824 626.903 .453139 628.591 6.69715 cv
630.209 12.686 642.928 78.813 646.257 96.1605 cv
646.675 98.3407 645.032 100.357 642.811 100.409 cv
592.414 101.613 li
686.826 101.613 li
689.358 101.613 691.847 102.263 694.056 103.5 cv
689.884 99.9706 686.781 95.3446 683.889 90.7089 cv
628.331 1.6547 li
628.331 1.6547 li
628.331 1.6547 li
683.889 90.7089 li
686.781 95.3446 689.884 99.9706 694.056 103.5 cv
695.009 104.305 695.613 105.509 695.613 106.854 cv
695.613 109.28 693.647 111.246 691.221 111.246 cv
691.121 111.246 li
691.121 111.246 li
559.56 111.246 li
559.569 111.246 559.577 111.246 559.586 111.247 cv
621.125 8.36808 mo
568.739 92.3192 li
594.359 58.4683 li
621.125 8.36808 li
602.187 84.9795 mo
602.187 84.9795 598.084 84.9795 600.695 87.0927 cv
601.127 87.4419 601.539 87.5837 601.904 87.5837 cv
603.375 87.5838 604.08 85.2779 602.187 84.9795 cv
619.984 72.3402 mo
618.706 72.3402 615.17 72.6109 617.802 75.7994 cv
618.231 76.3196 618.761 76.5321 619.304 76.5322 cv
621.596 76.5325 624.13 72.7538 620.412 72.3516 cv
620.412 72.3516 620.245 72.3402 619.984 72.3402 cv
627.071 32.7333 mo
627.071 32.7333 622.968 32.7333 625.579 34.8466 cv
626.01 35.1959 626.422 35.3376 626.787 35.3377 cv
628.259 35.3379 628.963 33.0322 627.071 32.7333 cv
level3{
gsave
clp
[1.00234e-14 163.696 -163.696 1.00234e-14 625.34 52.3047 ]ct
/5 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[1.00234e-14 163.696 -163.696 1.00234e-14 625.34 52.3047 ]ct
clp
/5 /Gradient get_res exec grestore
}if
np
665.27 202.002 mo
563.952 202.002 li
563.952 196.472 li
665.235 196.472 li
665.27 202.002 li
level3{
gsave
clp
[1.00234e-14 163.696 -163.696 1.00234e-14 625.34 52.3047 ]ct
/6 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[1.00234e-14 163.696 -163.696 1.00234e-14 625.34 52.3047 ]ct
clp
/6 /Gradient get_res exec grestore
}if
np
665.351 214.739 mo
563.952 214.739 li
563.952 209.208 li
665.316 209.208 li
665.351 214.739 li
level3{
gsave
clp
[1.00234e-14 163.696 -163.696 1.00234e-14 625.34 52.3047 ]ct
/6 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[1.00234e-14 163.696 -163.696 1.00234e-14 625.34 52.3047 ]ct
clp
/6 /Gradient get_res exec grestore
}if
np
664.238 227.475 mo
563.952 227.475 li
563.952 221.945 li
624.199 221.945 li
624.387 222.204 624.801 222.52 625.529 222.908 cv
626.2 223.265 626.783 223.409 627.265 223.409 cv
628.372 223.41 628.947 222.648 628.843 221.945 cv
665.397 221.945 li
665.406 223.41 li
665.406 224.902 664.979 226.296 664.238 227.475 cv
level3{
gsave
clp
[1.00234e-14 163.696 -163.696 1.00234e-14 625.34 52.3047 ]ct
/6 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[1.00234e-14 163.696 -163.696 1.00234e-14 625.34 52.3047 ]ct
clp
/6 /Gradient get_res exec grestore
}if
np
566.05 462.654 mo
558.54 462.654 li
558.54 414.204 li
689.382 414.204 li
689.382 433.449 li
689.382 438.621 686.104 443.225 681.216 444.916 cv
680.2 445.267 679.141 445.483 678.068 445.556 cv
589.804 448.108 li
576.07 448.108 li
573.302 448.108 571.06 450.351 571.06 453.118 cv
571.06 457.645 li
571.06 460.411 568.817 462.654 566.05 462.654 cv
577.097 436.139 mo
575.045 436.139 574.82 438.76 577.365 438.76 cv
577.365 438.76 582.819 438.76 578.834 436.641 cv
578.162 436.283 577.579 436.139 577.097 436.139 cv
630.456 423.851 mo
626.968 423.851 623.112 429.601 628.771 430.213 cv
628.771 430.213 629.025 430.23 629.423 430.23 cv
631.368 430.23 636.748 429.818 632.743 424.967 cv
632.089 424.174 631.283 423.851 630.456 423.851 cv
638.11 415.334 mo
636.159 415.334 634.754 418.123 638.077 418.481 cv
638.077 418.481 642.134 417.978 639.523 415.864 cv
639.058 415.488 638.569 415.334 638.11 415.334 cv
710.374 442.327 mo
710.219 442.327 li
707.093 442.327 704.559 439.792 704.559 436.666 cv
704.559 436.666 li
704.559 439.79 707.095 442.327 710.219 442.327 cv
710.374 442.327 li
710.374 442.327 li
689.382 403.876 mo
558.54 403.876 li
558.54 363.181 li
558.54 359.083 561.151 355.596 564.799 354.29 cv
566.7 353.609 568.002 351.857 568.025 349.838 cv
568.025 349.838 li
568.116 341.829 li
568.507 341.829 li
570.181 341.829 571.75 341.38 573.1 340.596 cv
591.905 340.596 li
593.1 340.596 594.07 339.432 594.07 337.998 cv
594.07 310.303 li
594.07 310.303 li
594.07 302.06 588.501 295.378 581.632 295.378 cv
581.632 295.378 li
581.631 295.378 li
577.33 295.378 573.54 297.997 571.306 301.979 cv
552.797 301.979 li
551.355 297.995 548.907 295.377 546.118 295.377 cv
546.118 301.979 li
546.112 301.979 li
546.112 263.453 li
546.112 262.83 546.013 262.232 545.83 261.673 cv
654.307 264.957 li
660.023 265.13 665.14 268.546 667.492 273.758 cv
668.504 276.001 670.053 277.96 672.004 279.46 cv
683.547 288.346 li
687.226 291.179 689.382 295.559 689.382 300.203 cv
689.382 403.876 li
605.061 383.999 mo
602.331 383.999 600.997 388.819 604.848 388.819 cv
604.848 388.819 610.691 388.819 607.707 385.463 cv
606.769 384.408 605.856 383.999 605.061 383.999 cv
652.052 383.225 mo
652.052 383.225 652.164 383.25 652.323 383.25 cv
652.659 383.25 653.203 383.141 653.327 382.466 cv
653.367 382.248 653.167 382.163 652.867 382.163 cv
652.336 382.163 651.489 382.428 651.088 382.694 cv
650.687 382.96 650.732 383.226 651.988 383.226 cv
652.009 383.226 652.03 383.226 652.052 383.225 cv
673.43 381.607 mo
673.43 381.607 673.545 381.642 673.707 381.642 cv
674.049 381.642 674.603 381.486 674.729 380.515 cv
674.77 380.201 674.567 380.079 674.261 380.079 cv
673.72 380.079 672.857 380.461 672.449 380.843 cv
672.04 381.225 672.085 381.608 673.362 381.608 cv
673.384 381.608 673.407 381.608 673.43 381.607 cv
680.544 372.16 mo
678.252 372.16 675.719 375.939 679.437 376.341 cv
679.437 376.341 679.604 376.352 679.866 376.352 cv
681.144 376.352 684.678 376.081 682.047 372.893 cv
681.617 372.373 681.087 372.16 680.544 372.16 cv
578.709 360.754 mo
577.237 360.754 576.533 363.06 578.426 363.359 cv
578.426 363.359 582.529 363.359 579.918 361.245 cv
579.487 360.896 579.074 360.754 578.709 360.754 cv
622.057 357.439 mo
620.585 357.439 619.881 359.745 621.774 360.044 cv
621.774 360.044 625.876 360.044 623.266 357.931 cv
622.834 357.581 622.422 357.439 622.057 357.439 cv
650.083 347.64 mo
647.352 347.64 646.018 352.461 649.87 352.461 cv
649.87 352.461 655.713 352.461 652.729 349.104 cv
651.791 348.049 650.878 347.64 650.083 347.64 cv
658.76 340.596 mo
658.76 340.596 li
679.307 340.596 li
680.503 340.596 681.472 339.432 681.472 337.998 cv
681.472 310.303 li
681.472 310.303 li
681.472 302.06 675.903 295.378 669.034 295.378 cv
669.034 295.378 li
662.164 295.378 656.595 302.06 656.595 310.303 cv
656.595 337.998 li
656.595 337.998 li
656.595 338.155 656.607 338.309 656.629 338.458 cv
656.81 339.673 657.695 340.596 658.76 340.596 cv
658.76 340.596 li
610.416 337.998 mo
610.416 337.998 li
610.416 339.432 611.579 340.596 613.013 340.596 cv
637.67 340.596 li
639.104 340.596 640.267 339.432 640.267 337.998 cv
640.267 310.303 li
640.267 310.303 li
640.267 302.06 633.585 295.378 625.342 295.378 cv
625.342 295.378 li
625.341 295.378 li
618.112 295.378 612.084 300.517 610.71 307.341 cv
610.517 308.298 610.416 309.289 610.416 310.303 cv
610.416 337.998 li
610.416 337.998 li
603.296 325.122 mo
602.103 325.122 600.827 326.319 600.348 327.516 cv
599.869 328.714 600.188 329.911 602.184 329.911 cv
602.398 329.911 602.631 329.897 602.885 329.868 cv
602.885 329.868 602.899 329.869 602.924 329.869 cv
603.289 329.869 606.044 329.79 605.41 327.41 cv
604.965 325.738 604.152 325.122 603.296 325.122 cv
605.972 294.468 mo
604.779 294.468 603.503 295.23 603.024 295.993 cv
602.545 296.755 602.864 297.517 604.861 297.517 cv
605.075 297.517 605.308 297.508 605.561 297.49 cv
605.561 297.49 605.575 297.49 605.601 297.49 cv
605.965 297.49 608.721 297.44 608.087 295.925 cv
607.641 294.86 606.828 294.468 605.972 294.468 cv
616.325 281.006 mo
615.132 281.006 613.856 282.203 613.377 283.4 cv
612.898 284.597 613.217 285.795 615.213 285.795 cv
615.427 285.795 615.661 285.781 615.914 285.752 cv
615.914 285.752 615.928 285.752 615.954 285.752 cv
616.32 285.752 619.073 285.674 618.439 283.294 cv
617.993 281.621 617.18 281.006 616.325 281.006 cv
558.256 283.366 mo
558.256 283.366 558.371 283.4 558.532 283.4 cv
558.875 283.4 559.429 283.245 559.555 282.272 cv
559.595 281.959 559.393 281.837 559.087 281.837 cv
558.546 281.837 557.683 282.219 557.274 282.601 cv
556.865 282.984 556.911 283.366 558.188 283.366 cv
558.21 283.366 558.233 283.366 558.256 283.366 cv
647.412 278.144 mo
647.412 278.144 647.566 278.169 647.782 278.169 cv
648.241 278.169 648.984 278.06 649.153 277.384 cv
649.207 277.167 648.936 277.082 648.526 277.082 cv
647.801 277.082 646.644 277.347 646.097 277.613 cv
645.549 277.879 645.61 278.145 647.322 278.145 cv
647.352 278.145 647.382 278.145 647.412 278.144 cv
540.538 257.761 mo
540.538 257.761 540.538 257.761 540.538 257.761 cv
540.538 257.761 540.538 257.761 540.538 257.761 cv
540.51 257.761 mo
540.51 257.761 540.509 257.761 540.508 257.761 cv
540.509 257.761 540.51 257.761 540.51 257.761 cv
540.482 257.761 mo
540.48 257.761 540.479 257.761 540.477 257.761 cv
540.479 257.761 540.48 257.761 540.482 257.761 cv
710.374 257.761 mo
710.219 257.761 li
710.219 257.761 li
540.45 257.761 li
540.45 257.761 li
540.327 257.761 li
540.188 257.761 540.05 257.756 539.913 257.746 cv
539.948 257.746 539.983 257.747 540.018 257.747 cv
710.68 257.747 li
710.716 257.747 710.752 257.746 710.788 257.746 cv
710.652 257.756 710.513 257.761 710.374 257.761 cv
level3{
gsave
clp
[1.1274e-14 -184.12 184.12 1.1274e-14 625.351 455.678 ]ct
/7 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[1.1274e-14 -184.12 184.12 1.1274e-14 625.351 455.678 ]ct
clp
/7 /Gradient get_res exec grestore
}if
np
716.035 447.988 mo
716.035 444.863 713.499 442.327 710.374 442.327 cv
710.375 442.327 li
713.501 442.327 716.035 444.861 716.035 447.988 cv
545.83 261.673 mo
545.802 261.672 li
545.065 259.427 543.004 257.799 540.538 257.761 cv
543.008 257.799 545.097 259.422 545.83 261.673 cv
540.538 257.761 mo
540.529 257.761 540.519 257.761 540.51 257.761 cv
540.519 257.761 540.529 257.761 540.538 257.761 cv
540.508 257.761 mo
540.5 257.761 540.491 257.761 540.482 257.761 cv
540.491 257.761 540.5 257.761 540.508 257.761 cv
540.477 257.761 mo
540.468 257.761 540.459 257.761 540.45 257.761 cv
540.45 257.761 li
540.459 257.761 540.468 257.761 540.477 257.761 cv
.980392 .901961 .862745 rgb
f
701.127 462.654 mo
684.651 462.654 li
681.884 462.654 679.641 460.411 679.641 457.645 cv
679.641 453.118 li
679.641 450.351 677.398 448.108 674.631 448.108 cv
643.608 448.108 li
640.842 448.108 638.598 450.351 638.598 453.117 cv
638.598 457.645 li
638.598 460.411 636.355 462.654 633.589 462.654 cv
625.351 462.654 li
617.112 462.654 li
614.345 462.654 612.102 460.411 612.102 457.645 cv
612.102 453.118 li
612.102 450.351 609.859 448.108 607.092 448.108 cv
589.804 448.108 li
678.068 445.556 li
679.141 445.483 680.2 445.267 681.216 444.916 cv
686.104 443.225 689.382 438.621 689.382 433.449 cv
689.382 414.204 li
704.547 414.204 li
704.547 403.876 li
689.382 403.876 li
689.382 300.203 li
689.382 295.559 687.226 291.179 683.547 288.346 cv
672.004 279.46 li
670.053 277.96 668.504 276.001 667.492 273.758 cv
665.14 268.546 660.023 265.13 654.307 264.957 cv
545.83 261.673 li
545.097 259.422 543.008 257.799 540.538 257.761 cv
540.538 257.761 540.538 257.761 540.538 257.761 cv
540.529 257.761 540.519 257.761 540.51 257.761 cv
540.51 257.761 540.509 257.761 540.508 257.761 cv
540.5 257.761 540.491 257.761 540.482 257.761 cv
540.48 257.761 540.479 257.761 540.477 257.761 cv
540.468 257.761 540.459 257.761 540.45 257.761 cv
710.219 257.761 li
707.095 257.761 704.559 260.297 704.559 263.453 cv
704.559 436.666 li
704.559 436.666 li
704.559 439.792 707.093 442.327 710.219 442.327 cv
710.374 442.327 li
713.499 442.327 716.035 444.863 716.035 447.988 cv
716.035 447.988 li
716.035 448.108 li
711.147 448.108 li
708.38 448.108 706.137 450.351 706.137 453.118 cv
706.137 457.645 li
706.137 460.411 703.894 462.654 701.127 462.654 cv
691.373 379.559 mo
689.901 379.559 689.197 381.864 691.09 382.163 cv
691.09 382.163 695.192 382.163 692.581 380.05 cv
692.15 379.701 691.738 379.559 691.373 379.559 cv
696.504 338.005 mo
696.504 338.005 li
696.504 339.428 697.123 340.604 697.896 340.604 cv
704.547 340.604 li
704.547 339.103 li
704.547 302.262 li
704.547 302.262 li
704.547 295.377 li
704.547 295.377 li
700.092 295.377 696.504 302.059 696.504 310.318 cv
696.504 338.005 li
696.504 338.005 li
676.164 268.454 mo
674.692 268.454 673.988 270.759 675.881 271.058 cv
675.881 271.058 679.983 271.058 677.373 268.945 cv
676.941 268.596 676.529 268.454 676.164 268.454 cv
level3{
gsave
clp
[1.1274e-14 -184.12 184.12 1.1274e-14 625.351 455.678 ]ct
/8 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[1.1274e-14 -184.12 184.12 1.1274e-14 625.351 455.678 ]ct
clp
/8 /Gradient get_res exec grestore
}if
np
689.382 414.204 mo
558.54 414.204 li
558.54 403.876 li
689.382 403.876 li
689.382 414.204 li
668.024 410.25 mo
667.15 410.25 666.215 411.013 665.864 411.774 cv
665.514 412.537 665.747 413.299 667.209 413.299 cv
667.366 413.299 667.537 413.29 667.723 413.271 cv
667.723 413.271 667.733 413.272 667.752 413.272 cv
668.022 413.272 670.037 413.221 669.573 411.707 cv
669.246 410.642 668.651 410.25 668.024 410.25 cv
565.577 404.342 mo
563.285 404.342 560.751 408.121 564.469 408.523 cv
564.469 408.523 564.637 408.534 564.899 408.534 cv
566.177 408.534 569.711 408.263 567.08 405.075 cv
566.651 404.555 566.121 404.342 565.577 404.342 cv
level3{
gsave
clp
[1.1274e-14 -184.12 184.12 1.1274e-14 625.351 455.678 ]ct
/8 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[1.1274e-14 -184.12 184.12 1.1274e-14 625.351 455.678 ]ct
clp
/8 /Gradient get_res exec grestore
}if
np
704.547 414.204 mo
689.382 414.204 li
689.382 403.876 li
704.547 403.876 li
704.547 414.204 li
level3{
gsave
clp
[1.1274e-14 -184.12 184.12 1.1274e-14 625.351 455.678 ]ct
/9 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[1.1274e-14 -184.12 184.12 1.1274e-14 625.351 455.678 ]ct
clp
/9 /Gradient get_res exec grestore
}if
np
635.386 339.103 mo
615.297 339.103 li
614.128 339.103 613.181 338.156 613.181 336.987 cv
613.181 314.422 li
613.181 307.706 618.625 302.262 625.341 302.262 cv
625.342 302.262 li
632.058 302.262 637.502 307.706 637.502 314.422 cv
637.502 336.987 li
637.502 338.156 636.555 339.103 635.386 339.103 cv
level3{
gsave
clp
[2.22083e-15 -36.269 36.269 2.22083e-15 625.342 339.91 ]ct
/10 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[2.22083e-15 -36.269 36.269 2.22083e-15 625.342 339.91 ]ct
clp
/10 /Gradient get_res exec grestore
}if
np
658.76 340.596 mo
658.76 340.596 li
657.695 340.596 656.81 339.673 656.629 338.458 cv
656.81 339.673 657.695 340.596 658.76 340.596 cv
677.405 339.103 mo
660.663 339.103 li
659.689 339.103 658.9 338.156 658.9 336.987 cv
658.9 314.422 li
658.9 307.706 663.436 302.262 669.034 302.262 cv
669.034 302.262 li
674.631 302.262 679.168 307.706 679.168 314.422 cv
679.168 336.987 li
679.168 338.156 678.378 339.103 677.405 339.103 cv
level3{
gsave
clp
[2.22083e-15 -36.269 36.269 2.22083e-15 669.034 339.91 ]ct
/10 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[2.22083e-15 -36.269 36.269 2.22083e-15 669.034 339.91 ]ct
clp
/10 /Gradient get_res exec grestore
}if
np
704.547 339.103 mo
699.129 339.103 li
698.499 339.103 697.995 338.146 697.995 336.987 cv
697.995 314.433 li
697.995 307.705 700.918 302.262 704.547 302.262 cv
704.547 339.103 li
level3{
gsave
clp
[2.22081e-15 -36.2686 36.2686 2.22081e-15 700.526 339.91 ]ct
/10 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[2.22081e-15 -36.2686 36.2686 2.22081e-15 700.526 339.91 ]ct
clp
/10 /Gradient get_res exec grestore
}if
np
590.002 339.103 mo
575.026 339.103 li
576.659 337.449 577.667 335.176 577.667 332.668 cv
577.667 306.843 li
577.667 305.711 577.28 304.669 576.632 303.842 cv
578.107 302.836 579.813 302.262 581.631 302.262 cv
581.632 302.262 li
587.229 302.262 591.766 307.706 591.766 314.422 cv
591.766 336.987 li
591.766 338.156 590.976 339.103 590.002 339.103 cv
level3{
gsave
clp
[2.22083e-15 -36.269 36.269 2.22083e-15 581.632 339.91 ]ct
/10 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[2.22083e-15 -36.269 36.269 2.22083e-15 581.632 339.91 ]ct
clp
/10 /Gradient get_res exec grestore
}if
np
679.783 604.388 mo
672.954 604.388 li
672.954 551.072 li
672.954 548.243 670.661 545.95 667.832 545.95 cv
667.832 545.95 li
667.832 545.95 667.832 545.95 667.832 545.95 cv
666.417 545.95 665.137 546.523 664.211 547.45 cv
663.284 548.377 662.71 549.658 662.71 551.072 cv
662.71 604.174 li
660.771 603.572 659.363 601.764 659.363 599.627 cv
659.363 595.325 li
659.363 592.695 657.231 590.563 654.602 590.563 cv
644.633 590.563 li
644.633 551.072 li
644.633 551.072 li
644.633 548.243 642.34 545.95 639.511 545.95 cv
636.682 545.95 634.389 548.243 634.389 551.072 cv
634.389 590.563 li
625.12 590.563 li
622.49 590.563 620.358 592.695 620.358 595.325 cv
620.358 599.627 li
620.358 602.014 618.602 603.99 616.312 604.334 cv
616.312 555.207 li
622.547 555.207 li
623.836 555.207 624.88 554.162 624.88 552.874 cv
624.88 541.47 li
624.941 536.092 li
625.591 536.092 li
632.803 536.092 638.649 530.245 638.649 523.033 cv
638.649 516.715 li
638.784 516.796 638.935 516.882 639.102 516.971 cv
639.774 517.328 640.357 517.472 640.839 517.472 cv
642.891 517.472 643.116 514.851 640.571 514.851 cv
640.571 514.851 639.496 514.851 638.649 515.036 cv
638.649 501.849 li
638.649 500.859 638.347 499.94 637.83 499.178 cv
680.516 499.982 li
683.578 500.04 686.335 501.852 687.601 504.642 cv
695.864 522.838 li
696.263 523.718 696.82 524.517 697.506 525.197 cv
707.541 535.139 li
709.047 536.631 709.894 538.663 709.894 540.783 cv
709.894 590.563 li
701.275 590.563 li
701.275 551.072 li
701.275 551.072 li
701.275 548.243 698.982 545.95 696.153 545.95 cv
693.324 545.95 691.031 548.243 691.031 551.072 cv
691.031 590.563 li
689.305 590.563 li
686.675 590.563 684.544 592.695 684.544 595.325 cv
684.544 599.627 li
684.544 602.257 682.412 604.388 679.783 604.388 cv
680.591 597.527 mo
680.591 597.527 676.488 597.527 679.099 599.641 cv
679.53 599.99 679.942 600.132 680.307 600.132 cv
681.779 600.132 682.484 597.826 680.591 597.527 cv
689.847 536.746 mo
689.482 536.746 686.727 536.824 687.362 539.203 cv
687.807 540.876 688.62 541.491 689.476 541.491 cv
690.669 541.491 691.945 540.294 692.423 539.097 cv
692.902 537.9 692.584 536.703 690.589 536.703 cv
690.374 536.703 690.141 536.717 689.886 536.746 cv
689.886 536.746 689.873 536.746 689.847 536.746 cv
648.008 536.181 mo
646.73 536.181 643.195 536.452 645.826 539.64 cv
646.256 540.16 646.786 540.373 647.33 540.373 cv
649.622 540.373 652.155 536.594 648.437 536.192 cv
648.437 536.192 648.27 536.181 648.008 536.181 cv
647.237 510.251 mo
647.237 510.251 643.135 510.251 645.745 512.364 cv
646.177 512.713 646.589 512.855 646.954 512.855 cv
648.426 512.855 649.13 510.55 647.237 510.251 cv
594.883 510.911 mo
579.224 510.911 li
576.595 510.911 574.463 508.779 574.463 506.15 cv
574.463 501.849 li
574.463 500.233 573.659 498.806 572.43 497.945 cv
601.035 498.484 li
600.175 499.346 599.644 500.535 599.644 501.848 cv
599.644 506.15 li
599.644 508.779 597.512 510.911 594.883 510.911 cv
722.924 508.402 mo
722.986 504.246 725.656 500.722 729.369 499.394 cv
731.327 498.692 732.668 496.889 732.692 494.808 cv
732.668 496.889 731.327 498.692 729.369 499.394 cv
725.656 500.722 722.986 504.246 722.924 508.402 cv
level3{
gsave
clp
[1.4561e-14 237.8 -237.8 1.4561e-14 625.35 500.311 ]ct
/11 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[1.4561e-14 237.8 -237.8 1.4561e-14 625.35 500.311 ]ct
clp
/11 /Gradient get_res exec grestore
}if
np
722.923 592.964 mo
722.103 591.53 720.558 590.563 718.788 590.563 cv
709.894 590.563 li
709.894 540.783 li
709.894 538.663 709.047 536.631 707.541 535.139 cv
697.506 525.197 li
696.82 524.517 696.263 523.718 695.864 522.838 cv
687.601 504.642 li
686.335 501.852 683.578 500.04 680.516 499.982 cv
637.83 499.178 li
636.974 497.916 635.528 497.087 633.888 497.087 cv
604.405 497.087 li
603.089 497.087 601.897 497.621 601.035 498.484 cv
572.43 497.945 li
571.657 497.404 570.717 497.087 569.702 497.087 cv
558.54 497.087 li
558.54 489.15 li
571.06 489.15 li
612.102 489.15 li
625.351 489.15 li
638.598 489.15 li
679.641 489.15 li
706.137 489.15 li
732.756 489.15 li
732.692 494.808 li
732.692 494.808 li
732.668 496.889 731.327 498.692 729.369 499.394 cv
725.656 500.722 722.986 504.246 722.924 508.402 cv
722.924 508.451 722.923 508.5 722.923 508.55 cv
722.923 592.964 li
706.248 520.776 mo
706.248 520.776 702.145 520.776 704.756 522.89 cv
705.187 523.239 705.599 523.38 705.964 523.381 cv
707.436 523.381 708.141 521.075 706.248 520.776 cv
level3{
gsave
clp
[1.4561e-14 237.8 -237.8 1.4561e-14 625.35 500.311 ]ct
/12 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[1.4561e-14 237.8 -237.8 1.4561e-14 625.35 500.311 ]ct
clp
/12 /Gradient get_res exec grestore
}if
np
733.256 489.15 mo
732.756 489.15 li
706.137 489.15 li
679.641 489.15 li
638.598 489.15 li
625.351 489.15 li
612.102 489.15 li
571.06 489.15 li
558.54 489.15 li
558.54 462.654 li
566.05 462.654 li
568.817 462.654 571.06 460.411 571.06 457.645 cv
571.06 453.118 li
571.06 450.351 573.302 448.108 576.07 448.108 cv
589.804 448.108 li
607.092 448.108 li
609.859 448.108 612.102 450.351 612.102 453.118 cv
612.102 457.645 li
612.102 460.411 614.345 462.654 617.112 462.654 cv
625.351 462.654 li
633.589 462.654 li
636.355 462.654 638.598 460.411 638.598 457.645 cv
638.598 453.117 li
638.598 450.351 640.842 448.108 643.608 448.108 cv
674.631 448.108 li
677.398 448.108 679.641 450.351 679.641 453.118 cv
679.641 457.645 li
679.641 460.411 681.884 462.654 684.651 462.654 cv
701.127 462.654 li
703.894 462.654 706.137 460.411 706.137 457.645 cv
706.137 453.118 li
706.137 450.351 708.38 448.108 711.147 448.108 cv
716.035 448.108 li
742.17 448.108 li
744.937 448.108 747.18 450.351 747.18 453.118 cv
747.18 475.227 li
747.18 482.916 740.945 489.15 733.256 489.15 cv
679.469 480.222 mo
679.127 480.222 678.573 480.378 678.448 481.35 cv
678.407 481.663 678.609 481.785 678.915 481.785 cv
679.456 481.785 680.319 481.403 680.728 481.021 cv
681.137 480.639 681.091 480.256 679.815 480.256 cv
679.793 480.256 679.77 480.257 679.746 480.257 cv
679.746 480.257 679.631 480.222 679.469 480.222 cv
716.642 478.08 mo
716.642 478.08 712.54 478.08 715.151 480.193 cv
715.582 480.542 715.994 480.684 716.359 480.684 cv
717.831 480.684 718.535 478.378 716.642 478.08 cv
595.439 474.844 mo
594.16 474.844 590.628 475.115 593.259 478.303 cv
593.688 478.823 594.219 479.036 594.762 479.036 cv
597.054 479.036 599.587 475.257 595.869 474.855 cv
595.869 474.855 595.702 474.844 595.439 474.844 cv
584.216 469.032 mo
584.216 469.032 580.114 469.032 582.724 471.146 cv
583.156 471.496 583.568 471.637 583.933 471.637 cv
585.405 471.638 586.109 469.331 584.216 469.032 cv
601.599 469.553 mo
601.257 469.553 600.703 469.709 600.577 470.682 cv
600.536 470.994 600.739 471.116 601.044 471.116 cv
601.584 471.117 602.448 470.734 602.857 470.352 cv
603.266 469.97 603.22 469.587 601.944 469.587 cv
601.921 469.587 601.898 469.588 601.875 469.588 cv
601.875 469.588 601.761 469.553 601.599 469.553 cv
657.065 463.358 mo
656.696 463.358 653.946 463.437 654.58 465.815 cv
655.026 467.488 655.839 468.103 656.694 468.103 cv
657.887 468.104 659.163 466.906 659.642 465.709 cv
660.121 464.512 659.803 463.315 657.808 463.315 cv
657.593 463.315 657.359 463.329 657.105 463.358 cv
657.105 463.358 657.091 463.358 657.065 463.358 cv
726.248 463.614 mo
724.97 463.614 721.435 463.885 724.066 467.072 cv
724.496 467.593 725.026 467.805 725.57 467.805 cv
727.861 467.806 730.395 464.027 726.677 463.625 cv
726.677 463.625 726.51 463.614 726.248 463.614 cv
level3{
gsave
clp
[243.658 0 0 243.658 503.521 468.629 ]ct
/5 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[243.658 0 0 243.658 503.521 468.629 ]ct
clp
/5 /Gradient get_res exec grestore
}if
np
610.71 307.341 mo
612.084 300.517 618.112 295.378 625.341 295.378 cv
625.342 295.378 li
618.112 295.378 612.084 300.517 610.71 307.341 cv
level3{
gsave
clp
[1.1274e-14 -184.12 184.12 1.1274e-14 625.351 455.678 ]ct
/14 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[1.1274e-14 -184.12 184.12 1.1274e-14 625.351 455.678 ]ct
clp
/14 /Gradient get_res exec grestore
}if
np
637.67 340.596 mo
613.013 340.596 li
611.579 340.596 610.416 339.432 610.416 337.998 cv
610.416 310.303 li
610.416 309.289 610.517 308.298 610.71 307.341 cv
612.084 300.517 618.112 295.378 625.342 295.378 cv
625.342 295.378 li
633.585 295.378 640.267 302.06 640.267 310.303 cv
640.267 337.998 li
640.267 339.432 639.104 340.596 637.67 340.596 cv
625.341 302.262 mo
618.625 302.262 613.181 307.706 613.181 314.422 cv
613.181 336.987 li
613.181 338.156 614.128 339.103 615.297 339.103 cv
635.386 339.103 li
636.555 339.103 637.502 338.156 637.502 336.987 cv
637.502 314.422 li
637.502 307.706 632.058 302.262 625.342 302.262 cv
625.341 302.262 li
level3{
gsave
clp
[2.22083e-15 -36.269 36.269 2.22083e-15 625.342 339.91 ]ct
/13 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[2.22083e-15 -36.269 36.269 2.22083e-15 625.342 339.91 ]ct
clp
/13 /Gradient get_res exec grestore
}if
np
679.307 340.596 mo
658.76 340.596 li
657.695 340.596 656.81 339.673 656.629 338.458 cv
656.607 338.309 656.595 338.155 656.595 337.998 cv
656.595 310.303 li
656.595 302.06 662.164 295.378 669.034 295.378 cv
669.034 295.378 li
675.903 295.378 681.472 302.06 681.472 310.303 cv
681.472 337.998 li
681.472 339.432 680.503 340.596 679.307 340.596 cv
669.034 302.262 mo
663.436 302.262 658.9 307.706 658.9 314.422 cv
658.9 336.987 li
658.9 338.156 659.689 339.103 660.663 339.103 cv
677.405 339.103 li
678.378 339.103 679.168 338.156 679.168 336.987 cv
679.168 314.422 li
679.168 307.706 674.631 302.262 669.034 302.262 cv
669.034 302.262 li
level3{
gsave
clp
[2.22083e-15 -36.269 36.269 2.22083e-15 669.034 339.91 ]ct
/13 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[2.22083e-15 -36.269 36.269 2.22083e-15 669.034 339.91 ]ct
clp
/13 /Gradient get_res exec grestore
}if
np
704.547 340.604 mo
697.896 340.604 li
697.123 340.604 696.504 339.428 696.504 338.005 cv
696.504 310.318 li
696.504 302.059 700.092 295.377 704.547 295.377 cv
704.547 302.262 li
700.918 302.262 697.995 307.705 697.995 314.433 cv
697.995 336.987 li
697.995 338.146 698.499 339.103 699.129 339.103 cv
704.547 339.103 li
704.547 340.604 li
level3{
gsave
clp
[2.22081e-15 -36.2686 36.2686 2.22081e-15 700.526 339.91 ]ct
/13 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[2.22081e-15 -36.2686 36.2686 2.22081e-15 700.526 339.91 ]ct
clp
/13 /Gradient get_res exec grestore
}if
np
571.306 301.979 mo
571.306 301.979 li
573.54 297.997 577.33 295.378 581.631 295.378 cv
581.632 295.378 li
577.331 295.378 573.54 297.997 571.306 301.979 cv
level3{
gsave
clp
[1.1274e-14 -184.12 184.12 1.1274e-14 625.351 455.678 ]ct
/14 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[1.1274e-14 -184.12 184.12 1.1274e-14 625.351 455.678 ]ct
clp
/14 /Gradient get_res exec grestore
}if
np
591.905 340.596 mo
573.1 340.596 li
573.808 340.185 574.455 339.682 575.026 339.103 cv
590.002 339.103 li
590.976 339.103 591.766 338.156 591.766 336.987 cv
591.766 314.422 li
591.766 307.706 587.229 302.262 581.632 302.262 cv
581.631 302.262 li
579.813 302.262 578.107 302.836 576.632 303.842 cv
575.741 302.708 574.357 301.979 572.803 301.979 cv
571.306 301.979 li
573.54 297.997 577.331 295.378 581.632 295.378 cv
581.632 295.378 li
588.501 295.378 594.07 302.06 594.07 310.303 cv
594.07 337.998 li
594.07 339.432 593.1 340.596 591.905 340.596 cv
level3{
gsave
clp
[2.22083e-15 -36.269 36.269 2.22083e-15 581.632 339.91 ]ct
/13 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[2.22083e-15 -36.269 36.269 2.22083e-15 581.632 339.91 ]ct
clp
/13 /Gradient get_res exec grestore
}if
np
552.797 301.979 mo
546.118 301.979 li
546.118 295.377 li
548.907 295.377 551.355 297.995 552.797 301.979 cv
level3{
gsave
clp
[2.22081e-15 -36.2686 36.2686 2.22081e-15 550.14 339.91 ]ct
/13 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[2.22081e-15 -36.2686 36.2686 2.22081e-15 550.14 339.91 ]ct
clp
/13 /Gradient get_res exec grestore
}if
np
637.746 185.562 mo
639.149 185.527 640.276 184.377 640.276 182.966 cv
640.276 184.378 639.149 185.527 637.746 185.562 cv
612.955 185.562 mo
611.552 185.527 610.425 184.378 610.425 182.966 cv
610.425 184.377 611.552 185.527 612.955 185.562 cv
635.395 184.071 mo
615.306 184.071 li
614.137 184.071 613.19 183.124 613.19 181.955 cv
613.19 159.39 li
613.19 152.673 618.635 147.229 625.35 147.229 cv
625.351 147.229 li
632.067 147.229 637.511 152.673 637.511 159.39 cv
637.511 181.955 li
637.511 183.124 636.564 184.071 635.395 184.071 cv
level3{
gsave
clp
[2.31506e-15 -37.8079 37.8079 2.31506e-15 625.351 187.878 ]ct
/10 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[2.31506e-15 -37.8079 37.8079 2.31506e-15 625.351 187.878 ]ct
clp
/10 /Gradient get_res exec grestore
}if
np
610.719 152.308 mo
612.093 145.484 618.121 140.345 625.35 140.345 cv
625.351 140.345 li
618.122 140.345 612.093 145.484 610.719 152.308 cv
level3{
gsave
clp
[1.00234e-14 163.696 -163.696 1.00234e-14 625.34 52.3047 ]ct
/15 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[1.00234e-14 163.696 -163.696 1.00234e-14 625.34 52.3047 ]ct
clp
/15 /Gradient get_res exec grestore
}if
np
637.679 185.563 mo
613.022 185.563 li
613 185.563 612.977 185.563 612.955 185.562 cv
611.552 185.527 610.425 184.377 610.425 182.966 cv
610.425 182.966 li
610.425 155.27 li
610.425 154.256 610.526 153.266 610.719 152.308 cv
612.093 145.484 618.122 140.345 625.351 140.345 cv
625.351 140.345 li
633.593 140.345 640.276 147.027 640.276 155.27 cv
640.276 182.966 li
640.276 182.966 li
640.276 184.377 639.149 185.527 637.746 185.562 cv
637.724 185.563 637.701 185.563 637.679 185.563 cv
625.35 147.229 mo
618.635 147.229 613.19 152.673 613.19 159.39 cv
613.19 181.955 li
613.19 183.124 614.137 184.071 615.306 184.071 cv
635.395 184.071 li
636.564 184.071 637.511 183.124 637.511 181.955 cv
637.511 159.39 li
637.511 152.673 632.067 147.229 625.351 147.229 cv
625.35 147.229 li
level3{
gsave
clp
[2.31506e-15 -37.8079 37.8079 2.31506e-15 625.351 187.878 ]ct
/13 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[2.31506e-15 -37.8079 37.8079 2.31506e-15 625.351 187.878 ]ct
clp
/13 /Gradient get_res exec grestore
}if
np
691.093 238.236 mo
688.68 238.22 686.729 236.26 686.729 233.844 cv
686.729 236.26 688.68 238.22 691.093 238.236 cv
563.571 113.847 mo
563.562 113.847 li
562.914 112.401 561.513 111.367 559.855 111.256 cv
561.516 111.366 562.924 112.399 563.571 113.847 cv
559.849 111.256 mo
559.844 111.256 559.839 111.255 559.834 111.255 cv
559.839 111.255 559.844 111.256 559.849 111.256 cv
559.823 111.254 mo
559.819 111.254 559.815 111.254 559.811 111.254 cv
559.815 111.254 559.819 111.254 559.823 111.254 cv
559.788 111.252 mo
559.785 111.252 559.783 111.252 559.781 111.252 cv
559.783 111.252 559.785 111.252 559.788 111.252 cv
559.761 111.251 mo
559.759 111.251 559.757 111.251 559.754 111.251 cv
559.757 111.251 559.759 111.251 559.761 111.251 cv
559.732 111.25 mo
559.731 111.25 559.73 111.25 559.729 111.25 cv
559.73 111.25 559.731 111.25 559.732 111.25 cv
559.702 111.249 mo
559.701 111.249 559.7 111.249 559.699 111.249 cv
559.7 111.249 559.701 111.249 559.702 111.249 cv
559.676 111.248 mo
559.674 111.248 559.673 111.248 559.671 111.248 cv
559.673 111.248 559.674 111.248 559.676 111.248 cv
559.618 111.247 mo
559.617 111.247 559.615 111.247 559.613 111.247 cv
559.615 111.247 559.617 111.247 559.618 111.247 cv
559.592 111.247 mo
559.59 111.247 559.588 111.247 559.586 111.247 cv
559.588 111.247 559.59 111.247 559.592 111.247 cv
.980392 .901961 .862745 rgb
f
690.184 242.084 mo
680.445 242.084 li
678.809 242.084 677.483 240.758 677.483 239.122 cv
677.483 236.435 li
677.483 234.787 676.139 233.474 674.522 233.474 cv
656.141 233.474 li
654.523 233.474 653.18 234.787 653.18 236.435 cv
653.18 239.122 li
653.18 240.74 651.866 242.084 650.218 242.084 cv
640.478 242.084 li
638.825 242.084 637.486 240.744 637.486 239.092 cv
637.486 236.435 li
637.486 234.8 636.16 233.474 634.524 233.474 cv
616.174 233.474 li
614.538 233.474 613.213 234.8 613.213 236.435 cv
613.213 239.122 li
613.213 240.751 611.88 242.084 610.251 242.084 cv
600.481 242.084 li
598.845 242.084 597.519 240.758 597.519 239.122 cv
597.519 236.435 li
597.519 234.787 596.175 233.474 594.557 233.474 cv
584.505 233.474 li
589.848 233.298 li
590.099 233.414 590.365 233.466 590.634 233.466 cv
590.974 233.466 591.321 233.382 591.65 233.239 cv
657.981 231.059 li
660.626 230.98 662.924 229.566 664.238 227.475 cv
686.729 227.475 li
686.729 233.844 li
686.729 233.844 li
686.729 233.844 li
686.729 236.26 688.68 238.22 691.093 238.236 cv
691.102 238.236 691.111 238.236 691.121 238.236 cv
691.221 238.236 li
691.923 238.236 692.588 238.401 693.176 238.694 cv
693.176 239.092 li
693.176 240.738 691.83 242.084 690.184 242.084 cv
686.729 221.945 mo
665.397 221.945 li
665.351 214.739 li
686.729 214.739 li
686.729 221.945 li
686.729 209.208 mo
665.316 209.208 li
665.27 202.002 li
686.729 202.002 li
686.729 209.208 li
686.729 196.472 mo
665.235 196.472 li
665.027 163.789 li
666.113 163.181 666.558 161.736 665.01 161.142 cv
664.953 152.208 li
664.953 150.209 664.468 148.241 663.539 146.471 cv
655.342 130.858 li
654.669 129.577 654.227 128.187 654.035 126.753 cv
653.235 120.753 648.2 116.22 642.15 116.051 cv
563.571 113.847 li
562.924 112.399 561.516 111.366 559.855 111.256 cv
559.853 111.256 559.851 111.256 559.849 111.256 cv
559.844 111.256 559.839 111.255 559.834 111.255 cv
559.83 111.255 559.827 111.254 559.823 111.254 cv
559.819 111.254 559.815 111.254 559.811 111.254 cv
559.803 111.253 559.795 111.253 559.788 111.252 cv
559.785 111.252 559.783 111.252 559.781 111.252 cv
559.774 111.252 559.768 111.251 559.761 111.251 cv
559.759 111.251 559.757 111.251 559.754 111.251 cv
559.747 111.25 559.739 111.25 559.732 111.25 cv
559.731 111.25 559.73 111.25 559.729 111.25 cv
559.72 111.249 559.711 111.249 559.702 111.249 cv
559.701 111.249 559.7 111.249 559.699 111.249 cv
559.691 111.248 559.684 111.248 559.676 111.248 cv
559.674 111.248 559.673 111.248 559.671 111.248 cv
559.654 111.247 559.636 111.247 559.618 111.247 cv
559.617 111.247 559.615 111.247 559.613 111.247 cv
559.606 111.247 559.599 111.247 559.592 111.247 cv
559.59 111.247 559.588 111.247 559.586 111.247 cv
559.577 111.246 559.569 111.246 559.56 111.246 cv
691.121 111.246 li
688.696 111.246 686.729 113.212 686.729 115.639 cv
686.729 196.472 li
level3{
gsave
clp
[1.00234e-14 163.696 -163.696 1.00234e-14 625.34 52.3047 ]ct
/6 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[1.00234e-14 163.696 -163.696 1.00234e-14 625.34 52.3047 ]ct
clp
/6 /Gradient get_res exec grestore
}if
np
686.729 202.002 mo
665.27 202.002 li
665.235 196.472 li
686.729 196.472 li
686.729 202.002 li
level3{
gsave
clp
[1.00234e-14 163.696 -163.696 1.00234e-14 625.34 52.3047 ]ct
/16 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[1.00234e-14 163.696 -163.696 1.00234e-14 625.34 52.3047 ]ct
clp
/16 /Gradient get_res exec grestore
}if
np
686.729 214.739 mo
665.351 214.739 li
665.316 209.208 li
686.729 209.208 li
686.729 214.739 li
level3{
gsave
clp
[1.00234e-14 163.696 -163.696 1.00234e-14 625.34 52.3047 ]ct
/16 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[1.00234e-14 163.696 -163.696 1.00234e-14 625.34 52.3047 ]ct
clp
/16 /Gradient get_res exec grestore
}if
np
686.729 227.475 mo
664.238 227.475 li
664.979 226.296 665.406 224.902 665.406 223.41 cv
665.397 221.945 li
686.729 221.945 li
686.729 227.475 li
673.193 223.41 mo
673.193 223.41 669.091 223.41 671.701 225.523 cv
672.133 225.872 672.545 226.014 672.91 226.014 cv
674.382 226.014 675.086 223.709 673.193 223.41 cv
level3{
gsave
clp
[1.00234e-14 163.696 -163.696 1.00234e-14 625.34 52.3047 ]ct
/16 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[1.00234e-14 163.696 -163.696 1.00234e-14 625.34 52.3047 ]ct
clp
/16 /Gradient get_res exec grestore
}if
np
628.331 1.6547 mo
628.326 1.64608 628.32 1.63754 628.315 1.62899 cv
628.32 1.63755 628.325 1.64607 628.331 1.6547 cv
.980392 .901961 .862745 rgb
f
694.056 103.5 mo
691.847 102.263 689.358 101.613 686.826 101.613 cv
592.414 101.613 li
642.811 100.409 li
645.032 100.357 646.675 98.3407 646.257 96.1605 cv
642.928 78.813 630.209 12.686 628.591 6.69715 cv
626.903 .453139 624.797 .155824 624.412 .155824 cv
624.373 .155824 624.352 .158739 624.35 .159085 cv
624.681 .0619094 625.023 .0131692 625.365 .0131692 cv
626.498 .0131692 627.627 .547548 628.315 1.62899 cv
628.32 1.63754 628.326 1.64608 628.331 1.6547 cv
628.331 1.6547 li
683.889 90.7089 li
686.781 95.3446 689.884 99.9706 694.056 103.5 cv
657.389 85.232 mo
657.023 85.232 654.269 85.3104 654.904 87.6899 cv
655.349 89.3624 656.162 89.978 657.018 89.978 cv
658.211 89.978 659.487 88.7808 659.966 87.5836 cv
660.444 86.3865 660.126 85.1894 658.131 85.1894 cv
657.917 85.1894 657.683 85.2032 657.429 85.2323 cv
657.429 85.2323 657.415 85.232 657.389 85.232 cv
level3{
gsave
clp
[1.00234e-14 163.696 -163.696 1.00234e-14 625.34 52.3047 ]ct
/6 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[1.00234e-14 163.696 -163.696 1.00234e-14 625.34 52.3047 ]ct
clp
/6 /Gradient get_res exec grestore
}if
np
568.739 92.3192 mo
621.125 8.36808 li
594.359 58.4683 li
568.739 92.3192 li
level3{
gsave
clp
[1.00234e-14 163.696 -163.696 1.00234e-14 625.34 52.3047 ]ct
/6 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[1.00234e-14 163.696 -163.696 1.00234e-14 625.34 52.3047 ]ct
clp
/6 /Gradient get_res exec grestore
}if
np
640.839 517.472 mo
640.357 517.472 639.774 517.328 639.102 516.971 cv
638.935 516.882 638.784 516.796 638.649 516.715 cv
638.649 515.036 li
639.496 514.851 640.571 514.851 640.571 514.851 cv
643.116 514.851 642.891 517.472 640.839 517.472 cv
level3{
gsave
clp
[1.4561e-14 237.8 -237.8 1.4561e-14 625.35 500.311 ]ct
/12 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[1.4561e-14 237.8 -237.8 1.4561e-14 625.35 500.311 ]ct
clp
/12 /Gradient get_res exec grestore
}if
np
646.954 512.855 mo
646.589 512.855 646.177 512.713 645.745 512.364 cv
643.135 510.251 647.237 510.251 647.237 510.251 cv
649.13 510.55 648.426 512.855 646.954 512.855 cv
level3{
gsave
clp
[1.4561e-14 237.8 -237.8 1.4561e-14 625.35 500.311 ]ct
/12 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[1.4561e-14 237.8 -237.8 1.4561e-14 625.35 500.311 ]ct
clp
/12 /Gradient get_res exec grestore
}if
np
594.762 479.036 mo
594.219 479.036 593.688 478.823 593.259 478.303 cv
590.628 475.115 594.16 474.844 595.439 474.844 cv
595.702 474.844 595.869 474.855 595.869 474.855 cv
599.587 475.257 597.054 479.036 594.762 479.036 cv
level3{
gsave
clp
[243.658 0 0 243.658 503.521 468.629 ]ct
/6 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[243.658 0 0 243.658 503.521 468.629 ]ct
clp
/6 /Gradient get_res exec grestore
}if
np
583.933 471.637 mo
583.568 471.637 583.156 471.496 582.724 471.146 cv
580.114 469.032 584.216 469.032 584.216 469.032 cv
586.109 469.331 585.405 471.638 583.933 471.637 cv
level3{
gsave
clp
[243.658 0 0 243.658 503.521 468.629 ]ct
/6 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[243.658 0 0 243.658 503.521 468.629 ]ct
clp
/6 /Gradient get_res exec grestore
}if
np
678.915 481.785 mo
678.609 481.785 678.407 481.663 678.448 481.35 cv
678.573 480.378 679.127 480.222 679.469 480.222 cv
679.631 480.222 679.746 480.257 679.746 480.257 cv
679.77 480.257 679.793 480.256 679.815 480.256 cv
681.091 480.256 681.137 480.639 680.728 481.021 cv
680.319 481.403 679.456 481.785 678.915 481.785 cv
level3{
gsave
clp
[243.658 0 0 243.658 503.521 468.629 ]ct
/6 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[243.658 0 0 243.658 503.521 468.629 ]ct
clp
/6 /Gradient get_res exec grestore
}if
np
601.044 471.116 mo
600.739 471.116 600.536 470.994 600.577 470.682 cv
600.703 469.709 601.257 469.553 601.599 469.553 cv
601.761 469.553 601.875 469.588 601.875 469.588 cv
601.898 469.588 601.921 469.587 601.944 469.587 cv
603.22 469.587 603.266 469.97 602.857 470.352 cv
602.448 470.734 601.584 471.117 601.044 471.116 cv
level3{
gsave
clp
[243.658 0 0 243.658 503.521 468.629 ]ct
/6 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[243.658 0 0 243.658 503.521 468.629 ]ct
clp
/6 /Gradient get_res exec grestore
}if
np
656.694 468.103 mo
655.839 468.103 655.026 467.488 654.58 465.815 cv
653.946 463.437 656.696 463.358 657.065 463.358 cv
657.091 463.358 657.105 463.358 657.105 463.358 cv
657.359 463.329 657.593 463.315 657.808 463.315 cv
659.803 463.315 660.121 464.512 659.642 465.709 cv
659.163 466.906 657.887 468.104 656.694 468.103 cv
level3{
gsave
clp
[243.658 0 0 243.658 503.521 468.629 ]ct
/6 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[243.658 0 0 243.658 503.521 468.629 ]ct
clp
/6 /Gradient get_res exec grestore
}if
np
689.476 541.491 mo
688.62 541.491 687.807 540.876 687.362 539.203 cv
686.727 536.824 689.482 536.746 689.847 536.746 cv
689.873 536.746 689.886 536.746 689.886 536.746 cv
690.141 536.717 690.374 536.703 690.589 536.703 cv
692.584 536.703 692.902 537.9 692.423 539.097 cv
691.945 540.294 690.669 541.491 689.476 541.491 cv
level3{
gsave
clp
[1.4561e-14 237.8 -237.8 1.4561e-14 625.35 500.311 ]ct
/12 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[1.4561e-14 237.8 -237.8 1.4561e-14 625.35 500.311 ]ct
clp
/12 /Gradient get_res exec grestore
}if
np
647.33 540.373 mo
646.786 540.373 646.256 540.16 645.826 539.64 cv
643.195 536.452 646.73 536.181 648.008 536.181 cv
648.27 536.181 648.437 536.192 648.437 536.192 cv
652.155 536.594 649.622 540.373 647.33 540.373 cv
level3{
gsave
clp
[1.4561e-14 237.8 -237.8 1.4561e-14 625.35 500.311 ]ct
/12 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[1.4561e-14 237.8 -237.8 1.4561e-14 625.35 500.311 ]ct
clp
/12 /Gradient get_res exec grestore
}if
np
725.57 467.805 mo
725.026 467.805 724.496 467.593 724.066 467.072 cv
721.435 463.885 724.97 463.614 726.248 463.614 cv
726.51 463.614 726.677 463.625 726.677 463.625 cv
730.395 464.027 727.861 467.806 725.57 467.805 cv
level3{
gsave
clp
[243.658 0 0 243.658 503.521 468.629 ]ct
/6 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[243.658 0 0 243.658 503.521 468.629 ]ct
clp
/6 /Gradient get_res exec grestore
}if
np
680.307 600.132 mo
679.942 600.132 679.53 599.99 679.099 599.641 cv
676.488 597.527 680.591 597.527 680.591 597.527 cv
682.484 597.826 681.779 600.132 680.307 600.132 cv
level3{
gsave
clp
[1.4561e-14 237.8 -237.8 1.4561e-14 625.35 500.311 ]ct
/12 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[1.4561e-14 237.8 -237.8 1.4561e-14 625.35 500.311 ]ct
clp
/12 /Gradient get_res exec grestore
}if
np
628.843 221.945 mo
624.199 221.945 li
623.354 220.788 626.997 220.788 626.997 220.788 cv
628.17 220.788 628.755 221.345 628.843 221.945 cv
level3{
gsave
clp
[1.00234e-14 163.696 -163.696 1.00234e-14 625.34 52.3047 ]ct
/6 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[1.00234e-14 163.696 -163.696 1.00234e-14 625.34 52.3047 ]ct
clp
/6 /Gradient get_res exec grestore
}if
np
627.265 223.409 mo
626.783 223.409 626.2 223.265 625.529 222.908 cv
624.801 222.52 624.387 222.204 624.199 221.945 cv
628.843 221.945 li
628.947 222.648 628.372 223.41 627.265 223.409 cv
level3{
gsave
clp
[1.00234e-14 163.696 -163.696 1.00234e-14 625.34 52.3047 ]ct
/16 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[1.00234e-14 163.696 -163.696 1.00234e-14 625.34 52.3047 ]ct
clp
/16 /Gradient get_res exec grestore
}if
np
589.848 233.298 mo
589.59 233.18 589.348 232.995 589.131 232.732 cv
586.5 229.545 590.033 229.274 591.311 229.274 cv
591.574 229.274 591.741 229.286 591.741 229.286 cv
594.907 229.628 593.541 232.417 591.65 233.239 cv
589.848 233.298 li
level3{
gsave
clp
[1.00234e-14 163.696 -163.696 1.00234e-14 625.34 52.3047 ]ct
/6 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[1.00234e-14 163.696 -163.696 1.00234e-14 625.34 52.3047 ]ct
clp
/6 /Gradient get_res exec grestore
}if
np
590.634 233.466 mo
590.365 233.466 590.099 233.414 589.848 233.298 cv
591.65 233.239 li
591.321 233.382 590.974 233.466 590.634 233.466 cv
level3{
gsave
clp
[1.00234e-14 163.696 -163.696 1.00234e-14 625.34 52.3047 ]ct
/16 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[1.00234e-14 163.696 -163.696 1.00234e-14 625.34 52.3047 ]ct
clp
/16 /Gradient get_res exec grestore
}if
np
657.946 160.391 mo
657.119 160.391 656.312 160.067 655.658 159.275 cv
651.654 154.424 657.033 154.012 658.978 154.012 cv
659.376 154.012 659.631 154.029 659.631 154.029 cv
665.289 154.641 661.433 160.392 657.946 160.391 cv
level3{
gsave
clp
[1.00234e-14 163.696 -163.696 1.00234e-14 625.34 52.3047 ]ct
/6 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[1.00234e-14 163.696 -163.696 1.00234e-14 625.34 52.3047 ]ct
clp
/6 /Gradient get_res exec grestore
}if
np
663.983 164.066 mo
663.524 164.066 663.034 163.912 662.57 163.536 cv
659.959 161.422 664.015 160.918 664.015 160.918 cv
664.412 160.961 664.741 161.039 665.01 161.142 cv
665.027 163.789 li
664.72 163.961 664.362 164.066 663.983 164.066 cv
level3{
gsave
clp
[1.00234e-14 163.696 -163.696 1.00234e-14 625.34 52.3047 ]ct
/6 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[1.00234e-14 163.696 -163.696 1.00234e-14 625.34 52.3047 ]ct
clp
/6 /Gradient get_res exec grestore
}if
np
665.027 163.789 mo
665.01 161.142 li
666.558 161.736 666.113 163.181 665.027 163.789 cv
level3{
gsave
clp
[1.00234e-14 163.696 -163.696 1.00234e-14 625.34 52.3047 ]ct
/16 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[1.00234e-14 163.696 -163.696 1.00234e-14 625.34 52.3047 ]ct
clp
/16 /Gradient get_res exec grestore
}if
np
633.381 218.793 mo
633.016 218.793 632.604 218.651 632.172 218.302 cv
629.561 216.188 633.664 216.188 633.664 216.188 cv
635.557 216.487 634.853 218.793 633.381 218.793 cv
level3{
gsave
clp
[1.00234e-14 163.696 -163.696 1.00234e-14 625.34 52.3047 ]ct
/6 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[1.00234e-14 163.696 -163.696 1.00234e-14 625.34 52.3047 ]ct
clp
/6 /Gradient get_res exec grestore
}if
np
672.91 226.014 mo
672.545 226.014 672.133 225.872 671.701 225.523 cv
669.091 223.41 673.193 223.41 673.193 223.41 cv
675.086 223.709 674.382 226.014 672.91 226.014 cv
level3{
gsave
clp
[1.00234e-14 163.696 -163.696 1.00234e-14 625.34 52.3047 ]ct
/17 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[1.00234e-14 163.696 -163.696 1.00234e-14 625.34 52.3047 ]ct
clp
/17 /Gradient get_res exec grestore
}if
np
606.172 120.12 mo
605.807 120.12 605.395 119.978 604.964 119.629 cv
602.353 117.516 606.455 117.516 606.455 117.516 cv
608.348 117.815 607.644 120.12 606.172 120.12 cv
level3{
gsave
clp
[1.00234e-14 163.696 -163.696 1.00234e-14 625.34 52.3047 ]ct
/6 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[1.00234e-14 163.696 -163.696 1.00234e-14 625.34 52.3047 ]ct
clp
/6 /Gradient get_res exec grestore
}if
np
626.787 35.3377 mo
626.422 35.3376 626.01 35.1959 625.579 34.8466 cv
622.968 32.7333 627.071 32.7333 627.071 32.7333 cv
628.963 33.0322 628.259 35.3379 626.787 35.3377 cv
level3{
gsave
clp
[1.00234e-14 163.696 -163.696 1.00234e-14 625.34 52.3047 ]ct
/6 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[1.00234e-14 163.696 -163.696 1.00234e-14 625.34 52.3047 ]ct
clp
/6 /Gradient get_res exec grestore
}if
np
603.806 169.434 mo
603.501 169.434 603.298 169.312 603.339 168.999 cv
603.465 168.026 604.019 167.87 604.361 167.87 cv
604.523 167.87 604.637 167.905 604.637 167.905 cv
604.661 167.905 604.684 167.905 604.706 167.905 cv
605.982 167.905 606.028 168.287 605.619 168.669 cv
605.21 169.052 604.347 169.434 603.806 169.434 cv
level3{
gsave
clp
[1.00234e-14 163.696 -163.696 1.00234e-14 625.34 52.3047 ]ct
/6 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[1.00234e-14 163.696 -163.696 1.00234e-14 625.34 52.3047 ]ct
clp
/6 /Gradient get_res exec grestore
}if
np
578.909 186.406 mo
578.054 186.406 577.24 186.014 576.795 184.949 cv
576.161 183.434 578.915 183.384 579.28 183.384 cv
579.306 183.384 579.32 183.385 579.32 183.385 cv
579.574 183.366 579.807 183.357 580.021 183.357 cv
582.017 183.357 582.336 184.12 581.857 184.882 cv
581.378 185.644 580.102 186.406 578.909 186.406 cv
level3{
gsave
clp
[1.00234e-14 163.696 -163.696 1.00234e-14 625.34 52.3047 ]ct
/6 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[1.00234e-14 163.696 -163.696 1.00234e-14 625.34 52.3047 ]ct
clp
/6 /Gradient get_res exec grestore
}if
np
581.585 155.752 mo
580.73 155.752 579.917 155.137 579.471 153.464 cv
578.837 151.085 581.59 151.006 581.957 151.006 cv
581.983 151.006 581.997 151.006 581.997 151.006 cv
582.251 150.977 582.484 150.964 582.698 150.964 cv
584.694 150.964 585.012 152.161 584.534 153.358 cv
584.055 154.555 582.779 155.753 581.585 155.752 cv
level3{
gsave
clp
[1.00234e-14 163.696 -163.696 1.00234e-14 625.34 52.3047 ]ct
/6 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[1.00234e-14 163.696 -163.696 1.00234e-14 625.34 52.3047 ]ct
clp
/6 /Gradient get_res exec grestore
}if
np
657.018 89.978 mo
656.162 89.978 655.349 89.3624 654.904 87.6899 cv
654.269 85.3104 657.023 85.232 657.389 85.232 cv
657.415 85.232 657.429 85.2323 657.429 85.2323 cv
657.683 85.2032 657.917 85.1894 658.131 85.1894 cv
660.126 85.1894 660.444 86.3865 659.966 87.5836 cv
659.487 88.7808 658.211 89.978 657.018 89.978 cv
level3{
gsave
clp
[1.00234e-14 163.696 -163.696 1.00234e-14 625.34 52.3047 ]ct
/16 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[1.00234e-14 163.696 -163.696 1.00234e-14 625.34 52.3047 ]ct
clp
/16 /Gradient get_res exec grestore
}if
np
641.138 132.013 mo
640.656 132.013 640.072 131.868 639.401 131.511 cv
635.415 129.392 640.87 129.392 640.87 129.392 cv
643.415 129.392 643.19 132.013 641.138 132.013 cv
level3{
gsave
clp
[1.00234e-14 163.696 -163.696 1.00234e-14 625.34 52.3047 ]ct
/6 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[1.00234e-14 163.696 -163.696 1.00234e-14 625.34 52.3047 ]ct
clp
/6 /Gradient get_res exec grestore
}if
np
619.304 76.5322 mo
618.761 76.5321 618.231 76.3196 617.802 75.7994 cv
615.17 72.6109 618.706 72.3402 619.984 72.3402 cv
620.245 72.3402 620.412 72.3516 620.412 72.3516 cv
624.13 72.7538 621.596 76.5325 619.304 76.5322 cv
level3{
gsave
clp
[1.00234e-14 163.696 -163.696 1.00234e-14 625.34 52.3047 ]ct
/6 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[1.00234e-14 163.696 -163.696 1.00234e-14 625.34 52.3047 ]ct
clp
/6 /Gradient get_res exec grestore
}if
np
647.253 127.396 mo
646.888 127.396 646.476 127.254 646.045 126.905 cv
643.434 124.792 647.536 124.792 647.536 124.792 cv
649.429 125.09 648.725 127.396 647.253 127.396 cv
level3{
gsave
clp
[1.00234e-14 163.696 -163.696 1.00234e-14 625.34 52.3047 ]ct
/6 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[1.00234e-14 163.696 -163.696 1.00234e-14 625.34 52.3047 ]ct
clp
/6 /Gradient get_res exec grestore
}if
np
601.904 87.5837 mo
601.539 87.5837 601.127 87.4419 600.695 87.0927 cv
598.084 84.9795 602.187 84.9795 602.187 84.9795 cv
604.08 85.2779 603.375 87.5838 601.904 87.5837 cv
level3{
gsave
clp
[1.00234e-14 163.696 -163.696 1.00234e-14 625.34 52.3047 ]ct
/6 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[1.00234e-14 163.696 -163.696 1.00234e-14 625.34 52.3047 ]ct
clp
/6 /Gradient get_res exec grestore
}if
np
705.964 523.381 mo
705.599 523.38 705.187 523.239 704.756 522.89 cv
702.145 520.776 706.248 520.776 706.248 520.776 cv
708.141 521.075 707.436 523.381 705.964 523.381 cv
level3{
gsave
clp
[1.4561e-14 237.8 -237.8 1.4561e-14 625.35 500.311 ]ct
/19 
<<
/ShadingType 2 
/ColorSpace /0 /CSA get_res
/Coords [0 0 1 0 ]
/Domain [0 1 ]
/Extend[ true true]
/Function
<<
/Domain[0 1 ] 
/FunctionType 3
/Functions [
<<
/Domain[0 1 ] 
/Range[0 1 0 1 0 1 ] 
/FunctionType 0
/Order 1 
/DataSource <~l'cDPRVV/VC[%:'l'cDPRVV/VC[%:'l'cDPRVV/VC[%:'l'cDPRVV/VC[%:'l'cDPRVV/VC[%:'l'cDP
RVV/VC[%:'l'cDPRVV/VC[%:'l'cDPRVV/VC[%:'l'cDPRVV/VC[%:'l'cDPRVV/VC[%:'l'cDPRVV/V
C[%:'l'cDPRVV/VC[%:'l'cDPRVV/VC[%:'l'cDPRVV/VC[%:'l'cDPRVV/VC[%:'l'cDPRVV/VC[%:'
~>
/BitsPerSample 8 
/Encode [0 63 ]
/Decode [0 1 0 1 0 1 ]
/Size [64 ]
>>
<<
/Domain[0 1 ] 
/Range[0 1 0 1 0 1 ] 
/FunctionType 0
/Order 1 
/DataSource <~os&r<Z$l;MIJ'jnos&r<Z$l;MIJ'jnos&r<Z$l;MIJ'jnos&r<Z$l;MIJ'jnos&r<Z$l;MIJ'jnos&r<
Z$l;MIJ'jnos&r<Z$l;MIJ'jnos&r<Y^H,JI.a^korri:Y^H)II.XXjoWNZ7YC#oFHh=LgoWEQ5Y']cB
Hh4@co;m90XEsH<HLe+^nu@!+Wd+'6GO_\Wn>UU#W-.R+FRQ&Jm\FsmUN5aqEU9B<m%A:_So3h`D<[L)
~>
/BitsPerSample 8 
/Encode [0 63 ]
/Decode [0 1 0 1 0 1 ]
/Size [64 ]
>>
]
/Bounds [1.89999e-07 ]
/Encode [0 1 1 0 ]
>>
>>/Gradient add_res /19 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[1.4561e-14 237.8 -237.8 1.4561e-14 625.35 500.311 ]ct
clp
/19 {
/0 /CSA get_res setcolorspace
<<
/NumSamples 256 
/NumComp 3 
/Scaling[[.00392157 0 ][.00392157 0 ][.00392157 0 ]]
/Samples[
<~kiq?rl0@R!lKdd%lg*m&lg4!)m-X3-mHs<.mI'E1mdBN2mdKW5n*f`6n*oi9nF5r:nF?&=naZ/>naZ/>
naZ/>naZ2@o()ABo()ABo()ABo()DDoCMSFoCMSFoCMSFoCMSFoCMSFoCMSFoCMSFoCMVHo^qeJo^qeJ
o^qeJo^qeJo^qeJo^qeJo^qeJo^qeJo^qeJo^qeJo^qeJo^qeJo^qeJo^qeJo^qeJo^qeJo^qeJo^qeJ
o^qeJo^qeJo^qeJo^qeJo^qeJo^qeJo^qeJo^qeJo^qeJo^qeJo^qeJo^qeJo^qeJo^qeJo^qeJo^qeJ
~>
<~R@9S6S"-">SXuFFT:hjMTV.sNTV8'RU8+KYUSO]]UnsoaV5C,fVl6PmW2ZbqWMukrWMukrWMukrWN)tu
WiE)!WiE,#X/i;%X/i>'XK8M)XK8P+Xf\_-Xf\b/Y-+q1Y-+q1Y-+q1Y-+t3YHP.5YHP.5YHP.5YHP.5
YHP.5YHP.5YHP.6Yct@9Yct@9Yct@9Yct@9Yct@9Yct@9Yct@9Yct@9Yct@9Yct@9Yct@9Yct@9Yct@9
Yct@9Yct@9Yct@9Yct@9Yct@9Yct@9Yct@9Yct@9Yct@9Yct@9Yct@9Yct@9Yct@9Yct@9Yct@9Yct@9
~>
<~C27U$Ci+$+D/O6/DJsH3DfBZ7E,fl;EH6)@F)uDDF)uDDF*)MGFEM_KF`qqOG'8%PG'A.SGBe@WG^+IX
G^+LZH$O[\H$O[\H$O[\H$O^^H?sm`H?sm`H?sm`H?sm`H?sm`H?spbH[C*dH[C*dH[C*dH[C*dH[C*d
H[C*dH[C*dH[C*eI!g<hI!g<hI!g<hI!g<hI!g<hI!g<hI!g<hI!g<hI!g<hI!g<hI!g<hI!g<hI!g<h
I!g<hI!g<hI!g<hI!g<hI!g<hI!g<hI!g<hI!g<hI!g<hI!g<hI!g<hI!g<hI!g<hI!g<hI!g<hI!g<h
~>
]
>>
0 0 1 0 []true true []
/DeviceRGB
GenStrips
} /Gradient add_res /19 /Gradient get_res exec grestore
}if
np
716.359 480.684 mo
715.994 480.684 715.582 480.542 715.151 480.193 cv
712.54 478.08 716.642 478.08 716.642 478.08 cv
718.535 478.378 717.831 480.684 716.359 480.684 cv
level3{
gsave
clp
[243.658 0 0 243.658 503.521 468.629 ]ct
/6 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[243.658 0 0 243.658 503.521 468.629 ]ct
clp
/6 /Gradient get_res exec grestore
}if
np
604.848 388.819 mo
600.997 388.819 602.331 383.999 605.061 383.999 cv
605.856 383.999 606.769 384.408 607.707 385.463 cv
610.691 388.819 604.848 388.819 604.848 388.819 cv
level3{
gsave
clp
[1.1274e-14 -184.12 184.12 1.1274e-14 625.351 455.678 ]ct
/8 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[1.1274e-14 -184.12 184.12 1.1274e-14 625.351 455.678 ]ct
clp
/8 /Gradient get_res exec grestore
}if
np
679.866 376.352 mo
679.604 376.352 679.437 376.341 679.437 376.341 cv
675.719 375.939 678.252 372.16 680.544 372.16 cv
681.087 372.16 681.617 372.373 682.047 372.893 cv
684.678 376.081 681.144 376.352 679.866 376.352 cv
level3{
gsave
clp
[1.1274e-14 -184.12 184.12 1.1274e-14 625.351 455.678 ]ct
/8 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[1.1274e-14 -184.12 184.12 1.1274e-14 625.351 455.678 ]ct
clp
/8 /Gradient get_res exec grestore
}if
np
629.423 430.23 mo
629.025 430.23 628.771 430.213 628.771 430.213 cv
623.112 429.601 626.968 423.851 630.456 423.851 cv
631.283 423.851 632.089 424.174 632.743 424.967 cv
636.748 429.818 631.368 430.23 629.423 430.23 cv
level3{
gsave
clp
[1.1274e-14 -184.12 184.12 1.1274e-14 625.351 455.678 ]ct
/8 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[1.1274e-14 -184.12 184.12 1.1274e-14 625.351 455.678 ]ct
clp
/8 /Gradient get_res exec grestore
}if
np
638.077 418.481 mo
634.754 418.123 636.159 415.334 638.11 415.334 cv
638.569 415.334 639.058 415.488 639.523 415.864 cv
642.134 417.978 638.077 418.481 638.077 418.481 cv
level3{
gsave
clp
[1.1274e-14 -184.12 184.12 1.1274e-14 625.351 455.678 ]ct
/8 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[1.1274e-14 -184.12 184.12 1.1274e-14 625.351 455.678 ]ct
clp
/8 /Gradient get_res exec grestore
}if
np
675.881 271.058 mo
673.988 270.759 674.692 268.454 676.164 268.454 cv
676.529 268.454 676.941 268.596 677.373 268.945 cv
679.983 271.058 675.881 271.058 675.881 271.058 cv
level3{
gsave
clp
[1.1274e-14 -184.12 184.12 1.1274e-14 625.351 455.678 ]ct
/9 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[1.1274e-14 -184.12 184.12 1.1274e-14 625.351 455.678 ]ct
clp
/9 /Gradient get_res exec grestore
}if
np
691.09 382.163 mo
689.197 381.864 689.901 379.559 691.373 379.559 cv
691.738 379.559 692.15 379.701 692.581 380.05 cv
695.192 382.163 691.09 382.163 691.09 382.163 cv
level3{
gsave
clp
[1.1274e-14 -184.12 184.12 1.1274e-14 625.351 455.678 ]ct
/9 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[1.1274e-14 -184.12 184.12 1.1274e-14 625.351 455.678 ]ct
clp
/9 /Gradient get_res exec grestore
}if
np
577.365 438.76 mo
574.82 438.76 575.045 436.139 577.097 436.139 cv
577.579 436.139 578.162 436.283 578.834 436.641 cv
582.819 438.76 577.365 438.76 577.365 438.76 cv
level3{
gsave
clp
[1.1274e-14 -184.12 184.12 1.1274e-14 625.351 455.678 ]ct
/8 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[1.1274e-14 -184.12 184.12 1.1274e-14 625.351 455.678 ]ct
clp
/8 /Gradient get_res exec grestore
}if
np
578.426 363.359 mo
576.533 363.06 577.237 360.754 578.709 360.754 cv
579.074 360.754 579.487 360.896 579.918 361.245 cv
582.529 363.359 578.426 363.359 578.426 363.359 cv
level3{
gsave
clp
[1.1274e-14 -184.12 184.12 1.1274e-14 625.351 455.678 ]ct
/8 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[1.1274e-14 -184.12 184.12 1.1274e-14 625.351 455.678 ]ct
clp
/8 /Gradient get_res exec grestore
}if
np
647.782 278.169 mo
647.566 278.169 647.412 278.144 647.412 278.144 cv
647.382 278.145 647.352 278.145 647.322 278.145 cv
645.61 278.145 645.549 277.879 646.097 277.613 cv
646.644 277.347 647.801 277.082 648.526 277.082 cv
648.936 277.082 649.207 277.167 649.153 277.384 cv
648.984 278.06 648.241 278.169 647.782 278.169 cv
level3{
gsave
clp
[1.1274e-14 -184.12 184.12 1.1274e-14 625.351 455.678 ]ct
/8 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[1.1274e-14 -184.12 184.12 1.1274e-14 625.351 455.678 ]ct
clp
/8 /Gradient get_res exec grestore
}if
np
558.532 283.4 mo
558.371 283.4 558.256 283.366 558.256 283.366 cv
558.233 283.366 558.21 283.366 558.188 283.366 cv
556.911 283.366 556.865 282.984 557.274 282.601 cv
557.683 282.219 558.546 281.837 559.087 281.837 cv
559.393 281.837 559.595 281.959 559.555 282.272 cv
559.429 283.245 558.875 283.4 558.532 283.4 cv
level3{
gsave
clp
[1.1274e-14 -184.12 184.12 1.1274e-14 625.351 455.678 ]ct
/8 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[1.1274e-14 -184.12 184.12 1.1274e-14 625.351 455.678 ]ct
clp
/8 /Gradient get_res exec grestore
}if
np
673.707 381.642 mo
673.545 381.642 673.43 381.607 673.43 381.607 cv
673.407 381.608 673.384 381.608 673.362 381.608 cv
672.085 381.608 672.04 381.225 672.449 380.843 cv
672.857 380.461 673.72 380.079 674.261 380.079 cv
674.567 380.079 674.77 380.201 674.729 380.515 cv
674.603 381.486 674.049 381.642 673.707 381.642 cv
level3{
gsave
clp
[1.1274e-14 -184.12 184.12 1.1274e-14 625.351 455.678 ]ct
/8 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[1.1274e-14 -184.12 184.12 1.1274e-14 625.351 455.678 ]ct
clp
/8 /Gradient get_res exec grestore
}if
np
604.861 297.517 mo
602.864 297.517 602.545 296.755 603.024 295.993 cv
603.503 295.23 604.779 294.468 605.972 294.468 cv
606.828 294.468 607.641 294.86 608.087 295.925 cv
608.721 297.44 605.965 297.49 605.601 297.49 cv
605.575 297.49 605.561 297.49 605.561 297.49 cv
605.308 297.508 605.075 297.517 604.861 297.517 cv
level3{
gsave
clp
[1.1274e-14 -184.12 184.12 1.1274e-14 625.351 455.678 ]ct
/8 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[1.1274e-14 -184.12 184.12 1.1274e-14 625.351 455.678 ]ct
clp
/8 /Gradient get_res exec grestore
}if
np
602.184 329.911 mo
600.188 329.911 599.869 328.714 600.348 327.516 cv
600.827 326.319 602.103 325.122 603.296 325.122 cv
604.152 325.122 604.965 325.738 605.41 327.41 cv
606.044 329.79 603.289 329.869 602.924 329.869 cv
602.899 329.869 602.885 329.868 602.885 329.868 cv
602.631 329.897 602.398 329.911 602.184 329.911 cv
level3{
gsave
clp
[1.1274e-14 -184.12 184.12 1.1274e-14 625.351 455.678 ]ct
/8 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[1.1274e-14 -184.12 184.12 1.1274e-14 625.351 455.678 ]ct
clp
/8 /Gradient get_res exec grestore
}if
np
615.213 285.795 mo
613.217 285.795 612.898 284.597 613.377 283.4 cv
613.856 282.203 615.132 281.006 616.325 281.006 cv
617.18 281.006 617.993 281.621 618.439 283.294 cv
619.073 285.674 616.32 285.752 615.954 285.752 cv
615.928 285.752 615.914 285.752 615.914 285.752 cv
615.661 285.781 615.427 285.795 615.213 285.795 cv
level3{
gsave
clp
[1.1274e-14 -184.12 184.12 1.1274e-14 625.351 455.678 ]ct
/8 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[1.1274e-14 -184.12 184.12 1.1274e-14 625.351 455.678 ]ct
clp
/8 /Gradient get_res exec grestore
}if
np
649.87 352.461 mo
646.018 352.461 647.352 347.64 650.083 347.64 cv
650.878 347.64 651.791 348.049 652.729 349.104 cv
655.713 352.461 649.87 352.461 649.87 352.461 cv
level3{
gsave
clp
[1.1274e-14 -184.12 184.12 1.1274e-14 625.351 455.678 ]ct
/8 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[1.1274e-14 -184.12 184.12 1.1274e-14 625.351 455.678 ]ct
clp
/8 /Gradient get_res exec grestore
}if
np
564.899 408.534 mo
564.637 408.534 564.469 408.523 564.469 408.523 cv
560.751 408.121 563.285 404.342 565.577 404.342 cv
566.121 404.342 566.651 404.555 567.08 405.075 cv
569.711 408.263 566.177 408.534 564.899 408.534 cv
level3{
gsave
clp
[1.1274e-14 -184.12 184.12 1.1274e-14 625.351 455.678 ]ct
/9 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[1.1274e-14 -184.12 184.12 1.1274e-14 625.351 455.678 ]ct
clp
/9 /Gradient get_res exec grestore
}if
np
621.774 360.044 mo
619.881 359.745 620.585 357.439 622.057 357.439 cv
622.422 357.439 622.834 357.581 623.266 357.931 cv
625.876 360.044 621.774 360.044 621.774 360.044 cv
level3{
gsave
clp
[1.1274e-14 -184.12 184.12 1.1274e-14 625.351 455.678 ]ct
/8 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[1.1274e-14 -184.12 184.12 1.1274e-14 625.351 455.678 ]ct
clp
/8 /Gradient get_res exec grestore
}if
np
652.323 383.25 mo
652.164 383.25 652.052 383.225 652.052 383.225 cv
652.03 383.226 652.009 383.226 651.988 383.226 cv
650.732 383.226 650.687 382.96 651.088 382.694 cv
651.489 382.428 652.336 382.163 652.867 382.163 cv
653.167 382.163 653.367 382.248 653.327 382.466 cv
653.203 383.141 652.659 383.25 652.323 383.25 cv
level3{
gsave
clp
[1.1274e-14 -184.12 184.12 1.1274e-14 625.351 455.678 ]ct
/8 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[1.1274e-14 -184.12 184.12 1.1274e-14 625.351 455.678 ]ct
clp
/8 /Gradient get_res exec grestore
}if
np
667.209 413.299 mo
665.747 413.299 665.514 412.537 665.864 411.774 cv
666.215 411.013 667.15 410.25 668.024 410.25 cv
668.651 410.25 669.246 410.642 669.573 411.707 cv
670.037 413.221 668.022 413.272 667.752 413.272 cv
667.733 413.272 667.723 413.271 667.723 413.271 cv
667.537 413.29 667.366 413.299 667.209 413.299 cv
level3{
gsave
clp
[1.1274e-14 -184.12 184.12 1.1274e-14 625.351 455.678 ]ct
/9 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[1.1274e-14 -184.12 184.12 1.1274e-14 625.351 455.678 ]ct
clp
/9 /Gradient get_res exec grestore
}if
np
554.547 545.95 mo
551.719 545.95 549.426 548.243 549.426 551.072 cv
549.426 612.433 li
549.426 615.262 551.719 617.555 554.547 617.555 cv
557.376 617.555 559.67 615.262 559.67 612.433 cv
559.67 551.072 li
559.67 548.243 557.376 545.95 554.547 545.95 cv
level3{
gsave
clp
[3.62122e-15 -59.1391 59.1391 3.62122e-15 554.548 607.431 ]ct
/10 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[3.62122e-15 -59.1391 59.1391 3.62122e-15 554.548 607.431 ]ct
clp
/10 /Gradient get_res exec grestore
}if
np
582.869 545.95 mo
580.04 545.95 577.747 548.243 577.747 551.072 cv
577.747 612.433 li
577.747 615.262 580.04 617.555 582.869 617.555 cv
585.697 617.555 587.991 615.262 587.991 612.433 cv
587.991 551.072 li
587.991 548.243 585.697 545.95 582.869 545.95 cv
level3{
gsave
clp
[3.62122e-15 -59.1391 59.1391 3.62122e-15 582.869 607.431 ]ct
/10 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[3.62122e-15 -59.1391 59.1391 3.62122e-15 582.869 607.431 ]ct
clp
/10 /Gradient get_res exec grestore
}if
np
643.65 590.563 mo
635.372 590.563 li
635.372 553.55 li
635.372 551.264 637.225 549.411 639.511 549.411 cv
641.797 549.411 643.65 551.264 643.65 553.55 cv
643.65 590.563 li
level3{
gsave
clp
[3.62122e-15 -59.1391 59.1391 3.62122e-15 639.511 607.431 ]ct
/10 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[3.62122e-15 -59.1391 59.1391 3.62122e-15 639.511 607.431 ]ct
clp
/10 /Gradient get_res exec grestore
}if
np
671.971 604.388 mo
664.124 604.388 li
663.979 604.388 663.835 604.381 663.693 604.368 cv
663.693 553.55 li
663.693 551.264 665.546 549.411 667.832 549.411 cv
670.118 549.411 671.971 551.264 671.971 553.55 cv
671.971 604.388 li
664.211 547.45 mo
665.137 546.523 666.417 545.95 667.832 545.95 cv
667.832 545.95 li
666.418 545.95 665.137 546.523 664.211 547.45 cv
level3{
gsave
clp
[3.62122e-15 -59.1391 59.1391 3.62122e-15 667.832 607.431 ]ct
/10 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[3.62122e-15 -59.1391 59.1391 3.62122e-15 667.832 607.431 ]ct
clp
/10 /Gradient get_res exec grestore
}if
np
700.292 590.563 mo
692.014 590.563 li
692.014 553.55 li
692.014 551.264 693.867 549.411 696.153 549.411 cv
698.439 549.411 700.292 551.264 700.292 553.55 cv
700.292 590.563 li
level3{
gsave
clp
[3.62122e-15 -59.1391 59.1391 3.62122e-15 696.153 607.431 ]ct
/10 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[3.62122e-15 -59.1391 59.1391 3.62122e-15 696.153 607.431 ]ct
clp
/10 /Gradient get_res exec grestore
}if
np
701.275 590.563 mo
700.292 590.563 li
700.292 553.55 li
700.292 551.264 698.439 549.411 696.153 549.411 cv
693.867 549.411 692.014 551.264 692.014 553.55 cv
692.014 590.563 li
691.031 590.563 li
691.031 551.072 li
691.031 548.243 693.324 545.95 696.153 545.95 cv
698.982 545.95 701.275 548.243 701.275 551.072 cv
701.275 590.563 li
level3{
gsave
clp
[3.62122e-15 -59.1391 59.1391 3.62122e-15 696.153 607.431 ]ct
/13 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[3.62122e-15 -59.1391 59.1391 3.62122e-15 696.153 607.431 ]ct
clp
/13 /Gradient get_res exec grestore
}if
np
672.954 604.388 mo
672.954 604.388 li
672.954 551.072 li
672.954 548.243 670.661 545.95 667.832 545.95 cv
667.832 545.95 667.832 545.95 667.832 545.95 cv
670.661 545.95 672.954 548.243 672.954 551.072 cv
672.954 604.388 li
662.711 604.174 mo
662.711 604.174 662.71 604.174 662.71 604.174 cv
662.71 551.072 li
662.71 549.658 663.284 548.377 664.211 547.45 cv
663.284 548.377 662.711 549.658 662.711 551.072 cv
662.711 604.174 li
level3{
gsave
clp
[1.4561e-14 237.8 -237.8 1.4561e-14 625.35 500.311 ]ct
/18 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[1.4561e-14 237.8 -237.8 1.4561e-14 625.35 500.311 ]ct
clp
/18 /Gradient get_res exec grestore
}if
np
672.954 604.388 mo
671.971 604.388 li
671.971 553.55 li
671.971 551.264 670.118 549.411 667.832 549.411 cv
665.546 549.411 663.693 551.264 663.693 553.55 cv
663.693 604.368 li
663.354 604.338 663.026 604.272 662.711 604.174 cv
662.711 551.072 li
662.711 549.658 663.284 548.377 664.211 547.45 cv
665.137 546.523 666.418 545.95 667.832 545.95 cv
670.661 545.95 672.954 548.243 672.954 551.072 cv
672.954 604.388 li
level3{
gsave
clp
[3.62122e-15 -59.1391 59.1391 3.62122e-15 667.832 607.431 ]ct
/13 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[3.62122e-15 -59.1391 59.1391 3.62122e-15 667.832 607.431 ]ct
clp
/13 /Gradient get_res exec grestore
}if
np
644.633 590.563 mo
643.65 590.563 li
643.65 553.55 li
643.65 551.264 641.797 549.411 639.511 549.411 cv
637.225 549.411 635.372 551.264 635.372 553.55 cv
635.372 590.563 li
634.389 590.563 li
634.389 551.072 li
634.389 548.243 636.682 545.95 639.511 545.95 cv
642.34 545.95 644.633 548.243 644.633 551.072 cv
644.633 590.563 li
level3{
gsave
clp
[3.62122e-15 -59.1391 59.1391 3.62122e-15 639.511 607.431 ]ct
/13 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[3.62122e-15 -59.1391 59.1391 3.62122e-15 639.511 607.431 ]ct
clp
/13 /Gradient get_res exec grestore
}if
np
615.597 604.388 mo
615.597 555.207 li
616.312 555.207 li
616.312 604.334 li
616.079 604.369 615.84 604.388 615.597 604.388 cv
level3{
gsave
clp
[3.62122e-15 -59.1391 59.1391 3.62122e-15 611.19 607.431 ]ct
/13 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[3.62122e-15 -59.1391 59.1391 3.62122e-15 611.19 607.431 ]ct
clp
/13 /Gradient get_res exec grestore
}if
np
710.68 257.747 mo
540.018 257.747 li
539.983 257.747 539.948 257.746 539.913 257.746 cv
536.224 257.69 533.249 254.681 533.249 250.977 cv
533.249 236.435 li
533.249 234.8 534.575 233.474 536.211 233.474 cv
554.56 233.474 li
556.206 233.474 557.552 234.82 557.552 236.466 cv
557.552 238.67 li
557.552 239.122 li
557.552 240.758 558.878 242.084 560.514 242.084 cv
570.254 242.084 li
571.902 242.084 573.216 240.74 573.216 239.122 cv
573.216 236.435 li
573.216 234.787 574.559 233.474 576.177 233.474 cv
584.505 233.474 li
594.557 233.474 li
596.175 233.474 597.519 234.787 597.519 236.435 cv
597.519 239.122 li
597.519 240.758 598.845 242.084 600.481 242.084 cv
610.251 242.084 li
611.88 242.084 613.213 240.751 613.213 239.122 cv
613.213 236.435 li
613.213 234.8 614.538 233.474 616.174 233.474 cv
634.524 233.474 li
636.16 233.474 637.486 234.8 637.486 236.435 cv
637.486 239.092 li
637.486 240.744 638.825 242.084 640.478 242.084 cv
650.218 242.084 li
651.866 242.084 653.18 240.74 653.18 239.122 cv
653.18 236.435 li
653.18 234.787 654.523 233.474 656.141 233.474 cv
674.522 233.474 li
676.139 233.474 677.483 234.787 677.483 236.435 cv
677.483 239.122 li
677.483 240.758 678.809 242.084 680.445 242.084 cv
690.184 242.084 li
691.83 242.084 693.176 240.738 693.176 239.092 cv
693.176 238.694 li
693.176 236.435 li
693.176 234.8 694.503 233.474 696.138 233.474 cv
714.488 233.474 li
716.124 233.474 717.45 234.8 717.45 236.436 cv
717.45 250.977 li
717.45 254.68 714.477 257.688 710.788 257.746 cv
710.752 257.746 710.716 257.747 710.68 257.747 cv
616.665 254.296 mo
616.665 254.296 612.612 254.296 615.573 255.872 cv
616.072 256.137 616.505 256.245 616.863 256.245 cv
618.388 256.245 618.556 254.296 616.665 254.296 cv
695.67 253.525 mo
695.67 253.525 692.656 253.899 694.596 255.469 cv
694.942 255.749 695.305 255.864 695.646 255.864 cv
697.096 255.864 698.14 253.791 695.67 253.525 cv
544.888 253.582 mo
544.689 253.582 543.19 253.619 543.535 254.744 cv
543.778 255.535 544.221 255.826 544.686 255.826 cv
545.335 255.827 546.03 255.26 546.29 254.694 cv
546.551 254.128 546.377 253.562 545.292 253.562 cv
545.175 253.562 545.048 253.568 544.909 253.582 cv
544.909 253.582 544.902 253.582 544.888 253.582 cv
579.714 253.887 mo
579.464 253.887 579.061 253.968 578.968 254.47 cv
578.939 254.631 579.087 254.694 579.309 254.694 cv
579.704 254.694 580.334 254.497 580.632 254.299 cv
580.93 254.102 580.897 253.905 579.967 253.905 cv
579.951 253.905 579.934 253.905 579.916 253.905 cv
579.916 253.905 579.833 253.887 579.714 253.887 cv
621.618 250.879 mo
621.618 250.879 618.57 250.879 620.51 252.449 cv
620.831 252.709 621.137 252.814 621.408 252.814 cv
622.501 252.814 623.025 251.101 621.618 250.879 cv
702.101 244.795 mo
700.656 244.795 696.659 245.101 699.634 248.706 cv
700.12 249.295 700.719 249.535 701.334 249.535 cv
703.925 249.536 706.79 245.262 702.586 244.808 cv
702.586 244.808 702.397 244.795 702.101 244.795 cv
661.939 245.418 mo
661.666 245.418 659.621 245.476 660.092 247.244 cv
660.423 248.487 661.027 248.944 661.663 248.944 cv
662.549 248.944 663.497 248.055 663.853 247.165 cv
664.209 246.276 663.972 245.386 662.49 245.386 cv
662.331 245.386 662.157 245.396 661.968 245.418 cv
661.968 245.418 661.958 245.418 661.939 245.418 cv
level3{
gsave
clp
[184.201 0 0 184.201 533.249 245.61 ]ct
/5 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[184.201 0 0 184.201 533.249 245.61 ]ct
clp
/5 /Gradient get_res exec grestore
}if
np
701.334 249.535 mo
700.719 249.535 700.12 249.295 699.634 248.706 cv
696.659 245.101 700.656 244.795 702.101 244.795 cv
702.397 244.795 702.586 244.808 702.586 244.808 cv
706.79 245.262 703.925 249.536 701.334 249.535 cv
level3{
gsave
clp
[184.201 0 0 184.201 533.249 245.61 ]ct
/6 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[184.201 0 0 184.201 533.249 245.61 ]ct
clp
/6 /Gradient get_res exec grestore
}if
np
695.646 255.864 mo
695.305 255.864 694.942 255.749 694.596 255.469 cv
692.656 253.899 695.67 253.525 695.67 253.525 cv
698.14 253.791 697.096 255.864 695.646 255.864 cv
level3{
gsave
clp
[184.201 0 0 184.201 533.249 245.61 ]ct
/6 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[184.201 0 0 184.201 533.249 245.61 ]ct
clp
/6 /Gradient get_res exec grestore
}if
np
616.863 256.245 mo
616.505 256.245 616.072 256.137 615.573 255.872 cv
612.612 254.296 616.665 254.296 616.665 254.296 cv
618.556 254.296 618.388 256.245 616.863 256.245 cv
level3{
gsave
clp
[184.201 0 0 184.201 533.249 245.61 ]ct
/6 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[184.201 0 0 184.201 533.249 245.61 ]ct
clp
/6 /Gradient get_res exec grestore
}if
np
621.408 252.814 mo
621.137 252.814 620.831 252.709 620.51 252.449 cv
618.57 250.879 621.618 250.879 621.618 250.879 cv
623.025 251.101 622.501 252.814 621.408 252.814 cv
level3{
gsave
clp
[184.201 0 0 184.201 533.249 245.61 ]ct
/6 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[184.201 0 0 184.201 533.249 245.61 ]ct
clp
/6 /Gradient get_res exec grestore
}if
np
661.663 248.944 mo
661.027 248.944 660.423 248.487 660.092 247.244 cv
659.621 245.476 661.666 245.418 661.939 245.418 cv
661.958 245.418 661.968 245.418 661.968 245.418 cv
662.157 245.396 662.331 245.386 662.49 245.386 cv
663.972 245.386 664.209 246.276 663.853 247.165 cv
663.497 248.055 662.549 248.944 661.663 248.944 cv
level3{
gsave
clp
[184.201 0 0 184.201 533.249 245.61 ]ct
/6 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[184.201 0 0 184.201 533.249 245.61 ]ct
clp
/6 /Gradient get_res exec grestore
}if
np
579.309 254.694 mo
579.087 254.694 578.939 254.631 578.968 254.47 cv
579.061 253.968 579.464 253.887 579.714 253.887 cv
579.833 253.887 579.916 253.905 579.916 253.905 cv
579.934 253.905 579.951 253.905 579.967 253.905 cv
580.897 253.905 580.93 254.102 580.632 254.299 cv
580.334 254.497 579.704 254.694 579.309 254.694 cv
level3{
gsave
clp
[184.201 0 0 184.201 533.249 245.61 ]ct
/6 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[184.201 0 0 184.201 533.249 245.61 ]ct
clp
/6 /Gradient get_res exec grestore
}if
np
544.686 255.826 mo
544.221 255.826 543.778 255.535 543.535 254.744 cv
543.19 253.619 544.689 253.582 544.888 253.582 cv
544.902 253.582 544.909 253.582 544.909 253.582 cv
545.048 253.568 545.175 253.562 545.292 253.562 cv
546.377 253.562 546.551 254.128 546.29 254.694 cv
546.03 255.26 545.335 255.827 544.686 255.826 cv
level3{
gsave
clp
[184.201 0 0 184.201 533.249 245.61 ]ct
/6 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[184.201 0 0 184.201 533.249 245.61 ]ct
clp
/6 /Gradient get_res exec grestore
}if
np
530.697 510.911 mo
522.868 510.911 li
515.039 510.911 li
512.409 510.911 510.277 508.779 510.277 506.149 cv
510.277 501.849 li
510.277 499.219 508.146 497.087 505.516 497.087 cv
476.034 497.087 li
473.405 497.087 471.272 499.219 471.272 501.848 cv
471.272 506.15 li
471.272 508.779 469.141 510.911 466.511 510.911 cv
450.853 510.911 li
448.224 510.911 446.092 508.779 446.092 506.15 cv
446.092 501.849 li
446.092 499.219 443.961 497.087 441.331 497.087 cv
441.327 497.087 li
411.848 497.087 li
411.845 497.087 li
409.216 497.087 407.084 499.219 407.084 501.849 cv
407.084 506.15 li
407.084 508.779 404.952 510.911 402.323 510.911 cv
386.664 510.911 li
384.035 510.911 381.903 508.779 381.903 506.15 cv
381.903 501.849 li
381.903 499.219 379.772 497.087 377.142 497.087 cv
347.659 497.087 li
345.03 497.087 342.898 499.219 342.898 501.848 cv
342.898 506.15 li
342.898 508.779 340.766 510.911 338.137 510.911 cv
330.308 510.911 li
322.479 510.911 li
319.849 510.911 317.717 508.779 317.717 506.149 cv
317.717 501.849 li
317.717 499.219 315.586 497.087 312.956 497.087 cv
294.636 497.087 li
294.636 489.15 li
294.636 462.654 li
294.636 414.204 li
294.636 403.876 li
294.636 382.068 li
294.636 379.769 li
294.636 363.181 li
294.636 360.567 293.574 358.201 291.857 356.492 cv
290.883 355.521 289.698 354.763 288.377 354.29 cv
286.476 353.609 285.174 351.857 285.152 349.838 cv
285.149 349.648 li
477.258 354.31 li
483.255 354.456 489.065 356.436 493.904 359.981 cv
511.476 372.858 li
512.886 373.893 514.461 374.656 516.069 375.344 cv
526.496 379.804 533.42 389.864 533.866 401.189 cv
537.677 497.821 li
536.344 498.665 535.458 500.153 535.458 501.848 cv
535.458 506.149 li
535.458 508.779 533.326 510.911 530.697 510.911 cv
385.795 493.841 mo
385.795 493.841 380.796 493.841 383.977 496.416 cv
384.503 496.842 385.006 497.014 385.45 497.015 cv
387.244 497.015 388.102 494.205 385.795 493.841 cv
366.253 482.885 mo
365.693 482.885 364.788 483.017 364.583 483.84 cv
364.517 484.105 364.848 484.208 365.347 484.208 cv
366.23 484.208 367.64 483.885 368.308 483.561 cv
368.975 483.237 368.9 482.914 366.815 482.914 cv
366.779 482.914 366.742 482.914 366.704 482.914 cv
366.704 482.914 366.517 482.885 366.253 482.885 cv
525.556 477.675 mo
525.556 477.675 520.556 477.675 523.738 480.251 cv
524.264 480.677 524.766 480.849 525.211 480.849 cv
527.005 480.85 527.863 478.039 525.556 477.675 cv
469.252 474.48 mo
469.252 474.48 462.604 474.48 467.461 477.063 cv
468.28 477.499 468.991 477.675 469.578 477.675 cv
472.08 477.675 472.354 474.48 469.252 474.48 cv
477.377 468.874 mo
477.377 468.874 472.377 468.874 475.559 471.45 cv
476.085 471.876 476.587 472.049 477.032 472.049 cv
478.826 472.049 479.684 469.238 477.377 468.874 cv
494.753 462.071 mo
494.753 462.071 li
494.753 465.007 497.133 467.387 500.069 467.387 cv
503.005 467.387 505.385 465.007 505.385 462.071 cv
505.385 400.494 li
505.89 400.752 506.427 400.867 506.972 400.867 cv
511.223 400.868 515.923 393.859 509.026 393.114 cv
509.026 393.114 508.716 393.093 508.23 393.093 cv
506.996 393.093 504.631 393.229 503.332 394.192 cv
502.448 393.504 501.341 393.089 500.138 393.074 cv
500.115 393.073 500.092 393.073 500.069 393.073 cv
497.133 393.073 494.753 395.453 494.753 398.389 cv
494.753 462.071 li
494.753 462.071 li
470.677 467.387 mo
470.677 467.387 li
473.613 467.387 475.992 465.007 475.992 462.071 cv
475.992 398.389 li
475.992 398.389 li
475.992 398.062 475.963 397.742 475.906 397.431 cv
475.456 394.953 473.286 393.073 470.677 393.073 cv
470.677 393.073 li
470.676 393.073 470.676 393.073 470.676 393.073 cv
467.741 393.073 465.361 395.453 465.361 398.389 cv
465.361 462.071 li
465.361 462.071 li
465.361 462.111 465.362 462.151 465.362 462.191 cv
465.426 465.071 467.781 467.387 470.676 467.387 cv
470.676 467.387 li
435.968 462.071 mo
435.968 462.071 li
435.968 465.007 438.348 467.387 441.284 467.387 cv
444.22 467.387 446.6 465.007 446.6 462.071 cv
446.6 398.389 li
446.6 398.389 li
446.6 395.453 444.22 393.073 441.284 393.073 cv
438.348 393.073 435.968 395.453 435.968 398.389 cv
435.968 462.071 li
435.968 462.071 li
411.534 393.085 mo
408.765 393.269 406.576 395.573 406.576 398.389 cv
406.576 462.071 li
406.576 465.007 408.956 467.387 411.892 467.387 cv
414.827 467.387 417.208 465.007 417.208 462.071 cv
417.208 398.389 li
417.208 396.909 416.603 395.571 415.628 394.607 cv
416.446 394.047 417.146 393.171 417.496 392.296 cv
418.08 390.837 417.692 389.377 415.26 389.377 cv
414.999 389.377 414.714 389.394 414.405 389.43 cv
414.405 389.43 414.388 389.429 414.356 389.429 cv
413.911 389.429 410.553 389.525 411.326 392.425 cv
411.39 392.662 411.459 392.882 411.534 393.085 cv
382.5 467.387 mo
382.5 467.387 li
385.435 467.387 387.815 465.007 387.815 462.071 cv
387.815 398.389 li
387.815 398.389 li
387.815 398.108 387.793 397.832 387.751 397.563 cv
387.354 395.019 385.154 393.073 382.5 393.073 cv
382.5 393.073 li
382.499 393.073 382.499 393.073 382.499 393.073 cv
379.563 393.073 377.184 395.453 377.184 398.389 cv
377.184 462.071 li
377.184 462.071 li
377.184 462.14 377.185 462.208 377.188 462.277 cv
377.296 465.117 379.632 467.387 382.499 467.387 cv
382.499 467.387 li
347.791 462.071 mo
347.791 462.071 li
347.791 465.007 350.171 467.387 353.107 467.387 cv
356.043 467.387 358.423 465.007 358.423 462.071 cv
358.423 398.389 li
358.423 395.476 356.08 393.11 353.175 393.074 cv
353.153 393.073 353.13 393.073 353.107 393.073 cv
350.623 393.073 348.538 394.776 347.954 397.078 cv
347.753 397.042 347.495 397.022 347.174 397.022 cv
347.146 397.022 347.118 397.022 347.089 397.022 cv
347.089 397.022 346.95 396.98 346.753 396.98 cv
346.336 396.98 345.66 397.17 345.507 398.355 cv
345.457 398.737 345.704 398.886 346.076 398.886 cv
346.561 398.886 347.258 398.634 347.792 398.315 cv
347.791 398.339 347.791 398.364 347.791 398.389 cv
347.791 462.071 li
347.791 462.071 li
368.563 447.212 mo
368.113 447.212 364.762 447.273 365.534 449.118 cv
366.077 450.416 367.068 450.893 368.111 450.893 cv
369.565 450.893 371.12 449.965 371.704 449.036 cv
372.288 448.107 371.9 447.179 369.468 447.179 cv
369.207 447.179 368.922 447.189 368.612 447.212 cv
368.612 447.212 368.595 447.212 368.563 447.212 cv
339.247 403.428 mo
337.689 403.428 333.381 403.759 336.588 407.644 cv
337.111 408.278 337.758 408.537 338.42 408.538 cv
341.213 408.538 344.3 403.932 339.769 403.442 cv
339.769 403.442 339.565 403.428 339.247 403.428 cv
514.37 401.51 mo
514.37 401.51 509.426 402.124 512.608 404.7 cv
513.174 405.159 513.771 405.347 514.33 405.347 cv
516.708 405.347 518.421 401.948 514.37 401.51 cv
325.567 396.346 mo
325.567 396.346 320.567 396.346 323.748 398.922 cv
324.274 399.348 324.776 399.52 325.221 399.52 cv
327.015 399.521 327.873 396.71 325.567 396.346 cv
357.139 361.892 mo
357.139 361.892 350.017 361.892 353.654 365.983 cv
354.797 367.269 355.91 367.767 356.879 367.768 cv
360.207 367.768 361.833 361.892 357.139 361.892 cv
429.952 361.879 mo
428.394 361.879 424.086 362.209 427.293 366.094 cv
427.816 366.728 428.463 366.988 429.125 366.988 cv
431.918 366.988 435.006 362.383 430.474 361.892 cv
430.474 361.892 430.271 361.879 429.952 361.879 cv
391.383 352.649 mo
391.383 352.649 386.382 352.649 389.564 355.225 cv
390.09 355.651 390.593 355.824 391.037 355.824 cv
392.831 355.824 393.689 353.014 391.383 352.649 cv
568.025 349.838 mo
568.116 341.829 li
568.116 341.829 li
568.025 349.838 li
level3{
gsave
clp
[1.24239e-14 -202.898 202.898 1.24239e-14 426.588 555.216 ]ct
/2 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[1.24239e-14 -202.898 202.898 1.24239e-14 426.588 555.216 ]ct
clp
/2 /Gradient get_res exec grestore
}if
np
285.149 349.648 mo
285.149 349.648 li
285.06 341.829 li
285.06 341.829 li
285.149 349.648 li
level3{
gsave
clp
[1.1274e-14 -184.12 184.12 1.1274e-14 227.826 455.678 ]ct
/8 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[1.1274e-14 -184.12 184.12 1.1274e-14 227.826 455.678 ]ct
clp
/8 /Gradient get_res exec grestore
}if
np
537.677 497.821 mo
533.866 401.189 li
533.42 389.864 526.496 379.804 516.069 375.344 cv
514.461 374.656 512.886 373.893 511.476 372.858 cv
493.904 359.981 li
489.065 356.436 483.255 354.456 477.258 354.31 cv
285.149 349.648 li
285.06 341.829 li
315.359 341.829 li
341.086 341.829 li
380.936 341.829 li
406.663 341.829 li
446.513 341.829 li
472.24 341.829 li
512.091 341.829 li
537.817 341.829 li
568.116 341.829 li
568.025 349.838 li
568.002 351.857 566.7 353.609 564.799 354.29 cv
561.151 355.596 558.54 359.083 558.54 363.181 cv
558.54 403.876 li
558.54 414.204 li
558.54 462.654 li
558.54 489.15 li
558.54 497.087 li
540.219 497.087 li
539.284 497.087 538.413 497.356 537.677 497.821 cv
532.314 361.879 mo
532.314 361.879 527.313 361.879 530.495 364.455 cv
531.021 364.881 531.523 365.053 531.968 365.053 cv
533.762 365.053 534.621 362.243 532.314 361.879 cv
505.89 355.804 mo
505.89 355.804 499.242 355.804 504.099 358.388 cv
504.918 358.823 505.628 358.999 506.216 358.999 cv
508.718 358.999 508.992 355.804 505.89 355.804 cv
514.015 350.197 mo
514.015 350.197 509.015 350.197 512.197 352.773 cv
512.723 353.199 513.225 353.372 513.67 353.372 cv
515.464 353.372 516.322 350.562 514.015 350.197 cv
level3{
gsave
clp
[1.24239e-14 -202.898 202.898 1.24239e-14 426.588 555.216 ]ct
/3 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[1.24239e-14 -202.898 202.898 1.24239e-14 426.588 555.216 ]ct
clp
/3 /Gradient get_res exec grestore
}if
np
568.507 341.829 mo
568.116 341.829 li
568.116 341.829 li
537.817 341.829 li
512.091 341.829 li
472.24 341.829 li
446.513 341.829 li
406.663 341.829 li
380.936 341.829 li
341.086 341.829 li
315.359 341.829 li
285.06 341.829 li
285.06 341.829 li
284.67 341.829 li
282.996 341.829 281.426 341.38 280.076 340.596 cv
280.076 340.596 li
279.368 340.185 278.721 339.682 278.15 339.103 cv
276.516 337.449 275.509 335.176 275.509 332.668 cv
275.509 306.843 li
275.509 305.718 275.891 304.682 276.532 303.858 cv
277.422 302.714 278.811 301.979 280.373 301.979 cv
281.834 301.979 li
291.857 301.979 li
300.343 301.979 li
307.022 301.979 li
307.033 301.979 li
310.494 301.979 li
313.181 301.979 315.359 304.157 315.359 306.843 cv
315.359 311.239 li
315.359 313.925 317.537 316.103 320.223 316.103 cv
336.221 316.103 li
338.907 316.103 341.086 313.925 341.086 311.239 cv
341.086 306.843 li
341.086 304.157 343.263 301.979 345.95 301.979 cv
376.072 301.979 li
378.758 301.979 380.936 304.157 380.936 306.843 cv
380.936 311.239 li
380.936 313.925 383.114 316.103 385.801 316.103 cv
401.798 316.103 li
404.485 316.103 406.663 313.925 406.663 311.239 cv
406.663 306.843 li
406.663 304.157 408.84 301.979 411.527 301.979 cv
441.649 301.979 li
444.335 301.979 446.513 304.157 446.513 306.843 cv
446.513 311.239 li
446.513 313.925 448.691 316.103 451.378 316.103 cv
467.375 316.103 li
470.062 316.103 472.24 313.925 472.24 311.239 cv
472.24 306.843 li
472.24 304.157 474.418 301.979 477.104 301.979 cv
507.226 301.979 li
509.912 301.979 512.091 304.157 512.091 306.843 cv
512.091 311.239 li
512.091 313.925 514.268 316.103 516.955 316.103 cv
532.952 316.103 li
535.639 316.103 537.817 313.925 537.817 311.239 cv
537.817 306.843 li
537.817 304.157 539.994 301.979 542.681 301.979 cv
546.112 301.979 li
546.118 301.979 li
552.797 301.979 li
571.306 301.979 li
571.306 301.979 li
572.803 301.979 li
574.357 301.979 575.741 302.708 576.632 303.842 cv
577.28 304.669 577.667 305.711 577.667 306.843 cv
577.667 332.668 li
577.667 335.176 576.659 337.449 575.026 339.103 cv
574.455 339.682 573.808 340.185 573.1 340.596 cv
573.1 340.596 li
571.75 341.38 570.181 341.829 568.507 341.829 cv
461.318 333.272 mo
461.318 333.272 456.318 333.272 459.5 335.848 cv
460.025 336.274 460.528 336.447 460.972 336.447 cv
462.767 336.447 463.625 333.636 461.318 333.272 cv
414.758 325.039 mo
414.758 325.039 408.11 325.039 412.967 327.623 cv
413.785 328.058 414.496 328.234 415.083 328.234 cv
417.585 328.235 417.859 325.039 414.758 325.039 cv
544.351 323.772 mo
544.351 323.772 539.406 324.387 542.589 326.963 cv
543.155 327.422 543.752 327.61 544.311 327.61 cv
546.689 327.61 548.401 324.21 544.351 323.772 cv
297.021 323.867 mo
296.693 323.867 294.237 323.928 294.803 325.773 cv
295.201 327.071 295.927 327.549 296.691 327.549 cv
297.756 327.549 298.895 326.62 299.322 325.691 cv
299.75 324.763 299.466 323.834 297.685 323.834 cv
297.493 323.834 297.284 323.845 297.057 323.867 cv
297.057 323.867 297.045 323.867 297.021 323.867 cv
354.148 324.367 mo
353.738 324.367 353.076 324.499 352.925 325.322 cv
352.876 325.587 353.119 325.691 353.484 325.691 cv
354.131 325.691 355.164 325.367 355.653 325.044 cv
356.142 324.72 356.088 324.396 354.561 324.396 cv
354.534 324.396 354.507 324.396 354.479 324.397 cv
354.479 324.397 354.342 324.367 354.148 324.367 cv
422.883 319.433 mo
422.883 319.433 417.882 319.433 421.065 322.009 cv
421.59 322.434 422.093 322.607 422.538 322.607 cv
424.332 322.608 425.19 319.797 422.883 319.433 cv
554.897 309.454 mo
552.526 309.454 545.972 309.957 550.852 315.869 cv
551.649 316.834 552.632 317.229 553.64 317.229 cv
557.891 317.23 562.591 310.22 555.694 309.475 cv
555.694 309.475 555.383 309.454 554.897 309.454 cv
489.02 310.475 mo
488.573 310.475 485.218 310.571 485.991 313.471 cv
486.534 315.509 487.525 316.259 488.568 316.26 cv
490.022 316.26 491.577 314.801 492.161 313.341 cv
492.744 311.882 492.356 310.423 489.925 310.423 cv
489.663 310.423 489.379 310.44 489.069 310.476 cv
489.069 310.476 489.052 310.475 489.02 310.475 cv
level3{
gsave
clp
[-287.928 3.5261e-14 -3.52611e-14 -287.928 567.004 321.904 ]ct
/11 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-287.928 3.5261e-14 -3.52611e-14 -287.928 567.004 321.904 ]ct
clp
/11 /Gradient get_res exec grestore
}if
np
469.578 477.675 mo
468.991 477.675 468.28 477.499 467.461 477.063 cv
462.604 474.48 469.252 474.48 469.252 474.48 cv
472.354 474.48 472.08 477.675 469.578 477.675 cv
level3{
gsave
clp
[1.24239e-14 -202.898 202.898 1.24239e-14 426.588 555.216 ]ct
/3 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[1.24239e-14 -202.898 202.898 1.24239e-14 426.588 555.216 ]ct
clp
/3 /Gradient get_res exec grestore
}if
np
338.42 408.538 mo
337.758 408.537 337.111 408.278 336.588 407.644 cv
333.381 403.759 337.689 403.428 339.247 403.428 cv
339.565 403.428 339.769 403.442 339.769 403.442 cv
344.3 403.932 341.213 408.538 338.42 408.538 cv
level3{
gsave
clp
[1.24239e-14 -202.898 202.898 1.24239e-14 426.588 555.216 ]ct
/3 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[1.24239e-14 -202.898 202.898 1.24239e-14 426.588 555.216 ]ct
clp
/3 /Gradient get_res exec grestore
}if
np
506.972 400.867 mo
506.427 400.867 505.89 400.752 505.385 400.494 cv
505.385 398.389 li
505.385 396.683 504.581 395.164 503.332 394.192 cv
504.631 393.229 506.996 393.093 508.23 393.093 cv
508.716 393.093 509.026 393.114 509.026 393.114 cv
515.923 393.859 511.223 400.868 506.972 400.867 cv
level3{
gsave
clp
[1.24239e-14 -202.898 202.898 1.24239e-14 426.588 555.216 ]ct
/3 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[1.24239e-14 -202.898 202.898 1.24239e-14 426.588 555.216 ]ct
clp
/3 /Gradient get_res exec grestore
}if
np
553.64 317.229 mo
552.632 317.229 551.649 316.834 550.852 315.869 cv
545.972 309.957 552.526 309.454 554.897 309.454 cv
555.383 309.454 555.694 309.475 555.694 309.475 cv
562.591 310.22 557.891 317.23 553.64 317.229 cv
level3{
gsave
clp
[-287.928 3.5261e-14 -3.52611e-14 -287.928 567.004 321.904 ]ct
/12 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-287.928 3.5261e-14 -3.52611e-14 -287.928 567.004 321.904 ]ct
clp
/12 /Gradient get_res exec grestore
}if
np
514.33 405.347 mo
513.771 405.347 513.174 405.159 512.608 404.7 cv
509.426 402.124 514.37 401.51 514.37 401.51 cv
518.421 401.948 516.708 405.347 514.33 405.347 cv
level3{
gsave
clp
[1.24239e-14 -202.898 202.898 1.24239e-14 426.588 555.216 ]ct
/3 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[1.24239e-14 -202.898 202.898 1.24239e-14 426.588 555.216 ]ct
clp
/3 /Gradient get_res exec grestore
}if
np
544.311 327.61 mo
543.752 327.61 543.155 327.422 542.589 326.963 cv
539.406 324.387 544.351 323.772 544.351 323.772 cv
548.401 324.21 546.689 327.61 544.311 327.61 cv
level3{
gsave
clp
[-287.928 3.5261e-14 -3.52611e-14 -287.928 567.004 321.904 ]ct
/12 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-287.928 3.5261e-14 -3.52611e-14 -287.928 567.004 321.904 ]ct
clp
/12 /Gradient get_res exec grestore
}if
np
385.45 497.015 mo
385.006 497.014 384.503 496.842 383.977 496.416 cv
380.796 493.841 385.795 493.841 385.795 493.841 cv
388.102 494.205 387.244 497.015 385.45 497.015 cv
level3{
gsave
clp
[1.24239e-14 -202.898 202.898 1.24239e-14 426.588 555.216 ]ct
/3 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[1.24239e-14 -202.898 202.898 1.24239e-14 426.588 555.216 ]ct
clp
/3 /Gradient get_res exec grestore
}if
np
325.221 399.52 mo
324.776 399.52 324.274 399.348 323.748 398.922 cv
320.567 396.346 325.567 396.346 325.567 396.346 cv
327.873 396.71 327.015 399.521 325.221 399.52 cv
level3{
gsave
clp
[1.24239e-14 -202.898 202.898 1.24239e-14 426.588 555.216 ]ct
/3 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[1.24239e-14 -202.898 202.898 1.24239e-14 426.588 555.216 ]ct
clp
/3 /Gradient get_res exec grestore
}if
np
477.032 472.049 mo
476.587 472.049 476.085 471.876 475.559 471.45 cv
472.377 468.874 477.377 468.874 477.377 468.874 cv
479.684 469.238 478.826 472.049 477.032 472.049 cv
level3{
gsave
clp
[1.24239e-14 -202.898 202.898 1.24239e-14 426.588 555.216 ]ct
/3 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[1.24239e-14 -202.898 202.898 1.24239e-14 426.588 555.216 ]ct
clp
/3 /Gradient get_res exec grestore
}if
np
415.083 328.234 mo
414.496 328.234 413.785 328.058 412.967 327.623 cv
408.11 325.039 414.758 325.039 414.758 325.039 cv
417.859 325.039 417.585 328.235 415.083 328.234 cv
level3{
gsave
clp
[-287.928 3.5261e-14 -3.52611e-14 -287.928 567.004 321.904 ]ct
/12 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-287.928 3.5261e-14 -3.52611e-14 -287.928 567.004 321.904 ]ct
clp
/12 /Gradient get_res exec grestore
}if
np
422.538 322.607 mo
422.093 322.607 421.59 322.434 421.065 322.009 cv
417.882 319.433 422.883 319.433 422.883 319.433 cv
425.19 319.797 424.332 322.608 422.538 322.607 cv
level3{
gsave
clp
[-287.928 3.5261e-14 -3.52611e-14 -287.928 567.004 321.904 ]ct
/12 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-287.928 3.5261e-14 -3.52611e-14 -287.928 567.004 321.904 ]ct
clp
/12 /Gradient get_res exec grestore
}if
np
525.211 480.849 mo
524.766 480.849 524.264 480.677 523.738 480.251 cv
520.556 477.675 525.556 477.675 525.556 477.675 cv
527.863 478.039 527.005 480.85 525.211 480.849 cv
level3{
gsave
clp
[1.24239e-14 -202.898 202.898 1.24239e-14 426.588 555.216 ]ct
/3 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[1.24239e-14 -202.898 202.898 1.24239e-14 426.588 555.216 ]ct
clp
/3 /Gradient get_res exec grestore
}if
np
460.972 336.447 mo
460.528 336.447 460.025 336.274 459.5 335.848 cv
456.318 333.272 461.318 333.272 461.318 333.272 cv
463.625 333.636 462.767 336.447 460.972 336.447 cv
level3{
gsave
clp
[-287.928 3.5261e-14 -3.52611e-14 -287.928 567.004 321.904 ]ct
/12 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-287.928 3.5261e-14 -3.52611e-14 -287.928 567.004 321.904 ]ct
clp
/12 /Gradient get_res exec grestore
}if
np
365.347 484.208 mo
364.848 484.208 364.517 484.105 364.583 483.84 cv
364.788 483.017 365.693 482.885 366.253 482.885 cv
366.517 482.885 366.704 482.914 366.704 482.914 cv
366.742 482.914 366.779 482.914 366.815 482.914 cv
368.9 482.914 368.975 483.237 368.308 483.561 cv
367.64 483.885 366.23 484.208 365.347 484.208 cv
level3{
gsave
clp
[1.24239e-14 -202.898 202.898 1.24239e-14 426.588 555.216 ]ct
/3 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[1.24239e-14 -202.898 202.898 1.24239e-14 426.588 555.216 ]ct
clp
/3 /Gradient get_res exec grestore
}if
np
346.076 398.886 mo
345.704 398.886 345.457 398.737 345.507 398.355 cv
345.66 397.17 346.336 396.98 346.753 396.98 cv
346.95 396.98 347.089 397.022 347.089 397.022 cv
347.118 397.022 347.146 397.022 347.174 397.022 cv
347.495 397.022 347.753 397.042 347.954 397.078 cv
347.854 397.474 347.797 397.888 347.792 398.315 cv
347.258 398.634 346.561 398.886 346.076 398.886 cv
level3{
gsave
clp
[1.24239e-14 -202.898 202.898 1.24239e-14 426.588 555.216 ]ct
/3 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[1.24239e-14 -202.898 202.898 1.24239e-14 426.588 555.216 ]ct
clp
/3 /Gradient get_res exec grestore
}if
np
368.111 450.893 mo
367.068 450.893 366.077 450.416 365.534 449.118 cv
364.762 447.273 368.113 447.212 368.563 447.212 cv
368.595 447.212 368.612 447.212 368.612 447.212 cv
368.922 447.189 369.207 447.179 369.468 447.179 cv
371.9 447.179 372.288 448.107 371.704 449.036 cv
371.12 449.965 369.565 450.893 368.111 450.893 cv
level3{
gsave
clp
[1.24239e-14 -202.898 202.898 1.24239e-14 426.588 555.216 ]ct
/3 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[1.24239e-14 -202.898 202.898 1.24239e-14 426.588 555.216 ]ct
clp
/3 /Gradient get_res exec grestore
}if
np
415.628 394.607 mo
414.705 393.696 413.451 393.12 412.063 393.076 cv
412.006 393.074 411.949 393.073 411.892 393.073 cv
411.84 393.073 411.789 393.074 411.738 393.075 cv
411.669 393.077 411.601 393.081 411.534 393.085 cv
411.459 392.882 411.39 392.662 411.326 392.425 cv
410.553 389.525 413.911 389.429 414.356 389.429 cv
414.388 389.429 414.405 389.43 414.405 389.43 cv
414.714 389.394 414.999 389.377 415.26 389.377 cv
417.692 389.377 418.08 390.837 417.496 392.296 cv
417.146 393.171 416.446 394.047 415.628 394.607 cv
level3{
gsave
clp
[1.24239e-14 -202.898 202.898 1.24239e-14 426.588 555.216 ]ct
/3 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[1.24239e-14 -202.898 202.898 1.24239e-14 426.588 555.216 ]ct
clp
/3 /Gradient get_res exec grestore
}if
np
488.568 316.26 mo
487.525 316.259 486.534 315.509 485.991 313.471 cv
485.218 310.571 488.573 310.475 489.02 310.475 cv
489.052 310.475 489.069 310.476 489.069 310.476 cv
489.379 310.44 489.663 310.423 489.925 310.423 cv
492.356 310.423 492.744 311.882 492.161 313.341 cv
491.577 314.801 490.022 316.26 488.568 316.26 cv
level3{
gsave
clp
[-287.928 3.5261e-14 -3.52611e-14 -287.928 567.004 321.904 ]ct
/12 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-287.928 3.5261e-14 -3.52611e-14 -287.928 567.004 321.904 ]ct
clp
/12 /Gradient get_res exec grestore
}if
np
356.879 367.768 mo
355.91 367.767 354.797 367.269 353.654 365.983 cv
350.017 361.892 357.139 361.892 357.139 361.892 cv
361.833 361.892 360.207 367.768 356.879 367.768 cv
level3{
gsave
clp
[1.24239e-14 -202.898 202.898 1.24239e-14 426.588 555.216 ]ct
/3 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[1.24239e-14 -202.898 202.898 1.24239e-14 426.588 555.216 ]ct
clp
/3 /Gradient get_res exec grestore
}if
np
506.216 358.999 mo
505.628 358.999 504.918 358.823 504.099 358.388 cv
499.242 355.804 505.89 355.804 505.89 355.804 cv
508.992 355.804 508.718 358.999 506.216 358.999 cv
level3{
gsave
clp
[1.24239e-14 -202.898 202.898 1.24239e-14 426.588 555.216 ]ct
/4 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[1.24239e-14 -202.898 202.898 1.24239e-14 426.588 555.216 ]ct
clp
/4 /Gradient get_res exec grestore
}if
np
429.125 366.988 mo
428.463 366.988 427.816 366.728 427.293 366.094 cv
424.086 362.209 428.394 361.879 429.952 361.879 cv
430.271 361.879 430.474 361.892 430.474 361.892 cv
435.006 362.383 431.918 366.988 429.125 366.988 cv
level3{
gsave
clp
[1.24239e-14 -202.898 202.898 1.24239e-14 426.588 555.216 ]ct
/3 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[1.24239e-14 -202.898 202.898 1.24239e-14 426.588 555.216 ]ct
clp
/3 /Gradient get_res exec grestore
}if
np
391.037 355.824 mo
390.593 355.824 390.09 355.651 389.564 355.225 cv
386.382 352.649 391.383 352.649 391.383 352.649 cv
393.689 353.014 392.831 355.824 391.037 355.824 cv
level3{
gsave
clp
[1.24239e-14 -202.898 202.898 1.24239e-14 426.588 555.216 ]ct
/3 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[1.24239e-14 -202.898 202.898 1.24239e-14 426.588 555.216 ]ct
clp
/3 /Gradient get_res exec grestore
}if
np
513.67 353.372 mo
513.225 353.372 512.723 353.199 512.197 352.773 cv
509.015 350.197 514.015 350.197 514.015 350.197 cv
516.322 350.562 515.464 353.372 513.67 353.372 cv
level3{
gsave
clp
[1.24239e-14 -202.898 202.898 1.24239e-14 426.588 555.216 ]ct
/4 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[1.24239e-14 -202.898 202.898 1.24239e-14 426.588 555.216 ]ct
clp
/4 /Gradient get_res exec grestore
}if
np
531.968 365.053 mo
531.523 365.053 531.021 364.881 530.495 364.455 cv
527.313 361.879 532.314 361.879 532.314 361.879 cv
534.621 362.243 533.762 365.053 531.968 365.053 cv
level3{
gsave
clp
[1.24239e-14 -202.898 202.898 1.24239e-14 426.588 555.216 ]ct
/4 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[1.24239e-14 -202.898 202.898 1.24239e-14 426.588 555.216 ]ct
clp
/4 /Gradient get_res exec grestore
}if
np
353.484 325.691 mo
353.119 325.691 352.876 325.587 352.925 325.322 cv
353.076 324.499 353.738 324.367 354.148 324.367 cv
354.342 324.367 354.479 324.397 354.479 324.397 cv
354.507 324.396 354.534 324.396 354.561 324.396 cv
356.088 324.396 356.142 324.72 355.653 325.044 cv
355.164 325.367 354.131 325.691 353.484 325.691 cv
level3{
gsave
clp
[-287.928 3.5261e-14 -3.52611e-14 -287.928 567.004 321.904 ]ct
/12 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-287.928 3.5261e-14 -3.52611e-14 -287.928 567.004 321.904 ]ct
clp
/12 /Gradient get_res exec grestore
}if
np
296.691 327.549 mo
295.927 327.549 295.201 327.071 294.803 325.773 cv
294.237 323.928 296.693 323.867 297.021 323.867 cv
297.045 323.867 297.057 323.867 297.057 323.867 cv
297.284 323.845 297.493 323.834 297.685 323.834 cv
299.466 323.834 299.75 324.763 299.322 325.691 cv
298.895 326.62 297.756 327.549 296.691 327.549 cv
level3{
gsave
clp
[-287.928 3.5261e-14 -3.52611e-14 -287.928 567.004 321.904 ]ct
/12 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-287.928 3.5261e-14 -3.52611e-14 -287.928 567.004 321.904 ]ct
clp
/12 /Gradient get_res exec grestore
}if
np
131.32 763.891 mo
127.483 763.891 li
123.647 763.891 li
122.358 763.891 121.313 762.846 121.313 761.557 cv
121.313 759.449 li
121.313 758.423 120.652 757.552 119.732 757.239 cv
119.732 753.161 li
119.732 753.161 li
119.732 751.302 118.225 749.794 116.366 749.794 cv
106.833 749.794 li
104.973 749.794 103.466 748.287 103.466 746.429 cv
103.466 732.433 li
103.466 732.433 li
103.466 730.574 101.959 729.066 100.1 729.066 cv
90.5671 729.066 li
88.7077 729.066 87.2005 727.559 87.2005 725.7 cv
87.2005 711.585 li
87.2005 711.585 li
87.2005 709.862 85.8587 708.453 84.1634 708.345 cv
84.1634 708.339 li
84.1634 686.61 li
84.1634 650.467 li
84.1634 646.631 81.8262 643.341 78.4982 641.944 cv
78.408 641.906 78.3172 641.869 78.2255 641.834 cv
78.1634 641.81 78.1006 641.787 78.0379 641.765 cv
76.1769 641.099 74.9025 639.384 74.8801 637.408 cv
74.7906 629.568 li
74.7907 629.568 li
74.8523 634.97 li
207.419 638.987 li
211.444 639.109 215.097 641.372 216.999 644.922 cv
219.74 650.038 li
220.308 651.1 221.045 652.064 221.92 652.893 cv
228.485 659.113 li
230.653 661.166 231.915 663.996 231.996 666.98 cv
234.083 744.359 li
234.253 750.628 229.265 755.825 222.995 755.916 cv
139.921 757.115 li
135.987 757.115 li
134.698 757.115 133.654 758.16 133.654 759.449 cv
133.654 761.557 li
133.654 762.846 132.609 763.891 131.32 763.891 cv
113.434 732.816 mo
111.909 732.816 107.694 733.139 110.832 736.941 cv
111.344 737.562 111.977 737.816 112.625 737.816 cv
115.359 737.816 118.382 733.308 113.946 732.829 cv
113.946 732.829 113.747 732.816 113.434 732.816 cv
151.528 721.958 mo
151.605 724.371 153.585 726.304 156.016 726.304 cv
174.332 726.304 li
176.764 726.304 178.744 724.371 178.82 721.958 cv
178.822 721.91 178.823 721.862 178.823 721.813 cv
178.823 680.707 li
178.823 680.707 li
178.823 678.227 176.812 676.217 174.332 676.217 cv
156.016 676.217 li
156.016 676.217 li
156.016 676.217 li
153.817 676.217 151.988 677.797 151.601 679.884 cv
151.552 680.151 151.526 680.426 151.526 680.707 cv
151.526 721.813 li
151.526 721.813 li
151.526 721.862 151.527 721.91 151.528 721.958 cv
221.77 713.648 mo
221.361 713.648 220.7 713.834 220.55 714.994 cv
220.501 715.368 220.743 715.514 221.108 715.514 cv
221.753 715.514 222.783 715.057 223.271 714.601 cv
223.758 714.145 223.704 713.689 222.18 713.689 cv
222.154 713.689 222.127 713.689 222.1 713.689 cv
222.1 713.689 221.963 713.648 221.77 713.648 cv
195.042 693.53 mo
194.606 693.53 191.321 693.623 192.077 696.462 cv
192.609 698.457 193.579 699.192 194.6 699.192 cv
196.023 699.192 197.545 697.764 198.116 696.336 cv
198.688 694.907 198.308 693.479 195.927 693.479 cv
195.671 693.479 195.393 693.496 195.09 693.53 cv
195.09 693.53 195.073 693.53 195.042 693.53 cv
210.307 666.564 mo
208.782 666.564 204.566 666.888 207.705 670.69 cv
208.217 671.311 208.85 671.565 209.498 671.565 cv
212.232 671.565 215.255 667.057 210.819 666.578 cv
210.819 666.578 210.619 666.564 210.307 666.564 cv
117.605 667.182 mo
117.605 667.182 112.766 667.782 115.881 670.304 cv
116.435 670.753 117.019 670.937 117.566 670.937 cv
119.894 670.937 121.57 667.61 117.605 667.182 cv
111.594 658.942 mo
109.274 658.942 102.859 659.434 107.635 665.222 cv
108.415 666.166 109.378 666.552 110.364 666.553 cv
114.525 666.554 119.125 659.693 112.374 658.963 cv
112.374 658.963 112.07 658.942 111.594 658.942 cv
161.867 656.136 mo
161.433 656.136 158.144 656.229 158.901 659.069 cv
159.433 661.064 160.403 661.799 161.423 661.799 cv
162.846 661.799 164.369 660.371 164.94 658.942 cv
165.511 657.514 165.131 656.086 162.751 656.086 cv
162.495 656.086 162.217 656.102 161.914 656.137 cv
161.914 656.137 161.897 656.136 161.867 656.136 cv
level3{
gsave
clp
[8.05167e-15 -131.494 131.494 8.05167e-15 151.526 761.453 ]ct
/2 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[8.05167e-15 -131.494 131.494 8.05167e-15 151.526 761.453 ]ct
clp
/2 /Gradient get_res exec grestore
}if
np
225.688 763.891 mo
221.851 763.891 li
218.015 763.891 li
216.726 763.891 215.681 762.846 215.681 761.557 cv
215.681 759.449 li
215.681 758.16 214.636 757.115 213.348 757.115 cv
198.899 757.115 li
197.611 757.115 196.566 758.16 196.566 759.449 cv
196.566 761.557 li
196.566 762.846 195.521 763.891 194.233 763.891 cv
186.559 763.891 li
185.27 763.891 184.226 762.846 184.226 761.557 cv
184.226 759.449 li
184.226 758.16 183.181 757.115 181.893 757.115 cv
181.891 757.115 li
167.444 757.115 li
167.442 757.115 li
166.154 757.115 165.109 758.16 165.109 759.449 cv
165.109 761.557 li
165.109 762.846 164.064 763.891 162.776 763.891 cv
155.102 763.891 li
153.814 763.891 152.769 762.846 152.769 761.557 cv
152.769 759.449 li
152.769 758.16 151.724 757.115 150.435 757.115 cv
139.921 757.115 li
222.995 755.916 li
229.265 755.825 234.253 750.628 234.083 744.359 cv
231.996 666.98 li
231.915 663.996 230.653 661.166 228.485 659.113 cv
221.92 652.893 li
221.045 652.064 220.308 651.1 219.74 650.038 cv
216.999 644.922 li
215.097 641.372 211.444 639.109 207.419 638.987 cv
74.8523 634.97 li
74.7907 629.568 li
104.447 629.568 li
129.628 629.568 li
168.633 629.568 li
193.813 629.568 li
237.579 629.568 li
237.579 729.483 li
237.579 730.908 li
237.579 757.115 li
230.355 757.115 li
229.066 757.115 228.022 758.16 228.022 759.449 cv
228.022 761.557 li
228.022 762.846 226.977 763.891 225.688 763.891 cv
level3{
gsave
clp
[8.05167e-15 -131.494 131.494 8.05167e-15 151.526 761.453 ]ct
/3 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[8.05167e-15 -131.494 131.494 8.05167e-15 151.526 761.453 ]ct
clp
/3 /Gradient get_res exec grestore
}if
np
237.579 629.568 mo
237.579 629.568 li
193.813 629.568 li
168.633 629.568 li
129.628 629.568 li
104.447 629.568 li
74.7907 629.568 li
74.7906 629.568 li
70.2034 629.568 li
68.2342 629.568 66.5438 628.373 65.8191 626.668 cv
65.576 626.097 65.4415 625.468 65.4415 624.807 cv
65.4415 595.324 li
65.4415 592.695 67.5739 590.563 70.2028 590.563 cv
99.6854 590.563 li
102.315 590.563 104.447 592.695 104.447 595.325 cv
104.447 599.627 li
104.447 602.257 106.578 604.388 109.208 604.388 cv
124.866 604.388 li
127.496 604.388 129.628 602.257 129.628 599.627 cv
129.628 595.325 li
129.628 594.466 129.855 593.661 130.253 592.965 cv
131.073 591.53 132.618 590.563 134.389 590.563 cv
151.901 590.563 li
152.884 590.563 li
161.162 590.563 li
162.144 590.563 li
162.145 590.563 li
163.871 590.563 li
166.501 590.563 168.633 592.695 168.633 595.325 cv
168.633 599.627 li
168.633 600.219 168.741 600.786 168.938 601.309 cv
169.535 602.89 170.949 604.069 172.665 604.332 cv
172.903 604.369 173.146 604.388 173.394 604.388 cv
180.222 604.388 li
181.205 604.388 li
189.052 604.388 li
189.197 604.388 189.341 604.381 189.483 604.368 cv
189.822 604.338 190.151 604.272 190.466 604.174 cv
190.466 604.174 190.466 604.174 190.466 604.174 cv
192.405 603.572 193.813 601.764 193.813 599.627 cv
193.813 595.325 li
193.813 592.695 195.945 590.563 198.574 590.563 cv
208.543 590.563 li
209.526 590.563 li
217.804 590.563 li
218.787 590.563 li
228.056 590.563 li
230.686 590.563 232.818 592.695 232.818 595.325 cv
232.818 599.627 li
232.818 602.014 234.574 603.99 236.864 604.334 cv
236.864 604.334 li
237.098 604.369 237.336 604.388 237.579 604.388 cv
237.579 615.044 li
237.579 629.568 li
155.595 619.624 mo
153.839 619.624 152.999 622.375 155.257 622.732 cv
155.257 622.732 160.152 622.732 157.037 620.21 cv
156.522 619.793 156.031 619.624 155.595 619.624 cv
134.191 622.069 mo
134.191 622.069 134.327 622.111 134.52 622.111 cv
134.929 622.111 135.59 621.925 135.74 620.765 cv
135.789 620.391 135.547 620.245 135.182 620.245 cv
134.537 620.245 133.507 620.701 133.019 621.157 cv
132.532 621.614 132.586 622.07 134.111 622.07 cv
134.137 622.07 134.164 622.07 134.191 622.069 cv
213.855 613.891 mo
213.855 613.891 206.885 613.891 210.444 617.894 cv
211.563 619.153 212.653 619.641 213.601 619.641 cv
216.858 619.641 218.45 613.891 213.855 613.891 cv
142.677 610.798 mo
139.943 610.798 136.92 615.306 141.356 615.785 cv
141.356 615.785 141.556 615.799 141.87 615.799 cv
143.396 615.799 147.608 615.475 144.47 611.673 cv
143.958 611.052 143.325 610.798 142.677 610.798 cv
85.0476 604.607 mo
85.0476 604.607 78.0778 604.607 81.6375 608.611 cv
82.7561 609.87 83.8454 610.357 84.7934 610.357 cv
88.0504 610.358 89.6426 604.607 85.0476 604.607 cv
level3{
gsave
clp
[172.138 0 0 172.138 65.4417 610.066 ]ct
/5 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[172.138 0 0 172.138 65.4417 610.066 ]ct
clp
/5 /Gradient get_res exec grestore
}if
np
733.843 753.838 mo
632.289 752.166 li
628.178 752.099 624.88 748.747 624.88 744.635 cv
624.88 649.547 li
624.88 647.922 625.405 646.341 626.378 645.04 cv
633.375 635.67 li
634.752 633.825 636.897 632.712 639.198 632.648 cv
748.73 629.568 li
778.386 629.568 li
778.296 637.408 li
778.274 639.384 776.999 641.099 775.139 641.765 cv
775.029 641.804 774.921 641.845 774.814 641.888 cv
774.476 642.023 774.149 642.178 773.833 642.351 cv
772.248 643.216 770.945 644.531 770.095 646.125 cv
769.949 646.397 769.817 646.677 769.7 646.965 cv
769.257 648.045 769.013 649.227 769.013 650.467 cv
769.013 688.219 li
769.013 708.845 li
769.013 708.873 li
767.433 709.085 766.215 710.438 766.215 712.076 cv
766.215 726.121 li
766.215 727.972 764.715 729.472 762.865 729.472 cv
753.379 729.472 li
751.529 729.472 750.028 730.972 750.028 732.821 cv
750.028 746.748 li
750.028 748.599 748.529 750.098 746.679 750.098 cv
737.193 750.098 li
735.342 750.098 733.843 751.598 733.843 753.448 cv
733.843 753.838 li
733.634 722.168 mo
733.634 722.168 723.955 723.37 730.184 728.412 cv
731.294 729.31 732.461 729.679 733.556 729.679 cv
738.211 729.679 741.562 723.025 733.634 722.168 cv
674.372 721.958 mo
674.448 724.371 676.428 726.304 678.859 726.304 cv
697.176 726.304 li
699.607 726.304 701.587 724.371 701.664 721.958 cv
701.665 721.91 701.666 721.862 701.666 721.813 cv
701.666 680.707 li
701.666 680.707 li
701.666 678.227 699.655 676.217 697.176 676.217 cv
678.859 676.217 li
676.38 676.217 674.369 678.227 674.369 680.707 cv
674.369 721.813 li
674.369 721.813 li
674.369 721.862 674.37 721.91 674.372 721.958 cv
644.331 719.44 mo
644.331 719.44 637.479 720.29 641.888 723.86 cv
642.674 724.496 643.501 724.757 644.276 724.757 cv
647.573 724.757 649.945 720.046 644.331 719.44 cv
652.279 715.38 mo
651.517 715.38 649.407 715.541 650.978 717.442 cv
651.234 717.753 651.55 717.88 651.875 717.88 cv
653.241 717.88 654.752 715.627 652.534 715.387 cv
652.534 715.387 652.435 715.38 652.279 715.38 cv
641.466 669.186 mo
641.466 669.186 636.571 669.186 639.686 671.707 cv
640.2 672.124 640.692 672.293 641.127 672.293 cv
642.883 672.293 643.724 669.542 641.466 669.186 cv
718.811 653.427 mo
718.811 653.427 711.959 654.278 716.368 657.849 cv
717.154 658.484 717.98 658.745 718.755 658.745 cv
722.052 658.745 724.425 654.034 718.811 653.427 cv
level3{
gsave
clp
[8.05167e-15 -131.494 131.494 8.05167e-15 701.65 761.453 ]ct
/2 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[8.05167e-15 -131.494 131.494 8.05167e-15 701.65 761.453 ]ct
clp
/2 /Gradient get_res exec grestore
}if
np
729.53 763.891 mo
725.693 763.891 li
721.856 763.891 li
720.568 763.891 719.523 762.846 719.523 761.557 cv
719.523 759.449 li
719.523 758.16 718.478 757.115 717.189 757.115 cv
702.741 757.115 li
701.452 757.115 700.407 758.16 700.407 759.449 cv
700.407 761.557 li
700.407 762.846 699.363 763.891 698.074 763.891 cv
690.4 763.891 li
689.112 763.891 688.067 762.846 688.067 761.557 cv
688.067 759.449 li
688.067 758.16 687.022 757.115 685.734 757.115 cv
685.732 757.115 li
671.285 757.115 li
671.283 757.115 li
669.995 757.115 668.95 758.16 668.95 759.449 cv
668.95 761.557 li
668.95 762.846 667.906 763.891 666.617 763.891 cv
658.943 763.891 li
657.655 763.891 656.61 762.846 656.61 761.557 cv
656.61 759.449 li
656.61 758.16 655.565 757.115 654.277 757.115 cv
639.828 757.115 li
638.54 757.115 637.495 758.16 637.495 759.449 cv
637.495 761.557 li
637.495 762.846 636.45 763.891 635.161 763.891 cv
631.325 763.891 li
627.488 763.891 li
626.199 763.891 625.154 762.846 625.154 761.557 cv
625.154 759.449 li
625.154 758.16 624.11 757.115 622.821 757.115 cv
615.597 757.115 li
615.597 629.568 li
659.363 629.568 li
684.544 629.568 li
723.549 629.568 li
748.73 629.568 li
639.198 632.648 li
636.897 632.712 634.752 633.825 633.375 635.67 cv
626.378 645.04 li
625.405 646.341 624.88 647.922 624.88 649.547 cv
624.88 744.635 li
624.88 748.747 628.178 752.099 632.289 752.166 cv
733.843 753.838 li
733.843 757.142 li
732.722 757.312 731.863 758.28 731.863 759.449 cv
731.863 761.557 li
731.863 762.846 730.818 763.891 729.53 763.891 cv
level3{
gsave
clp
[8.05167e-15 -131.494 131.494 8.05167e-15 701.65 761.453 ]ct
/3 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[8.05167e-15 -131.494 131.494 8.05167e-15 701.65 761.453 ]ct
clp
/3 /Gradient get_res exec grestore
}if
np
782.973 629.568 mo
778.386 629.568 li
748.73 629.568 li
723.549 629.568 li
684.544 629.568 li
659.363 629.568 li
615.597 629.568 li
615.597 604.388 li
615.84 604.388 616.079 604.369 616.312 604.334 cv
616.312 604.334 li
618.602 603.99 620.358 602.014 620.358 599.627 cv
620.358 595.325 li
620.358 592.695 622.49 590.563 625.12 590.563 cv
634.389 590.563 li
635.372 590.563 li
643.65 590.563 li
644.633 590.563 li
654.602 590.563 li
657.231 590.563 659.363 592.695 659.363 595.325 cv
659.363 599.627 li
659.363 601.764 660.771 603.572 662.71 604.174 cv
662.71 604.174 662.711 604.174 662.711 604.174 cv
663.026 604.272 663.354 604.338 663.693 604.368 cv
663.835 604.381 663.979 604.388 664.124 604.388 cv
671.971 604.388 li
672.954 604.388 li
672.954 604.388 li
679.783 604.388 li
682.412 604.388 684.544 602.257 684.544 599.627 cv
684.544 595.325 li
684.544 592.695 686.675 590.563 689.305 590.563 cv
691.031 590.563 li
692.014 590.563 li
700.292 590.563 li
701.275 590.563 li
709.894 590.563 li
718.788 590.563 li
720.558 590.563 722.103 591.53 722.923 592.964 cv
723.321 593.66 723.549 594.466 723.549 595.325 cv
723.549 599.627 li
723.549 602.257 725.68 604.388 728.31 604.388 cv
743.968 604.388 li
746.598 604.388 748.73 602.257 748.73 599.627 cv
748.73 595.325 li
748.73 592.695 750.861 590.563 753.491 590.563 cv
782.973 590.563 li
785.603 590.563 787.735 592.695 787.735 595.324 cv
787.735 624.807 li
787.735 625.668 787.506 626.476 787.106 627.173 cv
786.285 628.604 784.742 629.568 782.973 629.568 cv
694.027 617.945 mo
694.027 617.945 687.52 617.945 692.275 620.475 cv
693.075 620.9 693.771 621.073 694.345 621.073 cv
696.794 621.073 697.063 617.945 694.027 617.945 cv
701.98 612.458 mo
701.98 612.458 697.086 612.458 700.2 614.979 cv
700.714 615.396 701.206 615.565 701.642 615.565 cv
703.398 615.565 704.238 612.814 701.98 612.458 cv
639.373 607.482 mo
639.373 607.482 634.479 607.482 637.594 610.003 cv
638.109 610.42 638.6 610.589 639.036 610.589 cv
640.791 610.589 641.631 607.839 639.373 607.482 cv
767.587 602.199 mo
766.062 602.199 761.847 602.523 764.986 606.325 cv
765.498 606.946 766.13 607.2 766.779 607.2 cv
769.513 607.2 772.535 602.692 768.1 602.213 cv
768.1 602.213 767.9 602.199 767.587 602.199 cv
level3{
gsave
clp
[-141.247 1.72977e-14 -1.72978e-14 -141.247 771.297 610.066 ]ct
/5 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-141.247 1.72977e-14 -1.72978e-14 -141.247 771.297 610.066 ]ct
clp
/5 /Gradient get_res exec grestore
}if
np
230.355 757.115 mo
229.066 757.115 228.022 758.16 228.022 759.449 cv
228.022 761.557 li
228.022 762.846 226.977 763.891 225.688 763.891 cv
221.851 763.891 li
218.015 763.891 li
216.726 763.891 215.681 762.846 215.681 761.557 cv
215.681 759.449 li
215.681 758.16 214.636 757.115 213.348 757.115 cv
198.899 757.115 li
197.611 757.115 196.566 758.16 196.566 759.449 cv
196.566 761.557 li
196.566 762.846 195.521 763.891 194.233 763.891 cv
186.559 763.891 li
185.27 763.891 184.226 762.846 184.226 761.557 cv
184.226 759.449 li
184.226 758.16 183.181 757.115 181.893 757.115 cv
181.891 757.115 li
167.444 757.115 li
167.442 757.115 li
166.154 757.115 165.109 758.16 165.109 759.449 cv
165.109 761.557 li
165.109 762.846 164.064 763.891 162.776 763.891 cv
155.102 763.891 li
153.814 763.891 152.769 762.846 152.769 761.557 cv
152.769 759.449 li
152.769 758.16 151.724 757.115 150.435 757.115 cv
135.987 757.115 li
134.698 757.115 133.654 758.16 133.654 759.449 cv
133.654 761.557 li
133.654 762.846 132.609 763.891 131.32 763.891 cv
127.483 763.891 li
123.647 763.891 li
122.358 763.891 121.313 762.846 121.313 761.557 cv
121.313 759.449 li
121.313 758.16 120.268 757.115 118.98 757.115 cv
104.531 757.115 li
103.242 757.115 102.197 758.16 102.197 759.449 cv
102.197 761.557 li
102.197 762.846 101.153 763.891 99.865 763.891 cv
92.1907 763.891 li
90.9022 763.891 89.8576 762.846 89.8576 761.557 cv
89.8576 759.449 li
89.8576 758.16 88.8127 757.115 87.5242 757.115 cv
73.0755 757.115 li
71.7874 757.115 70.7424 758.16 70.7424 759.449 cv
70.7424 773.897 li
70.7424 775.185 71.7874 776.23 73.0755 776.23 cv
89.8576 776.23 li
102.197 776.23 li
121.313 776.23 li
127.483 776.23 li
133.654 776.23 li
152.769 776.23 li
165.109 776.23 li
167.444 776.23 li
181.891 776.23 li
184.226 776.23 li
196.566 776.23 li
215.681 776.23 li
221.851 776.23 li
228.022 776.23 li
237.579 776.23 li
237.579 757.115 li
230.355 757.115 li
1 .85098 .658824 rgb
f
720.868 770.727 mo
624.837 770.727 li
619.734 770.727 615.597 766.59 615.597 761.487 cv
615.597 757.115 li
622.821 757.115 li
624.11 757.115 625.154 758.16 625.154 759.449 cv
625.154 761.557 li
625.154 762.846 626.199 763.891 627.488 763.891 cv
631.325 763.891 li
635.161 763.891 li
636.45 763.891 637.495 762.846 637.495 761.557 cv
637.495 759.449 li
637.495 758.16 638.54 757.115 639.828 757.115 cv
654.277 757.115 li
655.565 757.115 656.61 758.16 656.61 759.449 cv
656.61 761.557 li
656.61 762.846 657.655 763.891 658.943 763.891 cv
666.617 763.891 li
667.906 763.891 668.95 762.846 668.95 761.557 cv
668.95 759.449 li
668.95 758.16 669.995 757.115 671.283 757.115 cv
671.285 757.115 li
685.732 757.115 li
685.734 757.115 li
687.022 757.115 688.067 758.16 688.067 759.449 cv
688.067 761.557 li
688.067 762.846 689.112 763.891 690.4 763.891 cv
698.074 763.891 li
699.363 763.891 700.407 762.846 700.407 761.557 cv
700.407 759.449 li
700.407 758.16 701.452 757.115 702.741 757.115 cv
717.189 757.115 li
718.478 757.115 719.523 758.16 719.523 759.449 cv
719.523 761.557 li
719.523 762.846 720.568 763.891 721.856 763.891 cv
725.693 763.891 li
729.53 763.891 li
730.818 763.891 731.863 762.846 731.863 761.557 cv
731.863 759.449 li
731.863 758.28 732.722 757.312 733.843 757.142 cv
733.843 767.375 li
733.843 769.225 732.342 770.725 730.492 770.725 cv
721.006 770.725 li
720.96 770.725 720.914 770.726 720.868 770.727 cv
level3{
gsave
clp
[166.837 0 0 166.837 615.597 766.673 ]ct
/5 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[166.837 0 0 166.837 615.597 766.673 ]ct
clp
/5 /Gradient get_res exec grestore
}if
np
704.82 811.978 mo
622.027 811.978 li
585.903 811.978 li
429.467 811.978 li
423.298 811.978 li
267.273 811.978 li
230.738 811.978 li
148.897 811.978 li
150.756 811.978 152.264 810.471 152.264 808.611 cv
152.264 794.616 li
152.264 794.616 li
152.264 794.616 li
152.264 792.779 150.791 791.285 148.962 791.251 cv
148.941 791.25 148.919 791.25 148.897 791.25 cv
139.364 791.25 li
137.505 791.25 135.998 789.743 135.998 787.884 cv
135.998 773.889 li
135.998 773.889 li
135.998 773.727 135.987 773.569 135.965 773.414 cv
141.588 773.667 146.399 773.845 148.869 773.845 cv
157.569 773.845 205.882 771.647 205.882 771.647 cv
135.143 771.647 li
134.778 771.239 134.315 770.92 133.791 770.727 cv
228.339 770.727 li
233.443 770.727 237.579 766.59 237.579 761.487 cv
237.579 761.487 li
237.579 615.044 li
237.579 555.207 li
237.579 559.396 li
451.806 562.963 li
451.026 563.309 450.91 563.934 453.028 565.061 cv
453.828 565.486 454.524 565.659 455.099 565.659 cv
456.921 565.659 457.536 563.927 456.481 563.041 cv
565.898 564.862 li
568.621 564.896 571.203 566.077 573.01 568.114 cv
587.023 583.924 li
587.358 584.302 587.721 584.652 588.111 584.973 cv
606.535 600.146 li
608.856 602.057 610.154 604.939 610.049 607.942 cv
615.597 761.487 li
615.597 766.59 619.734 770.727 624.837 770.727 cv
720.868 770.727 li
719.082 770.799 717.656 772.27 717.656 774.074 cv
717.656 788.002 li
717.656 789.852 716.156 791.351 714.306 791.351 cv
704.82 791.351 li
703.646 791.351 702.613 791.955 702.015 792.869 cv
701.795 792.276 701.098 791.772 699.712 791.622 cv
699.712 791.622 694.872 792.224 697.987 794.745 cv
698.542 795.194 699.125 795.378 699.672 795.378 cv
700.378 795.378 701.024 795.072 701.471 794.634 cv
701.47 794.657 701.47 794.679 701.47 794.701 cv
701.47 808.628 li
701.47 810.477 702.97 811.978 704.82 811.978 cv
616.08 796.885 mo
614.553 796.885 610.343 797.209 613.48 801.01 cv
613.993 801.631 614.625 801.885 615.274 801.885 cv
618.007 801.885 621.029 797.378 616.594 796.898 cv
616.594 796.898 616.394 796.885 616.08 796.885 cv
239.991 793.864 mo
239.991 793.864 235.151 794.465 238.265 796.986 cv
238.82 797.435 239.404 797.619 239.951 797.619 cv
242.279 797.62 243.955 794.293 239.991 793.864 cv
233.98 785.625 mo
231.659 785.625 225.244 786.117 230.02 791.904 cv
230.8 792.849 231.763 793.235 232.749 793.235 cv
236.91 793.236 241.51 786.376 234.76 785.646 cv
234.76 785.646 234.456 785.625 233.98 785.625 cv
693.701 783.384 mo
691.38 783.384 684.965 783.875 689.742 789.662 cv
690.522 790.607 691.484 790.993 692.471 790.993 cv
696.632 790.994 701.231 784.134 694.481 783.404 cv
694.481 783.404 694.177 783.384 693.701 783.384 cv
176.057 780.883 mo
174.532 780.883 170.317 781.206 173.455 785.009 cv
173.968 785.63 174.6 785.884 175.249 785.884 cv
177.983 785.884 181.005 781.376 176.569 780.896 cv
176.569 780.896 176.37 780.883 176.057 780.883 cv
549.796 776.23 mo
549.796 776.23 544.902 776.23 548.016 778.752 cv
548.531 779.168 549.023 779.338 549.458 779.338 cv
551.214 779.338 552.054 776.587 549.796 776.23 cv
557.94 758.225 mo
557.94 758.225 551.088 759.077 555.498 762.647 cv
556.283 763.283 557.11 763.544 557.885 763.544 cv
561.181 763.545 563.554 758.833 557.94 758.225 cv
267.909 745.751 mo
267.147 745.751 265.037 745.912 266.608 747.815 cv
266.864 748.125 267.18 748.252 267.504 748.252 cv
268.871 748.252 270.382 745.998 268.164 745.758 cv
268.164 745.758 268.065 745.751 267.909 745.751 cv
278.783 734.415 mo
276.462 734.415 270.046 734.907 274.822 740.694 cv
275.602 741.639 276.565 742.025 277.551 742.025 cv
281.712 742.026 286.313 735.165 279.562 734.436 cv
279.562 734.436 279.258 734.415 278.783 734.415 cv
544.65 723.426 mo
544.65 723.426 li
544.65 725.015 545.938 726.303 547.527 726.303 cv
574.838 726.303 li
576.427 726.303 577.716 725.015 577.716 723.426 cv
577.716 692.749 li
577.716 692.749 li
577.716 683.618 570.313 676.217 561.183 676.217 cv
561.182 676.217 li
552.052 676.217 544.65 683.618 544.65 692.749 cv
544.65 723.426 li
544.65 723.426 li
490.812 723.426 mo
490.812 723.426 li
490.812 725.015 492.1 726.303 493.689 726.303 cv
521.001 726.303 li
522.59 726.303 523.877 725.015 523.877 723.426 cv
523.877 692.749 li
523.877 692.749 li
523.877 683.618 516.476 676.217 507.345 676.217 cv
507.345 676.217 li
507.345 676.217 li
499.231 676.217 492.482 682.062 491.08 689.771 cv
490.904 690.737 490.812 691.732 490.812 692.749 cv
490.812 723.426 li
490.812 723.426 li
439.852 726.303 mo
439.852 726.303 li
467.162 726.303 li
467.181 726.303 467.199 726.303 467.218 726.302 cv
468.782 726.273 470.04 724.996 470.04 723.426 cv
470.04 692.749 li
470.04 683.618 462.638 676.217 453.507 676.217 cv
444.376 676.217 436.974 683.618 436.974 692.749 cv
436.974 723.426 li
436.974 723.426 li
436.974 723.606 436.991 723.782 437.023 723.953 cv
437.27 725.29 438.442 726.303 439.851 726.303 cv
439.851 726.303 li
383.136 723.426 mo
383.136 723.426 li
383.136 725.015 384.424 726.303 386.013 726.303 cv
413.325 726.303 li
413.325 726.303 li
414.895 726.303 416.172 725.045 416.201 723.482 cv
416.202 723.463 416.202 723.444 416.202 723.426 cv
416.202 692.749 li
416.202 692.749 li
416.202 683.618 408.8 676.217 399.669 676.217 cv
399.669 676.217 li
390.538 676.217 383.136 683.618 383.136 692.749 cv
383.136 723.426 li
383.136 723.426 li
329.299 723.426 mo
329.299 723.426 li
329.299 725.015 330.587 726.303 332.175 726.303 cv
359.487 726.303 li
361.076 726.303 362.364 725.015 362.364 723.426 cv
362.364 692.749 li
362.364 692.749 li
362.364 683.618 354.962 676.217 345.831 676.217 cv
336.701 676.217 329.299 683.618 329.299 692.749 cv
329.299 723.426 li
329.299 723.426 li
275.461 723.426 mo
275.461 723.426 li
275.461 725.015 276.749 726.303 278.338 726.303 cv
305.649 726.303 li
307.238 726.303 308.526 725.015 308.526 723.426 cv
308.526 692.749 li
308.526 692.749 li
308.526 683.618 301.124 676.217 291.994 676.217 cv
291.993 676.217 li
282.863 676.217 275.461 683.618 275.461 692.749 cv
275.461 723.426 li
275.461 723.426 li
588.701 682.251 mo
588.701 682.251 583.807 682.251 586.922 684.771 cv
587.436 685.188 587.928 685.357 588.363 685.357 cv
590.119 685.358 590.959 682.607 588.701 682.251 cv
568.125 667.075 mo
568.125 667.075 558.447 668.277 564.676 673.32 cv
565.785 674.218 566.952 674.586 568.047 674.586 cv
572.703 674.587 576.055 667.932 568.125 667.075 cv
267.298 666.427 mo
266.751 666.427 265.866 666.556 265.664 667.362 cv
265.599 667.622 265.923 667.723 266.412 667.723 cv
267.276 667.723 268.656 667.406 269.309 667.089 cv
269.963 666.772 269.89 666.456 267.85 666.456 cv
267.814 666.456 267.778 666.456 267.74 666.456 cv
267.74 666.456 267.557 666.427 267.298 666.427 cv
320.367 652 mo
319.93 652 316.646 652.059 317.402 653.866 cv
317.934 655.136 318.904 655.604 319.924 655.604 cv
321.348 655.604 322.87 654.695 323.441 653.786 cv
324.012 652.877 323.632 651.967 321.252 651.967 cv
320.996 651.967 320.718 651.978 320.415 652 cv
320.415 652 320.398 652 320.367 652 cv
533.031 616.765 mo
531.507 616.765 527.288 617.088 530.427 620.891 cv
530.94 621.512 531.572 621.765 532.221 621.766 cv
534.955 621.766 537.977 617.258 533.542 616.778 cv
533.542 616.778 533.343 616.765 533.031 616.765 cv
291.672 609.146 mo
290.147 609.146 285.931 609.469 289.07 613.271 cv
289.582 613.892 290.215 614.146 290.863 614.146 cv
293.597 614.146 296.62 609.639 292.184 609.159 cv
292.184 609.159 291.985 609.146 291.672 609.146 cv
278.282 602.213 mo
278.282 602.213 273.388 602.213 276.503 604.734 cv
277.018 605.151 277.509 605.32 277.945 605.32 cv
279.7 605.32 280.541 602.57 278.282 602.213 cv
299.019 602.834 mo
298.611 602.834 297.95 603.02 297.8 604.18 cv
297.751 604.553 297.993 604.699 298.358 604.699 cv
299.003 604.699 300.032 604.243 300.52 603.787 cv
301.008 603.331 300.953 602.876 299.431 602.876 cv
299.404 602.876 299.377 602.876 299.349 602.876 cv
299.349 602.876 299.212 602.834 299.019 602.834 cv
365.187 595.443 mo
364.751 595.443 361.466 595.537 362.223 598.376 cv
362.754 600.371 363.724 601.105 364.745 601.105 cv
366.168 601.105 367.69 599.677 368.261 598.249 cv
368.833 596.82 368.453 595.392 366.072 595.392 cv
365.816 595.392 365.538 595.409 365.235 595.443 cv
365.235 595.443 365.218 595.443 365.187 595.443 cv
576.965 588.783 mo
576.965 588.783 570.458 588.783 575.212 591.311 cv
576.013 591.738 576.709 591.91 577.284 591.91 cv
579.732 591.91 580.001 588.783 576.965 588.783 cv
584.917 583.296 mo
584.917 583.296 580.023 583.296 583.138 585.817 cv
583.652 586.234 584.144 586.403 584.579 586.403 cv
586.335 586.403 587.175 583.652 584.917 583.296 cv
532.27 583.916 mo
531.862 583.916 531.2 584.102 531.051 585.263 cv
531.002 585.636 531.244 585.782 531.608 585.782 cv
532.253 585.782 533.283 585.326 533.771 584.87 cv
534.258 584.414 534.204 583.957 532.682 583.957 cv
532.655 583.957 532.628 583.958 532.6 583.958 cv
532.6 583.958 532.463 583.916 532.27 583.916 cv
344.794 571.925 mo
344.794 571.925 339.9 571.925 343.014 574.446 cv
343.529 574.863 344.021 575.032 344.456 575.032 cv
346.212 575.032 347.052 572.281 344.794 571.925 cv
309.185 568.491 mo
309.185 568.491 302.215 568.491 305.774 572.495 cv
306.893 573.754 307.982 574.241 308.93 574.241 cv
312.187 574.242 313.779 568.491 309.185 568.491 cv
380.452 568.478 mo
378.927 568.478 374.712 568.801 377.85 572.604 cv
378.363 573.224 378.995 573.478 379.643 573.478 cv
382.377 573.479 385.4 568.97 380.965 568.491 cv
380.965 568.491 380.765 568.478 380.452 568.478 cv
480.643 568.478 mo
480.643 568.478 475.749 568.478 478.863 570.999 cv
479.378 571.416 479.87 571.585 480.305 571.585 cv
482.061 571.585 482.901 568.834 480.643 568.478 cv
624.88 541.47 mo
624.941 536.092 li
624.941 536.092 li
624.88 541.47 li
level3{
gsave
clp
[1.67856e-14 274.131 -274.131 1.67856e-14 426.588 565.691 ]ct
/11 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[1.67856e-14 274.131 -274.131 1.67856e-14 426.588 565.691 ]ct
clp
/11 /Gradient get_res exec grestore
}if
np
228.296 541.498 mo
228.295 541.489 228.295 541.479 228.295 541.47 cv
228.234 536.092 li
228.234 536.092 li
228.296 541.47 li
228.296 541.47 li
228.296 541.498 li
level3{
gsave
clp
[1.4561e-14 237.8 -237.8 1.4561e-14 227.826 500.311 ]ct
/12 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[1.4561e-14 237.8 -237.8 1.4561e-14 227.826 500.311 ]ct
clp
/12 /Gradient get_res exec grestore
}if
np
615.597 761.487 mo
610.049 607.942 li
610.154 604.939 608.856 602.057 606.535 600.146 cv
588.111 584.973 li
587.721 584.652 587.358 584.302 587.023 583.924 cv
573.01 568.114 li
571.203 566.077 568.621 564.896 565.898 564.862 cv
456.481 563.041 li
456.118 562.736 455.557 562.531 454.781 562.531 cv
454.781 562.531 452.778 562.531 451.806 562.963 cv
237.579 559.396 li
237.579 555.207 li
245.078 555.207 li
246.366 555.207 247.411 554.162 247.411 552.873 cv
247.411 550.765 li
247.411 549.477 248.456 548.432 249.744 548.432 cv
257.418 548.432 li
258.707 548.432 259.751 549.477 259.751 550.765 cv
259.751 552.873 li
259.751 554.162 260.796 555.207 262.085 555.207 cv
276.533 555.207 li
277.822 555.207 278.866 554.162 278.866 552.873 cv
278.866 550.765 li
278.866 549.477 279.911 548.432 281.2 548.432 cv
285.037 548.432 li
288.873 548.432 li
290.162 548.432 291.207 549.477 291.207 550.765 cv
291.207 552.873 li
291.207 554.162 292.252 555.207 293.54 555.207 cv
307.989 555.207 li
309.278 555.207 310.322 554.162 310.322 552.873 cv
310.322 550.765 li
310.322 549.477 311.367 548.432 312.655 548.432 cv
320.329 548.432 li
321.618 548.432 322.662 549.477 322.662 550.765 cv
322.662 552.873 li
322.662 554.162 323.707 555.207 324.996 555.207 cv
324.997 555.207 li
339.445 555.207 li
339.446 555.207 li
340.735 555.207 341.779 554.162 341.779 552.873 cv
341.779 550.765 li
341.779 549.477 342.824 548.432 344.113 548.432 cv
351.786 548.432 li
353.075 548.432 354.119 549.477 354.119 550.765 cv
354.119 552.873 li
354.119 554.162 355.164 555.207 356.453 555.207 cv
370.901 555.207 li
372.19 555.207 373.234 554.162 373.234 552.873 cv
373.234 550.765 li
373.234 549.477 374.28 548.432 375.568 548.432 cv
379.405 548.432 li
383.241 548.432 li
384.531 548.432 385.575 549.477 385.575 550.765 cv
385.575 552.873 li
385.575 554.162 386.62 555.207 387.908 555.207 cv
402.357 555.207 li
403.646 555.207 404.69 554.162 404.69 552.873 cv
404.69 550.765 li
404.69 549.477 405.735 548.432 407.024 548.432 cv
414.697 548.432 li
415.986 548.432 417.03 549.477 417.03 550.765 cv
417.03 552.873 li
417.03 554.162 418.076 555.207 419.364 555.207 cv
419.364 555.207 li
433.812 555.207 li
433.813 555.207 li
434.457 555.207 435.04 554.945 435.462 554.523 cv
435.884 554.102 436.146 553.518 436.146 552.873 cv
436.146 550.765 li
436.146 549.477 437.19 548.432 438.479 548.432 cv
446.153 548.432 li
447.441 548.432 448.486 549.477 448.486 550.765 cv
448.486 552.873 li
448.486 554.162 449.531 555.207 450.82 555.207 cv
465.268 555.207 li
466.556 555.207 467.601 554.162 467.601 552.873 cv
467.601 550.765 li
467.601 549.477 468.646 548.432 469.934 548.432 cv
473.771 548.432 li
477.609 548.432 li
478.897 548.432 479.942 549.477 479.942 550.765 cv
479.942 552.873 li
479.942 554.162 480.986 555.207 482.275 555.207 cv
496.723 555.207 li
498.012 555.207 499.057 554.162 499.057 552.873 cv
499.057 550.765 li
499.057 549.477 500.102 548.432 501.39 548.432 cv
509.064 548.432 li
510.352 548.432 511.397 549.477 511.397 550.765 cv
511.397 552.873 li
511.397 554.162 512.442 555.207 513.73 555.207 cv
513.732 555.207 li
528.179 555.207 li
528.18 555.207 li
529.469 555.207 530.514 554.162 530.514 552.873 cv
530.514 550.765 li
530.514 549.477 531.558 548.432 532.847 548.432 cv
540.521 548.432 li
541.809 548.432 542.854 549.477 542.854 550.765 cv
542.854 552.873 li
542.854 554.162 543.899 555.207 545.188 555.207 cv
559.636 555.207 li
560.925 555.207 561.969 554.162 561.969 552.873 cv
561.969 550.765 li
561.969 549.477 563.014 548.432 564.302 548.432 cv
566.742 548.432 li
568.139 548.432 li
571.976 548.432 li
572.423 548.432 572.841 548.557 573.196 548.775 cv
573.864 549.186 574.309 549.923 574.309 550.765 cv
574.309 552.873 li
574.309 554.162 575.354 555.207 576.643 555.207 cv
591.092 555.207 li
592.38 555.207 593.425 554.162 593.425 552.873 cv
593.425 550.765 li
593.425 549.477 594.47 548.432 595.758 548.432 cv
603.432 548.432 li
604.721 548.432 605.765 549.477 605.765 550.765 cv
605.765 552.873 li
605.765 552.873 li
605.765 554.162 606.81 555.207 608.098 555.207 cv
615.597 555.207 li
615.597 604.388 li
615.597 629.568 li
615.597 761.487 li
615.597 761.487 li
462.733 557.044 mo
462.733 557.044 457.839 557.044 460.953 559.565 cv
461.468 559.982 461.96 560.151 462.395 560.151 cv
464.151 560.151 464.991 557.401 462.733 557.044 cv
624.88 541.47 mo
624.88 538.425 li
624.88 538.425 li
624.88 537.137 623.836 536.092 622.547 536.092 cv
605.765 536.092 li
593.425 536.092 li
574.31 536.092 li
568.139 536.092 li
561.969 536.092 li
542.854 536.092 li
530.514 536.092 li
528.179 536.092 li
513.732 536.092 li
511.397 536.092 li
499.057 536.092 li
479.942 536.092 li
473.771 536.092 li
467.601 536.092 li
448.486 536.092 li
436.146 536.092 li
433.813 536.092 li
419.364 536.092 li
417.03 536.092 li
404.69 536.092 li
385.575 536.092 li
379.405 536.092 li
373.234 536.092 li
354.119 536.092 li
341.779 536.092 li
339.445 536.092 li
324.997 536.092 li
322.662 536.092 li
310.322 536.092 li
291.207 536.092 li
285.037 536.092 li
278.866 536.092 li
259.751 536.092 li
247.411 536.092 li
230.629 536.092 li
229.34 536.092 228.296 537.137 228.296 538.425 cv
228.296 541.47 li
228.296 541.47 li
228.234 536.092 li
253.532 536.092 li
278.713 536.092 li
317.717 536.092 li
330.308 536.092 li
342.898 536.092 li
381.903 536.092 li
407.084 536.092 li
411.848 536.092 li
441.327 536.092 li
446.092 536.092 li
471.272 536.092 li
510.277 536.092 li
522.868 536.092 li
535.458 536.092 li
574.463 536.092 li
599.644 536.092 li
624.941 536.092 li
624.88 541.47 li
level3{
gsave
clp
[1.67856e-14 274.131 -274.131 1.67856e-14 426.588 565.691 ]ct
/12 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[1.67856e-14 274.131 -274.131 1.67856e-14 426.588 565.691 ]ct
clp
/12 /Gradient get_res exec grestore
}if
np
625.591 536.092 mo
624.941 536.092 li
624.941 536.092 li
599.644 536.092 li
574.463 536.092 li
535.458 536.092 li
522.868 536.092 li
510.277 536.092 li
471.272 536.092 li
446.092 536.092 li
441.327 536.092 li
411.848 536.092 li
407.084 536.092 li
381.903 536.092 li
342.898 536.092 li
330.308 536.092 li
317.717 536.092 li
278.713 536.092 li
253.532 536.092 li
228.234 536.092 li
228.234 536.092 li
227.585 536.092 li
220.374 536.092 214.527 530.245 214.527 523.033 cv
214.527 501.848 li
214.527 500.648 214.971 499.552 215.704 498.714 cv
216.577 497.717 217.859 497.087 219.288 497.087 cv
248.771 497.087 li
250.511 497.087 252.033 498.021 252.864 499.415 cv
253.288 500.127 253.532 500.959 253.532 501.849 cv
253.532 506.15 li
253.532 508.779 255.663 510.911 258.293 510.911 cv
273.951 510.911 li
276.581 510.911 278.713 508.779 278.713 506.15 cv
278.713 501.848 li
278.713 501.158 278.86 500.502 279.124 499.91 cv
279.866 498.246 281.534 497.087 283.474 497.087 cv
294.636 497.087 li
312.956 497.087 li
315.586 497.087 317.717 499.219 317.717 501.849 cv
317.717 506.149 li
317.717 508.779 319.849 510.911 322.479 510.911 cv
330.308 510.911 li
338.137 510.911 li
340.766 510.911 342.898 508.779 342.898 506.15 cv
342.898 501.848 li
342.898 499.219 345.03 497.087 347.659 497.087 cv
377.142 497.087 li
379.772 497.087 381.903 499.219 381.903 501.849 cv
381.903 506.15 li
381.903 508.779 384.035 510.911 386.664 510.911 cv
402.323 510.911 li
404.952 510.911 407.084 508.779 407.084 506.15 cv
407.084 501.849 li
407.084 499.219 409.216 497.087 411.845 497.087 cv
411.848 497.087 li
441.327 497.087 li
441.331 497.087 li
443.961 497.087 446.092 499.219 446.092 501.849 cv
446.092 506.15 li
446.092 508.779 448.224 510.911 450.853 510.911 cv
466.511 510.911 li
469.141 510.911 471.272 508.779 471.272 506.15 cv
471.272 501.848 li
471.272 499.219 473.405 497.087 476.034 497.087 cv
505.516 497.087 li
508.146 497.087 510.277 499.219 510.277 501.849 cv
510.277 506.149 li
510.277 508.779 512.409 510.911 515.039 510.911 cv
522.868 510.911 li
530.697 510.911 li
533.326 510.911 535.458 508.779 535.458 506.149 cv
535.458 501.848 li
535.458 500.153 536.344 498.665 537.677 497.821 cv
538.413 497.356 539.284 497.087 540.219 497.087 cv
558.54 497.087 li
569.702 497.087 li
570.717 497.087 571.657 497.404 572.43 497.945 cv
573.659 498.806 574.463 500.233 574.463 501.849 cv
574.463 506.15 li
574.463 508.779 576.595 510.911 579.224 510.911 cv
594.883 510.911 li
597.512 510.911 599.644 508.779 599.644 506.15 cv
599.644 501.848 li
599.644 500.535 600.175 499.346 601.035 498.484 cv
601.897 497.621 603.089 497.087 604.405 497.087 cv
633.888 497.087 li
635.528 497.087 636.974 497.916 637.83 499.178 cv
638.347 499.94 638.649 500.859 638.649 501.849 cv
638.649 515.036 li
638.649 516.715 li
638.649 523.033 li
638.649 530.245 632.803 536.092 625.591 536.092 cv
412.643 530.531 mo
412.643 530.531 406.136 530.531 410.89 533.06 cv
411.691 533.486 412.387 533.658 412.962 533.658 cv
415.411 533.658 415.679 530.531 412.643 530.531 cv
539.487 529.291 mo
539.487 529.291 534.647 529.893 537.761 532.413 cv
538.316 532.862 538.9 533.047 539.448 533.047 cv
541.776 533.047 543.451 529.72 539.487 529.291 cv
297.406 529.383 mo
297.086 529.383 294.68 529.443 295.234 531.249 cv
295.623 532.519 296.334 532.987 297.081 532.987 cv
298.124 532.987 299.239 532.078 299.657 531.169 cv
300.076 530.26 299.797 529.351 298.054 529.351 cv
297.867 529.351 297.663 529.362 297.441 529.384 cv
297.441 529.384 297.428 529.383 297.406 529.383 cv
353.32 529.872 mo
352.919 529.872 352.27 530.002 352.122 530.808 cv
352.075 531.067 352.312 531.168 352.67 531.168 cv
353.304 531.169 354.315 530.852 354.793 530.535 cv
355.272 530.218 355.218 529.901 353.722 529.901 cv
353.696 529.901 353.67 529.901 353.644 529.901 cv
353.644 529.901 353.51 529.872 353.32 529.872 cv
420.595 525.044 mo
420.595 525.044 415.701 525.044 418.816 527.564 cv
419.331 527.981 419.822 528.15 420.258 528.15 cv
422.014 528.15 422.853 525.4 420.595 525.044 cv
549.81 515.276 mo
547.488 515.276 541.074 515.768 545.85 521.555 cv
546.63 522.5 547.592 522.886 548.579 522.886 cv
552.74 522.886 557.339 516.026 550.59 515.297 cv
550.59 515.297 550.286 515.276 549.81 515.276 cv
485.33 516.275 mo
484.893 516.275 481.608 516.368 482.365 519.207 cv
482.897 521.202 483.867 521.937 484.888 521.937 cv
486.311 521.937 487.833 520.509 488.404 519.081 cv
488.975 517.652 488.595 516.224 486.215 516.224 cv
485.959 516.224 485.681 516.241 485.378 516.275 cv
485.378 516.275 485.361 516.275 485.33 516.275 cv
612.833 516.58 mo
611.309 516.58 607.09 516.903 610.23 520.706 cv
610.742 521.327 611.375 521.581 612.023 521.581 cv
614.757 521.581 617.779 517.074 613.344 516.594 cv
613.344 516.594 613.145 516.58 612.833 516.58 cv
233.966 513.723 mo
233.966 513.723 229.072 513.723 232.186 516.244 cv
232.701 516.661 233.193 516.83 233.628 516.83 cv
235.384 516.83 236.224 514.079 233.966 513.723 cv
level3{
gsave
clp
[424.122 0 0 424.122 214.527 516.589 ]ct
/5 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[424.122 0 0 424.122 214.527 516.589 ]ct
clp
/5 /Gradient get_res exec grestore
}if
np
559.636 555.207 mo
545.188 555.207 li
543.899 555.207 542.854 554.162 542.854 552.873 cv
542.854 550.765 li
542.854 549.477 541.809 548.432 540.521 548.432 cv
532.847 548.432 li
531.558 548.432 530.514 549.477 530.514 550.765 cv
530.514 552.873 li
530.514 554.162 529.469 555.207 528.18 555.207 cv
528.179 555.207 li
513.732 555.207 li
513.73 555.207 li
512.442 555.207 511.397 554.162 511.397 552.873 cv
511.397 550.765 li
511.397 549.477 510.352 548.432 509.064 548.432 cv
501.39 548.432 li
500.102 548.432 499.057 549.477 499.057 550.765 cv
499.057 552.873 li
499.057 554.162 498.012 555.207 496.723 555.207 cv
482.275 555.207 li
480.986 555.207 479.942 554.162 479.942 552.873 cv
479.942 550.765 li
479.942 549.477 478.897 548.432 477.609 548.432 cv
473.771 548.432 li
469.934 548.432 li
468.646 548.432 467.601 549.477 467.601 550.765 cv
467.601 552.873 li
467.601 554.162 466.556 555.207 465.268 555.207 cv
450.82 555.207 li
449.531 555.207 448.486 554.162 448.486 552.873 cv
448.486 550.765 li
448.486 549.477 447.441 548.432 446.153 548.432 cv
438.479 548.432 li
437.19 548.432 436.146 549.477 436.146 550.765 cv
436.146 552.873 li
436.146 553.518 435.884 554.102 435.462 554.523 cv
435.04 554.945 434.457 555.207 433.813 555.207 cv
433.812 555.207 li
419.364 555.207 li
419.364 555.207 li
418.076 555.207 417.03 554.162 417.03 552.873 cv
417.03 550.765 li
417.03 549.477 415.986 548.432 414.697 548.432 cv
407.024 548.432 li
405.735 548.432 404.69 549.477 404.69 550.765 cv
404.69 552.873 li
404.69 554.162 403.646 555.207 402.357 555.207 cv
387.908 555.207 li
386.62 555.207 385.575 554.162 385.575 552.873 cv
385.575 550.765 li
385.575 549.477 384.531 548.432 383.241 548.432 cv
379.405 548.432 li
375.568 548.432 li
374.28 548.432 373.234 549.477 373.234 550.765 cv
373.234 552.873 li
373.234 554.162 372.19 555.207 370.901 555.207 cv
356.453 555.207 li
355.164 555.207 354.119 554.162 354.119 552.873 cv
354.119 550.765 li
354.119 549.477 353.075 548.432 351.786 548.432 cv
344.113 548.432 li
342.824 548.432 341.779 549.477 341.779 550.765 cv
341.779 552.873 li
341.779 554.162 340.735 555.207 339.446 555.207 cv
339.445 555.207 li
324.997 555.207 li
324.996 555.207 li
323.707 555.207 322.662 554.162 322.662 552.873 cv
322.662 550.765 li
322.662 549.477 321.618 548.432 320.329 548.432 cv
312.655 548.432 li
311.367 548.432 310.322 549.477 310.322 550.765 cv
310.322 552.873 li
310.322 554.162 309.278 555.207 307.989 555.207 cv
293.54 555.207 li
292.252 555.207 291.207 554.162 291.207 552.873 cv
291.207 550.765 li
291.207 549.477 290.162 548.432 288.873 548.432 cv
285.037 548.432 li
281.2 548.432 li
279.911 548.432 278.866 549.477 278.866 550.765 cv
278.866 552.873 li
278.866 554.162 277.822 555.207 276.533 555.207 cv
262.085 555.207 li
260.796 555.207 259.751 554.162 259.751 552.873 cv
259.751 550.765 li
259.751 549.477 258.707 548.432 257.418 548.432 cv
249.744 548.432 li
248.456 548.432 247.411 549.477 247.411 550.765 cv
247.411 552.873 li
247.411 554.162 246.366 555.207 245.078 555.207 cv
237.579 555.207 li
236.864 555.207 li
230.629 555.207 li
229.34 555.207 228.296 554.162 228.296 552.873 cv
228.296 541.498 li
228.296 541.47 li
228.296 538.425 li
228.296 537.137 229.34 536.092 230.629 536.092 cv
247.411 536.092 li
259.751 536.092 li
278.866 536.092 li
285.037 536.092 li
291.207 536.092 li
310.322 536.092 li
322.662 536.092 li
324.997 536.092 li
339.445 536.092 li
341.779 536.092 li
354.119 536.092 li
373.234 536.092 li
379.405 536.092 li
385.575 536.092 li
404.69 536.092 li
417.03 536.092 li
419.364 536.092 li
433.813 536.092 li
436.146 536.092 li
448.486 536.092 li
467.601 536.092 li
473.771 536.092 li
479.942 536.092 li
499.057 536.092 li
511.397 536.092 li
513.732 536.092 li
528.179 536.092 li
530.514 536.092 li
542.854 536.092 li
561.969 536.092 li
568.139 536.092 li
574.31 536.092 li
593.425 536.092 li
605.765 536.092 li
622.547 536.092 li
623.836 536.092 624.88 537.137 624.88 538.425 cv
624.88 538.425 li
624.88 537.137 623.836 536.092 622.547 536.092 cv
605.765 536.092 li
593.425 536.092 li
574.309 536.092 li
568.139 536.092 li
561.969 536.092 li
542.854 536.092 li
530.514 536.092 li
528.179 536.092 li
513.732 536.092 li
511.397 536.092 li
499.057 536.092 li
479.942 536.092 li
473.771 536.092 li
467.601 536.092 li
448.486 536.092 li
436.146 536.092 li
433.813 536.092 li
419.364 536.092 li
417.031 536.092 li
404.69 536.092 li
385.575 536.092 li
379.405 536.092 li
373.234 536.092 li
354.119 536.092 li
341.779 536.092 li
339.445 536.092 li
324.997 536.092 li
322.662 536.092 li
310.322 536.092 li
291.207 536.092 li
285.037 536.092 li
278.867 536.092 li
259.751 536.092 li
253.532 536.092 li
589.218 539.792 li
590.695 539.808 591.928 540.923 592.091 542.391 cv
592.342 544.658 li
592.532 546.362 591.221 547.863 589.506 547.902 cv
566.742 548.432 li
564.302 548.432 li
563.014 548.432 561.969 549.477 561.969 550.765 cv
561.969 552.873 li
561.969 554.162 560.925 555.207 559.636 555.207 cv
573.196 548.775 mo
572.841 548.557 572.423 548.432 571.976 548.432 cv
571.977 548.432 li
572.424 548.432 572.841 548.557 573.196 548.775 cv
level3{
gsave
clp
[396.585 0 0 396.585 228.296 545.649 ]ct
/11 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[396.585 0 0 396.585 228.296 545.649 ]ct
clp
/11 /Gradient get_res exec grestore
}if
np
148.869 773.845 mo
146.399 773.845 141.588 773.667 135.965 773.414 cv
135.87 772.74 135.576 772.131 135.143 771.647 cv
205.882 771.647 li
205.882 771.647 157.569 773.845 148.869 773.845 cv
level3{
gsave
clp
[1.67856e-14 274.131 -274.131 1.67856e-14 426.588 565.691 ]ct
/12 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[1.67856e-14 274.131 -274.131 1.67856e-14 426.588 565.691 ]ct
clp
/12 /Gradient get_res exec grestore
}if
np
174.332 726.304 mo
156.016 726.304 li
153.585 726.304 151.605 724.371 151.528 721.958 cv
151.605 724.371 153.585 726.303 156.016 726.303 cv
157.734 726.303 li
157.734 726.303 li
155.719 726.303 154.086 724.67 154.086 722.655 cv
154.086 685.615 li
154.086 683.601 155.719 681.968 157.734 681.968 cv
172.615 681.968 li
174.629 681.968 176.263 683.601 176.263 685.615 cv
176.263 722.655 li
176.263 724.67 174.629 726.303 172.615 726.303 cv
174.332 726.303 li
176.764 726.303 178.744 724.371 178.82 721.958 cv
178.744 724.371 176.764 726.304 174.332 726.304 cv
level3{
gsave
clp
[2.55925e-15 -41.7957 41.7957 2.55925e-15 165.174 723.487 ]ct
/10 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[2.55925e-15 -41.7957 41.7957 2.55925e-15 165.174 723.487 ]ct
clp
/10 /Gradient get_res exec grestore
}if
np
151.601 679.884 mo
151.988 677.797 153.817 676.217 156.016 676.217 cv
156.016 676.217 li
153.817 676.217 151.988 677.797 151.601 679.884 cv
level3{
gsave
clp
[8.05167e-15 -131.494 131.494 8.05167e-15 151.526 761.453 ]ct
/20 
<<
/ShadingType 2 
/ColorSpace /0 /CSA get_res
/Coords [0 0 1 0 ]
/Domain [0 1 ]
/Extend[ true true]
/Function
<<
/Domain[0 1 ] 
/FunctionType 3
/Functions [
<<
/Domain[0 1 ] 
/Range[0 1 0 1 0 1 ] 
/FunctionType 0
/Order 1 
/DataSource <~h2l+%OCI%-@bm,Th2l+%OCI%-@bm,Th2l+%OCI%-@bm,Th2l+%OCI%-@bm,Th2l+%OCI%-@bm,Th2l+%
OCI%-@bm,Th2l+%OCI%-@bm,Th2l+%OCI%-@bm,Th2l+%OCI%-@bm,Th2l+%OCI%-@bm,Th2l+%OCI%-
@bm,Th2l+%OCI%-@bm,Th2l+%OCI%-@bm,Th2l+%OCI%-@bm,Th2l+%OCI%-@bm,Th2l+%OCI%-@bm,T
~>
/BitsPerSample 8 
/Encode [0 63 ]
/Decode [0 1 0 1 0 1 ]
/Size [64 ]
>>
<<
/Domain[0 1 ] 
/Range[0 1 0 1 0 1 ] 
/FunctionType 0
/Order 1 
/DataSource <~h2l+%OCI%-@bm,Th2l+%OCI%-@bm,Th2l+%OCI%-@bm,Th2l+%OCI%-@bm,Th2l+%OCI%-@bm,Th2l+%
OCI%-@bm,Th2l+%OCI%-@bm)Sh2c%$O($k*@GQuQh2c""O($h(@GHlOgl>dtNaUY&@,-cMgl5^rNF:M"
?e^NHgP]CmMdG+p?J:9Cg50+gLg8Vg>hOj:fnEY`KNd#\=kA7-f7@&TIok0L<RlIse9b-CGZ)t6;:0M^
~>
/BitsPerSample 8 
/Encode [0 63 ]
/Decode [0 1 0 1 0 1 ]
/Size [64 ]
>>
]
/Bounds [1.89999e-07 ]
/Encode [0 1 0 1 ]
>>
>>/Gradient add_res /20 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[8.05167e-15 -131.494 131.494 8.05167e-15 151.526 761.453 ]ct
clp
/20 {
/0 /CSA get_res setcolorspace
<<
/NumSamples 256 
/NumComp 3 
/Scaling[[.00392157 0 ][.00392157 0 ][.00392157 0 ]]
/Samples[
<~gt^]?gt^]?gt^]?gt^]?gt^]?gt^]?gt^]?gt^]?gt^]?gt^]?gt^]?gt^]?gt^]?gt^]?gt^]?gt^]?
gt^]?gt^]?gt^]?gt^]?gt^]?gt^]?gt^]?gt^]?gt^]?gt^]?gt^]?gt^]?gt^]?gt^]?gt^]?gt^]?
gt^]?gt^]>gY:K;gY:K;gY:K;gY:K;gY:K;gY:K;gY:K;gY:K:g=k97g=k97g=k97g=k97g=k96g"G'3
g"G'3g"G'3f\"j/f\"j/f\"j/f\"j/f\"j/f@SX+f%/F'f%/F'e^`4#eC<!teC<!te'ldpdaHRldF$@h
~>
<~O,o?_O,o?_O,o?_O,o?_O,o?_O,o?_O,o?_O,o?_O,o?_O,o?_O,o?_O,o?_O,o?_O,o?_O,o?_O,o?_
O,o?_O,o?_O,o?_O,o?_O,o?_O,o?_O,o?_O,o?_O,o?_O,o?_O,o?_O,o<]NfK-[NfK-[NfK-[NfK-[
NfK-[NfK-[NfK-ZNK&pWNK&pWNK&pWNK&pWNK&pWNK&pVN/W^SN/W^RMi3LOMi3LNMMd:KMMd:JM2@(G
M2@(GLkpkCLPLY?L5(G;KnY57KS5#3K7ef/JqAT+JUrB'J:N-!IXZ`pI=6KjH[C*dH?sj]GB\7TG'8"N
~>
<~@:<SQ@:<SQ@:<SQ@:<SQ@:<SQ@:<SQ@:<SQ@:<SQ@:<SQ@:<SQ@:<SQ@:<SQ@:<SQ@:<SQ@:<SQ@:<SQ
@:<SQ@:<SQ@:<SQ@:<SQ@:<SQ@:<SQ@:<SQ@:<SQ@:<SQ@:<SQ@:<SQ@:<SQ@:<SQ@:<PO?smAM?smAM
?smAM?smAM?smAM?smAM?smAL?XI/I?XI/I?XI/I?XI/I?XI/I?XI/H?=$rE?=$rD?!U`A?!U`A?!U`A
?!U`A>[1N=>?b<9>?b<9>?b<9>$>*5=]nm1=BJ[-='&I)='&I)<`W4#<)cgr<)cdp;GpCj;,L1f:f'q`
~>
]
>>
0 0 1 0 []true true []
/DeviceRGB
GenStrips
} /Gradient add_res /20 /Gradient get_res exec grestore
}if
np
174.332 726.303 mo
172.615 726.303 li
174.629 726.303 176.263 724.67 176.263 722.655 cv
176.263 685.615 li
176.263 683.601 174.629 681.968 172.615 681.968 cv
157.734 681.968 li
155.719 681.968 154.086 683.601 154.086 685.615 cv
154.086 722.655 li
154.086 724.67 155.719 726.303 157.734 726.303 cv
156.016 726.303 li
153.585 726.303 151.605 724.371 151.528 721.958 cv
151.527 721.91 151.526 721.862 151.526 721.813 cv
151.526 680.707 li
151.526 680.426 151.552 680.151 151.601 679.884 cv
151.988 677.797 153.817 676.217 156.016 676.217 cv
174.332 676.217 li
176.812 676.217 178.823 678.227 178.823 680.707 cv
178.823 721.813 li
178.823 721.862 178.822 721.91 178.82 721.958 cv
178.744 724.371 176.764 726.303 174.332 726.303 cv
level3{
gsave
clp
[2.55925e-15 -41.7957 41.7957 2.55925e-15 165.174 723.487 ]ct
/13 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[2.55925e-15 -41.7957 41.7957 2.55925e-15 165.174 723.487 ]ct
clp
/13 /Gradient get_res exec grestore
}if
np
697.176 726.304 mo
678.859 726.304 li
676.428 726.304 674.448 724.371 674.372 721.958 cv
674.448 724.371 676.428 726.303 678.859 726.303 cv
680.577 726.303 li
680.577 726.303 li
678.562 726.303 676.929 724.67 676.929 722.655 cv
676.929 685.615 li
676.929 683.601 678.562 681.968 680.577 681.968 cv
695.458 681.968 li
697.472 681.968 699.106 683.601 699.106 685.615 cv
699.106 722.655 li
699.106 724.67 697.472 726.303 695.458 726.303 cv
697.176 726.303 li
699.607 726.303 701.587 724.371 701.664 721.958 cv
701.587 724.371 699.607 726.304 697.176 726.304 cv
level3{
gsave
clp
[2.55925e-15 -41.7957 41.7957 2.55925e-15 688.018 723.487 ]ct
/10 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[2.55925e-15 -41.7957 41.7957 2.55925e-15 688.018 723.487 ]ct
clp
/10 /Gradient get_res exec grestore
}if
np
697.176 726.303 mo
695.458 726.303 li
697.472 726.303 699.106 724.67 699.106 722.655 cv
699.106 685.615 li
699.106 683.601 697.472 681.968 695.458 681.968 cv
680.577 681.968 li
678.562 681.968 676.929 683.601 676.929 685.615 cv
676.929 722.655 li
676.929 724.67 678.562 726.303 680.577 726.303 cv
678.859 726.303 li
676.428 726.303 674.448 724.371 674.372 721.958 cv
674.37 721.91 674.369 721.862 674.369 721.813 cv
674.369 680.707 li
674.369 678.227 676.38 676.217 678.859 676.217 cv
697.176 676.217 li
699.655 676.217 701.666 678.227 701.666 680.707 cv
701.666 721.813 li
701.666 721.862 701.665 721.91 701.664 721.958 cv
701.587 724.371 699.607 726.303 697.176 726.303 cv
level3{
gsave
clp
[2.55925e-15 -41.7957 41.7957 2.55925e-15 688.018 723.487 ]ct
/13 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[2.55925e-15 -41.7957 41.7957 2.55925e-15 688.018 723.487 ]ct
clp
/13 /Gradient get_res exec grestore
}if
np
622.547 555.207 mo
616.312 555.207 li
622.547 555.207 li
623.836 555.207 624.88 554.162 624.88 552.873 cv
624.88 541.47 li
624.88 552.874 li
624.88 554.162 623.836 555.207 622.547 555.207 cv
level3{
gsave
clp
[1.4561e-14 237.8 -237.8 1.4561e-14 625.35 500.311 ]ct
/12 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[1.4561e-14 237.8 -237.8 1.4561e-14 625.35 500.311 ]ct
clp
/12 /Gradient get_res exec grestore
}if
np
615.597 555.207 mo
608.098 555.207 li
606.81 555.207 605.765 554.162 605.765 552.873 cv
605.765 552.873 li
605.765 554.162 606.81 555.207 608.098 555.207 cv
615.597 555.207 li
591.092 555.207 mo
576.643 555.207 li
575.354 555.207 574.309 554.162 574.309 552.873 cv
574.309 550.765 li
574.309 549.923 573.864 549.186 573.196 548.775 cv
573.864 549.186 574.31 549.923 574.31 550.765 cv
574.31 552.873 li
574.31 554.162 575.354 555.207 576.643 555.207 cv
591.092 555.207 li
592.38 555.207 593.425 554.162 593.425 552.873 cv
593.425 550.765 li
593.425 549.477 594.47 548.432 595.758 548.432 cv
603.432 548.432 li
604.721 548.432 605.765 549.477 605.765 550.765 cv
605.765 550.765 li
605.765 549.477 604.721 548.432 603.432 548.432 cv
595.758 548.432 li
594.47 548.432 593.425 549.477 593.425 550.765 cv
593.425 552.873 li
593.425 554.162 592.38 555.207 591.092 555.207 cv
level3{
gsave
clp
[1.67856e-14 274.131 -274.131 1.67856e-14 426.588 565.691 ]ct
/19 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[1.67856e-14 274.131 -274.131 1.67856e-14 426.588 565.691 ]ct
clp
/19 /Gradient get_res exec grestore
}if
np
622.547 555.207 mo
616.312 555.207 li
615.597 555.207 li
608.098 555.207 li
606.81 555.207 605.765 554.162 605.765 552.873 cv
605.765 550.765 li
605.765 550.765 li
605.765 549.477 604.721 548.432 603.432 548.432 cv
595.758 548.432 li
594.47 548.432 593.425 549.477 593.425 550.765 cv
593.425 552.873 li
593.425 554.162 592.38 555.207 591.092 555.207 cv
576.643 555.207 li
575.354 555.207 574.31 554.162 574.31 552.873 cv
574.31 550.765 li
574.31 549.923 573.864 549.186 573.196 548.775 cv
572.841 548.557 572.424 548.432 571.977 548.432 cv
571.976 548.432 li
571.976 548.432 li
568.139 548.432 li
566.742 548.432 li
589.506 547.902 li
591.221 547.863 592.532 546.362 592.342 544.658 cv
592.091 542.391 li
591.928 540.923 590.695 539.808 589.218 539.792 cv
253.532 536.092 li
259.751 536.092 li
278.867 536.092 li
285.037 536.092 li
291.207 536.092 li
310.322 536.092 li
322.662 536.092 li
324.997 536.092 li
339.445 536.092 li
341.779 536.092 li
354.119 536.092 li
373.234 536.092 li
379.405 536.092 li
385.575 536.092 li
404.69 536.092 li
417.031 536.092 li
419.364 536.092 li
433.813 536.092 li
436.146 536.092 li
448.486 536.092 li
467.601 536.092 li
473.771 536.092 li
479.942 536.092 li
499.057 536.092 li
511.397 536.092 li
513.732 536.092 li
528.179 536.092 li
530.514 536.092 li
542.854 536.092 li
561.969 536.092 li
568.139 536.092 li
574.309 536.092 li
593.425 536.092 li
605.765 536.092 li
622.547 536.092 li
623.836 536.092 624.88 537.137 624.88 538.425 cv
624.88 541.47 li
624.88 552.873 li
624.88 554.162 623.836 555.207 622.547 555.207 cv
level3{
gsave
clp
[396.585 0 0 396.585 228.296 545.649 ]ct
/12 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[396.585 0 0 396.585 228.296 545.649 ]ct
clp
/12 /Gradient get_res exec grestore
}if
np
577.284 591.91 mo
576.709 591.91 576.013 591.738 575.212 591.311 cv
570.458 588.783 576.965 588.783 576.965 588.783 cv
580.001 588.783 579.732 591.91 577.284 591.91 cv
level3{
gsave
clp
[1.67856e-14 274.131 -274.131 1.67856e-14 426.588 565.691 ]ct
/12 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[1.67856e-14 274.131 -274.131 1.67856e-14 426.588 565.691 ]ct
clp
/12 /Gradient get_res exec grestore
}if
np
532.221 621.766 mo
531.572 621.765 530.94 621.512 530.427 620.891 cv
527.288 617.088 531.507 616.765 533.031 616.765 cv
533.343 616.765 533.542 616.778 533.542 616.778 cv
537.977 617.258 534.955 621.766 532.221 621.766 cv
level3{
gsave
clp
[1.67856e-14 274.131 -274.131 1.67856e-14 426.588 565.691 ]ct
/12 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[1.67856e-14 274.131 -274.131 1.67856e-14 426.588 565.691 ]ct
clp
/12 /Gradient get_res exec grestore
}if
np
766.779 607.2 mo
766.13 607.2 765.498 606.946 764.986 606.325 cv
761.847 602.523 766.062 602.199 767.587 602.199 cv
767.9 602.199 768.1 602.213 768.1 602.213 cv
772.535 602.692 769.513 607.2 766.779 607.2 cv
level3{
gsave
clp
[-141.247 1.72977e-14 -1.72978e-14 -141.247 771.297 610.066 ]ct
/6 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-141.247 1.72977e-14 -1.72978e-14 -141.247 771.297 610.066 ]ct
clp
/6 /Gradient get_res exec grestore
}if
np
615.274 801.885 mo
614.625 801.885 613.993 801.631 613.48 801.01 cv
610.343 797.209 614.553 796.885 616.08 796.885 cv
616.394 796.885 616.594 796.898 616.594 796.898 cv
621.029 797.378 618.007 801.885 615.274 801.885 cv
level3{
gsave
clp
[1.67856e-14 274.131 -274.131 1.67856e-14 426.588 565.691 ]ct
/12 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[1.67856e-14 274.131 -274.131 1.67856e-14 426.588 565.691 ]ct
clp
/12 /Gradient get_res exec grestore
}if
np
612.023 521.581 mo
611.375 521.581 610.742 521.327 610.23 520.706 cv
607.09 516.903 611.309 516.58 612.833 516.58 cv
613.145 516.58 613.344 516.594 613.344 516.594 cv
617.779 517.074 614.757 521.581 612.023 521.581 cv
level3{
gsave
clp
[424.122 0 0 424.122 214.527 516.589 ]ct
/6 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[424.122 0 0 424.122 214.527 516.589 ]ct
clp
/6 /Gradient get_res exec grestore
}if
np
290.863 614.146 mo
290.215 614.146 289.582 613.892 289.07 613.271 cv
285.931 609.469 290.147 609.146 291.672 609.146 cv
291.985 609.146 292.184 609.159 292.184 609.159 cv
296.62 609.639 293.597 614.146 290.863 614.146 cv
level3{
gsave
clp
[1.67856e-14 274.131 -274.131 1.67856e-14 426.588 565.691 ]ct
/12 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[1.67856e-14 274.131 -274.131 1.67856e-14 426.588 565.691 ]ct
clp
/12 /Gradient get_res exec grestore
}if
np
175.249 785.884 mo
174.6 785.884 173.968 785.63 173.455 785.009 cv
170.317 781.206 174.532 780.883 176.057 780.883 cv
176.37 780.883 176.569 780.896 176.569 780.896 cv
181.005 781.376 177.983 785.884 175.249 785.884 cv
level3{
gsave
clp
[1.67856e-14 274.131 -274.131 1.67856e-14 426.588 565.691 ]ct
/12 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[1.67856e-14 274.131 -274.131 1.67856e-14 426.588 565.691 ]ct
clp
/12 /Gradient get_res exec grestore
}if
np
651.875 717.88 mo
651.55 717.88 651.234 717.753 650.978 717.442 cv
649.407 715.541 651.517 715.38 652.279 715.38 cv
652.435 715.38 652.534 715.387 652.534 715.387 cv
654.752 715.627 653.241 717.88 651.875 717.88 cv
level3{
gsave
clp
[8.05167e-15 -131.494 131.494 8.05167e-15 701.65 761.453 ]ct
/3 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[8.05167e-15 -131.494 131.494 8.05167e-15 701.65 761.453 ]ct
clp
/3 /Gradient get_res exec grestore
}if
np
267.504 748.252 mo
267.18 748.252 266.864 748.125 266.608 747.815 cv
265.037 745.912 267.147 745.751 267.909 745.751 cv
268.065 745.751 268.164 745.758 268.164 745.758 cv
270.382 745.998 268.871 748.252 267.504 748.252 cv
level3{
gsave
clp
[1.67856e-14 274.131 -274.131 1.67856e-14 426.588 565.691 ]ct
/12 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[1.67856e-14 274.131 -274.131 1.67856e-14 426.588 565.691 ]ct
clp
/12 /Gradient get_res exec grestore
}if
np
110.364 666.553 mo
109.378 666.552 108.415 666.166 107.635 665.222 cv
102.859 659.434 109.274 658.942 111.594 658.942 cv
112.07 658.942 112.374 658.963 112.374 658.963 cv
119.125 659.693 114.525 666.554 110.364 666.553 cv
level3{
gsave
clp
[8.05167e-15 -131.494 131.494 8.05167e-15 151.526 761.453 ]ct
/3 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[8.05167e-15 -131.494 131.494 8.05167e-15 151.526 761.453 ]ct
clp
/3 /Gradient get_res exec grestore
}if
np
548.579 522.886 mo
547.592 522.886 546.63 522.5 545.85 521.555 cv
541.074 515.768 547.488 515.276 549.81 515.276 cv
550.286 515.276 550.59 515.297 550.59 515.297 cv
557.339 516.026 552.74 522.886 548.579 522.886 cv
level3{
gsave
clp
[424.122 0 0 424.122 214.527 516.589 ]ct
/6 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[424.122 0 0 424.122 214.527 516.589 ]ct
clp
/6 /Gradient get_res exec grestore
}if
np
277.551 742.025 mo
276.565 742.025 275.602 741.639 274.822 740.694 cv
270.046 734.907 276.462 734.415 278.783 734.415 cv
279.258 734.415 279.562 734.436 279.562 734.436 cv
286.313 735.165 281.712 742.026 277.551 742.025 cv
level3{
gsave
clp
[1.67856e-14 274.131 -274.131 1.67856e-14 426.588 565.691 ]ct
/12 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[1.67856e-14 274.131 -274.131 1.67856e-14 426.588 565.691 ]ct
clp
/12 /Gradient get_res exec grestore
}if
np
568.047 674.586 mo
566.952 674.586 565.785 674.218 564.676 673.32 cv
558.447 668.277 568.125 667.075 568.125 667.075 cv
576.055 667.932 572.703 674.587 568.047 674.586 cv
level3{
gsave
clp
[1.67856e-14 274.131 -274.131 1.67856e-14 426.588 565.691 ]ct
/12 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[1.67856e-14 274.131 -274.131 1.67856e-14 426.588 565.691 ]ct
clp
/12 /Gradient get_res exec grestore
}if
np
644.276 724.757 mo
643.501 724.757 642.674 724.496 641.888 723.86 cv
637.479 720.29 644.331 719.44 644.331 719.44 cv
649.945 720.046 647.573 724.757 644.276 724.757 cv
level3{
gsave
clp
[8.05167e-15 -131.494 131.494 8.05167e-15 701.65 761.453 ]ct
/3 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[8.05167e-15 -131.494 131.494 8.05167e-15 701.65 761.453 ]ct
clp
/3 /Gradient get_res exec grestore
}if
np
557.885 763.544 mo
557.11 763.544 556.283 763.283 555.498 762.647 cv
551.088 759.077 557.94 758.225 557.94 758.225 cv
563.554 758.833 561.181 763.545 557.885 763.544 cv
level3{
gsave
clp
[1.67856e-14 274.131 -274.131 1.67856e-14 426.588 565.691 ]ct
/12 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[1.67856e-14 274.131 -274.131 1.67856e-14 426.588 565.691 ]ct
clp
/12 /Gradient get_res exec grestore
}if
np
718.755 658.745 mo
717.98 658.745 717.154 658.484 716.368 657.849 cv
711.959 654.278 718.811 653.427 718.811 653.427 cv
724.425 654.034 722.052 658.745 718.755 658.745 cv
level3{
gsave
clp
[8.05167e-15 -131.494 131.494 8.05167e-15 701.65 761.453 ]ct
/3 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[8.05167e-15 -131.494 131.494 8.05167e-15 701.65 761.453 ]ct
clp
/3 /Gradient get_res exec grestore
}if
np
117.566 670.937 mo
117.019 670.937 116.435 670.753 115.881 670.304 cv
112.766 667.782 117.605 667.182 117.605 667.182 cv
121.57 667.61 119.894 670.937 117.566 670.937 cv
level3{
gsave
clp
[8.05167e-15 -131.494 131.494 8.05167e-15 151.526 761.453 ]ct
/3 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[8.05167e-15 -131.494 131.494 8.05167e-15 151.526 761.453 ]ct
clp
/3 /Gradient get_res exec grestore
}if
np
232.749 793.235 mo
231.763 793.235 230.8 792.849 230.02 791.904 cv
225.244 786.117 231.659 785.625 233.98 785.625 cv
234.456 785.625 234.76 785.646 234.76 785.646 cv
241.51 786.376 236.91 793.236 232.749 793.235 cv
level3{
gsave
clp
[1.67856e-14 274.131 -274.131 1.67856e-14 426.588 565.691 ]ct
/12 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[1.67856e-14 274.131 -274.131 1.67856e-14 426.588 565.691 ]ct
clp
/12 /Gradient get_res exec grestore
}if
np
239.951 797.619 mo
239.404 797.619 238.82 797.435 238.265 796.986 cv
235.151 794.465 239.991 793.864 239.991 793.864 cv
243.955 794.293 242.279 797.62 239.951 797.619 cv
level3{
gsave
clp
[1.67856e-14 274.131 -274.131 1.67856e-14 426.588 565.691 ]ct
/12 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[1.67856e-14 274.131 -274.131 1.67856e-14 426.588 565.691 ]ct
clp
/12 /Gradient get_res exec grestore
}if
np
692.471 790.993 mo
691.484 790.993 690.522 790.607 689.742 789.662 cv
684.965 783.875 691.38 783.384 693.701 783.384 cv
694.177 783.384 694.481 783.404 694.481 783.404 cv
701.231 784.134 696.632 790.994 692.471 790.993 cv
level3{
gsave
clp
[1.67856e-14 274.131 -274.131 1.67856e-14 426.588 565.691 ]ct
/12 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[1.67856e-14 274.131 -274.131 1.67856e-14 426.588 565.691 ]ct
clp
/12 /Gradient get_res exec grestore
}if
np
699.672 795.378 mo
699.125 795.378 698.542 795.194 697.987 794.745 cv
694.872 792.224 699.712 791.622 699.712 791.622 cv
701.098 791.772 701.795 792.276 702.015 792.869 cv
701.682 793.378 701.483 793.984 701.471 794.634 cv
701.024 795.072 700.378 795.378 699.672 795.378 cv
level3{
gsave
clp
[1.67856e-14 274.131 -274.131 1.67856e-14 426.588 565.691 ]ct
/12 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[1.67856e-14 274.131 -274.131 1.67856e-14 426.588 565.691 ]ct
clp
/12 /Gradient get_res exec grestore
}if
np
539.448 533.047 mo
538.9 533.047 538.316 532.862 537.761 532.413 cv
534.647 529.893 539.487 529.291 539.487 529.291 cv
543.451 529.72 541.776 533.047 539.448 533.047 cv
level3{
gsave
clp
[424.122 0 0 424.122 214.527 516.589 ]ct
/6 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[424.122 0 0 424.122 214.527 516.589 ]ct
clp
/6 /Gradient get_res exec grestore
}if
np
641.127 672.293 mo
640.692 672.293 640.2 672.124 639.686 671.707 cv
636.571 669.186 641.466 669.186 641.466 669.186 cv
643.724 669.542 642.883 672.293 641.127 672.293 cv
level3{
gsave
clp
[8.05167e-15 -131.494 131.494 8.05167e-15 701.65 761.453 ]ct
/3 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[8.05167e-15 -131.494 131.494 8.05167e-15 701.65 761.453 ]ct
clp
/3 /Gradient get_res exec grestore
}if
np
277.945 605.32 mo
277.509 605.32 277.018 605.151 276.503 604.734 cv
273.388 602.213 278.282 602.213 278.282 602.213 cv
280.541 602.57 279.7 605.32 277.945 605.32 cv
level3{
gsave
clp
[1.67856e-14 274.131 -274.131 1.67856e-14 426.588 565.691 ]ct
/12 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[1.67856e-14 274.131 -274.131 1.67856e-14 426.588 565.691 ]ct
clp
/12 /Gradient get_res exec grestore
}if
np
584.579 586.403 mo
584.144 586.403 583.652 586.234 583.138 585.817 cv
580.023 583.296 584.917 583.296 584.917 583.296 cv
587.175 583.652 586.335 586.403 584.579 586.403 cv
level3{
gsave
clp
[1.67856e-14 274.131 -274.131 1.67856e-14 426.588 565.691 ]ct
/12 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[1.67856e-14 274.131 -274.131 1.67856e-14 426.588 565.691 ]ct
clp
/12 /Gradient get_res exec grestore
}if
np
694.345 621.073 mo
693.771 621.073 693.075 620.9 692.275 620.475 cv
687.52 617.945 694.027 617.945 694.027 617.945 cv
697.063 617.945 696.794 621.073 694.345 621.073 cv
level3{
gsave
clp
[-141.247 1.72977e-14 -1.72978e-14 -141.247 771.297 610.066 ]ct
/6 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-141.247 1.72977e-14 -1.72978e-14 -141.247 771.297 610.066 ]ct
clp
/6 /Gradient get_res exec grestore
}if
np
701.642 615.565 mo
701.206 615.565 700.714 615.396 700.2 614.979 cv
697.086 612.458 701.98 612.458 701.98 612.458 cv
704.238 612.814 703.398 615.565 701.642 615.565 cv
level3{
gsave
clp
[-141.247 1.72977e-14 -1.72978e-14 -141.247 771.297 610.066 ]ct
/6 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-141.247 1.72977e-14 -1.72978e-14 -141.247 771.297 610.066 ]ct
clp
/6 /Gradient get_res exec grestore
}if
np
412.962 533.658 mo
412.387 533.658 411.691 533.486 410.89 533.06 cv
406.136 530.531 412.643 530.531 412.643 530.531 cv
415.679 530.531 415.411 533.658 412.962 533.658 cv
level3{
gsave
clp
[424.122 0 0 424.122 214.527 516.589 ]ct
/6 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[424.122 0 0 424.122 214.527 516.589 ]ct
clp
/6 /Gradient get_res exec grestore
}if
np
420.258 528.15 mo
419.822 528.15 419.331 527.981 418.816 527.564 cv
415.701 525.044 420.595 525.044 420.595 525.044 cv
422.853 525.4 422.014 528.15 420.258 528.15 cv
level3{
gsave
clp
[424.122 0 0 424.122 214.527 516.589 ]ct
/6 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[424.122 0 0 424.122 214.527 516.589 ]ct
clp
/6 /Gradient get_res exec grestore
}if
np
588.363 685.357 mo
587.928 685.357 587.436 685.188 586.922 684.771 cv
583.807 682.251 588.701 682.251 588.701 682.251 cv
590.959 682.607 590.119 685.358 588.363 685.357 cv
level3{
gsave
clp
[1.67856e-14 274.131 -274.131 1.67856e-14 426.588 565.691 ]ct
/12 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[1.67856e-14 274.131 -274.131 1.67856e-14 426.588 565.691 ]ct
clp
/12 /Gradient get_res exec grestore
}if
np
733.556 729.679 mo
732.461 729.679 731.294 729.31 730.184 728.412 cv
723.955 723.37 733.634 722.168 733.634 722.168 cv
741.562 723.025 738.211 729.679 733.556 729.679 cv
level3{
gsave
clp
[8.05167e-15 -131.494 131.494 8.05167e-15 701.65 761.453 ]ct
/3 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[8.05167e-15 -131.494 131.494 8.05167e-15 701.65 761.453 ]ct
clp
/3 /Gradient get_res exec grestore
}if
np
549.458 779.338 mo
549.023 779.338 548.531 779.168 548.016 778.752 cv
544.902 776.23 549.796 776.23 549.796 776.23 cv
552.054 776.587 551.214 779.338 549.458 779.338 cv
level3{
gsave
clp
[1.67856e-14 274.131 -274.131 1.67856e-14 426.588 565.691 ]ct
/12 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[1.67856e-14 274.131 -274.131 1.67856e-14 426.588 565.691 ]ct
clp
/12 /Gradient get_res exec grestore
}if
np
639.036 610.589 mo
638.6 610.589 638.109 610.42 637.594 610.003 cv
634.479 607.482 639.373 607.482 639.373 607.482 cv
641.631 607.839 640.791 610.589 639.036 610.589 cv
level3{
gsave
clp
[-141.247 1.72977e-14 -1.72978e-14 -141.247 771.297 610.066 ]ct
/6 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-141.247 1.72977e-14 -1.72978e-14 -141.247 771.297 610.066 ]ct
clp
/6 /Gradient get_res exec grestore
}if
np
233.628 516.83 mo
233.193 516.83 232.701 516.661 232.186 516.244 cv
229.072 513.723 233.966 513.723 233.966 513.723 cv
236.224 514.079 235.384 516.83 233.628 516.83 cv
level3{
gsave
clp
[424.122 0 0 424.122 214.527 516.589 ]ct
/6 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[424.122 0 0 424.122 214.527 516.589 ]ct
clp
/6 /Gradient get_res exec grestore
}if
np
266.412 667.723 mo
265.923 667.723 265.599 667.622 265.664 667.362 cv
265.866 666.556 266.751 666.427 267.298 666.427 cv
267.557 666.427 267.74 666.456 267.74 666.456 cv
267.778 666.456 267.814 666.456 267.85 666.456 cv
269.89 666.456 269.963 666.772 269.309 667.089 cv
268.656 667.406 267.276 667.723 266.412 667.723 cv
level3{
gsave
clp
[1.67856e-14 274.131 -274.131 1.67856e-14 426.588 565.691 ]ct
/12 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[1.67856e-14 274.131 -274.131 1.67856e-14 426.588 565.691 ]ct
clp
/12 /Gradient get_res exec grestore
}if
np
531.608 585.782 mo
531.244 585.782 531.002 585.636 531.051 585.263 cv
531.2 584.102 531.862 583.916 532.27 583.916 cv
532.463 583.916 532.6 583.958 532.6 583.958 cv
532.628 583.958 532.655 583.957 532.682 583.957 cv
534.204 583.957 534.258 584.414 533.771 584.87 cv
533.283 585.326 532.253 585.782 531.608 585.782 cv
level3{
gsave
clp
[1.67856e-14 274.131 -274.131 1.67856e-14 426.588 565.691 ]ct
/12 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[1.67856e-14 274.131 -274.131 1.67856e-14 426.588 565.691 ]ct
clp
/12 /Gradient get_res exec grestore
}if
np
298.358 604.699 mo
297.993 604.699 297.751 604.553 297.8 604.18 cv
297.95 603.02 298.611 602.834 299.019 602.834 cv
299.212 602.834 299.349 602.876 299.349 602.876 cv
299.377 602.876 299.404 602.876 299.431 602.876 cv
300.953 602.876 301.008 603.331 300.52 603.787 cv
300.032 604.243 299.003 604.699 298.358 604.699 cv
level3{
gsave
clp
[1.67856e-14 274.131 -274.131 1.67856e-14 426.588 565.691 ]ct
/12 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[1.67856e-14 274.131 -274.131 1.67856e-14 426.588 565.691 ]ct
clp
/12 /Gradient get_res exec grestore
}if
np
141.87 615.799 mo
141.556 615.799 141.356 615.785 141.356 615.785 cv
136.92 615.306 139.943 610.798 142.677 610.798 cv
143.325 610.798 143.958 611.052 144.47 611.673 cv
147.608 615.475 143.396 615.799 141.87 615.799 cv
level3{
gsave
clp
[172.138 0 0 172.138 65.4417 610.066 ]ct
/6 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[172.138 0 0 172.138 65.4417 610.066 ]ct
clp
/6 /Gradient get_res exec grestore
}if
np
155.257 622.732 mo
152.999 622.375 153.839 619.624 155.595 619.624 cv
156.031 619.624 156.522 619.793 157.037 620.21 cv
160.152 622.732 155.257 622.732 155.257 622.732 cv
level3{
gsave
clp
[172.138 0 0 172.138 65.4417 610.066 ]ct
/6 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[172.138 0 0 172.138 65.4417 610.066 ]ct
clp
/6 /Gradient get_res exec grestore
}if
np
134.52 622.111 mo
134.327 622.111 134.191 622.069 134.191 622.069 cv
134.164 622.07 134.137 622.07 134.111 622.07 cv
132.586 622.07 132.532 621.614 133.019 621.157 cv
133.507 620.701 134.537 620.245 135.182 620.245 cv
135.547 620.245 135.789 620.391 135.74 620.765 cv
135.59 621.925 134.929 622.111 134.52 622.111 cv
level3{
gsave
clp
[172.138 0 0 172.138 65.4417 610.066 ]ct
/6 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[172.138 0 0 172.138 65.4417 610.066 ]ct
clp
/6 /Gradient get_res exec grestore
}if
np
319.924 655.604 mo
318.904 655.604 317.934 655.136 317.402 653.866 cv
316.646 652.059 319.93 652 320.367 652 cv
320.398 652 320.415 652 320.415 652 cv
320.718 651.978 320.996 651.967 321.252 651.967 cv
323.632 651.967 324.012 652.877 323.441 653.786 cv
322.87 654.695 321.348 655.604 319.924 655.604 cv
level3{
gsave
clp
[1.67856e-14 274.131 -274.131 1.67856e-14 426.588 565.691 ]ct
/12 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[1.67856e-14 274.131 -274.131 1.67856e-14 426.588 565.691 ]ct
clp
/12 /Gradient get_res exec grestore
}if
np
364.745 601.105 mo
363.724 601.105 362.754 600.371 362.223 598.376 cv
361.466 595.537 364.751 595.443 365.187 595.443 cv
365.218 595.443 365.235 595.443 365.235 595.443 cv
365.538 595.409 365.816 595.392 366.072 595.392 cv
368.453 595.392 368.833 596.82 368.261 598.249 cv
367.69 599.677 366.168 601.105 364.745 601.105 cv
level3{
gsave
clp
[1.67856e-14 274.131 -274.131 1.67856e-14 426.588 565.691 ]ct
/12 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[1.67856e-14 274.131 -274.131 1.67856e-14 426.588 565.691 ]ct
clp
/12 /Gradient get_res exec grestore
}if
np
161.423 661.799 mo
160.403 661.799 159.433 661.064 158.901 659.069 cv
158.144 656.229 161.433 656.136 161.867 656.136 cv
161.897 656.136 161.914 656.137 161.914 656.137 cv
162.217 656.102 162.495 656.086 162.751 656.086 cv
165.131 656.086 165.511 657.514 164.94 658.942 cv
164.369 660.371 162.846 661.799 161.423 661.799 cv
level3{
gsave
clp
[8.05167e-15 -131.494 131.494 8.05167e-15 151.526 761.453 ]ct
/3 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[8.05167e-15 -131.494 131.494 8.05167e-15 151.526 761.453 ]ct
clp
/3 /Gradient get_res exec grestore
}if
np
484.888 521.937 mo
483.867 521.937 482.897 521.202 482.365 519.207 cv
481.608 516.368 484.893 516.275 485.33 516.275 cv
485.361 516.275 485.378 516.275 485.378 516.275 cv
485.681 516.241 485.959 516.224 486.215 516.224 cv
488.595 516.224 488.975 517.652 488.404 519.081 cv
487.833 520.509 486.311 521.937 484.888 521.937 cv
level3{
gsave
clp
[424.122 0 0 424.122 214.527 516.589 ]ct
/6 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[424.122 0 0 424.122 214.527 516.589 ]ct
clp
/6 /Gradient get_res exec grestore
}if
np
308.93 574.241 mo
307.982 574.241 306.893 573.754 305.774 572.495 cv
302.215 568.491 309.185 568.491 309.185 568.491 cv
313.779 568.491 312.187 574.242 308.93 574.241 cv
level3{
gsave
clp
[1.67856e-14 274.131 -274.131 1.67856e-14 426.588 565.691 ]ct
/12 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[1.67856e-14 274.131 -274.131 1.67856e-14 426.588 565.691 ]ct
clp
/12 /Gradient get_res exec grestore
}if
np
84.7934 610.357 mo
83.8454 610.357 82.7561 609.87 81.6375 608.611 cv
78.0778 604.607 85.0476 604.607 85.0476 604.607 cv
89.6426 604.607 88.0504 610.358 84.7934 610.357 cv
level3{
gsave
clp
[172.138 0 0 172.138 65.4417 610.066 ]ct
/6 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[172.138 0 0 172.138 65.4417 610.066 ]ct
clp
/6 /Gradient get_res exec grestore
}if
np
213.601 619.641 mo
212.653 619.641 211.563 619.153 210.444 617.894 cv
206.885 613.891 213.855 613.891 213.855 613.891 cv
218.45 613.891 216.858 619.641 213.601 619.641 cv
level3{
gsave
clp
[172.138 0 0 172.138 65.4417 610.066 ]ct
/6 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[172.138 0 0 172.138 65.4417 610.066 ]ct
clp
/6 /Gradient get_res exec grestore
}if
np
455.099 565.659 mo
454.524 565.659 453.828 565.486 453.028 565.061 cv
450.91 563.934 451.026 563.309 451.806 562.963 cv
456.481 563.041 li
457.536 563.927 456.921 565.659 455.099 565.659 cv
level3{
gsave
clp
[1.67856e-14 274.131 -274.131 1.67856e-14 426.588 565.691 ]ct
/12 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[1.67856e-14 274.131 -274.131 1.67856e-14 426.588 565.691 ]ct
clp
/12 /Gradient get_res exec grestore
}if
np
456.481 563.041 mo
451.806 562.963 li
452.778 562.531 454.781 562.531 454.781 562.531 cv
455.557 562.531 456.118 562.736 456.481 563.041 cv
level3{
gsave
clp
[1.67856e-14 274.131 -274.131 1.67856e-14 426.588 565.691 ]ct
/19 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[1.67856e-14 274.131 -274.131 1.67856e-14 426.588 565.691 ]ct
clp
/19 /Gradient get_res exec grestore
}if
np
379.643 573.478 mo
378.995 573.478 378.363 573.224 377.85 572.604 cv
374.712 568.801 378.927 568.478 380.452 568.478 cv
380.765 568.478 380.965 568.491 380.965 568.491 cv
385.4 568.97 382.377 573.479 379.643 573.478 cv
level3{
gsave
clp
[1.67856e-14 274.131 -274.131 1.67856e-14 426.588 565.691 ]ct
/12 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[1.67856e-14 274.131 -274.131 1.67856e-14 426.588 565.691 ]ct
clp
/12 /Gradient get_res exec grestore
}if
np
221.108 715.514 mo
220.743 715.514 220.501 715.368 220.55 714.994 cv
220.7 713.834 221.361 713.648 221.77 713.648 cv
221.963 713.648 222.1 713.689 222.1 713.689 cv
222.127 713.689 222.154 713.689 222.18 713.689 cv
223.704 713.689 223.758 714.145 223.271 714.601 cv
222.783 715.057 221.753 715.514 221.108 715.514 cv
level3{
gsave
clp
[8.05167e-15 -131.494 131.494 8.05167e-15 151.526 761.453 ]ct
/3 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[8.05167e-15 -131.494 131.494 8.05167e-15 151.526 761.453 ]ct
clp
/3 /Gradient get_res exec grestore
}if
np
194.6 699.192 mo
193.579 699.192 192.609 698.457 192.077 696.462 cv
191.321 693.623 194.606 693.53 195.042 693.53 cv
195.073 693.53 195.09 693.53 195.09 693.53 cv
195.393 693.496 195.671 693.479 195.927 693.479 cv
198.308 693.479 198.688 694.907 198.116 696.336 cv
197.545 697.764 196.023 699.192 194.6 699.192 cv
level3{
gsave
clp
[8.05167e-15 -131.494 131.494 8.05167e-15 151.526 761.453 ]ct
/3 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[8.05167e-15 -131.494 131.494 8.05167e-15 151.526 761.453 ]ct
clp
/3 /Gradient get_res exec grestore
}if
np
209.498 671.565 mo
208.85 671.565 208.217 671.311 207.705 670.69 cv
204.566 666.888 208.782 666.564 210.307 666.564 cv
210.619 666.564 210.819 666.578 210.819 666.578 cv
215.255 667.057 212.232 671.565 209.498 671.565 cv
level3{
gsave
clp
[8.05167e-15 -131.494 131.494 8.05167e-15 151.526 761.453 ]ct
/3 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[8.05167e-15 -131.494 131.494 8.05167e-15 151.526 761.453 ]ct
clp
/3 /Gradient get_res exec grestore
}if
np
112.625 737.816 mo
111.977 737.816 111.344 737.562 110.832 736.941 cv
107.694 733.139 111.909 732.816 113.434 732.816 cv
113.747 732.816 113.946 732.829 113.946 732.829 cv
118.382 733.308 115.359 737.816 112.625 737.816 cv
level3{
gsave
clp
[8.05167e-15 -131.494 131.494 8.05167e-15 151.526 761.453 ]ct
/3 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[8.05167e-15 -131.494 131.494 8.05167e-15 151.526 761.453 ]ct
clp
/3 /Gradient get_res exec grestore
}if
np
344.456 575.032 mo
344.021 575.032 343.529 574.863 343.014 574.446 cv
339.9 571.925 344.794 571.925 344.794 571.925 cv
347.052 572.281 346.212 575.032 344.456 575.032 cv
level3{
gsave
clp
[1.67856e-14 274.131 -274.131 1.67856e-14 426.588 565.691 ]ct
/12 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[1.67856e-14 274.131 -274.131 1.67856e-14 426.588 565.691 ]ct
clp
/12 /Gradient get_res exec grestore
}if
np
462.395 560.151 mo
461.96 560.151 461.468 559.982 460.953 559.565 cv
457.839 557.044 462.733 557.044 462.733 557.044 cv
464.991 557.401 464.151 560.151 462.395 560.151 cv
level3{
gsave
clp
[1.67856e-14 274.131 -274.131 1.67856e-14 426.588 565.691 ]ct
/19 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[1.67856e-14 274.131 -274.131 1.67856e-14 426.588 565.691 ]ct
clp
/19 /Gradient get_res exec grestore
}if
np
480.305 571.585 mo
479.87 571.585 479.378 571.416 478.863 570.999 cv
475.749 568.478 480.643 568.478 480.643 568.478 cv
482.901 568.834 482.061 571.585 480.305 571.585 cv
level3{
gsave
clp
[1.67856e-14 274.131 -274.131 1.67856e-14 426.588 565.691 ]ct
/12 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[1.67856e-14 274.131 -274.131 1.67856e-14 426.588 565.691 ]ct
clp
/12 /Gradient get_res exec grestore
}if
np
352.67 531.168 mo
352.312 531.168 352.075 531.067 352.122 530.808 cv
352.27 530.002 352.919 529.872 353.32 529.872 cv
353.51 529.872 353.644 529.901 353.644 529.901 cv
353.67 529.901 353.696 529.901 353.722 529.901 cv
355.218 529.901 355.272 530.218 354.793 530.535 cv
354.315 530.852 353.304 531.169 352.67 531.168 cv
level3{
gsave
clp
[424.122 0 0 424.122 214.527 516.589 ]ct
/6 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[424.122 0 0 424.122 214.527 516.589 ]ct
clp
/6 /Gradient get_res exec grestore
}if
np
297.081 532.987 mo
296.334 532.987 295.623 532.519 295.234 531.249 cv
294.68 529.443 297.086 529.383 297.406 529.383 cv
297.428 529.383 297.441 529.384 297.441 529.384 cv
297.663 529.362 297.867 529.351 298.054 529.351 cv
299.797 529.351 300.076 530.26 299.657 531.169 cv
299.239 532.078 298.124 532.987 297.081 532.987 cv
level3{
gsave
clp
[424.122 0 0 424.122 214.527 516.589 ]ct
/6 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[424.122 0 0 424.122 214.527 516.589 ]ct
clp
/6 /Gradient get_res exec grestore
}if
np
93.3572 811.978 mo
68.43 811.978 li
66.5705 811.978 65.0632 810.471 65.0632 808.611 cv
65.0632 794.616 li
65.0632 792.758 63.5564 791.25 61.697 791.25 cv
52.1638 791.25 li
50.3044 791.25 48.7976 789.743 48.7976 787.884 cv
48.7976 773.889 li
48.7976 772.029 47.2903 770.522 45.4308 770.522 cv
35.8977 770.522 li
34.0388 770.522 32.5319 769.015 32.5319 767.156 cv
32.5319 753.161 li
32.5319 751.302 31.0241 749.794 29.1653 749.794 cv
19.6321 749.794 li
17.7731 749.794 16.2659 748.287 16.2659 746.429 cv
16.2659 732.433 li
16.2659 730.574 14.7586 729.066 12.8991 729.066 cv
3.36641 729.066 li
1.50714 729.066 .000213537 727.559 .000213537 725.7 cv
.000213537 711.705 li
.000213537 709.846 1.50714 708.339 3.36641 708.339 cv
83.9539 708.339 li
84.0243 708.339 84.0941 708.341 84.1634 708.345 cv
85.8587 708.453 87.2005 709.862 87.2005 711.585 cv
87.2005 711.585 li
87.2005 709.792 85.7468 708.339 83.9539 708.339 cv
21.5612 708.339 li
23.4201 708.339 24.9281 709.846 24.9281 711.705 cv
24.9281 725.7 li
24.9281 727.559 26.4348 729.066 28.2936 729.066 cv
34.7839 729.066 li
37.827 729.066 li
85.3797 729.066 li
44.4705 730.258 li
43.5096 730.285 42.6068 730.722 41.9875 731.457 cv
41.4748 732.065 41.1936 732.836 41.1936 733.632 cv
41.1936 746.429 li
41.1936 748.287 42.7005 749.794 44.5598 749.794 cv
54.0925 749.794 li
55.952 749.794 57.4591 751.302 57.4591 753.161 cv
57.4591 767.156 li
57.4591 769.015 58.966 770.522 60.8255 770.522 cv
70.3587 770.522 li
116.713 770.522 li
77.7912 771.851 li
76.7248 771.888 75.7122 772.327 74.9578 773.082 cv
74.1686 773.871 73.7248 774.942 73.7248 776.059 cv
73.7248 777.814 li
73.6405 777.775 73.5415 777.745 73.427 777.727 cv
73.427 777.727 70.9324 777.727 72.5199 779.012 cv
72.7821 779.224 73.0326 779.31 73.2545 779.31 cv
73.4327 779.31 73.5924 779.255 73.7248 779.164 cv
73.7248 787.884 li
73.7248 789.743 75.2318 791.25 77.0915 791.25 cv
81.9123 791.25 li
86.6248 791.25 li
110.934 791.25 li
93.6442 792.598 li
92.7029 792.671 91.8187 793.078 91.1512 793.745 cv
90.4078 794.488 89.991 795.496 89.991 796.546 cv
89.991 808.611 li
89.991 810.471 91.4984 811.978 93.3572 811.978 cv
56.344 782.337 mo
56.344 782.337 52.7916 782.337 54.6056 784.378 cv
55.1758 785.019 55.7311 785.268 56.2143 785.268 cv
57.8744 785.268 58.6858 782.337 56.344 782.337 cv
63.6782 772.261 mo
63.3994 772.261 62.9476 772.327 62.8449 772.738 cv
62.8118 772.87 62.9765 772.922 63.225 772.922 cv
63.6653 772.922 64.3689 772.76 64.7023 772.598 cv
65.0354 772.437 64.9986 772.275 63.9597 772.275 cv
63.9409 772.275 63.922 772.275 63.9026 772.275 cv
63.9026 772.275 63.8096 772.261 63.6782 772.261 cv
42.3995 762.411 mo
42.0103 762.411 40.937 762.493 41.7366 763.462 cv
41.8671 763.62 42.0282 763.685 42.1933 763.685 cv
42.89 763.685 43.6605 762.536 42.5305 762.414 cv
42.5305 762.414 42.4794 762.411 42.3995 762.411 cv
47.9418 756.632 mo
46.759 756.632 43.4894 756.883 45.9236 759.832 cv
46.3212 760.314 46.8116 760.51 47.3145 760.51 cv
49.4348 760.51 51.7791 757.014 48.3392 756.643 cv
48.3392 756.643 48.1843 756.632 47.9418 756.632 cv
13.2758 717.147 mo
12.0928 717.147 8.82293 717.397 11.2577 720.347 cv
11.6552 720.829 12.1459 721.025 12.6488 721.025 cv
14.7692 721.026 17.1134 717.529 13.6732 717.157 cv
13.6732 717.157 13.5182 717.147 13.2758 717.147 cv
135.998 773.889 mo
135.998 772.029 134.49 770.522 132.632 770.522 cv
123.098 770.522 li
121.239 770.522 119.732 769.015 119.732 767.156 cv
119.732 767.156 li
119.732 769.015 121.24 770.522 123.098 770.522 cv
132.632 770.522 li
133.039 770.522 133.429 770.595 133.791 770.727 cv
134.315 770.92 134.778 771.239 135.143 771.647 cv
135.576 772.131 135.87 772.74 135.965 773.414 cv
135.987 773.569 135.998 773.727 135.998 773.889 cv
135.998 773.889 li
119.732 753.161 mo
119.732 751.302 118.225 749.794 116.365 749.794 cv
106.833 749.794 li
104.973 749.794 103.466 748.287 103.466 746.429 cv
103.466 746.429 li
103.466 748.287 104.973 749.794 106.833 749.794 cv
116.366 749.794 li
118.225 749.794 119.732 751.302 119.732 753.161 cv
119.732 753.161 li
103.466 732.433 mo
103.466 730.574 101.959 729.066 100.1 729.066 cv
90.5667 729.066 li
88.7077 729.066 87.2005 727.559 87.2005 725.7 cv
87.2005 725.7 li
87.2005 727.559 88.7077 729.066 90.5671 729.066 cv
100.1 729.066 li
101.959 729.066 103.466 730.574 103.466 732.433 cv
103.466 732.433 li
level3{
gsave
clp
[6.23111e-15 101.762 -101.762 6.23111e-15 76.1319 706.675 ]ct
/7 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[6.23111e-15 101.762 -101.762 6.23111e-15 76.1319 706.675 ]ct
clp
/7 /Gradient get_res exec grestore
}if
np
148.897 811.978 mo
148.897 811.978 li
150.756 811.978 152.264 810.471 152.264 808.611 cv
152.264 794.616 li
152.264 794.616 li
152.264 808.611 li
152.264 810.471 150.756 811.978 148.897 811.978 cv
152.264 794.616 mo
152.264 792.78 150.791 791.285 148.962 791.251 cv
150.791 791.285 152.264 792.779 152.264 794.616 cv
level3{
gsave
clp
[1.67856e-14 274.131 -274.131 1.67856e-14 426.588 565.691 ]ct
/12 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[1.67856e-14 274.131 -274.131 1.67856e-14 426.588 565.691 ]ct
clp
/12 /Gradient get_res exec grestore
}if
np
148.897 811.978 mo
93.3572 811.978 li
91.4984 811.978 89.991 810.471 89.991 808.611 cv
89.991 796.546 li
89.991 795.496 90.4078 794.488 91.1512 793.745 cv
91.8187 793.078 92.7029 792.671 93.6442 792.598 cv
110.934 791.25 li
86.6248 791.25 li
81.9123 791.25 li
77.0915 791.25 li
75.2318 791.25 73.7248 789.743 73.7248 787.884 cv
73.7248 779.164 li
74.1912 778.845 74.3192 778.094 73.7248 777.814 cv
73.7248 776.059 li
73.7248 774.942 74.1686 773.871 74.9578 773.082 cv
75.7122 772.327 76.7248 771.888 77.7912 771.851 cv
116.713 770.522 li
70.3587 770.522 li
60.8255 770.522 li
58.966 770.522 57.4591 769.015 57.4591 767.156 cv
57.4591 753.161 li
57.4591 751.302 55.952 749.794 54.0925 749.794 cv
44.5598 749.794 li
42.7005 749.794 41.1936 748.287 41.1936 746.429 cv
41.1936 733.632 li
41.1936 732.836 41.4748 732.065 41.9875 731.457 cv
42.6068 730.722 43.5096 730.285 44.4705 730.258 cv
85.3797 729.066 li
37.827 729.066 li
34.7839 729.066 li
28.2936 729.066 li
26.4348 729.066 24.9281 727.559 24.9281 725.7 cv
24.9281 711.705 li
24.9281 709.846 23.4201 708.339 21.5612 708.339 cv
83.9539 708.339 li
85.7468 708.339 87.2005 709.792 87.2005 711.585 cv
87.2005 725.7 li
87.2005 725.7 li
87.2005 727.559 88.7077 729.066 90.5667 729.066 cv
100.1 729.066 li
101.959 729.066 103.466 730.574 103.466 732.433 cv
103.466 746.429 li
103.466 746.429 li
103.466 748.287 104.973 749.794 106.833 749.794 cv
116.365 749.794 li
118.225 749.794 119.732 751.302 119.732 753.161 cv
119.732 767.156 li
119.732 767.156 li
119.732 769.015 121.239 770.522 123.098 770.522 cv
132.632 770.522 li
134.49 770.522 135.998 772.029 135.998 773.889 cv
135.998 787.884 li
135.998 787.884 li
135.998 789.743 137.505 791.25 139.364 791.25 cv
148.897 791.25 li
148.919 791.25 148.941 791.25 148.962 791.251 cv
150.791 791.285 152.264 792.78 152.264 794.616 cv
152.264 794.616 li
152.264 808.611 li
152.264 810.471 150.756 811.978 148.897 811.978 cv
148.897 811.978 li
133.031 805.27 mo
133.031 805.27 128.099 805.883 131.274 808.453 cv
131.839 808.911 132.434 809.099 132.992 809.099 cv
135.365 809.099 137.073 805.707 133.031 805.27 cv
92.6671 782.33 mo
91.8901 782.33 89.7415 782.495 91.341 784.433 cv
91.6023 784.75 91.9245 784.879 92.255 784.879 cv
93.6484 784.879 95.1887 782.582 92.928 782.337 cv
92.928 782.337 92.8262 782.33 92.6671 782.33 cv
114.365 777.171 mo
114.365 777.171 111.048 777.171 113.471 778.46 cv
113.879 778.677 114.233 778.765 114.527 778.765 cv
115.775 778.765 115.912 777.171 114.365 777.171 cv
118.418 774.374 mo
118.418 774.374 115.923 774.374 117.511 775.659 cv
117.773 775.871 118.024 775.957 118.246 775.957 cv
119.141 775.958 119.568 774.556 118.418 774.374 cv
85.3522 754.428 mo
85.133 754.428 83.4547 754.458 83.8405 755.38 cv
84.1116 756.027 84.606 756.266 85.1262 756.266 cv
85.8517 756.266 86.6274 755.802 86.9184 755.339 cv
87.2093 754.875 87.0155 754.412 85.8019 754.412 cv
85.6717 754.412 85.5299 754.417 85.3756 754.429 cv
85.3756 754.429 85.3674 754.428 85.3522 754.428 cv
100.602 744.996 mo
100.394 744.996 100.056 745.09 99.9796 745.683 cv
99.955 745.873 100.078 745.947 100.264 745.947 cv
100.593 745.947 101.118 745.714 101.366 745.482 cv
101.615 745.249 101.587 745.016 100.81 745.016 cv
100.796 745.016 100.783 745.016 100.769 745.017 cv
100.769 745.017 100.7 744.996 100.602 744.996 cv
49.5084 741.726 mo
48.7301 741.726 46.5853 741.892 48.1837 743.829 cv
48.4449 744.146 48.7671 744.275 49.0976 744.275 cv
50.4908 744.275 52.0314 741.977 49.7707 741.733 cv
49.7707 741.733 49.6684 741.726 49.5084 741.726 cv
42.6858 738.192 mo
42.6858 738.192 40.1912 738.192 41.7791 739.478 cv
42.0413 739.69 42.2918 739.776 42.5136 739.776 cv
43.4083 739.776 43.8365 738.375 42.6858 738.192 cv
53.2549 738.509 mo
53.0468 738.509 52.7097 738.604 52.633 739.195 cv
52.6083 739.386 52.7314 739.46 52.9171 739.46 cv
53.2458 739.46 53.7707 739.227 54.0195 738.995 cv
54.2681 738.763 54.2405 738.53 53.465 738.53 cv
53.4511 738.53 53.437 738.53 53.4226 738.53 cv
53.4226 738.53 53.3531 738.509 53.2549 738.509 cv
86.9795 734.742 mo
86.757 734.742 85.0821 734.79 85.4681 736.236 cv
85.739 737.253 86.2333 737.628 86.7534 737.628 cv
87.4788 737.628 88.2547 736.9 88.5458 736.172 cv
88.8368 735.444 88.6432 734.716 87.4302 734.716 cv
87.3 734.716 87.1581 734.725 87.0036 734.742 cv
87.0036 734.742 86.9951 734.742 86.9795 734.742 cv
58.4363 721.006 mo
58.4363 721.006 54.8834 721.006 56.6974 723.047 cv
57.2676 723.688 57.8229 723.937 58.3061 723.937 cv
59.9662 723.937 60.7777 721.006 58.4363 721.006 cv
75.5188 716.394 mo
75.5188 716.394 73.0242 716.394 74.6115 717.68 cv
74.8739 717.892 75.1246 717.979 75.3466 717.979 cv
76.2415 717.979 76.6694 716.577 75.5188 716.394 cv
level3{
gsave
clp
[6.23111e-15 101.762 -101.762 6.23111e-15 76.1319 706.675 ]ct
/8 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[6.23111e-15 101.762 -101.762 6.23111e-15 76.1319 706.675 ]ct
clp
/8 /Gradient get_res exec grestore
}if
np
56.2143 785.268 mo
55.7311 785.268 55.1758 785.019 54.6056 784.378 cv
52.7916 782.337 56.344 782.337 56.344 782.337 cv
58.6858 782.337 57.8744 785.268 56.2143 785.268 cv
level3{
gsave
clp
[6.23111e-15 101.762 -101.762 6.23111e-15 76.1319 706.675 ]ct
/8 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[6.23111e-15 101.762 -101.762 6.23111e-15 76.1319 706.675 ]ct
clp
/8 /Gradient get_res exec grestore
}if
np
114.527 778.765 mo
114.233 778.765 113.879 778.677 113.471 778.46 cv
111.048 777.171 114.365 777.171 114.365 777.171 cv
115.912 777.171 115.775 778.765 114.527 778.765 cv
level3{
gsave
clp
[6.23111e-15 101.762 -101.762 6.23111e-15 76.1319 706.675 ]ct
/9 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[6.23111e-15 101.762 -101.762 6.23111e-15 76.1319 706.675 ]ct
clp
/9 /Gradient get_res exec grestore
}if
np
92.255 784.879 mo
91.9245 784.879 91.6023 784.75 91.341 784.433 cv
89.7415 782.495 91.8901 782.33 92.6671 782.33 cv
92.8262 782.33 92.928 782.337 92.928 782.337 cv
95.1887 782.582 93.6484 784.879 92.255 784.879 cv
level3{
gsave
clp
[6.23111e-15 101.762 -101.762 6.23111e-15 76.1319 706.675 ]ct
/9 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[6.23111e-15 101.762 -101.762 6.23111e-15 76.1319 706.675 ]ct
clp
/9 /Gradient get_res exec grestore
}if
np
49.0976 744.275 mo
48.7671 744.275 48.4449 744.146 48.1837 743.829 cv
46.5853 741.892 48.7301 741.726 49.5084 741.726 cv
49.6684 741.726 49.7707 741.733 49.7707 741.733 cv
52.0314 741.977 50.4908 744.275 49.0976 744.275 cv
level3{
gsave
clp
[6.23111e-15 101.762 -101.762 6.23111e-15 76.1319 706.675 ]ct
/9 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[6.23111e-15 101.762 -101.762 6.23111e-15 76.1319 706.675 ]ct
clp
/9 /Gradient get_res exec grestore
}if
np
42.1933 763.685 mo
42.0282 763.685 41.8671 763.62 41.7366 763.462 cv
40.937 762.493 42.0103 762.411 42.3995 762.411 cv
42.4794 762.411 42.5305 762.414 42.5305 762.414 cv
43.6605 762.536 42.89 763.685 42.1933 763.685 cv
level3{
gsave
clp
[6.23111e-15 101.762 -101.762 6.23111e-15 76.1319 706.675 ]ct
/8 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[6.23111e-15 101.762 -101.762 6.23111e-15 76.1319 706.675 ]ct
clp
/8 /Gradient get_res exec grestore
}if
np
12.6488 721.025 mo
12.1459 721.025 11.6552 720.829 11.2577 720.347 cv
8.82293 717.397 12.0928 717.147 13.2758 717.147 cv
13.5182 717.147 13.6732 717.157 13.6732 717.157 cv
17.1134 717.529 14.7692 721.026 12.6488 721.025 cv
level3{
gsave
clp
[6.23111e-15 101.762 -101.762 6.23111e-15 76.1319 706.675 ]ct
/8 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[6.23111e-15 101.762 -101.762 6.23111e-15 76.1319 706.675 ]ct
clp
/8 /Gradient get_res exec grestore
}if
np
47.3145 760.51 mo
46.8116 760.51 46.3212 760.314 45.9236 759.832 cv
43.4894 756.883 46.759 756.632 47.9418 756.632 cv
48.1843 756.632 48.3392 756.643 48.3392 756.643 cv
51.7791 757.014 49.4348 760.51 47.3145 760.51 cv
level3{
gsave
clp
[6.23111e-15 101.762 -101.762 6.23111e-15 76.1319 706.675 ]ct
/8 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[6.23111e-15 101.762 -101.762 6.23111e-15 76.1319 706.675 ]ct
clp
/8 /Gradient get_res exec grestore
}if
np
132.992 809.099 mo
132.434 809.099 131.839 808.911 131.274 808.453 cv
128.099 805.883 133.031 805.27 133.031 805.27 cv
137.073 805.707 135.365 809.099 132.992 809.099 cv
level3{
gsave
clp
[6.23111e-15 101.762 -101.762 6.23111e-15 76.1319 706.675 ]ct
/9 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[6.23111e-15 101.762 -101.762 6.23111e-15 76.1319 706.675 ]ct
clp
/9 /Gradient get_res exec grestore
}if
np
73.2545 779.31 mo
73.0326 779.31 72.7821 779.224 72.5199 779.012 cv
70.9324 777.727 73.427 777.727 73.427 777.727 cv
73.5415 777.745 73.6405 777.775 73.7248 777.814 cv
73.7248 779.164 li
73.5924 779.255 73.4327 779.31 73.2545 779.31 cv
level3{
gsave
clp
[6.23111e-15 101.762 -101.762 6.23111e-15 76.1319 706.675 ]ct
/8 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[6.23111e-15 101.762 -101.762 6.23111e-15 76.1319 706.675 ]ct
clp
/8 /Gradient get_res exec grestore
}if
np
73.7248 779.164 mo
73.7248 777.814 li
74.3192 778.094 74.1912 778.845 73.7248 779.164 cv
level3{
gsave
clp
[6.23111e-15 101.762 -101.762 6.23111e-15 76.1319 706.675 ]ct
/9 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[6.23111e-15 101.762 -101.762 6.23111e-15 76.1319 706.675 ]ct
clp
/9 /Gradient get_res exec grestore
}if
np
42.5136 739.776 mo
42.2918 739.776 42.0413 739.69 41.7791 739.478 cv
40.1912 738.192 42.6858 738.192 42.6858 738.192 cv
43.8365 738.375 43.4083 739.776 42.5136 739.776 cv
level3{
gsave
clp
[6.23111e-15 101.762 -101.762 6.23111e-15 76.1319 706.675 ]ct
/9 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[6.23111e-15 101.762 -101.762 6.23111e-15 76.1319 706.675 ]ct
clp
/9 /Gradient get_res exec grestore
}if
np
118.246 775.957 mo
118.024 775.957 117.773 775.871 117.511 775.659 cv
115.923 774.374 118.418 774.374 118.418 774.374 cv
119.568 774.556 119.141 775.958 118.246 775.957 cv
level3{
gsave
clp
[6.23111e-15 101.762 -101.762 6.23111e-15 76.1319 706.675 ]ct
/9 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[6.23111e-15 101.762 -101.762 6.23111e-15 76.1319 706.675 ]ct
clp
/9 /Gradient get_res exec grestore
}if
np
63.225 772.922 mo
62.9765 772.922 62.8118 772.87 62.8449 772.738 cv
62.9476 772.327 63.3994 772.261 63.6782 772.261 cv
63.8096 772.261 63.9026 772.275 63.9026 772.275 cv
63.922 772.275 63.9409 772.275 63.9597 772.275 cv
64.9986 772.275 65.0354 772.437 64.7023 772.598 cv
64.3689 772.76 63.6653 772.922 63.225 772.922 cv
level3{
gsave
clp
[6.23111e-15 101.762 -101.762 6.23111e-15 76.1319 706.675 ]ct
/8 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[6.23111e-15 101.762 -101.762 6.23111e-15 76.1319 706.675 ]ct
clp
/8 /Gradient get_res exec grestore
}if
np
100.264 745.947 mo
100.078 745.947 99.955 745.873 99.9796 745.683 cv
100.056 745.09 100.394 744.996 100.602 744.996 cv
100.7 744.996 100.769 745.017 100.769 745.017 cv
100.783 745.016 100.796 745.016 100.81 745.016 cv
101.587 745.016 101.615 745.249 101.366 745.482 cv
101.118 745.714 100.593 745.947 100.264 745.947 cv
level3{
gsave
clp
[6.23111e-15 101.762 -101.762 6.23111e-15 76.1319 706.675 ]ct
/9 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[6.23111e-15 101.762 -101.762 6.23111e-15 76.1319 706.675 ]ct
clp
/9 /Gradient get_res exec grestore
}if
np
52.9171 739.46 mo
52.7314 739.46 52.6083 739.386 52.633 739.195 cv
52.7097 738.604 53.0468 738.509 53.2549 738.509 cv
53.3531 738.509 53.4226 738.53 53.4226 738.53 cv
53.437 738.53 53.4511 738.53 53.465 738.53 cv
54.2405 738.53 54.2681 738.763 54.0195 738.995 cv
53.7707 739.227 53.2458 739.46 52.9171 739.46 cv
level3{
gsave
clp
[6.23111e-15 101.762 -101.762 6.23111e-15 76.1319 706.675 ]ct
/9 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[6.23111e-15 101.762 -101.762 6.23111e-15 76.1319 706.675 ]ct
clp
/9 /Gradient get_res exec grestore
}if
np
85.1262 756.266 mo
84.606 756.266 84.1116 756.027 83.8405 755.38 cv
83.4547 754.458 85.133 754.428 85.3522 754.428 cv
85.3674 754.428 85.3756 754.429 85.3756 754.429 cv
85.5299 754.417 85.6717 754.412 85.8019 754.412 cv
87.0155 754.412 87.2093 754.875 86.9184 755.339 cv
86.6274 755.802 85.8517 756.266 85.1262 756.266 cv
level3{
gsave
clp
[6.23111e-15 101.762 -101.762 6.23111e-15 76.1319 706.675 ]ct
/9 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[6.23111e-15 101.762 -101.762 6.23111e-15 76.1319 706.675 ]ct
clp
/9 /Gradient get_res exec grestore
}if
np
86.7534 737.628 mo
86.2333 737.628 85.739 737.253 85.4681 736.236 cv
85.0821 734.79 86.757 734.742 86.9795 734.742 cv
86.9951 734.742 87.0036 734.742 87.0036 734.742 cv
87.1581 734.725 87.3 734.716 87.4302 734.716 cv
88.6432 734.716 88.8368 735.444 88.5458 736.172 cv
88.2547 736.9 87.4788 737.628 86.7534 737.628 cv
level3{
gsave
clp
[6.23111e-15 101.762 -101.762 6.23111e-15 76.1319 706.675 ]ct
/9 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[6.23111e-15 101.762 -101.762 6.23111e-15 76.1319 706.675 ]ct
clp
/9 /Gradient get_res exec grestore
}if
np
58.3061 723.937 mo
57.8229 723.937 57.2676 723.688 56.6974 723.047 cv
54.8834 721.006 58.4363 721.006 58.4363 721.006 cv
60.7777 721.006 59.9662 723.937 58.3061 723.937 cv
level3{
gsave
clp
[6.23111e-15 101.762 -101.762 6.23111e-15 76.1319 706.675 ]ct
/9 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[6.23111e-15 101.762 -101.762 6.23111e-15 76.1319 706.675 ]ct
clp
/9 /Gradient get_res exec grestore
}if
np
75.3466 717.979 mo
75.1246 717.979 74.8739 717.892 74.6115 717.68 cv
73.0242 716.394 75.5188 716.394 75.5188 716.394 cv
76.6694 716.577 76.2415 717.979 75.3466 717.979 cv
level3{
gsave
clp
[6.23111e-15 101.762 -101.762 6.23111e-15 76.1319 706.675 ]ct
/9 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[6.23111e-15 101.762 -101.762 6.23111e-15 76.1319 706.675 ]ct
clp
/9 /Gradient get_res exec grestore
}if
np
760.088 811.978 mo
704.82 811.978 li
704.82 811.978 li
702.97 811.978 701.47 810.477 701.47 808.628 cv
701.47 794.701 li
701.47 794.679 701.47 794.657 701.471 794.634 cv
701.483 793.984 701.682 793.378 702.015 792.869 cv
702.613 791.955 703.646 791.351 704.82 791.351 cv
714.306 791.351 li
716.156 791.351 717.656 789.852 717.656 788.002 cv
717.656 774.074 li
717.656 772.27 719.082 770.799 720.868 770.727 cv
720.914 770.726 720.96 770.725 721.006 770.725 cv
730.492 770.725 li
732.342 770.725 733.843 769.225 733.843 767.375 cv
733.843 757.142 li
733.843 753.838 li
733.843 753.448 li
733.843 751.598 735.342 750.098 737.193 750.098 cv
746.679 750.098 li
748.529 750.098 750.028 748.599 750.028 746.748 cv
750.028 732.821 li
750.028 730.972 751.529 729.472 753.379 729.472 cv
762.865 729.472 li
764.715 729.472 766.215 727.972 766.215 726.121 cv
766.215 712.076 li
766.215 710.438 767.433 709.085 769.013 708.873 cv
769.154 708.854 769.299 708.845 769.446 708.845 cv
849.639 708.845 li
851.489 708.845 852.988 710.345 852.988 712.195 cv
852.988 712.195 li
852.988 710.345 851.489 708.845 849.639 708.845 cv
831.534 708.845 li
829.683 708.845 828.184 710.345 828.184 712.195 cv
828.184 724.922 li
825.032 728.074 li
770.594 729.386 li
808.727 729.459 li
810.542 729.462 812.014 730.95 811.997 732.767 cv
811.997 732.821 li
811.997 743.715 li
811.997 745.101 811.447 746.43 810.466 747.41 cv
809.533 748.342 808.282 748.888 806.965 748.936 cv
775.555 750.098 li
792.802 750.098 li
794.475 750.098 795.827 751.462 795.814 753.134 cv
795.811 753.448 li
795.811 767.375 li
795.811 769.225 794.311 770.725 792.461 770.725 cv
782.975 770.725 li
781.124 770.725 779.624 772.225 779.624 774.074 cv
779.624 777.981 li
779.034 778.26 779.161 779.007 779.624 779.324 cv
779.624 784.728 li
779.624 786.298 778.953 787.794 777.781 788.837 cv
776.809 789.703 775.56 790.195 774.259 790.228 cv
728.425 791.351 li
760.171 791.351 li
761.985 791.351 763.455 792.835 763.439 794.649 cv
763.438 794.701 li
763.438 808.628 li
763.438 810.479 761.939 811.978 760.088 811.978 cv
720.608 805.303 mo
716.586 805.738 718.286 809.112 720.647 809.112 cv
721.203 809.112 721.795 808.925 722.358 808.47 cv
725.516 805.912 720.608 805.303 720.608 805.303 cv
760.773 782.474 mo
760.615 782.474 760.515 782.481 760.515 782.481 cv
758.265 782.725 759.798 785.011 761.185 785.011 cv
761.514 785.011 761.835 784.882 762.095 784.567 cv
763.688 782.638 761.545 782.474 760.773 782.474 cv
739.184 777.341 mo
737.644 777.341 737.78 778.927 739.022 778.927 cv
739.313 778.927 739.666 778.839 740.073 778.623 cv
742.484 777.341 739.184 777.341 739.184 777.341 cv
735.15 774.558 mo
734.005 774.738 734.431 776.133 735.321 776.133 cv
735.542 776.133 735.792 776.047 736.053 775.836 cv
737.632 774.558 735.15 774.558 735.15 774.558 cv
767.606 754.694 mo
766.399 754.694 766.206 755.155 766.496 755.616 cv
766.785 756.077 767.557 756.538 768.279 756.538 cv
768.797 756.538 769.289 756.301 769.559 755.656 cv
769.942 754.74 768.274 754.71 768.054 754.71 cv
768.039 754.71 768.03 754.71 768.03 754.71 cv
767.877 754.699 767.736 754.694 767.606 754.694 cv
752.672 745.343 mo
751.899 745.343 751.871 745.575 752.118 745.806 cv
752.366 746.038 752.888 746.269 753.215 746.269 cv
753.4 746.269 753.523 746.195 753.498 746.006 cv
753.422 745.417 753.086 745.323 752.879 745.323 cv
752.781 745.323 752.712 745.344 752.712 745.344 cv
752.698 745.344 752.685 745.343 752.672 745.343 cv
803.721 742.069 mo
803.563 742.069 803.461 742.076 803.461 742.076 cv
801.211 742.319 802.745 744.606 804.132 744.606 cv
804.461 744.606 804.781 744.477 805.041 744.162 cv
806.633 742.233 804.495 742.069 803.721 742.069 cv
810.512 738.554 mo
809.367 738.734 809.793 740.129 810.683 740.129 cv
810.904 740.129 811.153 740.043 811.414 739.832 cv
812.994 738.554 810.512 738.554 810.512 738.554 cv
799.787 738.888 mo
799.014 738.888 798.986 739.12 799.233 739.351 cv
799.481 739.583 800.003 739.814 800.331 739.814 cv
800.515 739.814 800.638 739.74 800.614 739.551 cv
800.537 738.962 800.201 738.868 799.994 738.868 cv
799.896 738.868 799.827 738.889 799.827 738.889 cv
799.814 738.889 799.8 738.888 799.787 738.888 cv
765.987 735.094 mo
764.779 735.094 764.586 735.818 764.876 736.543 cv
765.166 737.267 765.938 737.991 766.66 737.991 cv
767.177 737.991 767.669 737.619 767.939 736.607 cv
768.323 735.168 766.658 735.12 766.436 735.12 cv
766.42 735.12 766.411 735.12 766.411 735.12 cv
766.258 735.103 766.116 735.094 765.987 735.094 cv
794.839 721.45 mo
792.509 721.45 793.316 724.366 794.968 724.366 cv
795.448 724.366 796.001 724.119 796.569 723.48 cv
798.374 721.45 794.839 721.45 794.839 721.45 cv
777.84 716.862 mo
776.694 717.042 777.121 718.438 778.011 718.438 cv
778.232 718.438 778.481 718.352 778.742 718.141 cv
780.321 716.862 777.84 716.862 777.84 716.862 cv
level3{
gsave
clp
[6.17761e-15 -100.888 100.888 6.17761e-15 777.229 808.879 ]ct
/0 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[6.17761e-15 -100.888 100.888 6.17761e-15 777.229 808.879 ]ct
clp
/0 /Gradient get_res exec grestore
}if
np
784.894 811.978 mo
768.827 811.978 li
760.088 811.978 li
760.088 811.978 li
784.894 811.978 li
786.744 811.978 788.244 810.477 788.244 808.628 cv
788.244 794.701 li
788.244 792.852 789.743 791.351 791.594 791.351 cv
801.08 791.351 li
802.93 791.351 804.43 789.852 804.43 788.002 cv
804.43 774.074 li
804.43 772.225 805.93 770.725 807.779 770.725 cv
817.267 770.725 li
819.116 770.725 820.616 769.225 820.616 767.375 cv
820.616 753.448 li
820.616 751.598 822.116 750.098 823.966 750.098 cv
833.453 750.098 li
835.303 750.098 836.803 748.599 836.803 746.748 cv
836.803 732.821 li
836.803 730.972 838.303 729.472 840.153 729.472 cv
849.639 729.472 li
851.489 729.472 852.988 727.972 852.988 726.121 cv
852.988 712.195 li
852.988 712.195 li
852.988 726.121 li
852.988 727.972 851.489 729.472 849.639 729.472 cv
840.153 729.472 li
838.303 729.472 836.803 730.972 836.803 732.821 cv
836.803 746.748 li
836.803 748.599 835.303 750.098 833.453 750.098 cv
823.966 750.098 li
822.116 750.098 820.616 751.598 820.616 753.448 cv
820.616 767.375 li
820.616 769.225 819.116 770.725 817.267 770.725 cv
807.781 770.725 li
805.93 770.725 804.43 772.225 804.43 774.074 cv
804.43 788.002 li
804.43 789.852 802.931 791.351 801.08 791.351 cv
791.594 791.351 li
789.743 791.351 788.244 792.852 788.244 794.701 cv
788.244 808.628 li
788.244 810.479 786.744 811.978 784.894 811.978 cv
.980392 .901961 .862745 rgb
f
784.894 811.978 mo
760.088 811.978 li
761.939 811.978 763.438 810.479 763.438 808.628 cv
763.438 794.701 li
763.439 794.649 li
763.455 792.835 761.985 791.351 760.171 791.351 cv
728.425 791.351 li
774.259 790.228 li
775.56 790.195 776.809 789.703 777.781 788.837 cv
778.953 787.794 779.624 786.298 779.624 784.728 cv
779.624 779.324 li
779.756 779.414 779.915 779.47 780.093 779.47 cv
780.313 779.47 780.563 779.384 780.823 779.173 cv
782.404 777.893 779.921 777.893 779.921 777.893 cv
779.807 777.912 779.708 777.942 779.624 777.981 cv
779.624 774.074 li
779.624 772.225 781.124 770.725 782.975 770.725 cv
792.461 770.725 li
794.311 770.725 795.811 769.225 795.811 767.375 cv
795.811 753.448 li
795.814 753.134 li
795.827 751.462 794.475 750.098 792.802 750.098 cv
775.555 750.098 li
806.965 748.936 li
808.282 748.888 809.533 748.342 810.466 747.41 cv
811.447 746.43 811.997 745.101 811.997 743.715 cv
811.997 732.821 li
811.997 732.767 li
812.014 730.95 810.542 729.462 808.727 729.459 cv
770.594 729.386 li
825.032 728.074 li
828.184 724.922 li
828.184 712.195 li
828.184 710.345 829.683 708.845 831.534 708.845 cv
849.639 708.845 li
851.489 708.845 852.988 710.345 852.988 712.195 cv
852.988 726.121 li
852.988 727.972 851.489 729.472 849.639 729.472 cv
840.153 729.472 li
838.303 729.472 836.803 730.972 836.803 732.821 cv
836.803 746.748 li
836.803 748.599 835.303 750.098 833.453 750.098 cv
823.966 750.098 li
822.116 750.098 820.616 751.598 820.616 753.448 cv
820.616 767.375 li
820.616 769.225 819.116 770.725 817.267 770.725 cv
807.779 770.725 li
805.93 770.725 804.43 772.225 804.43 774.074 cv
804.43 788.002 li
804.43 789.852 802.93 791.351 801.08 791.351 cv
791.594 791.351 li
789.743 791.351 788.244 792.852 788.244 794.701 cv
788.244 808.628 li
788.244 810.477 786.744 811.978 784.894 811.978 cv
796.92 782.481 mo
794.59 782.481 795.398 785.398 797.05 785.398 cv
797.531 785.398 798.083 785.151 798.651 784.513 cv
800.455 782.481 796.92 782.481 796.92 782.481 cv
789.343 772.47 mo
788.308 772.47 788.271 772.63 788.602 772.791 cv
788.933 772.951 789.633 773.112 790.072 773.112 cv
790.32 773.112 790.484 773.061 790.451 772.929 cv
790.349 772.521 789.901 772.455 789.624 772.455 cv
789.492 772.455 789.399 772.47 789.399 772.47 cv
789.38 772.47 789.362 772.47 789.343 772.47 cv
810.797 762.652 mo
810.718 762.652 810.667 762.655 810.667 762.655 cv
809.542 762.777 810.309 763.92 811.002 763.92 cv
811.166 763.92 811.326 763.856 811.456 763.698 cv
812.252 762.734 811.184 762.652 810.797 762.652 cv
805.281 756.903 mo
805.04 756.903 804.886 756.913 804.886 756.913 cv
801.463 757.283 803.795 760.762 805.906 760.762 cv
806.406 760.762 806.894 760.566 807.29 760.087 cv
809.713 757.152 806.458 756.903 805.281 756.903 cv
839.777 717.61 mo
839.537 717.61 839.383 717.62 839.383 717.62 cv
835.959 717.99 838.292 721.47 840.403 721.47 cv
840.903 721.47 841.391 721.274 841.786 720.795 cv
844.21 717.859 840.953 717.61 839.777 717.61 cv
level3{
gsave
clp
[6.17761e-15 -100.888 100.888 6.17761e-15 777.229 808.879 ]ct
/1 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[6.17761e-15 -100.888 100.888 6.17761e-15 777.229 808.879 ]ct
clp
/1 /Gradient get_res exec grestore
}if
np
797.05 785.398 mo
795.398 785.398 794.59 782.481 796.92 782.481 cv
796.92 782.481 800.455 782.481 798.651 784.513 cv
798.083 785.151 797.531 785.398 797.05 785.398 cv
level3{
gsave
clp
[6.17761e-15 -100.888 100.888 6.17761e-15 777.229 808.879 ]ct
/21 
<<
/ShadingType 2 
/ColorSpace /0 /CSA get_res
/Coords [0 0 1 0 ]
/Domain [0 1 ]
/Extend[ true true]
/Function
<<
/Domain[0 1 ] 
/FunctionType 3
/Functions [
<<
/Domain[0 1 ] 
/Range[0 1 0 1 0 1 ] 
/FunctionType 0
/Order 1 
/DataSource <~l'cDPRVV/VC[%:'l'cDPRVV/VC[%:'l'cDPRVV/VC[%:'l'cDPRVV/VC[%:'l'cDPRVV/VC[%:'l'cDP
RVV/VC[%:'l'cDPRVV/VC[%:'l'cDPRVV/VC[%:'l'cDPRVV/VC[%:'l'cDPRVV/VC[%:'l'cDPRVV/V
C[%:'l'cDPRVV/VC[%:'l'cDPRVV/VC[%:'l'cDPRVV/VC[%:'l'cDPRVV/VC[%:'l'cDPRVV/VC[%:'
~>
/BitsPerSample 8 
/Encode [0 63 ]
/Decode [0 1 0 1 0 1 ]
/Size [64 ]
>>
<<
/Domain[0 1 ] 
/Range[0 1 0 1 0 1 ] 
/FunctionType 0
/Order 1 
/DataSource <~os&r<Z$l;MIJ'jnos&r<Z$l;MIJ'jnos&r<Z$l;MIJ'glorri:Y^H,JI.XXjoWW`8YC,uGHh=LgoWNW6
YC#oEHh=IfoWEQ4XaBZAHh4@co;m90XEsK>HLe+_nuI*-Wd408H1It[nZ$j(Wd"!5GO_\WnYp^$W-7[/
Fmu;On>CBsVKD:'FRQ&Jm\FsmUN>juF7#]Bm@eOeTlKFmE9s9:m%A:_T5X%eDX3m3lCDeWS8IM[D!@C(
~>
/BitsPerSample 8 
/Encode [0 63 ]
/Decode [0 1 0 1 0 1 ]
/Size [64 ]
>>
]
/Bounds [1.89999e-07 ]
/Encode [0 1 1 0 ]
>>
>>/Gradient add_res /21 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[6.17761e-15 -100.888 100.888 6.17761e-15 777.229 808.879 ]ct
clp
/21 {
/0 /CSA get_res setcolorspace
<<
/NumSamples 256 
/NumComp 3 
/Scaling[[.00392157 0 ][.00392157 0 ][.00392157 0 ]]
/Samples[
<~kih6okiq?rl07Hsl0@R!lK[["lK[["lKdd%lg*m&lg*m&lg4!)m-O**m-O**m-X3-mHs<.mHs<.mI'E1
mdBN2mdBN2mdBQ4n*f`6n*f`6n*f`6n*fc8nF5r:nF5r:nF5r:nF5r:nF5u<naZ/>naZ/>naZ/>naZ/>
naZ/?o()ABo()ABo()ABo()ABo()ABo()ACoCMSFoCMSFoCMSFoCMSFoCMSFoCMSFoCMSFoCMSFoCMSF
oCMSFo^qeJo^qeJo^qeJo^qeJo^qeJo^qeJo^qeJo^qeJo^qeJo^qeJo^qeJo^qeJo^qeJo^qeJo^qeJ
~>
<~R@9S5R[]e9S"-"=S=Q4ASXl=BSXuFEStDXIT:hjMTV.sNTV.sNTV.sNTV8'QTq\9UU8"BVU8+KYUSO]]
Unjf^Unji`V5:&dVP^5fVP^8hVl-GjVl-JlW2Q\pWMukrWMukrWMukrWMukrWMukrWMukrWMuntWiE)!
WiE)"X/i;%X/i;%X/i;&XK8M)XK8M)XK8M*Xf\_-Xf\_-Xf\_.Y-+q1Y-+q1Y-+q1Y-+q1Y-+q2YHP.5
YHP.5YHP.5YHP.5YHP.5YHP.5Yct@9Yct@9Yct@9Yct@9Yct@9Yct@9Yct@9Yct@9Yct@9Yct@9Yct@9
~>
<~C27U#CM[g'Ci!p(Ci+$+D/F-,D/O6/DJj?0DJj?0DJsH3DfBZ7E,]c8E,fl;EH6)?EcQ2@EcZ;CF)uDD
F)uDDF)uDDF)uDDF)uGFFEDVHFEDYJF`hhLF`hkNG'8%PG'8%PG'8(RGB\7TGB\:VG^+IXG^+LZH$O[\
H$O[\H$O[\H$O[\H$O[\H$O[]H?sm`H?sm`H?sm`H?sm`H?sm`H?sm`H?sm`H?sm`H?smaH[C*dH[C*d
H[C*dH[C*dH[C*dH[C*dH[C*dI!g<hI!g<hI!g<hI!g<hI!g<hI!g<hI!g<hI!g<hI!g<hI!g<hI!g<h
~>
]
>>
0 0 1 0 []true true []
/DeviceRGB
GenStrips
} /Gradient add_res /21 /Gradient get_res exec grestore
}if
np
739.022 778.927 mo
737.78 778.927 737.644 777.341 739.184 777.341 cv
739.184 777.341 742.484 777.341 740.073 778.623 cv
739.666 778.839 739.313 778.927 739.022 778.927 cv
level3{
gsave
clp
[6.17761e-15 -100.888 100.888 6.17761e-15 777.229 808.879 ]ct
/1 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[6.17761e-15 -100.888 100.888 6.17761e-15 777.229 808.879 ]ct
clp
/1 /Gradient get_res exec grestore
}if
np
761.185 785.011 mo
759.798 785.011 758.265 782.725 760.515 782.481 cv
760.515 782.481 760.615 782.474 760.773 782.474 cv
761.545 782.474 763.688 782.638 762.095 784.567 cv
761.835 784.882 761.514 785.011 761.185 785.011 cv
level3{
gsave
clp
[6.17761e-15 -100.888 100.888 6.17761e-15 777.229 808.879 ]ct
/1 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[6.17761e-15 -100.888 100.888 6.17761e-15 777.229 808.879 ]ct
clp
/1 /Gradient get_res exec grestore
}if
np
804.132 744.606 mo
802.745 744.606 801.211 742.319 803.461 742.076 cv
803.461 742.076 803.563 742.069 803.721 742.069 cv
804.495 742.069 806.633 742.233 805.041 744.162 cv
804.781 744.477 804.461 744.606 804.132 744.606 cv
level3{
gsave
clp
[6.17761e-15 -100.888 100.888 6.17761e-15 777.229 808.879 ]ct
/1 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[6.17761e-15 -100.888 100.888 6.17761e-15 777.229 808.879 ]ct
clp
/1 /Gradient get_res exec grestore
}if
np
811.002 763.92 mo
810.309 763.92 809.542 762.777 810.667 762.655 cv
810.667 762.655 810.718 762.652 810.797 762.652 cv
811.184 762.652 812.252 762.734 811.456 763.698 cv
811.326 763.856 811.166 763.92 811.002 763.92 cv
level3{
gsave
clp
[6.17761e-15 -100.888 100.888 6.17761e-15 777.229 808.879 ]ct
/21 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[6.17761e-15 -100.888 100.888 6.17761e-15 777.229 808.879 ]ct
clp
/21 /Gradient get_res exec grestore
}if
np
840.403 721.47 mo
838.292 721.47 835.959 717.99 839.383 717.62 cv
839.383 717.62 839.537 717.61 839.777 717.61 cv
840.953 717.61 844.21 717.859 841.786 720.795 cv
841.391 721.274 840.903 721.47 840.403 721.47 cv
level3{
gsave
clp
[6.17761e-15 -100.888 100.888 6.17761e-15 777.229 808.879 ]ct
/21 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[6.17761e-15 -100.888 100.888 6.17761e-15 777.229 808.879 ]ct
clp
/21 /Gradient get_res exec grestore
}if
np
805.906 760.762 mo
803.795 760.762 801.463 757.283 804.886 756.913 cv
804.886 756.913 805.04 756.903 805.281 756.903 cv
806.458 756.903 809.713 757.152 807.29 760.087 cv
806.894 760.566 806.406 760.762 805.906 760.762 cv
level3{
gsave
clp
[6.17761e-15 -100.888 100.888 6.17761e-15 777.229 808.879 ]ct
/21 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[6.17761e-15 -100.888 100.888 6.17761e-15 777.229 808.879 ]ct
clp
/21 /Gradient get_res exec grestore
}if
np
720.647 809.112 mo
718.286 809.112 716.586 805.738 720.608 805.303 cv
720.608 805.303 725.516 805.912 722.358 808.47 cv
721.795 808.925 721.203 809.112 720.647 809.112 cv
level3{
gsave
clp
[6.17761e-15 -100.888 100.888 6.17761e-15 777.229 808.879 ]ct
/1 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[6.17761e-15 -100.888 100.888 6.17761e-15 777.229 808.879 ]ct
clp
/1 /Gradient get_res exec grestore
}if
np
779.624 779.324 mo
779.161 779.007 779.034 778.26 779.624 777.981 cv
779.624 779.324 li
level3{
gsave
clp
[6.17761e-15 -100.888 100.888 6.17761e-15 777.229 808.879 ]ct
/1 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[6.17761e-15 -100.888 100.888 6.17761e-15 777.229 808.879 ]ct
clp
/1 /Gradient get_res exec grestore
}if
np
780.093 779.47 mo
779.915 779.47 779.756 779.414 779.624 779.324 cv
779.624 777.981 li
779.708 777.942 779.807 777.912 779.921 777.893 cv
779.921 777.893 782.404 777.893 780.823 779.173 cv
780.563 779.384 780.313 779.47 780.093 779.47 cv
level3{
gsave
clp
[6.17761e-15 -100.888 100.888 6.17761e-15 777.229 808.879 ]ct
/21 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[6.17761e-15 -100.888 100.888 6.17761e-15 777.229 808.879 ]ct
clp
/21 /Gradient get_res exec grestore
}if
np
810.683 740.129 mo
809.793 740.129 809.367 738.734 810.512 738.554 cv
810.512 738.554 812.994 738.554 811.414 739.832 cv
811.153 740.043 810.904 740.129 810.683 740.129 cv
level3{
gsave
clp
[6.17761e-15 -100.888 100.888 6.17761e-15 777.229 808.879 ]ct
/1 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[6.17761e-15 -100.888 100.888 6.17761e-15 777.229 808.879 ]ct
clp
/1 /Gradient get_res exec grestore
}if
np
735.321 776.133 mo
734.431 776.133 734.005 774.738 735.15 774.558 cv
735.15 774.558 737.632 774.558 736.053 775.836 cv
735.792 776.047 735.542 776.133 735.321 776.133 cv
level3{
gsave
clp
[6.17761e-15 -100.888 100.888 6.17761e-15 777.229 808.879 ]ct
/1 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[6.17761e-15 -100.888 100.888 6.17761e-15 777.229 808.879 ]ct
clp
/1 /Gradient get_res exec grestore
}if
np
790.072 773.112 mo
789.633 773.112 788.933 772.951 788.602 772.791 cv
788.271 772.63 788.308 772.47 789.343 772.47 cv
789.362 772.47 789.38 772.47 789.399 772.47 cv
789.399 772.47 789.492 772.455 789.624 772.455 cv
789.901 772.455 790.349 772.521 790.451 772.929 cv
790.484 773.061 790.32 773.112 790.072 773.112 cv
level3{
gsave
clp
[6.17761e-15 -100.888 100.888 6.17761e-15 777.229 808.879 ]ct
/21 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[6.17761e-15 -100.888 100.888 6.17761e-15 777.229 808.879 ]ct
clp
/21 /Gradient get_res exec grestore
}if
np
753.215 746.269 mo
752.888 746.269 752.366 746.038 752.118 745.806 cv
751.871 745.575 751.899 745.343 752.672 745.343 cv
752.685 745.343 752.698 745.344 752.712 745.344 cv
752.712 745.344 752.781 745.323 752.879 745.323 cv
753.086 745.323 753.422 745.417 753.498 746.006 cv
753.523 746.195 753.4 746.269 753.215 746.269 cv
level3{
gsave
clp
[6.17761e-15 -100.888 100.888 6.17761e-15 777.229 808.879 ]ct
/1 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[6.17761e-15 -100.888 100.888 6.17761e-15 777.229 808.879 ]ct
clp
/1 /Gradient get_res exec grestore
}if
np
800.331 739.814 mo
800.003 739.814 799.481 739.583 799.233 739.351 cv
798.986 739.12 799.014 738.888 799.787 738.888 cv
799.8 738.888 799.814 738.889 799.827 738.889 cv
799.827 738.889 799.896 738.868 799.994 738.868 cv
800.201 738.868 800.537 738.962 800.614 739.551 cv
800.638 739.74 800.515 739.814 800.331 739.814 cv
level3{
gsave
clp
[6.17761e-15 -100.888 100.888 6.17761e-15 777.229 808.879 ]ct
/1 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[6.17761e-15 -100.888 100.888 6.17761e-15 777.229 808.879 ]ct
clp
/1 /Gradient get_res exec grestore
}if
np
768.279 756.538 mo
767.557 756.538 766.785 756.077 766.496 755.616 cv
766.206 755.155 766.399 754.694 767.606 754.694 cv
767.736 754.694 767.877 754.699 768.03 754.71 cv
768.03 754.71 768.039 754.71 768.054 754.71 cv
768.274 754.71 769.942 754.74 769.559 755.656 cv
769.289 756.301 768.797 756.538 768.279 756.538 cv
level3{
gsave
clp
[6.17761e-15 -100.888 100.888 6.17761e-15 777.229 808.879 ]ct
/1 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[6.17761e-15 -100.888 100.888 6.17761e-15 777.229 808.879 ]ct
clp
/1 /Gradient get_res exec grestore
}if
np
766.66 737.991 mo
765.938 737.991 765.166 737.267 764.876 736.543 cv
764.586 735.818 764.779 735.094 765.987 735.094 cv
766.116 735.094 766.258 735.103 766.411 735.12 cv
766.411 735.12 766.42 735.12 766.436 735.12 cv
766.658 735.12 768.323 735.168 767.939 736.607 cv
767.669 737.619 767.177 737.991 766.66 737.991 cv
level3{
gsave
clp
[6.17761e-15 -100.888 100.888 6.17761e-15 777.229 808.879 ]ct
/1 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[6.17761e-15 -100.888 100.888 6.17761e-15 777.229 808.879 ]ct
clp
/1 /Gradient get_res exec grestore
}if
np
794.968 724.366 mo
793.316 724.366 792.509 721.45 794.839 721.45 cv
794.839 721.45 798.374 721.45 796.569 723.48 cv
796.001 724.119 795.448 724.366 794.968 724.366 cv
level3{
gsave
clp
[6.17761e-15 -100.888 100.888 6.17761e-15 777.229 808.879 ]ct
/1 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[6.17761e-15 -100.888 100.888 6.17761e-15 777.229 808.879 ]ct
clp
/1 /Gradient get_res exec grestore
}if
np
778.011 718.438 mo
777.121 718.438 776.694 717.042 777.84 716.862 cv
777.84 716.862 780.321 716.862 778.742 718.141 cv
778.481 718.352 778.232 718.438 778.011 718.438 cv
level3{
gsave
clp
[6.17761e-15 -100.888 100.888 6.17761e-15 777.229 808.879 ]ct
/1 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[6.17761e-15 -100.888 100.888 6.17761e-15 777.229 808.879 ]ct
clp
/1 /Gradient get_res exec grestore
}if
np
353.107 466.301 mo
350.735 466.301 348.811 464.378 348.811 462.005 cv
348.811 400.961 li
348.811 398.589 350.735 396.665 353.107 396.665 cv
355.479 396.665 357.403 398.589 357.403 400.961 cv
357.403 462.005 li
357.403 464.378 355.479 466.301 353.107 466.301 cv
level3{
gsave
clp
[3.74648e-15 -61.1848 61.1848 3.74648e-15 353.107 464.004 ]ct
/10 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[3.74648e-15 -61.1848 61.1848 3.74648e-15 353.107 464.004 ]ct
clp
/10 /Gradient get_res exec grestore
}if
np
382.499 467.387 mo
379.632 467.387 377.296 465.117 377.188 462.277 cv
377.296 465.117 379.633 467.387 382.5 467.387 cv
382.499 467.387 382.499 467.387 382.499 467.387 cv
382.5 466.301 mo
380.127 466.301 378.204 464.378 378.204 462.005 cv
378.204 400.961 li
378.204 398.589 380.127 396.665 382.5 396.665 cv
384.872 396.665 386.795 398.589 386.795 400.961 cv
386.795 462.005 li
386.795 464.378 384.872 466.301 382.5 466.301 cv
377.184 462.071 mo
377.184 462.071 li
377.184 398.389 li
377.184 395.453 379.563 393.073 382.499 393.073 cv
382.499 393.073 li
379.564 393.073 377.184 395.453 377.184 398.389 cv
377.184 462.071 li
level3{
gsave
clp
[3.74648e-15 -61.1848 61.1848 3.74648e-15 382.499 464.004 ]ct
/10 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[3.74648e-15 -61.1848 61.1848 3.74648e-15 382.499 464.004 ]ct
clp
/10 /Gradient get_res exec grestore
}if
np
411.892 466.301 mo
409.519 466.301 407.596 464.378 407.596 462.005 cv
407.596 400.961 li
407.596 398.589 409.519 396.665 411.892 396.665 cv
414.264 396.665 416.187 398.589 416.187 400.961 cv
416.187 462.005 li
416.187 464.378 414.264 466.301 411.892 466.301 cv
level3{
gsave
clp
[3.74648e-15 -61.1848 61.1848 3.74648e-15 411.892 464.004 ]ct
/10 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[3.74648e-15 -61.1848 61.1848 3.74648e-15 411.892 464.004 ]ct
clp
/10 /Gradient get_res exec grestore
}if
np
441.284 466.301 mo
438.911 466.301 436.988 464.378 436.988 462.005 cv
436.988 400.961 li
436.988 398.589 438.911 396.665 441.284 396.665 cv
443.657 396.665 445.58 398.589 445.58 400.961 cv
445.58 462.005 li
445.58 464.378 443.657 466.301 441.284 466.301 cv
level3{
gsave
clp
[3.74648e-15 -61.1848 61.1848 3.74648e-15 441.284 464.004 ]ct
/10 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[3.74648e-15 -61.1848 61.1848 3.74648e-15 441.284 464.004 ]ct
clp
/10 /Gradient get_res exec grestore
}if
np
470.676 467.387 mo
467.781 467.387 465.426 465.071 465.362 462.191 cv
465.426 465.071 467.782 467.387 470.677 467.387 cv
470.676 467.387 470.676 467.387 470.676 467.387 cv
470.677 466.301 mo
468.304 466.301 466.381 464.378 466.381 462.005 cv
466.381 400.961 li
466.381 398.589 468.304 396.665 470.677 396.665 cv
473.049 396.665 474.972 398.589 474.972 400.961 cv
474.972 462.005 li
474.972 464.378 473.049 466.301 470.677 466.301 cv
465.361 462.071 mo
465.361 462.071 li
465.361 398.389 li
465.361 395.453 467.741 393.073 470.676 393.073 cv
470.676 393.073 li
467.741 393.073 465.361 395.453 465.361 398.389 cv
465.361 462.071 li
level3{
gsave
clp
[3.74648e-15 -61.1848 61.1848 3.74648e-15 470.677 464.004 ]ct
/10 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[3.74648e-15 -61.1848 61.1848 3.74648e-15 470.677 464.004 ]ct
clp
/10 /Gradient get_res exec grestore
}if
np
500.069 466.301 mo
497.697 466.301 495.774 464.378 495.774 462.005 cv
495.774 400.961 li
495.774 398.589 497.697 396.665 500.069 396.665 cv
502.442 396.665 504.365 398.589 504.365 400.961 cv
504.365 462.005 li
504.365 464.378 502.442 466.301 500.069 466.301 cv
level3{
gsave
clp
[3.74648e-15 -61.1848 61.1848 3.74648e-15 500.069 464.004 ]ct
/10 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[3.74648e-15 -61.1848 61.1848 3.74648e-15 500.069 464.004 ]ct
clp
/10 /Gradient get_res exec grestore
}if
np
500.069 467.387 mo
497.133 467.387 494.753 465.007 494.753 462.071 cv
494.753 462.071 li
494.753 465.007 497.133 467.387 500.069 467.387 cv
503.005 467.387 505.385 465.007 505.385 462.071 cv
505.385 400.494 li
505.385 400.494 li
505.385 462.071 li
505.385 465.007 503.005 467.387 500.069 467.387 cv
503.332 394.192 mo
502.448 393.504 501.341 393.089 500.138 393.074 cv
501.341 393.089 502.448 393.504 503.332 394.192 cv
503.332 394.192 li
level3{
gsave
clp
[1.24239e-14 -202.898 202.898 1.24239e-14 426.588 555.216 ]ct
/20 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[1.24239e-14 -202.898 202.898 1.24239e-14 426.588 555.216 ]ct
clp
/20 /Gradient get_res exec grestore
}if
np
505.385 400.494 mo
505.385 400.494 li
505.385 398.389 li
505.385 396.683 504.581 395.164 503.332 394.192 cv
503.332 394.192 li
504.581 395.164 505.385 396.683 505.385 398.389 cv
505.385 400.494 li
level3{
gsave
clp
[1.24239e-14 -202.898 202.898 1.24239e-14 426.588 555.216 ]ct
/22 
<<
/ShadingType 2 
/ColorSpace /0 /CSA get_res
/Coords [0 0 1 0 ]
/Domain [0 1 ]
/Extend[ true true]
/Function
<<
/Domain[0 1 ] 
/FunctionType 3
/Functions [
<<
/Domain[0 1 ] 
/Range[0 1 0 1 0 1 ] 
/FunctionType 0
/Order 1 
/DataSource <~fn!,UJQ1<R<7uh%fn!,UJQ1<R<7uh%fn!,UJQ1<R<7uh%fn!,UJQ1<R<7uh%fn!,UJQ1<R<7uh%fn!,U
JQ1<R<7uh%fn!,UJQ1<R<7uh%fn!,UJQ1<R<7uh%fn!,UJQ1<R<7uh%fn!,UJQ1<R<7uh%fn!,UJQ1<R
<7uh%fn!,UJQ1<R<7uh%fn!,UJQ1<R<7uh%fn!,UJQ1<R<7uh%fn!,UJQ1<R<7uh%fn!,UJQ1<R<7uh%
~>
/BitsPerSample 8 
/Encode [0 63 ]
/Decode [0 1 0 1 0 1 ]
/Size [64 ]
>>
<<
/Domain[0 1 ] 
/Range[0 1 0 1 0 1 ] 
/FunctionType 0
/Order 1 
/DataSource <~fn!,UJQ1<R<7uh%fn!,UJQ1<R<7uh%fn!,UJQ1<R<7uh%fn!,UJQ1<R<7uh%fn!,UJQ1<R<7uh%fn!,U
JQ1<R<7uh%fn!,UJQ1<R<7uh%fn!,UJQ(6Q;qZ_#fn!)SJQ(3P;qQY"fRZuRJ5b*N;qQV!fRHiOIoFsJ
;V-@qf7$TKI8SRC;:^+lepC6DHV`1<:XjYce9Fd=GYZ_2:""/XdWA.0F%al#9$hNKcYlA#Ce)cd7a5X9
~>
/BitsPerSample 8 
/Encode [0 63 ]
/Decode [0 1 0 1 0 1 ]
/Size [64 ]
>>
]
/Bounds [1.89999e-07 ]
/Encode [0 1 0 1 ]
>>
>>/Gradient add_res /22 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[1.24239e-14 -202.898 202.898 1.24239e-14 426.588 555.216 ]ct
clp
/22 {
/0 /CSA get_res setcolorspace
<<
/NumSamples 256 
/NumComp 3 
/Scaling[[.00392157 0 ][.00392157 0 ][.00392157 0 ]]
/Samples[
<~f\"j/f\"j/f\"j/f\"j/f\"j/f\"j/f\"j/f\"j/f\"j/f\"j/f\"j/f\"j/f\"j/f\"j/f\"j/f\"j/
f\"j/f\"j/f\"j/f\"j/f\"j/f\"j/f\"j/f\"j/f\"j/f\"j/f\"j/f\"j/f\"j/f\"j/f\"j/f\"j/
f\"j/f\"j.f@SX+f@SX+f@SX+f@SX+f@SX+f@SX+f@SX+f@SX*f%/F'f%/F'f%/F'f%/F'f%/F&e^`4#
e^`4#e^`4#eC<!teC<!te'ldpe'ldpe'ldpdaHRldF$@hdF$@hd*U.dcd0q`cd0q`cHa_\cHa_\c-=MX
~>
<~J:N0#J:N0#J:N0#J:N0#J:N0#J:N0#J:N0#J:N0#J:N0#J:N0#J:N0#J:N0#J:N0#J:N0#J:N0#J:N0#
J:N0#J:N0#J:N0#J:N0#J:N0#J:N0#J:N0#J:N0#J:N0#J:N0#J:N0#J:N0#J:N0#J:N0#J:N0#J:N0#
J:N0#J:N0#J:N0#J:N0#J:N0#J:N0"It)rtIt)rtIt)rsIXZ`pIXZ`oI=6NlI=6NlI=6NkI!g<gH[C*d
H[C*dH?sm`H?sm`H$O[\G^+IXGB\7TGB\4RF`hhLFEDVHF)uDDEcQ2@EH,r:Df9Q4DJj<-CMR^$C2.Hs
~>
<~;c?Un;c?Un;c?Un;c?Un;c?Un;c?Un;c?Un;c?Un;c?Un;c?Un;c?Un;c?Un;c?Un;c?Un;c?Un;c?Un
;c?Un;c?Un;c?Un;c?Un;c?Un;c?Un;c?Un;c?Un;c?Un;c?Un;c?Un;c?Un;c?Un;c?Rl;GpCj;GpCj
;GpCj;GpCj;GpCj;GpCj;GpCj;GpCj;GpCj;GpCj;GpCj;GpCj;GpCi;,L1f;,L1e:f'tb:f'tb:f'tb
:f'tb:JXb^:/4PZ:/4PZ:/4PZ:/4PZ9he>V9MA,R91qoN8kM]J8kM]J8P)KF84Z9B7n6'>7Rfj:77BX6
~>
]
>>
0 0 1 0 []true true []
/DeviceRGB
GenStrips
} /Gradient add_res /22 /Gradient get_res exec grestore
}if
np
500.069 467.387 mo
497.133 467.387 494.753 465.007 494.753 462.071 cv
494.753 398.389 li
494.753 395.453 497.133 393.073 500.069 393.073 cv
500.092 393.073 500.115 393.073 500.138 393.074 cv
501.341 393.089 502.448 393.504 503.332 394.192 cv
504.581 395.164 505.385 396.683 505.385 398.389 cv
505.385 400.494 li
505.385 462.071 li
505.385 465.007 503.005 467.387 500.069 467.387 cv
500.069 396.665 mo
497.697 396.665 495.774 398.589 495.774 400.961 cv
495.774 462.005 li
495.774 464.378 497.697 466.301 500.069 466.301 cv
502.442 466.301 504.365 464.378 504.365 462.005 cv
504.365 400.961 li
504.365 398.589 502.442 396.665 500.069 396.665 cv
level3{
gsave
clp
[3.74648e-15 -61.1848 61.1848 3.74648e-15 500.069 464.004 ]ct
/13 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[3.74648e-15 -61.1848 61.1848 3.74648e-15 500.069 464.004 ]ct
clp
/13 /Gradient get_res exec grestore
}if
np
470.677 467.387 mo
470.677 467.387 li
473.613 467.387 475.992 465.007 475.992 462.071 cv
475.992 398.389 li
475.992 398.389 li
475.992 462.071 li
475.992 465.007 473.613 467.387 470.677 467.387 cv
475.906 397.431 mo
475.456 394.953 473.286 393.073 470.676 393.073 cv
470.677 393.073 470.677 393.073 470.677 393.073 cv
473.286 393.073 475.456 394.953 475.906 397.431 cv
level3{
gsave
clp
[1.24239e-14 -202.898 202.898 1.24239e-14 426.588 555.216 ]ct
/20 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[1.24239e-14 -202.898 202.898 1.24239e-14 426.588 555.216 ]ct
clp
/20 /Gradient get_res exec grestore
}if
np
470.677 467.387 mo
467.782 467.387 465.426 465.071 465.362 462.191 cv
465.362 462.151 465.361 462.111 465.361 462.071 cv
465.361 398.389 li
465.361 395.453 467.741 393.073 470.677 393.073 cv
473.286 393.073 475.456 394.953 475.906 397.431 cv
475.963 397.742 475.992 398.062 475.992 398.389 cv
475.992 462.071 li
475.992 465.007 473.613 467.387 470.676 467.387 cv
470.677 396.665 mo
468.304 396.665 466.381 398.589 466.381 400.961 cv
466.381 462.005 li
466.381 464.378 468.304 466.301 470.677 466.301 cv
473.049 466.301 474.972 464.378 474.972 462.005 cv
474.972 400.961 li
474.972 398.589 473.049 396.665 470.677 396.665 cv
level3{
gsave
clp
[3.74648e-15 -61.1848 61.1848 3.74648e-15 470.677 464.004 ]ct
/13 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[3.74648e-15 -61.1848 61.1848 3.74648e-15 470.677 464.004 ]ct
clp
/13 /Gradient get_res exec grestore
}if
np
441.284 467.387 mo
438.348 467.387 435.968 465.007 435.968 462.071 cv
435.968 398.389 li
435.968 395.453 438.348 393.073 441.284 393.073 cv
444.22 393.073 446.6 395.453 446.6 398.389 cv
446.6 462.071 li
446.6 465.007 444.22 467.387 441.284 467.387 cv
441.284 396.665 mo
438.911 396.665 436.988 398.589 436.988 400.961 cv
436.988 462.005 li
436.988 464.378 438.911 466.301 441.284 466.301 cv
443.657 466.301 445.58 464.378 445.58 462.005 cv
445.58 400.961 li
445.58 398.589 443.657 396.665 441.284 396.665 cv
level3{
gsave
clp
[3.74648e-15 -61.1848 61.1848 3.74648e-15 441.284 464.004 ]ct
/13 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[3.74648e-15 -61.1848 61.1848 3.74648e-15 441.284 464.004 ]ct
clp
/13 /Gradient get_res exec grestore
}if
np
411.892 467.387 mo
408.956 467.387 406.576 465.007 406.576 462.071 cv
406.576 398.389 li
406.576 395.573 408.765 393.269 411.534 393.085 cv
411.534 393.085 li
408.765 393.269 406.576 395.573 406.576 398.389 cv
406.576 462.071 li
406.576 465.007 408.956 467.387 411.892 467.387 cv
414.827 467.387 417.207 465.007 417.207 462.071 cv
417.207 398.389 li
417.207 396.909 416.603 395.571 415.628 394.607 cv
415.628 394.607 li
416.603 395.571 417.208 396.909 417.208 398.389 cv
417.208 462.071 li
417.208 465.007 414.827 467.387 411.892 467.387 cv
level3{
gsave
clp
[1.24239e-14 -202.898 202.898 1.24239e-14 426.588 555.216 ]ct
/20 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[1.24239e-14 -202.898 202.898 1.24239e-14 426.588 555.216 ]ct
clp
/20 /Gradient get_res exec grestore
}if
np
415.628 394.607 mo
414.705 393.696 413.451 393.12 412.063 393.076 cv
413.451 393.12 414.705 393.696 415.628 394.607 cv
415.628 394.607 li
411.534 393.085 mo
411.534 393.085 li
411.601 393.081 411.669 393.077 411.738 393.075 cv
411.669 393.077 411.601 393.081 411.534 393.085 cv
level3{
gsave
clp
[1.24239e-14 -202.898 202.898 1.24239e-14 426.588 555.216 ]ct
/22 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[1.24239e-14 -202.898 202.898 1.24239e-14 426.588 555.216 ]ct
clp
/22 /Gradient get_res exec grestore
}if
np
411.892 467.387 mo
408.956 467.387 406.576 465.007 406.576 462.071 cv
406.576 398.389 li
406.576 395.573 408.765 393.269 411.534 393.085 cv
411.601 393.081 411.669 393.077 411.738 393.075 cv
411.789 393.074 411.84 393.073 411.892 393.073 cv
411.949 393.073 412.006 393.074 412.063 393.076 cv
413.451 393.12 414.705 393.696 415.628 394.607 cv
416.603 395.571 417.207 396.909 417.207 398.389 cv
417.207 462.071 li
417.207 465.007 414.827 467.387 411.892 467.387 cv
411.892 396.665 mo
409.519 396.665 407.596 398.589 407.596 400.961 cv
407.596 462.005 li
407.596 464.378 409.519 466.301 411.892 466.301 cv
414.264 466.301 416.187 464.378 416.187 462.005 cv
416.187 400.961 li
416.187 398.589 414.264 396.665 411.892 396.665 cv
level3{
gsave
clp
[3.74648e-15 -61.1848 61.1848 3.74648e-15 411.892 464.004 ]ct
/13 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[3.74648e-15 -61.1848 61.1848 3.74648e-15 411.892 464.004 ]ct
clp
/13 /Gradient get_res exec grestore
}if
np
382.5 467.387 mo
382.5 467.387 li
385.435 467.387 387.815 465.007 387.815 462.071 cv
387.815 398.389 li
387.815 398.389 li
387.815 462.071 li
387.815 465.007 385.435 467.387 382.5 467.387 cv
387.751 397.563 mo
387.354 395.019 385.154 393.073 382.499 393.073 cv
382.5 393.073 382.5 393.073 382.5 393.073 cv
385.154 393.073 387.354 395.019 387.751 397.563 cv
level3{
gsave
clp
[1.24239e-14 -202.898 202.898 1.24239e-14 426.588 555.216 ]ct
/20 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[1.24239e-14 -202.898 202.898 1.24239e-14 426.588 555.216 ]ct
clp
/20 /Gradient get_res exec grestore
}if
np
382.5 467.387 mo
379.633 467.387 377.296 465.117 377.188 462.277 cv
377.185 462.208 377.184 462.14 377.184 462.071 cv
377.184 398.389 li
377.184 395.453 379.564 393.073 382.5 393.073 cv
385.154 393.073 387.354 395.019 387.751 397.563 cv
387.793 397.832 387.815 398.108 387.815 398.389 cv
387.815 462.071 li
387.815 465.007 385.435 467.387 382.499 467.387 cv
382.5 396.665 mo
380.127 396.665 378.204 398.589 378.204 400.961 cv
378.204 462.005 li
378.204 464.378 380.127 466.301 382.5 466.301 cv
384.872 466.301 386.795 464.378 386.795 462.005 cv
386.795 400.961 li
386.795 398.589 384.872 396.665 382.5 396.665 cv
level3{
gsave
clp
[3.74648e-15 -61.1848 61.1848 3.74648e-15 382.499 464.004 ]ct
/13 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[3.74648e-15 -61.1848 61.1848 3.74648e-15 382.499 464.004 ]ct
clp
/13 /Gradient get_res exec grestore
}if
np
353.107 467.387 mo
350.171 467.387 347.791 465.007 347.791 462.071 cv
347.791 462.071 li
347.791 465.007 350.171 467.387 353.107 467.387 cv
356.043 467.387 358.422 465.007 358.422 462.071 cv
358.422 398.389 li
358.422 395.476 356.08 393.11 353.175 393.074 cv
356.08 393.11 358.423 395.476 358.423 398.389 cv
358.423 462.071 li
358.423 465.007 356.043 467.387 353.107 467.387 cv
level3{
gsave
clp
[1.24239e-14 -202.898 202.898 1.24239e-14 426.588 555.216 ]ct
/20 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[1.24239e-14 -202.898 202.898 1.24239e-14 426.588 555.216 ]ct
clp
/20 /Gradient get_res exec grestore
}if
np
353.107 467.387 mo
350.171 467.387 347.791 465.007 347.791 462.071 cv
347.791 398.389 li
347.791 395.453 350.171 393.073 353.107 393.073 cv
353.13 393.073 353.153 393.073 353.175 393.074 cv
356.08 393.11 358.422 395.476 358.422 398.389 cv
358.422 462.071 li
358.422 465.007 356.043 467.387 353.107 467.387 cv
353.107 396.665 mo
350.735 396.665 348.811 398.589 348.811 400.961 cv
348.811 462.005 li
348.811 464.378 350.735 466.301 353.107 466.301 cv
355.479 466.301 357.403 464.378 357.403 462.005 cv
357.403 400.961 li
357.403 398.589 355.479 396.665 353.107 396.665 cv
level3{
gsave
clp
[3.74648e-15 -61.1848 61.1848 3.74648e-15 353.107 464.004 ]ct
/13 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[3.74648e-15 -61.1848 61.1848 3.74648e-15 353.107 464.004 ]ct
clp
/13 /Gradient get_res exec grestore
}if
np
572.309 724.65 mo
550.056 724.65 li
548.762 724.65 547.713 723.602 547.713 722.307 cv
547.713 697.312 li
547.713 689.873 553.743 683.842 561.182 683.842 cv
561.183 683.842 li
568.622 683.842 574.653 689.873 574.653 697.312 cv
574.653 722.307 li
574.653 723.602 573.603 724.65 572.309 724.65 cv
level3{
gsave
clp
[2.54277e-15 -41.5267 41.5267 2.54277e-15 561.183 723.238 ]ct
/10 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[2.54277e-15 -41.5267 41.5267 2.54277e-15 561.183 723.238 ]ct
clp
/10 /Gradient get_res exec grestore
}if
np
574.838 726.303 mo
547.527 726.303 li
545.938 726.303 544.65 725.015 544.65 723.426 cv
544.65 692.749 li
544.65 683.618 552.052 676.217 561.182 676.217 cv
561.183 676.217 li
570.313 676.217 577.716 683.618 577.716 692.749 cv
577.716 723.426 li
577.716 725.015 576.427 726.303 574.838 726.303 cv
561.182 683.842 mo
553.743 683.842 547.713 689.873 547.713 697.312 cv
547.713 722.307 li
547.713 723.602 548.762 724.65 550.056 724.65 cv
572.309 724.65 li
573.603 724.65 574.653 723.602 574.653 722.307 cv
574.653 697.312 li
574.653 689.873 568.622 683.842 561.183 683.842 cv
561.182 683.842 li
level3{
gsave
clp
[2.54277e-15 -41.5267 41.5267 2.54277e-15 561.183 723.238 ]ct
/13 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[2.54277e-15 -41.5267 41.5267 2.54277e-15 561.183 723.238 ]ct
clp
/13 /Gradient get_res exec grestore
}if
np
518.471 724.65 mo
496.218 724.65 li
494.924 724.65 493.875 723.602 493.875 722.307 cv
493.875 697.312 li
493.875 689.873 499.906 683.842 507.345 683.842 cv
507.345 683.842 li
514.784 683.842 520.815 689.873 520.815 697.312 cv
520.815 722.307 li
520.815 723.602 519.766 724.65 518.471 724.65 cv
level3{
gsave
clp
[2.54277e-15 -41.5267 41.5267 2.54277e-15 507.345 723.238 ]ct
/10 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[2.54277e-15 -41.5267 41.5267 2.54277e-15 507.345 723.238 ]ct
clp
/10 /Gradient get_res exec grestore
}if
np
491.08 689.771 mo
492.482 682.062 499.231 676.217 507.345 676.217 cv
507.345 676.217 li
499.231 676.217 492.482 682.062 491.08 689.771 cv
level3{
gsave
clp
[1.67856e-14 274.131 -274.131 1.67856e-14 426.588 565.691 ]ct
/18 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[1.67856e-14 274.131 -274.131 1.67856e-14 426.588 565.691 ]ct
clp
/18 /Gradient get_res exec grestore
}if
np
521.001 726.303 mo
493.689 726.303 li
492.1 726.303 490.812 725.015 490.812 723.426 cv
490.812 692.749 li
490.812 691.732 490.904 690.737 491.08 689.771 cv
492.482 682.062 499.231 676.217 507.345 676.217 cv
507.345 676.217 li
516.476 676.217 523.877 683.618 523.877 692.749 cv
523.877 723.426 li
523.877 725.015 522.59 726.303 521.001 726.303 cv
507.345 683.842 mo
499.906 683.842 493.875 689.873 493.875 697.312 cv
493.875 722.307 li
493.875 723.602 494.924 724.65 496.218 724.65 cv
518.471 724.65 li
519.766 724.65 520.815 723.602 520.815 722.307 cv
520.815 697.312 li
520.815 689.873 514.784 683.842 507.345 683.842 cv
507.345 683.842 li
level3{
gsave
clp
[2.54277e-15 -41.5267 41.5267 2.54277e-15 507.345 723.238 ]ct
/13 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[2.54277e-15 -41.5267 41.5267 2.54277e-15 507.345 723.238 ]ct
clp
/13 /Gradient get_res exec grestore
}if
np
439.851 726.303 mo
439.851 726.303 li
438.442 726.303 437.27 725.29 437.023 723.953 cv
437.27 725.29 438.442 726.303 439.852 726.303 cv
467.218 726.302 mo
468.782 726.273 470.039 724.996 470.039 723.426 cv
470.039 692.749 li
470.039 683.618 462.638 676.217 453.507 676.217 cv
444.376 676.217 436.974 683.618 436.974 692.749 cv
436.974 723.426 li
436.974 723.426 li
436.974 692.749 li
436.974 683.618 444.376 676.217 453.507 676.217 cv
462.638 676.217 470.04 683.618 470.04 692.749 cv
470.04 723.426 li
470.04 724.996 468.782 726.273 467.218 726.302 cv
464.633 724.65 mo
442.381 724.65 li
441.086 724.65 440.036 723.602 440.036 722.307 cv
440.036 697.312 li
440.036 689.873 446.068 683.842 453.507 683.842 cv
460.946 683.842 466.977 689.873 466.977 697.312 cv
466.977 722.307 li
466.977 723.602 465.928 724.65 464.633 724.65 cv
level3{
gsave
clp
[2.54277e-15 -41.5267 41.5267 2.54277e-15 453.507 723.238 ]ct
/10 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[2.54277e-15 -41.5267 41.5267 2.54277e-15 453.507 723.238 ]ct
clp
/10 /Gradient get_res exec grestore
}if
np
467.162 726.303 mo
439.851 726.303 li
438.442 726.303 437.27 725.29 437.023 723.953 cv
436.991 723.782 436.974 723.606 436.974 723.426 cv
436.974 692.749 li
436.974 683.618 444.376 676.217 453.507 676.217 cv
462.638 676.217 470.039 683.618 470.039 692.749 cv
470.039 723.426 li
470.039 724.996 468.782 726.273 467.218 726.302 cv
467.199 726.303 467.181 726.303 467.162 726.303 cv
453.507 683.842 mo
446.068 683.842 440.036 689.873 440.036 697.312 cv
440.036 722.307 li
440.036 723.602 441.086 724.65 442.381 724.65 cv
464.633 724.65 li
465.928 724.65 466.977 723.602 466.977 722.307 cv
466.977 697.312 li
466.977 689.873 460.946 683.842 453.507 683.842 cv
level3{
gsave
clp
[2.54277e-15 -41.5267 41.5267 2.54277e-15 453.507 723.238 ]ct
/13 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[2.54277e-15 -41.5267 41.5267 2.54277e-15 453.507 723.238 ]ct
clp
/13 /Gradient get_res exec grestore
}if
np
413.325 726.303 mo
414.895 726.303 416.172 725.045 416.201 723.482 cv
416.172 725.045 414.895 726.303 413.325 726.303 cv
410.795 724.65 mo
388.543 724.65 li
387.248 724.65 386.199 723.602 386.199 722.307 cv
386.199 697.312 li
386.199 689.873 392.229 683.842 399.669 683.842 cv
399.669 683.842 li
407.109 683.842 413.139 689.873 413.139 697.312 cv
413.139 722.307 li
413.139 723.602 412.09 724.65 410.795 724.65 cv
level3{
gsave
clp
[2.54277e-15 -41.5267 41.5267 2.54277e-15 399.669 723.238 ]ct
/10 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[2.54277e-15 -41.5267 41.5267 2.54277e-15 399.669 723.238 ]ct
clp
/10 /Gradient get_res exec grestore
}if
np
413.325 726.303 mo
386.013 726.303 li
384.424 726.303 383.136 725.015 383.136 723.426 cv
383.136 692.749 li
383.136 683.618 390.538 676.217 399.669 676.217 cv
399.669 676.217 li
408.8 676.217 416.202 683.618 416.202 692.749 cv
416.202 723.426 li
416.202 723.444 416.202 723.463 416.201 723.482 cv
416.172 725.045 414.895 726.303 413.325 726.303 cv
413.325 726.303 li
399.669 683.842 mo
392.229 683.842 386.199 689.873 386.199 697.312 cv
386.199 722.307 li
386.199 723.602 387.248 724.65 388.543 724.65 cv
410.795 724.65 li
412.09 724.65 413.139 723.602 413.139 722.307 cv
413.139 697.312 li
413.139 689.873 407.109 683.842 399.669 683.842 cv
399.669 683.842 li
level3{
gsave
clp
[2.54277e-15 -41.5267 41.5267 2.54277e-15 399.669 723.238 ]ct
/13 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[2.54277e-15 -41.5267 41.5267 2.54277e-15 399.669 723.238 ]ct
clp
/13 /Gradient get_res exec grestore
}if
np
356.958 724.65 mo
334.705 724.65 li
333.41 724.65 332.361 723.602 332.361 722.307 cv
332.361 697.312 li
332.361 689.873 338.392 683.842 345.831 683.842 cv
353.271 683.842 359.301 689.873 359.301 697.312 cv
359.301 722.307 li
359.301 723.602 358.252 724.65 356.958 724.65 cv
level3{
gsave
clp
[2.54277e-15 -41.5267 41.5267 2.54277e-15 345.831 723.238 ]ct
/10 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[2.54277e-15 -41.5267 41.5267 2.54277e-15 345.831 723.238 ]ct
clp
/10 /Gradient get_res exec grestore
}if
np
359.487 726.303 mo
332.175 726.303 li
330.587 726.303 329.299 725.015 329.299 723.426 cv
329.299 692.749 li
329.299 683.618 336.701 676.217 345.831 676.217 cv
354.962 676.217 362.364 683.618 362.364 692.749 cv
362.364 723.426 li
362.364 725.015 361.076 726.303 359.487 726.303 cv
345.831 683.842 mo
338.392 683.842 332.361 689.873 332.361 697.312 cv
332.361 722.307 li
332.361 723.602 333.41 724.65 334.705 724.65 cv
356.958 724.65 li
358.252 724.65 359.301 723.602 359.301 722.307 cv
359.301 697.312 li
359.301 689.873 353.271 683.842 345.831 683.842 cv
level3{
gsave
clp
[2.54277e-15 -41.5267 41.5267 2.54277e-15 345.831 723.238 ]ct
/13 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[2.54277e-15 -41.5267 41.5267 2.54277e-15 345.831 723.238 ]ct
clp
/13 /Gradient get_res exec grestore
}if
np
303.119 724.65 mo
280.867 724.65 li
279.573 724.65 278.523 723.602 278.523 722.307 cv
278.523 697.312 li
278.523 689.873 284.554 683.842 291.993 683.842 cv
299.433 683.842 305.464 689.873 305.464 697.312 cv
305.464 722.307 li
305.464 723.602 304.414 724.65 303.119 724.65 cv
275.461 723.426 mo
275.461 723.426 li
275.461 692.749 li
275.461 683.618 282.863 676.217 291.993 676.217 cv
291.994 676.217 li
301.124 676.217 308.526 683.618 308.526 692.749 cv
308.526 692.749 li
308.526 683.618 301.124 676.217 291.993 676.217 cv
282.863 676.217 275.461 683.618 275.461 692.749 cv
275.461 723.426 li
level3{
gsave
clp
[2.54277e-15 -41.5267 41.5267 2.54277e-15 291.994 723.238 ]ct
/10 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[2.54277e-15 -41.5267 41.5267 2.54277e-15 291.994 723.238 ]ct
clp
/10 /Gradient get_res exec grestore
}if
np
305.649 726.303 mo
278.338 726.303 li
276.749 726.303 275.461 725.015 275.461 723.426 cv
275.461 692.749 li
275.461 683.618 282.863 676.217 291.993 676.217 cv
301.124 676.217 308.526 683.618 308.526 692.749 cv
308.526 723.426 li
308.526 725.015 307.238 726.303 305.649 726.303 cv
291.993 683.842 mo
284.554 683.842 278.523 689.873 278.523 697.312 cv
278.523 722.307 li
278.523 723.602 279.573 724.65 280.867 724.65 cv
303.119 724.65 li
304.414 724.65 305.464 723.602 305.464 722.307 cv
305.464 697.312 li
305.464 689.873 299.433 683.842 291.993 683.842 cv
level3{
gsave
clp
[2.54277e-15 -41.5267 41.5267 2.54277e-15 291.994 723.238 ]ct
/13 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[2.54277e-15 -41.5267 41.5267 2.54277e-15 291.994 723.238 ]ct
clp
/13 /Gradient get_res exec grestore
}if
np
%ADOBeginClientInjection: EndPageContent "AI11EPS"
userdict /annotatepage 2 copy known {get exec}{pop pop} ifelse
%ADOEndClientInjection: EndPageContent "AI11EPS"
grestore
grestore
pgrs
%%PageTrailer
%ADOBeginClientInjection: PageTrailer Start "AI11EPS"
[/EMC AI11_PDFMark5[/NamespacePop AI11_PDFMark5
%ADOEndClientInjection: PageTrailer Start "AI11EPS"
[
[/CSA [/0 ]]
[/Gradient [/0 /1 /2 /3 /4 /5 /6 /7 /8 /9 
/10 /11 /12 /13 /14 /15 /16 /17 /18 /19 
/20 /21 /22 ]]
] del_res
Adobe_AGM_Image/pt gx
Adobe_CoolType_Core/pt get exec
Adobe_AGM_Core/pt gx
currentdict Adobe_AGM_Utils eq {end} if
%%Trailer
Adobe_AGM_Image/dt get exec
Adobe_CoolType_Core/dt get exec
Adobe_AGM_Core/dt get exec
%%EOF
%AI9_PrintingDataEnd

userdict /AI9_read_buffer 256 string put
userdict begin
/ai9_skip_data
{
	mark
	{
		currentfile AI9_read_buffer { readline } stopped
		{
		}
		{
			not
			{
				exit
			} if
			(%AI9_PrivateDataEnd) eq
			{
				exit
			} if
		} ifelse
	} loop
	cleartomark
} def
end
userdict /ai9_skip_data get exec
%AI9_PrivateDataBegin
%!PS-Adobe-3.0 EPSF-3.0
%%Creator: Adobe Illustrator(R) 10.0
%%AI8_CreatorVersion: 25.2.1
%%For: (Lenovo) ()
%%Title: (2212.m02.i012.n041_e01.eps)
%%CreationDate: 2/17/2023 6:07 PM
%%Canvassize: 16383
%AI9_DataStream
%Gb",KB3X+_e+!81>Z^oW%A="OBiQ<"YtYN2/_"kdC]P#`ECoTZ_t2X?RG!k4ZK4E50]a.BE6NR7D.]^5m-N5$Y1B`k9@_3jm=3<Y
%771'QMjA+RR'*>,qoM'$;m/h!?F-Dkiaa#t2mB6P@>5-.=[o[d*@kW7VLpP)eI(]$=)I=`C'Cfobh("F7WUSTs6Wic474DBj/,"b
%j`9`i.T^d$fC2OYb;e6)Q+`/\UZ/^[Ak!pd4/8.'S+%1mJ=d-cSS_@,FQg,9co7mBMbb@0k2[ii9$ck%"7NPFCc1!KWE/sQLIJOR
%-Em9mX1S9;W,+Jj_D;R,VUiBf[p<nA2H+$5pt2$.@200L]fJKKoTfdmWUqUuiI@hM!:ZUL(&nZ"Faq9S>)K.uhTl-")Rc@0!iD+^
%"DI;'?*Aqsbu,p/#*6Dh^$N0iN^9.GF@%*Km#5d92$W-V#l*=2l'@O\<<^O6LisI.VJ7!dG+@'VL4:_bGUGnmpTrrZ>#)d)gnNC3
%(sY$CLS[4c8__TINpWWY<R!LhjbW@9g1@I->V3?k:/-=#*(rB$U0!(0#j^.l]7bBB$L"rIETB#1]b\t5XkZAk6'I3+h/9j1mJcg@
%,ZW75?JVY'eP<'`M[k@GYoOjH$6O@'0F44k<7:o)jeNm8o$N>9U8go(\).JBM"UQq=bt4KT\7"Jl*=8o?F4]12-#b0Atr<6WS,]t
%2ZH3Ub1P-,a8[Nu%MR6)Gu]>FWcj]cOk,5Lff@!Jf;ll<Xb*Kcih&55&QMpajk?R+2Z/3AK.>St0bsh\mFL3L;AC^2o$8rgc9Bu9
%\)GNT7]ftRWa=2Hr%jfof$:tYM-"B@)M%0`C@D'^r%XP,V)=`'C:FGG"9&eQADC(2DErn0cA%\Fhnm"tVuQd*hM27D]HsY06eAA'
%]lL5-<QrVq;r^%a[LPYQrUaGm;5'ZR4p@acL2%'8go.+$M^=aq*j,)eF83pq's=u<kKT^S/%\fjdF#`fNPbo4#\OMQHEHqZe<tO(
%jjI_XX^@>#WEc4S]Lj3pC?;,bR.#Z>jR;:_I'\<t0HF42V(+0ke7#u=o"oQbPr]8[eDZZs7rVT$n-6DTX5\JG"7ZuN0a;#hr1+u9
%E#5V[DoK*e?Tt8d%LY*LEG\+Y$JH*MHe8[tXKknZ2M:;jT4,FC4?75VIfHR@f?0q%-1%c;flnC;;PEFtrbf0W!R-XHn^LU)(`IFd
%7P0mD2d<Zs+uA0KI7nDDTD_`*jXe$?l"C#PoeT<B1rW%7Scs#%b&4%4pbVTD<&O?pF('QW1QYkIA6N5cnrK3]<Fs:[fl2iq&:D[#
%g#HhtXaisR'VL\n0rQNB%\d#tjbck5q=Na?k>2(S*9a&l)"`?qUbM=Hf2VU+s6%]>5>^ALJ"HSE8j1QRh1,uQYVh_Z=_>Q]JKE+(
%#*0*3g43fVSi(c`n79Mu^lo3KgOGgm'7M"jnU"^_(:+]r_p"T1G\khan]*>+GVjZ4WL=/VWj+k93^%7!:YpSmr"FN#m\-4#e<pcS
%TgKdGRgj/NL<"im$Vq8(]Qi#GZek5jr'66#r:-[2\"6Z/hY"OL\+39XS'U3fq/p@UJO]mF!9VjSG]<:%4I16YaQ*'APCLHq_`V@'
%*!L;a3sOoPTWL:9-P'Rf_mCi]W'gkAX4(S*A("k04LY8Pq'Z)&bThG.Vl%a[%9c?%c`2_:J9n8Hl(D4Wb'!H;%Fuh?\>E]hRLX,Z
%5QtB.=&FZ7]D7pVcukV4_K6/boSdBb#/fH3@HieDR^HY@oH4R.'X%UP(FU3(.sqSgSa(l68>7m+<GjDL?TrrXSnAp(Ga?arZP*6L
%2>UQQPB`_G%?WGe*bbYiFF6Ef.>O%WC`NJ,)Nh?LLI4fA*"NrhM$#NkKbe[I/F^\;i!LCl9?ZeG9f\1)FRh$CAl'`B2P8G!cU6!5
%*7,gGBE;I.m[+6nU]A.dA=f()O2T)37f:$Ija=4d*"Y+RE^\uI(3)nJpa,O0j^oJZnjL$Si+5_0E]0F8jE/K51uNet!MMmH^^kM%
%(EMFp-LaSYYN4:5T%o:B7%R/f7GJ;djLgKD3C`Y9+pWec=GHq<JM0("+"cE73ma8B`O#PeflqJ@Ip!<PZf/HfD5I5hHd[9@RS2=[
%4I6+o[q:oh,Lr.r^U)p`,Q5kqrhg`!H$Y9=l1[5$)_)C%YWGk8n<()^A0.C(QkU+6pffjUnDrfTdt9/b6XL)kF2Lf`%3B-FL1()E
%$jS1C:HW?DG`Z?#NMZf*BAHH;?..AgH*HVMg7UnkGS&/Mptu"iL<$S>qEOu)=ugiun8HQT#>IpDIk%^L_Zj0;j<#e;[<(i=8%#rs
%+/q^]p/.YViK%BPr+D!1?tJXaGd?X#G3dGb]aeOU2a^:nTkB?L\0chU+$BHK9+N^4S3*6NO?*S.HB.*oS=3AA"KZ7fZ?[ja-#RF-
%@30q<._l;\:0,d]'73R2!(o0ocarafZ&tr>3_ld3Z1/'5`WWTo;47T<W'Dp"5W5;/_seWi/0fmR>9NHm\a%9'@"kP:c$:ig@*&*u
%VSX<IUG>!>c$ra:^X>6,s!FUgb*Dp0So3aa/5Jc\*)F&c@eO[$cuKV5BA\/-rR'4E6Ru?GUkdK3-15RNicNQG<*82Hn=[1Z".dfJ
%Qn;p%VMKCO,J.*TcM4h(\"://S0r`kgP5-7)$@I#o4heXYESsP")Yu-a!RA(%'4"E\frAiO^$&.5DD)fL<q]f/a%]Y0NuCUf1q$*
%C^Jj`>K>M_jqb7=-&6ZLA1J&DZDYCkD$<:\8m[5I@j&IhGA%NAT_8+=EB_-l%$VYub?1T$pT7q2N76iG12)p.<cX-_.WI0XYf5Nd
%$ePU\Na'>&GgI)K;t5"P*``B4QjLCW#jl*ZPhicfN#)7t/RH]EW&F1WUmOqZNW5RPBg"G;p+NeqD".I@#@)RCNA<%$4Sdo<'ADKX
%pp;XpdNAZkj$02.P"*QJe1$*CfMb<4[7%/FP,8Li6P8%HY:lWiLcQbqNMndVc&q=PH.3md=)][UOTgZ5$@,Yf\C[/U2$--8Xu;e>
%.C@$LL1j*rU2=%rQ:Q<Ge7]4qO_]jbl&2JpEh*fM`c^9N>]\u;,GT_ml&bZNX)LUlaFX2M-PbYpouVIW0WH:r:nsg89%maQ0nrjV
%f,K.oOmA)'&2OrV&b%lb9+IpqY&ujtg7b\lEXe.Q7&\KGHD7SlU99=+,3k(9;E!cu>\iDH@i!^p/Z`_T[\qNA#-Q/:l(N7A%a?]-
%*JTM:mq[`0bYUr#oQ!Zgl\_VmRR@:)TJL=N,,g?7&E+`4j_<@M:1?J-S/`WC->D]^VIQ\o@N<(^`dc7\N?0(qki1fpdc41d*r1Qp
%O"MKkJ"T7u,@sNSkWrs'+rXc_4L2.fp`%?8W0#l7$,7]%;ri?`kT@'+dPEK6O0fd=,:m(>>3s-fSrhJAi\AD^$)PWg`<LQ7/j4Gi
%jbA4S*<*Ze_poW0c<9-8H$\%,+%2g"_SBSJ`"ib`0/g'EA0X*B.\Um<Wa3]?XOr:JTK,)YI(0hPG(_mOT0](abfaX0S@NX*LH=b4
%&A0Lc73cB-OVfq>Yt4!;8gh1iTghpA61GZD0a]of)*'2:T*bE"rqRf(7<DfGlhfoF"#]qINK+5aaHh'eHD5]kf/*QDPgCdCoT3tu
%8Po^Y&&MNS&WL$kF[2_HTjFk(X+=a:iNV]ih$/oh4e^OPe-f1'dA[N-$dG?eh7Mb+h%9,dk;c>`hAd+D@KE`BOlP%=UHg2c+m)bB
%,iY%Vh3u-in'^^EPTC+/^tS+ZFeEn?MZ6eq&gDnb$\^Id0M"$N8Ds?X,Q(T9=3D/@*@$l$'<R@5[8,2hpH_.scef1cF[V0X2&3F[
%\F#Ra]ur_?*],SRZnc4rRUBLcS([JU5J$J@nNad>l)E\$`]2Y,qDpbZXgiJ_2Mk*Oe2]+dW(j9-IpbZP4<m3nae7OQXDG8MdF(MH
%eSPe-1mg9,h%DE:VLu^$2Y7\p:BnmBTarJA7PoHKeM+7e#(M9T,f/\()-$;TEL'k#>i;W4>H5]I5b=&g<)(8N8FU'<e:OM6<!J#O
%U1;0R$:Yqk8N!8)RLpolPHK0J!?<&kV^hVf_ir?);RqKYRS1K[e2$spIV4#:<qPm&C?_r+'jRVJs&UXN!P!s#I_+XL2j\gpA[@AN
%qtoj>=p^*$Y"Ieb_lH[lfaI8Ih)K>>]kRT)M6.:G#:cgPQF9&$Lj[nP>o.@[PmS?8l8H5b3ST-4H;o?gc8N=I]A+=S:$i/@PaZVs
%;!E8;jYa"[I,d0[/7pkiBC&*?ia!MNOM[@F!GP,aUY;m;'jC$$ChuM7Odk\W;mgf$.^]Ub8IV^m2.=;okf+BPZZC*$SW"fuG4%9%
%NJ@2&%E/0kA4,Zroi_=ScYe<s;35OV_H(T3jW2q+NInX]@qq2m'a>hA#X>/#4O6Z4(ql<]D2^jJ*_=V&][8EJFg'c4C5n@8-#@Pi
%Ep6<nUjLl8c)Z^WQ,M`iH)8]bd><.`\Lo4uaC%KX<e#<(+XrBJ.MZ1$,\cfO&Zp0c-G+Dd/_@2]1Gob6<#co#.c(q\rGQ4Vpg<b,
%C38r93l.3%LcC<e6Y[hb>GTLElud$e]1B&_9t<c'b$?i/0HeNM[8QV$(j#Q+R!WMd>Ts5dCs.fT\Zm_F[cN[Gq6;Lf1RPF!QaeW6
%Lpf(Iji4aaA$b8Th0-,-EiZ`kqt@N^f5,+H4p&F[]_>Ag7,'O1f%=dRf=[_%9!1!;F%:-?%W$a1Mi4Gk&;,JGC_FQXEHKo&0h.^)
%C9cRaRSO,&UQ`C138mN[g5"'?&FOZkX#tCYY[8n\>MI%t-%F/](?o)SK=<fU[A8QIB4SpT'/L%ATi$bP6iUrRJ9P,i$LP.R+>Tj2
%E487"O$nk5k+o\608As]fPb:gAV'Zr!p/_FFk,54H:*,OGBn9l*29jd_'K`ke8.&rgk'`PE(;p]8>Da9;A3J;9sOKFs&ZC(^$=fp
%Z+Jtt!@Bh@I')+=\T]aAYi.YtD/Oj8,=,p$B'Tc0ou%k/iuOZEhSFJf*$>hOIEb69%W!VDV*(>DgI,"nlX'"B>JQ(:Vj+V<_=8aZ
%aN5uud;e.2(abcO^qXB1P0>]GL"0DCLY=lq[o$mG<P2?fI-V@Oa2CF3Nn:f5Yf9l\WQG!]7k]ciXlS8$7ZnHTpC89tAi@b6]rr#A
%qP/pU>1=T\$r]JP\M#[23U`kI5.koo[9o!S<(^%VG+WqMmWFc?:9@C._OH)\0$A6n&*G('6k68-&r62EU=/u%\hs@UA-jVN?$FKl
%MC#pXD/=@N6T-i7?MBG)4f3:Nade,(1TuST]P]`3FR`3rM`q41H_-%IG$c*;"#W#-]spRO,X*ANh!sAp7PhRsMrPD@l;%UKGH@J`
%'"9ep9p"Sk#,ES:K^A]=W<q-Jc$J%pG^(n:Na!SuTRINP=1HW%<mYNTH/leecP%2=4cuQI$(ebh$V:OMG:Yrh'%rbr?b+^e=$H9!
%FC"P&[VEAlmMoRlOU]UJ)II^+G9CqsGhcfLKo-*&_>V'W8S0R1Z,)W[>NVM2kt40n5;Z;/8bl/^l_>BoR)FNSnEAA=^U`)Ba%,.8
%8XM$>eP`6QBDe?Sb?m)@Q'!5N2qDQ3pK@b[o2H7G=-B)S\fIP7,iWBKeOIR_CG@q*&QG:\r=bs4[s;b[6b-lThOd3kE#5?kH#u]4
%)XAB%>Q3a`:'<Kub$/anUoFN8YB*5DO*hX5N6*Xe9<HXgd4#W8K:SbeQ`?XH8?=]$pk>9mi'?AA"r0&K3N-\pRLGbpKm'<KB=IXO
%0I8U03NOBE']!SMId=U&N)>Qgg?N)%W/hZPP2osVWLS0K`[)hrmthpKb[Bkk8X7L;s)Hbu>DP\Pa,qeEJnYr@;^=sjK6\`6Mn=s:
%8I-&T]K!on./2FYRgac6>"M<(G<?@(8Qc!2?[6m3ib)5q.$$\!-))gFMcc4\@u<]H8G(\[/4qZW)98KLM\1qY;+;[K7M1QAcs""j
%P@kknE_h[c!<FU01DV8SEd[d+SWW9e,_V+<AoNfFQR8-:gpI5p]M$^tbRZD$=[I3jE_\?([XJ%?88')hN/@RLer[Y-*#WD`H^NLb
%&fT'OB(o4G=*D?+X]E^n(;5%GWVqcDE&55)1nijea)Oc:aRU-2Sj`S"CrkCm'O^s'PZ)e&jF@YBUDZ7BTK>VQ^@pICCZ_"fNVV:&
%q-"t11ZiI_^,FQoL>coSUXmoI2J-_2YdJVDi3B^Kk%aX]X$%eHD9UO"_UZZ;g1\%N8A\"4M(X&bE<(3mIUl-D4i6-WnM7Dib@ni;
%.$5Ah0;B[<lIJmI-'Ri^c>ud\.<S'X;Q9c4Pna.#J^<ic(&0!GLdHb:;1>O"=/kjd=Z"E"28X%]q#"*fC=0XA<I<VIJ&>^F4h%gW
%69ZR#fM-[Q1%eSRNlebn(t:P<enq>Ai_%rk:PnWZo56]b$fc54j*@6C7HjL,84ZXr\`4OCs,Ih@$YN`qoie]2P*3VSJu!)HNfSef
%'=HH[[;I'1#IoKdTf^Otd$%3Gc^)]Uj8t1.gUlm]6(L,!Yc6Ah!I)c8&iof:h.p6Q(/Ub"8',75:707G)'(*=Na]k_C]8N/=HZf?
%]eFd@3)R<.i&430X,>M$7b0dj+o),aMC-UNa6,qlVCT-iNOW?lT3'l&]>)Z5B]e%K`gO@#SM!OW847>(Ed6Hl\.5<eNP140pO=:_
%r\)YJmJq%F8n'V=hXg^3Z&JF)a*YP\4l>#Oo,V2I1u@gEn+e<4'ohs8n$-YJ]]]0af^jN)L=@HY`:^T@0%YQS>W+^J\cPOL>61;!
%FBMiD=fRb#ek3h1Y1+A-[AVJgCgi;TXKdI:[]maef%@hX[=qW#,`g<-`<+nH0K-9:hTT.R!WT1.[YIH&q=cq6SVWcdrDT`'8!peA
%BWmWtbX@3GQ(e+H'mcju_5,YKBJ(pk9lF7;_JqtUJ%NA7Vs=q_jp@(3Nihn@&rAR%N=/R=%S(jf=esHjE?uH32VMS.g:W\J$0'4]
%W[.F1B81W=)fLle0uTdXUZ=qtg$ES?1Lld!S[aW3K8@-uK`?ij7q7n5fO]/OUD^\&rc2+NQdOGs1j0ar>t/=jdG;Enb'dmf+kb'=
%Fk>5Rh(&J\BoIII_th$8@_No8@:]&Y\rDjjQpCNEs6?7NN6oPlh/LsG'B*;I4!XJCFZ8*XC%i5O@h7!alHS]<0i+/aN]I"hE;7Is
%-?u%si]_C7A56msD6f#=QFQrLA=G!6>5N3:VdAp*)0.KG\_BLc8T($T[6R;1n]*W2`)nu_k"JH?1?,QD9M@(!1GIW<_3h`$4O1`!
%(67D`9O/i";>rN"^@X?i).E68?;0i3m5L'309*:kNIpnbdgb*b+F%G]"qom\O8,5oT>e-\ERFDr0,>su$iPqbYHCSPGl%1%/XAJ)
%o?!Z"QOpn8<;\C=V''MA7c3]mM)"&&j'lNYju2aUn#W#aLm^c;76!1gLG1k%YM<USf/W*bIC;5X(>@D-HT8T22"l<5U&FB<\Rc/n
%*a<=PA^)TTMQqjn[a<#0g=S`=4@g>oBX90eVNSa^PrHq7cc#>=2qKK)(0)TAiJ^P!Ls\7_4W0df.MYHubZ2%$3LJ.sn//U*PG58.
%ku)N$eC]h%(Oh;JQD$jk,]`>EU/@tMNZb:*:3qC8WKrcB,&-(A[?1n#S*D!438m[e6Zei;BUj%?kHMr4L].cZpFG4L\_Ha7)W$O`
%="X&"0cji=Tg"5);7gi)0#N(lSgIB\TV9WX5pTo'h32-6MhYGL\`MXN.@HB\]Q9jrC4_e8a3Pcq\&i/IWO==(JDQnCN&[,mm$8rQ
%X\u4Hb7ep6SO0FBW)OhsfHP0U)[2(#Bu:4R>KBASD0<'&H%78C'B0CD.t#@):Z@+KYKsE.eV4/%HWtAS-NqHj?iNPbl.oMN/SO,U
%WS4I?1\T00m6lP/`[^7%<E*P2UY]c,2(=hMel'OllGLtH<TR)3]d,D$]+''X#UB'ikU"_Xc[)FWH:Xo01<:>g]o9)(Yr+Js3(a&C
%pt2/WV*1.Nb/WT!IHPlcF7/LP1H+F9k1nUZH^*Yt,0nE;3B&kZ*h,/K_JBVkqGcHacGu%!M>=dFO,6suj0TH.Yl;\"s6^?^)CPNr
%kKLHeD^jOaG!'NJ[8F*W"qL4mUHk$S@/?Hkecj>7^Q<I2]^-E:=&L#;X1O'`lh>Ed:;UW/pF,JrjfNY82DO8Ur`(e,Gj<5/EOWgV
%59P36:[3#A*o&(gZH,78G48l18)G!#aBFEQB&4TK\bn*9q'=seFT7RTm1Hp7KD%@JPHK=_%#=,l6k7amALKc@:P.*Ui0Dl[qWWaX
%D/kR0XY#&n@T=e#+m;):#*QXYoPU"9+rn&EDHs[Tn$(`1d^4ifg,Z;=mlh`YYTdr@b,>I5k%dt[iM1HpFgg$b\mJMFj_-(N`k9sM
%Zq>dtS^!2&\OWjJ4TYrZ?WZA"`N?4OD/M=M0&^#NmtjO.B_A#d<k".]p&EQX<H!OO6[-GWU([:HN*IaqDKr5s4[9g4i\u4F3IKg+
%IN3_U2iL8jm(QCnOGLE[mWH6!H$!FmnLN_k"=,=HP?tm$[t#,TcJ%?'g-6d9S.&Rja+^^,QuJ4Ki4BaQM.k>h]kY(]I&Pk2E#YY)
%<Q.TZ=k?b8-L:e]"Mulb7QcupA%?hgI/%U@@c@U^*QuH5QHE;fhJ:f3\3q@p2)q[B)RZ_hqj;Z]HG\QXViCPA_2"DpkAf=m4`J7Z
%U([/*dh7YD6?m0hM8j7As.r)X>\i]9:sm&lR=EK(P@]2ebfMf;J'C0n$P/A^=8LnU_6NKo,+c;?!@3NL;W6$n6,0rl?kXbYo'og]
%^.3LjDk&'4Y8>S<kK$b!6kR#j,T.-M9bYLfA&st@pW*gr5JBk07$Z1^?8=KE88C_V.u3``/>>5`oGL0Oh,@lGl"+st\ADae'3@oj
%-I52`:a_n,WEh(qgtK>T\`_(jiHsKTd8Gh2_eD_<7dDR][!;m=*f4]S9OpL%=iO&_WA0h>4dkEOA2XjaWW*iJ2TQTO6\7f;\(\L)
%`T6rXbp7]JPI48&4Rd3[a63:i)E7D@eG)5K_^DnI4tnj;IG@WM`rh8g9Rb[nVrJ@6F%`oRbN4N(bl2p3Dtskgj&+W`[&?0C>EBK7
%aaL]'l*OJA?8gSLjP:hhE_;5)`g7eo0t+j-"DK?tV(--DeREJ8'#=tZSaG".qp9=TVQqW.3Ua7QQ+qV8cYf;fZh\hBjYm%nUIdn3
%0@nF^<3FVd?DVi#WdEtf;L=BI0_%G9VYIWG[p1OkE_TUL4f[&T9CTQ!\;L*.BeGY_*J-RF]5n?Ild7p:6*D?T;.,rpd=7$?s.h%<
%r]C%iCnl-/l1pf6=)Y.I?WHr\(;VAk#8a3-(SK>bTM2)n_c!=;p4>V'C(Ggi6%JaCG7eiq^G;+tR'*?ON+ju`E:AMEkk)\H/]BF&
%K;p\"1EmnT_mZu&q^g=Y#8Y&RNISWm:Yu3H$g&hEPPXo?8JRl5QNnqsU$3cnO:JoG*QnTQi!`1e*B\'5DV8g54?g@TEuL),=IP,B
%YT22eEENXai.If'\m^H0c@.g))Odc4D;;r!i@s-g_'t@mn`6>@6JV4XSl39Knb'Ye7[J^UgqpItD`7UsjpqB=J:DKE!256&p2f3*
%"J`^L'lCkH,*^P>q7OdU&hWT!qXX-"jh+X6WrAX7Y<&>i=qI62Wtj>'YM*0$>;/QGB1kDg#oio'YZUrs&n:-BO?e?eJOoS)^"Z0c
%:7]Z/F;lNJ[gj+(;eLNDp)"52Q>ZKRZeHJLEmmIsLpV9f%2SFl+'Z,4Zd[Ie=eXYfeLE'OFd&LhJaahohH)eL0j=KUA'dT<"F=c/
%4iZTUG;Dj-pXtXm3lDXl*$">AY6h=7Wt'=)$pFLL>2e0SBV6V7q0oYi1j31L-%GE0Kq!$@^s"EjB#Fe:Rnf9r7`3YlA$Oo?6b?ol
%FA(Vp=Y:F1Q[kqFE<e=gos[]A[]3pZbApKR#G,0!fDQf:I@)uC95_\n!A7QUSmdABci=;3'GDSCn(;(%L6ciGUsM#aLGA=]Kq?::
%U`#$l`i<o%1qnNI]&]8pm'qQQF1'`:+4#57"Y02RGL>,[PV*2Z0dT#rmLJ#r0lfnqqp#-:k!lIMEGo.%79<^fqg[#T+)SJlC5ngI
%"ms=VJWeBsW7H-bBs6D?ICD/NB]F))r8\(\,c<Y'mV]CsraSY0UL*';.rOJ?qi0;uC%,+'M%?qnrEEguog\>SiAI+$T;*K@V!VA+
%A$+T;<D%c/^q,h8Ni1Js<"6LN,[1<*IIp^IgiNTuFj"W,H7cA#d3jA.L.FYJ/_]Hk[?2]-]*!&)@%c6C(IL^d1or0in=\m?';.Im
%;JH$mp?:u&os&f4CF$&0B]m.mC$MVbGV-Dg[X+L4]eaDj/;d04_&[T[SQi)TB2Qi!];;O,@'^Eq;7iFR.&5?oobsfX&GBE\-2CqK
%?1]]9`GN)1flf$^e:+OVY(q)BFTQlAC2Eh?;FfUD>,h1(WTB_<,`Q/n8h6m!TI5G6WLbThE*qm[WJ5U'K5ZLJpcXetBXl<Qf3%t8
%'jA"7lJ*u'PZ*I768LB#7Wsu&B=BeQjg%+D'<feO^=)TF<l5DXs#tg3LKZtMg2*"2B*[X$>5qq[S6iVD+R8saCHoL%*B/#.",:)s
%\&tPIQYNrI[HdgfI6*#3G,-d2U_<#0_cKKU'3'SoNF\N/m,hNua$kf!a/966X*<>e95T#?^%.9`DZR:VMOIF?\(W=.TOq8o'0aE@
%g%1(k[JG`ub+`5U$KSD&R:_]V*I?i!D@>T8]2imo8Dd,k&C2bWdP)\J@r!Yo<rW((V\,Ed-;EmoY[2,8$u31Zr%N0P0TjBfppN*(
%2'Ci[YMLljr=cOM69Es^:$$AW*7[s?7dI_L2MsXFUD';hQ=Xd1&Teh)H[W9-S]\KslcTKYR8^C/VaMK$U;ot][8k')T5@3h`NYlB
%gA.68DW'k[#BqM;fQ(3EmSJ;Y:cX?(%AgZ[s-4:ZZ&*-GHGAH^[f?dK\4<S&F>`t8YA9-GT3AW;]VEJ?E:D:V[8:`Wn[o:5iYW`b
%rQ8_h)d!54Y(OT5?M9,!#8!=g4RA&fT]"5O.=,]8b7=6[ZcWNd?E(D_kIkoh++`#+*MST8[uLj)'s<(9c1nI^oi%_K!Lb%.nIYFu
%;B):?Oq^RnBAufkC[/7#BX']<n=FmF*:=i70ec2t8^_P062%c@l@8]*iR<a,_\^kK[G6+$@V:+k?&'5H-V1H%]IW_h.H"GO$S,ak
%L[F\k=rDrKH]Ui)ZCk+RAj&YZpR$R6YOt65JCc@P2<@<2q=C_&2gWa:cr(+^eX(^iZt78JT0[BEYoI?%>M@tWdHI=YhD=+@TI$Bo
%fuW/kG*&H"H,n#YR?E2WgfE^I<%Z[MoahOP_&]ur^FnS6a48W<3eo,3?g=K'dt"s,9"j-8n"I);lG's=KqKHT6SY2RJp\l1lZ[e,
%Rj`<.Ndc"#(mV!qjI(b=$qU\IKj'b9Rl=7qfHJ5<2Qird\K.l!Pr^&Z6hi$,#@=`;DF`fSA/4q&=fMVDOF;\5VF[:213QPI4H*Qi
%)jgdgFU:*YWYmEA6dm=^f%">+lLMa<>rFf`5^0E4[DFfbpaJU;IFsG'A(5`S\CYWKTrnDP2fORn^BYO?qP'G&AjKRlDXq]<Vq[I2
%=&`a$H`O@/&^25^2U0MncifOt^f[g^=0.`D51&p@X1LeBEB\Gq+`s^D't8H?YCKT\h5UW7)PcscWOc:=7aingg1=El;L?\m:d9'(
%:hpcY@a*1t9=qT4o_X-s3]O4Pp!YF!"`"SA=1BfIE[AK.lsY?Yb;RqE`?IbF:SlP)osV4,-?kdTYe&!.QM+WH.i[nUj$iD*@V9_N
%XmDq6NDh,dXhR&E[Cl76jchZH56%n^5.%LOVDl!MJ,]@;VrtdrV:5#l'C#/URgH%E2R_63re*M_9NlenGdjNdLSkUZo-eC&\LbXR
%WH[iI_VWMMnhtcSVQ[4Sn`o2YO#cth1IHYpIk,?K_*;#bcQ'8m?K.T(]^X=h_D;*nTKfdV4'%+IZP-I:o;oY*r;o1-]tcjnTUF&m
%9_KA%0or.X%Q:5fG8YdS[Yq>mk=a'p-2`t<C91tV(7Xf%;5J1inm:>]rcsHP0!9\.r@s3P>kmCt3UQ+E6%AIQ37'V5W.Y=4neYY>
%r%UF)orIcW,@t?Eq-#kL@G<Hu=`.qn5C<$t3OQ,`S(D&^B>:O?5@+8qFtrT7C@,l-IAL)Aq.*;b@:16?RD.,#[b-VKp@Qh>o'Jh.
%q"&.0rj;4<1uFNMc(i5g+1:e6@W(G1ZF\uS"CB.K&Y]kk`tnf2o@G'E;#9m""(l1d!p=mgN.C[a^u)q(BAS(@piX\34L'hng,jq*
%[LU.a>=:<YGD@hgp3ATlDWX-14NJQX?V]e8QR6k?d;7t9a4H$Qea"%;e$\rAS%6l-\(pXsn_'rb+%ePMU;C[>OP[3RBaTaHf0?R+
%g1>Wkq8V!WBtc0hj@_.40/'EqCoaag]I[.mle<Aj-@=H!r;![@rT7sC@C=Xi`%4pG/8#Kc]rL3fQUO$K?r]CoB%FWW95FLd`CB:G
%o'Z8<V7.6K\lJR%*d@6hB4\.>H>iaeH.L9Tr@iKtq#%jf>BJ_M>2(NEbs6E^nuFOhQ&Vbab?AXeY\^)=V(Q"7?Z;]4]R'`tDqD:M
%mI\pqDI'm,bc6ZAKie)<o;oWmR97('r63`44$0L6L_Ud*6cAmM4ZTDmVC.];Q1RK7p%NQSm8O>MD<011QZ$'[dg:T0\bRlll+,XE
%5LT/Hc9)\#a"A&<X*=7Fr\_5@>I0SZk36?#iDjsed`/I+OiZ##l&"XXbN[,]CV/i/g;8,]b(<VUrF4*g<A:b\Co1iPQ9V5/edlQ\
%q6qlBoYS4s>l*-qf9>jdkOn<.bk^7'HKha-,-=i<hkel#je^X@lY2fqO3P$drVTCDHoCdXD5h0-[/F`pV4A(oFaEjCrAD8dTQ<up
%(Xo9_H?Jo*?M`d*Mp(anWk+;;/^LVso:IAUdd,AAVs03>+0X+rVs9o'>C6%bo\7?.2SJKQSY^O;0$L0dVp2@9]CThfICQ\[ViR,;
%a6Af]pPJP>g9^JEa0QR`fZ`OQa&`'&]CP.W[j0p9qY]F40O9'5J"")"Y&:/@C2PPM4fu@l=-c)K8D!PjS*;#Kdi[i*1[Xj'HHU/$
%9\+8H'@XM6l&")opW!pTq3T7B@WUhhKX0X@9JCUe!mOCUhj<4ofXirG'._8VcP*?8mdl9:N=S6#nlH'O',t<9l4[B/[`T9<T3q%]
%lkOa:M1bB2lGR].jCmP*!Yp./Q7"$)%b#&(k7q\,@V&3%-lkYYQ-&lhM>Fs"L!?u:Nm5\&_oC0IC&R/DjBUsIFE6ouHp+I7&,)eR
%bn_XCOI26X^TCa7^,l&gEH5pjc/.OI6Y0bJqt0a(jSn=dqW-&u(Q4J!-Ketf^GtnC8U''/9R<%\Q-&LKg[EM5AG%'p2;+MF?9Xq4
%H[5.'k#q]Sl,)&sX/F+_g[@ptoPruloD.ane((r#o[E`,3qMu$b:Z!7=ZA:1*^"5PG^>f]hL,0Fl"'gn]0,oRl,Cs&X/FS,RdI$G
%en/MD^!_?1btLjHhqal-B[;'t;Kps^PhF239Kh:(?Cf4f(PbqY=7<;hG2Bs#Rl[o3YGOKW[,+T,/RSOF.Xj%=;r>p8m8)7c$C0jt
%dFG.-Y)DbG1XhWcZu/U>9J>k8T;Gt\ZEqp%oVQp)G'`?MF`mOoqUpekO7,!QVd6-p:LAFfVs3L#BkFri3-RD>h)nu5=nJ$:cfc``
%1,CHL<^+jjhU_=eXhDX3bl6eUQSYP9g%rqEp=7I4L&#.cVR!mX2Uf6dob+gobj(,YD!&T[5AN=Bo'D;'G&)8LA**[U%e.QmU[$h1
%m,u]4@CGs.^-,]G.HYFspNC"`-Kc-+QLYF\F4U'YlJ0Rdc-4u*O1"-*Ice4$p\mndFRE?brH>?NHA'Per@$F?r7'G]L&&sbVoa5U
%bM&$QQ`p)Jq:Fu42udd,k0AITH!fa\bO4QhldD+qo<$a"VhM[lb:a6l>ru7mGs-/]YkCf%=P/&1<aIcAH/D_C-^msAhfnG26>PSr
%JnCV!Sk\@=BcC9gc^lf@5!<+gDNpa['q1?45()$rcO/R^qQn??p$(I(p#p^AEGBW)d99l#/nT<WS1_N-?doieN6c>1gZR%V`Ttaa
%eRJFHUQSd$IG2f1e*#i:X/e9>PBhL1H^ZtJIf;1a^--q9.DMjJQR:Rnk=^^<#Nna'ERIt3[pOVjg08I"V2rZ8^+KFH)G<<g^Rcs^
%Ze=LK4.a)c?5i6dntrfZWLR4rSLWgkR%[KQ@<H=#FrQlIe_Rb^ou5nFQ+H',46gh1daW=q?W4#/pJ8/q+/Q'9]pMsL<bq#4m;;jg
%#OVJ;AlC4+LR.XDHZFkcXW:H1WR$!&H/mX6gUD3AfGE`8/,"Dgdafd@pCq:1?Y\[=oG>iUC&Q;3KaI_Vr6pu"I<aJqS*Xk<=Lar@
%):#3=@;P)t;o\@UhOIGF]Msh3cfQg#IQmMS[+0)uc&LN,Tm:a!G\3P6B?TEJkJOYas&h94B<Jaq&oR=,g\9:@Wci4o)mssl=[Z])
%ZZg.KJ,Qrr^Wkq`qr?taY$HANlFSj_pI]K`n*RiQRm*f5n(+\645[]KYk%2Ec^*`e+5SS&DbQsXID+E@rnq)4QV0h%etAFrVf0bd
%'g9=BZ*Lerdp+n:qm*n54FK#ldW1W%kK<.enbcDdHg1A*<FP4(CO_q&ro<"u[hjrU5NH1Qc55YMm(-8P(M>*khnH&(1"bctc*r\_
%(Mi2@<d3HHDloUZgd)QTXdA>%0,GGrf.U3L)dcq>e[P9[\f8uH?8h)Oo4huXF6Q]U@Pb1tB;a1]MO!LR2Z<<lFdBS19%imsLWf&K
%jlo5-qi#leRsBJ]4m0In=)r6F8gF'f[lKkW2[Tr>9KodEcgk4UHSp<*C;%_rS8Y"#4al3?Y$$+`c*]KWREXBOe#Vh=rS,WVqU5"N
%Bg$+Tc`J:=:1r0Oo9Bh*1T0-")_4Q_cGm#2ICsR6f4o3#Qfh[k)N4=@c)nN^ChE:^<+0G2a22*A[GnjD^L#Z5>eb`;[D)LK11.cN
%H?Sq(FXoO4pO2B&;^&pKh:ZVWR;6TMDcXQnKf=cW='sfhSTq2RBD4SIhnJm\p#I\A9+EZ%;JUX1DLC)cEMh\\d-\`=m/6S-af"Sh
%F)(P^B=3uImi3@7[%6ZrQ1XKrFa:Ba2:k([Sf3g)]9VQOfCgs])_68N?PRGHdmX)dhN.?qR=4JFS_W+Kq741gf)"*HQi;$QIV3TK
%-Jn,MZW#5p]8Hi6mU13P?TEAQ^0:gip<q-:b3neh_^06tpi(<=i;E*1hH^"-4n3gVa?FqGr+LS*G44Y#F`Djm?T=H9c@(#NI/NO(
%e[sk]dE;-=nb%T^Z?*FbF)j"Krr$pkGGmkbVqK7Oj3s(_eAQ(]@WhX_q>/;/pNm:S/+5-pG7#E-^-/kfXF3)ms7#-6Aq*LdV2LDX
%=5,Am*^*`1IB9NrD1>G:Re*0.ZHKGDMI4\25L7"kUd+%?8fp9I5-M/=8UniU6Si(MG*gOi*5=Sjr_bg->@2O)SG]sbrcmt@ABc3g
%AWDi'caIFcl`BUTC>mp;^=E4KYH$43^4'f3go"B>TA>j;:/9W+YP&L_p=B5To9Ft,rUZ64ao6QqrqrEsn$YuaRDNB2rD]`/h/\G9
%ZchgVG6Og?XIO[,oCOu!iU+DTR.JJrQ%KJ<qFBLRn+;&*iqhXL]4;i7]%fB;5.eIFf$[Xd?$57DJ#RI/<PE?-9)@_]Q.!;)j\M`<
%mPZPlhp),:f([).$^L2RbH2T4c?-UAIBo0HY++>7DYa,)41kEaXa67hpQa:OX658'b#`H?9m((!RAm@8W1U,E-07S_R?_L:hRmHu
%[B&oLkB0MPS#l'#SpdZk(=I,oR32.3<TD-aQ93JbZ]*L\Q2,IK31IB8Rr_LEcMt!NL:O=<(9iT59W_19!]U$W?*]c+b/t2oabf#D
%o612(\CCWb1RdIb`ia.4GM(ks[i2`T$Z1Q&./hIBmsC$%YA9c:F#Q-Q+8<rrea$qtn'o^pGLlC=HYd;n`h9aB8"TV,gM*!YV0^f&
%Ag#AR'Bbnt6Wa]U-^N+VZ+m_ejp*JSQ-4#*nQp!=j8sEbn()d^6HO#gorUd*MI7Fb2<nP5g-jgJL0DGR3[VD4oRQ?&IVnHI@0iF,
%Xgl6!]5*4[H.c*GpI0dRmZ,^6FbBU@q-"Nr1iP]oL=pcsb-_H1ng6#C^2ID>ac70LO0/Jf.CT=6G3,QXr1nhBl#.^D](2l#-?hYc
%eJ+a-NntF;OJ8T82XsG3/HZmu]V?@u>\[+L:&\Ipinq.eWX_ZH<NDuZ:/9:J?Kn:jWhrBgra&3k]Or[,32iJW':imgYbH`9.^e3"
%Paa/7r4V"ORs"%E;[g@=:!D8KiXR`rr2%SO=;c$[Zj/G7L0iIa_@Dj"WHRqQZYF%5qP+^=/i61Cg"DqDN..RFe0n=?grB#d]R`0N
%Qi7&;B&8iR`VtdK3X4f@lj5o\Tau,sboamjC<(?$pX7fr?IV$k[(R6!kJg*.osBRVgMM4+=7+.UeLd%J[m0c7C3-=B#Zq09,V%L7
%%Zp"1KJfD-Sh34E62u[-g5t2i/,_p\!frA;?&rE5JU$l,3.,H7^E7G\"82L5cJ1EYq__JY!t\#l*4FX;0oX3<4(,PN3q^co9&?bF
%8X'Gi%:/n1<Ze%\`+!e*,7nZ`^X@o)F5WN,[;,"-Ve.=`#PH+M:qq1(Ht8u>;7(7Lfg*(\cWX;Ca35%&j#;pKOY&D)kAG(irTuHH
%kS&TD"DL@T^;%SQ[.WHe41/h*E7Lme]KVN:,jVtf<-9DK?0&egVA[9M*,W,scYL@*Q=88W$j!H<KGlK50XKZ:j7i@c^iY,gpT"Kl
%.9M-[HZ)IR/&Y3LqI4kSEnniD.(YO1[oJ)1.p\BkfUDeQMGcq\Q=`AKJ@a758-Jgd[n7hP&bqqf1_5mk6cL25IE<IAZHkdRLAHP$
%DKLLi,LW9XPS.c4qNFE68#9GIO`mh-/on4Ci-X+,m=)b:YqCftc/Kb$<9YItn60Li'?tuhFS:r`IP-XU$ak$..s0u].pu/VD/b*O
%#6fi=BB,'Wp/nlYaqUS*^M#QTX*U>RA7I&;Ge'`O%]\hp="$G6l&RLjXQZnH8h0VnN29@mpsJ^kYYc<ecm9DY<.=]kW>8G'J+ZLA
%>pk%!_Q7m.eYG[>dEHi8N;/^G`pRD0ja8Orp=!6=H.5hb<=*:cDFdU05g-OR7=P8/78__e&A+='.%]kn#ZU(t]@APbf,:f[;=T`h
%1rNBfAYW0=X-s_@`=*fI.(f/rc[H%s_K/[fCDReTF.'e^Z:6<N6+%<JQU;oW7-X:Qh)^",%4N0(+2gT0%Q:ca&aDFLd/,Doqa6Tc
%"[j?VHDi[H^*Xk+mQ&QRaKSQUj:4T<eaO7.(gpu`<*Pc"\_aip7GNQK-:"`BcP1c1S[V4n?io=f,Zl4LXq`_1crtiX#tG"gd.>W<
%MCmK)'LI)o^E<dkA3(@HM'%,O<R0+[`Cd8rQ)+RrI0t&E]%Z%hL[!$QQWb-5hT\o,Ba34-k,Ka\4f37>.KbhLh%;D9Fh]-N`KLWC
%UJT_H.)OpWa^Z[$n2M;;-#&7^7;=0Ps#=3^jp,ppTO,+LkB4:Cah1@hd"amp&18RpIJp1spuB\NeZ3)[;$)0i*G@2N8TFG+<7ltI
%@QED?*PNXDeUBk82_r3X]Q;4HgUlSJ"`fc]88@+WFh:t.nYLQF(5@]*%lSL.XnB?+3i9G)4gs">kL>5pie>APTg1Ys>HQKQ1JTF>
%Ok3qBWRZporYerd4;/O37FepY-*actmL<]T=)QE$GQTp>=Y5^OFqDClFBA@bBG24'lE5bOrES(Pl*Y8pKmHmFE:sjGNQY![I>bTW
%`JG,fOTSQA6=)GjG+a!)pPPsAhl4!fW;;Jp["q]mO:YYMDHDGm#k@]NZf7:a5U26J\j/Qke4\>@h@X'oU"\jkF$s"AO8TOBYJ-BS
%2-l&!mb'2gjK4J,dNVTW#+cCAirFH<V@1+I(Mg6BOf2F>@m*f)9=GYuM!:b[2;@;B;1V[$)Rrl/08Q6K0TS[7#VM`joO%sQH02V/
%\Gdpc1Oc2u9#RMBkX;3X;1iHO5iW3o7!PqSe'f@/.dNFc9m__@;UP196SSP@*hF?H\^_lgSKI$]Ptlng97+PIHl2B99:k^IjCZ:]
%U..DuF+8IJp!I)[WU/1iSJn^<Je%FrC1)bY<CCQh)IGPacDY!G1TFq'khpSiGR+g(*^[Ck%B3];UMBpcQo;MHoZiPHG>cspR#(f%
%NXOeLHp^X\[F]>/rO''CII]`\Jp]N);uen?=kp("7NEUDk7%2TGLRYp&/&SfL4q6B`05)G96bu!5`_Z*+MLL]^!7\tNS=i/9Co_o
%#?A/mPcF#7bC+U?(2J0Yme(=S@UCdW>bg$c>LT&RqB\ED\K&gOdCCBdm+#ZHWB1Uh#Q4!am2S(DAT"si1V(q6)BF#L9]>@H(^p")
%]"rr@jS6\6Wjp(OIp5Z?ea/N4)"<<3d-^EPs3+AT4C#L(,t%joG@b$84atIZ4=N/XLjntM@_W^'"Yi0en^\V?'^s'[oRfr%EX!OE
%%TXZH_&6S46'meJs7PHF2Z5#k5oKO-P!u86),"%je=rX=)9(%r<!C&u-<X1c<<@(P)#c4+\MV+gN+!SN_XNb!6t!$Xd@%,7o(75.
%eoUmJ8(8H/c&Cd="uS(\UY$L$XGj80"B.+:Y"9b9<*(leV:uWM.b.[VYt/SZko!],)8_mP;_1'5KBcIcoP4oO\cH3h(:Am)QiKjc
%YQco$FIQYl&C&c;B#FOLQ3<sd%1?cP0dJI'C,d*KEL]Q/-M.MC2[l&[B!;P3c.Fuh<+c1gNJq^9(9]KH@["6WYA5"SeIgkQ1rE9)
%"DG$,%&5:(4ejF&-%W$j$Q:]*:LO]uQ!ou574l.VL1sL%1oY2<XT@'4TdQ-TC(8!;oYs;qZ"t87K#k9hN+4*(CoEp;71'UVkpRF/
%aO#]?Pn$pM9XX!6*L8FJN?AJi`DP/6%#Dk62>TQO8=\q[*k"/G0Qom_3e9'UrgQ>T`S5BO($Q3iKn@qa@!T#K*!>^CJ>lSJb?"7Q
%YQ]\$W<?TU/gM4sJ-6O6V8`S@(tWp90UMi/cT"UX9XDTD?-?0%2);,N?q<]V1]oZ*$6fc`+=3ddZtohTatSBj?=s93WFWUClk:)W
%Hc@lO6RFqZ%87dkMNBFmC''!+3_5S<l,'`cemPbAUR8X*7V%lg9t]$Wln?'>%^<]=JWqt7EHHIX1DkrLPMO%a(p$R<QtQ^`@)*4N
%=94O&J8pr;Xlk6'a=tH)W7DOH1UQNt38f5/0O^M+9BMA\csZuu)4$?+$(8s<K8!IVe4:%aOC>k7DD$JChrf.Y:gZb08"bDmO]i(0
%:5n+_3cjI4k\#sWBZ1]bQbEY6ZTjcX'Ig$akYb<=JsU&JMQ0jC8t_u#QRFO.4i9+D()8N31)Q4,$epdZ2RM_EhH-qc7CZEMM8g@@
%<>3Mj+>\%lY]=e]jgh'72cRScXn0+Wn;UZ_YNg^j.6p2g!Q9k,d5>1?"VQR0D(EiXphaH"M&2$%-D9.e41`pto$C#o?m&)^B!MpF
%J:Tf`N*-`\R33Occ&No'KZX(A"P-[Edk"#=l=>"#`$8(mEsuCnd=G6[6:J+4lCLW&Y](%^Ns)mC6)cc`1o:ON[2d.O*hm4RJfVQP
%1`I_^_+\(7*`[.o%Q$5u<!W[8<Rkt8YYE*@Yu[/f24@";6/][HO&X(Tq>*NcV]`RSk_sTa'DWa1]FG?dS$.:<o!`$jCF"iNAh&E,
%X2$jaLap6O5Hl^aU5s7I10YV'r"haSnUDQiP@Ft+UV6j%1Fuc")$6"R(#aum=OouQE1i:Xl`f*NLd%MG+P[Z6a5Fj562Io_[LOi/
%'IP)lYQiW#WfLg=&kpkI687>QBsnS<&m.X.05@^BS]`]m5t+%o[HAAFc3rPsa4W&kgE=-drjE9$=u]EsMQUueXeC!g25#=edf^(m
%5cA`Nd%i/U3Rf@P"8?u?:8inh_drQPoEi[=+iM$)#ecXG]aa&4k1E#>-*S9;&q!e\q$EaGl@DZ69T>u!cq+VCH`[(&<M-P]1Lent
%Jefh4$U^e.==/oQNEbusL[Zo6J/W*NP(<rG0FYmX"]XH2$Lq%oi7MQcg+!`'ad4ld*fF*7Qo`'p)Y1K?SHBX;Eh3VAPhuWYAd4$B
%>f8Z7Fa,\SYut:`8ba_qCH=l'5j&L7L-'QJ'9(WfdkmpF^C)`B)Qsu+Ou0n1?isdOdZDj8?kXJ5ci=iu_GQ+l,=A_Y;hB!t!GbRV
%`[hklC?_YR#Af!2AD3[pJ<IbGJ<Jcn,quSJNS-W,1=XBY*^C?!W[54\Q9'mC']Y4Io%/G?X]/Ou!B'(k/j^Q%4tnIMpAo4<b+Sek
%K?/V[g_d'\@=[oX$$$#<Z\`b?.VB1_+qt6I.GhKR/JZl45R]-"/ZoC/?nVmk!6%H@9EG;)<A@G4$5-j[kQ"ST0uMrX*JR0-)mK-<
%nMZ2)5p+Kt6jHQW!d8/^FiK#.<eN6,kp3h@Cm))Y0ZI/sN7C0ts/.9&#LYX4e&`sAUk>CG]P\\0Z=@&Fd"&!J`]FE?Rm7%R;E"=l
%!324%75M!C(7t[4C^,Fn5e<s'0PCm3l"2aOFV*taWk0:$%NGi_"R2>:T8E(u!$_P%CeK;$>o0L^a"=M#LP[I!:gnN(NWb&"Tiff<
%>>tq6$;%k4L4U-H@ZJ'A(pGfp2cu0AcP0'DbB4iu="4Q'"7e^,0n?-2Ea?jV]`\.MF!Cr*Bq)K:Y'0_'0Tgb)YX#'qCVks[;H/:'
%g&Okq$7<QiE#XBci-Z-o#O3R=_o;b:$R%l^'7i&Y<*Hog#s*St#e@,U0OrR071Z%L7`*g`",mp4Uc;t:^fDK'"lP-b"'DTtj/i>C
%'QTb\&l]ku9WO2.HmBOI)J98S9V>+SgQ/RH0Hb<kN"BeZEbPR`\.3er?lZC%3#2L1g8`!*^c%=%)5sP`VPr%\V%hCAhZr@",AkGP
%[PY6)TZ`Y'3ZJM')-2[5+:3iZ$WI0NTAY.H+[+T^/r#fZ\ht@<B,37#@]>pCps#l/Va24.B]L;""@GM`P']h&Cm0=HC<30k68_VU
%i^gil1sV?%oWWG.MPA'XXf3^38S3-)`4HSqUG0:c49-Y<_k\lq>V95/ZmuBh80jMjr0->a']*Ji!&^!\3]FAFWWYX\d7E]!#XeU]
%;[hC<)B=4S:e*l/M`CpXfD1$bCa[ne*'a8>8^5PWhOfZ7%,(RZ.gS10\A^aaObBJ4q$APn[Gq5og66-s`T0^EC-W];_,N-W@+6q;
%`i:hI<i?.TFj#HI?\SV8:c3V@<e*Jn#k.jf7>Luna?fl-#?1s)Q4X2'2GfWS7f:heeNt-K7)Dcr_;*0U5_)[I,q(HTa6)Z]%(3T%
%!.KrFBNtft<%9_d<Mo.;$%t0frM!K0Zm$pL#Y\OO\?tp9GAmSFm0F*U7\rZ\!P>aVK@^r*9f-u$Q.Hj>_'jnHTK1*5%'epPT[_OX
%DV17nit)JGA>k6NRKVD8TYh?R65d6GM0l2"-Wq#m6^f;*+@/;JBOI`:N=s_AiMPW#)I`dr#:qX7)%?T1L^ciU@>u2jZJ;Yu:ok7#
%aPeJUs13rb&ug,9L5kC/&FaCu,?1EK7C1Q'3MpAd"20C():/rZh^4GiVS[NcBh5-g4p]Pf>>)Q-8l.n`BF)2GCRn9E'og>#C7o@A
%W,MkK9+]K:CrHV`A(ckB`L&Ni)DomDrL)%uQs%oPH"&X9Dmj4G-WWSh$\kSW3afa3QAdsE,g]4B##Lp;[\HYb4.<%?6)MfsWBk=4
%2\LN?Kn/-WFqCU,"NhJDi,tD8bMX=X@LYj>Yu\*G&F-I"m3pIkJ-nmod^+O:$??o@!uV5!Wj)>-Q=P0CNDNa=Ad#+83rnABAgK3'
%n/SG_JGT1X3sl^]9EbhRgi"@GSSEeZU`*iu;b@H^jHM-78kT?iX$R]m8=Wcd$'n<Y"]1i)Db$J7*0AnDV+$?Il*I.XgH+aNW$!3J
%$W0f[[&!b]Q3#n3hGRIO/P0If.S;AC5t=+k3TNgK[00BNq4>HtXb$%TOnaqeDcs#e!,EBt$H(Gd)le'`rohV8m-(T=%uGd7JY1`[
%KVkDX:(M#3-2SHO6hD!O&epZE0Q>cER0;&*Z""RD(AZrk!_MB1KZ`:UK$p+(f27VYObF*?DisodQG0l`5]3NVoO[6LM*NqQ<\_/,
%K#KBoLeCQu+]&rg&l^P+L3BC.@;]I_3(bQ:dntcQ=X"MH7t/Tsq/%-!;l>3J"-l-Fn<KZ:.glq$6@JQETGV/N-?#RTTI9tH7[RjT
%G=W!9cZHnC'>//H^,nLi6P:d]]ce(9Rq#YB.2!=KC!l7&GV]o&5f"@b?>p9!"JIO<ON82=322QTJ3poTLj0Fr-tY&$dLKAYcH=L!
%\VO*K\o\\8M(IS,:<,32BKJ$c+K?ZLHCJ\a3o<7+%-k?(6;SUc$ReC.%5g)AO?`e3i97C]&`dW*M#>UR)QUXg17aYV[.KJPE>=HU
%0N'SqU(BcVM]`-p&mbY9b$g59fqiGH6;(L]fs(akqC8ZWU#T=^NZ1;1q&VlAb2&'Z"9"Yp6U+Pe8R&Yc\4F)@:Q$:\&WSpjMPdYr
%KRXLH"jS5e/fKC@=P=6GK@!46@7hZh*7:^h5T5_.LJD)r0bs1`$`Qn_:u&=>m1EGWkk(3-/7WJN,8=YK7*V.H)N'tWaL"$&/(N]<
%JdcY/04*Z6;:A2=dDsO&,==a*)QG*8aI'rE#BXV7d"ULe_ng*Khr1'J\EXn93=aYA5VL#L_uf*s(:/ZA84T;NCefSjAm5iQ0J6W>
%VV=Lu)P`uX9,=]`.4i=mQAsgM6r;#1Z\%f_JSM\:Cm1nSBI!`&#'1'8%;#q3)pD_8!=HHXG$gR;+9<aKjUA1tB]t=D_h@_1/6a9!
%)q$7oqElZ5"Zk%o_1a\tbnsLNPJ7Ru5s$2-U)st[Tp(MZ=h)q2CSIkh^14[PP(^LPNC^QK_=f!AQ"K'5DC0O#<"'Y[<F]3#O>bH'
%n/=Ir$[3h3c6,jF@uAhu)$p#;DJH/<2Nf'_X>IuE`@e'JHiqF)d)3k9%\sMT.to+rUtp#ud\_UH"9$R,eIFj?7-M,kh-$tWOe7I?
%Jq8G_Rb1oNOn4Js(u-G+6a<<%F:eeXU@/L&!TpM`q=4coC*SGUj@^14LglHOgsns$R%TE^:%3F6iVP;Ic(Q@a]kW\8jCCqS'lG2N
%1!&[\d9[K1po%k=E3C),aNLYplj^9#mR@gq'"HDkM(K5WN#$nGS%?B-6Vs!c8mo30VSB9V[%g>JY;EWX1scme^'BTY;CE5g)G,)`
%.V]l25L%-;6aBgErA)gD!NKX/"bK^Ejqjnb`8XR!:bu+FqeHPEB@XfE+CQF\L2!KqgIR^!0P8rQ4*;I]Z;e?8"[0og:k_##!7LYJ
%`gA+^J,.1oK(^b"@i5Vte*=eE!Au>nC[Yp^fg2:5-+"qbEeEh7TNS?E4?Qia:^1fSfbEV#N!?c:J+C'7_MJ^V#:"37@g*&eD7b<L
%EH#%9D'V4JN!_?E9/eQ9bic/DDh38*L^%6>5ffse"c@$kN60F[nY>N3S%q"0cpPaP2FaO]1m-u5cp=MmjKI,gN'O02T]1Eq:9A7J
%ENZ&u$2;\mQ]Pt:KElm1kL&0*3kf$FUFQ[X'agD4J8H1Q8@!KU0K.XG_d,6+k<$<pmTB$^7N[N!&<JYuTHh7%q&k2o'N3s/8o4`Y
%CniC'<S5A@QEI)o)G,)`2Yn,1PAfi&$K!*u-l@7?LFTg%#Y75H7,oE=FSL^nW(Kb(7-C?L#,-eD7heF>L^kh\0o[G?#adQohuQd]
%mc]eqa!f#+'B(TP8&<Wl]jlt=&7FDuhq^XJoSHlZXieJ#"r]U/=+Q2.`NQn1KU!lH3(!>37P'?G9frd(iD9nXEM/3ok_lMF:eH;S
%BaEp[i_]th_o'p,aEp8NPiN"dYb@FBqMrB[5,-cnn7)HqalB=!Yf%9Adh6O'W8r(u2;jQC=5HUlBSl8MBRg!ARhMejgf:2lBo<1r
%(u1A_//i[$Qpq]/7*!$;r*OQ,EY0=C)HdIu$k]jE*bIe=6%s]l5.F9o)jLn;!\`O;K1,fO.diD^=pN8>5ESRcV%OX4GedoO$8p1H
%_tV&l=9bR_Ock&:5_WnG"a$6,TGnK^8ZuVD$F3_-?t'7,#]VP%)\s3md"e@RTm^M!JAI%/`<@LuY8/'br9+_D71AkOn"S83FZ1ni
%FG;Dp*1McsMP0Ll)B*Q5\Zuo"L!0it07)*a`='X)$lab?61\Q\4p@AYXBM8L*!Aa"?qe'56-]ZJ`Es<VfSCITH,V+(;&dDlD@N^4
%lj6EBdo!g1)=O_^C+-uE#Ta,*gLD-D(BZ6!k/ZHpTMlOHX@k7;),6=V=H3fQk;.efo8[ZA<6dkl0Qc6?NeD9kAr,fhO`8La!L=p`
%QqOXCL*6>a!s4WNK$k!8%Kr$;dPQTUn\IBm9?dU(/ik8q$DO/ep[VLM`Ym>=c3A7g%#0sS(_NO1SJ,Y/qOia=6`?!%JJ";H'7EYg
%A3pHuA$H;Q3P&>jf;6G!Zm*D4J"k+4k^9oCm#P([-fc<(go&M3f1Ii<f*[`US'J_<>q;-')"eWMCSbLQ"00*cW8Rs7=THB':?ibc
%&qE=/Dd$9Zkan)3<"N-dZ>ce:2D'*SL9!Hr>j\aVCucub]2iYr>>OlZN5TKH*Q*"g,ZhJWI.2:^N&mN4o.uG9*Uut:MOl#/n9rrT
%$/EhB6S'E;JQl;a54An2[sD3NQC%1aVHA0%RA$CN<#5MsT4HN[N+H/*.Qj!e>o4DOB(RJg\Sg1,`KGQlqK;DIJ8XLbNN1Si!((T_
%Q^@Z_QtNn.5M^@Z.#In_pC8n/(OUeE`g<%B^O2*uW-?tBXml(ZD>8Ao3f7fT9:18#?/*=Cqd$2MqKBq%G&U?mZZN`Y\GfJ8P6p'D
%j6DX#UAQ;Erq=%?6cS#sjnEbKQeF(joFA'0r+=i'\<S1T=JUh7Whl%g]@CBDCIAi^7`og@%8&0@`EaM7l""*aGe4':S#r^IaesH9
%_b0n9m*!CiCo04)?XrdeAmZcl?g.".rAae<:\ioYp8*=(-))A(Q1P'3PrraReZ3'_qndR[RqZC+2.g3*p2u;[X6Z\d=f,'^')+&H
%UT;6Z!VSWq3!jEdkS`DC9*SUF9FYiQ$k8t14F$R#_5!EV\>,c8j=9\.r"Q<QpHq8$nP/dGU[>1f#!CXURHVj$>EWEh;uFRQ!;;2P
%*<fpm+f"YV@7t"VRgu86#Wq.cr7hhnq;MMGG&W*BcUQ&7@#0lGo$aop5=Za2R$1C7T>ViPX!XC]'\Ng=Ya.!q3nkU\KMES;Fu\hf
%!/o-<!05@*<'r>i.NTsY3^C'eV/^F>"NE7sQ6X_JWoG6JeWT)KJE;VeHkH_#S:Z-'$#9gG.Vq\28Y)$\UAIiJ_'l/"j`s1sVDt.<
%7!i3]LafEV[aT2"8]$8l'?JAGlTR9nol_#h:ds#783LCZ,4m67+dr>*eL&fXXNH(AA(Gdpi,V3:-s[:RS6,Z22'AXRA'7l2kYW?6
%5%#q-6fI5;iuQ&f[%Sg[:unZ3dH?2.Xn^na@[R'!,ko`Dg3XPN[9J*sRK9gsQo>$:0&0LE)N:e1(^@rB\=,*j<Q^V:oBFkDiLIe6
%$]RnU=t1g'&if:<Q=V/gRVbG1CQnjDT\jC?Km:mLNe3*iFFOVeQ6Kkm6%=U0&dlG9?jW6`)EJZ7mBUi;PsT#`7+buH,4&X;1$^mC
%_P:q0@QehD2!#N_(?_?*`j3+9_;e*&3U-3qU@Y>;7ErWt3Z>QinbfX9[XKV1M3]35%:Y.'B;e\sW/=+?<BTc/nIc<V,Jg,P!$#2t
%@&fLfVgn6D#^qd('oYnkWTXRp)SqAkY$oP.MJ3cD^QNNldA^ZN)[oA_=Km.M@AErJhCqp6I0U.qjHBm#`fX\c#UA,Co>-A/Z8=/c
%BG=hp,?/g>3<N`c_frUN"72I7)GM9"bmDa?r4[?*H!bQtg!Mh4jH\Hg4f.GZh&T*Ad_-"`Ep);(:.UW*Of9[dKSMK!L,B>1&&?ps
%0Er>$=O_N$Ore#1P(.Djos^!"AB"Yne5`?3]3@2R</g[XoqC_3MK":21Uc>`G21`1]1"faQgL['>)"eb;#m)ZE2M1q,qe;PXMAM(
%!5++8:)&s*J#?O;&Whk_=/:/*^_j"`q&Xbe9\Fcs!mHCSR2f&u3@9SF%%C0MKI_RMV5=>8ETEin.7X>87LZ7#ZnY7;F?r8,89B\i
%)M%beCe)=X:dHnE.0kYc,@,BB:MD_sdL8U'@0T?1U1'F6\'g5_$`9+sB[d'$a.6`Lrt;YnH3,l(NS,Z57ZT3>3Tr-''jE*1'GmJ8
%-lc3W)l@@4l)S2SE(!nW/VHui`@.R*K5%K2N5INI'2++?\7+LFIgCpn=pU.MRKW=5!;#&DRNdSb0UiWn#^2:J#'$B3dQqUd=rp_?
%!m2Qs7G<kh18T]_#c375@&+LNCIT\IHg[%D2,)\5R=ns8$RRN!Bn1!K[B/#tQ=F?,(8c6d>2P3Y6WDj!bQ:L2bR'>P#f20@N902J
%Q]j/fPY;dM.L[Wi$GZdc8.FZO<ML[)W\(/&"=$eb269c-$)naGM$N,[7F;@RN>o]1=@FN"^oE88TfoVp_`*r2Kc^?955Ko)l.6$M
%Jj"_kcsmI<$3o*k*4(T*F[43^+_hdKm77b7N#t;s'qbD67f8BqW,-5dnnN;>Yo']`6%c"Kb"IS"A07-_recn)12i;j12i;k@a3qi
%<(?E8+_tI&WlB\[ADRB"0;``R_,MkNBpopA!7j87C6<ZbOMk?KYfp;sE%k/ohj]oDR?6jI]05#&`h#DH%Ojjp>4B1)9OZ,Q9frO-
%PI8?YRiA*YGh/$SYdEoKWd4o*$Gd<TK_ZW_;s=M88KV.<'+@pN.WHjS,]P4=/9<3G*,m=M3=4iQgtT=Ng^]*KPW9YQf\t&q*"$aN
%k]eX1[^9W+ggQ:P%#aCRF`*SHj*=Tj'GAIO]!c%/mAY>P)\iu!:VhRkjP)<N\"qN?!LOj[[Na#V#2hplPJYJ^UCrsMJc&@XM"V='
%,0:CtP8NocE^DJ(Lnuf_H_g3X?49292"#Td-smp*K="=98#DH=9$oI*k,DF\qfH/'P5Wei%g8Y[adB5,A-jG.*EBu3Z52G5><iX&
%fp(=>EI;ttXlq+XJnT/%^?&n8CXNI8b('M\j;I]cZnOc(AX#J2I%T(%VONLN6SKk]Lt@K]JJBd'rO.533pmoH',0OYL1/9sJQ4/;
%La,iR$+kau0mT'&%#K#cKZFEb52,dLQ[fD_qcd_7<"K/n+'6h4):ArdS'E\j0WGa]SP[bX#h<@pCs]G0\H_E)6d`XqUTK8!%!\,8
%M[^($Cn_#;&NQX50V6Ku:.fC1O/Oi)!f!9:@JS!UnY&?1-<4g%'i8SNNmYRL6S_@-M,tUGr=Nj9_80NUQGTKN[?g^On^/2Y<(k+2
%n3J*;c,(,B0bMfTS;tl#U5.DYCf7f3OLHZ::kB],#"<#'%tdNGQkq<NcllE0%uM,3oIB;g@"`OIr>U8I`#TBE\[=#U1%,8%BcBDq
%c]D'L)sq%)@\=ac;acFc1/H2Ms#ou'<BB]$3t7Eb*au(f#\JuN-^^]9(O9)M+$i.-4!b\5Z=J^Ka&34^#(^pN7_l\BKi7kY^11U#
%3T=!ck$1qdOTHVc4r?DYX_.(@SD++HRZur76U%XY9@Dn/;EbS.oO1o@\jT/s15<QoN'8.p$J(Q;#$ZL`p61'+j8PC^KI(+^_bZFi
%C9.hRG[O>U2MF0De9&pk_L`4b+,j>M%,X6X5)nlm3s&Vf</m1L)73jG&%;d?Rc+TNn45LAOY0$W)6sY,:BT`cVfI#pJF:1T6O+(#
%'GGuE&MQiQ``[j^q2muLE"g,#X31_dGZ%?Dli;j2R4<(H4.,+I/T%_6J1kjX!XsUfIL(ZGV0k&LbWlU#Jr`E5L)r!(oK/BW(Z"%1
%Gc';9S8]R<8*Agp6@Pkk6d()BPi-eKc><U;ajMSi4dbVi)]<5fYpfSeC]HAU='P[DD?r_L?RH:$'<7.GK*d)X*X&lc7`Rju(uNl]
%#X[:.^h)IM1\?\Gkk5^[79Yj^U/M6#.4E"2&BZ$O@'k0^)eCN1-\Z!;@",PBK;_NR\"Vi2nsj/!.YI1I#-XM<4\;H3&4G=dqkO6L
%18,jJ(aT@gi'AQ42TRt^fU_Vj%VeY.cG6uo>&*4O;kPF*RtUGqGfhImc4EDB'YP$MOXUd6_;LGU=Gf40N:uHe(7elg[sF.*7@mqB
%RAA6,+MEe<!)+cgM@>]I<W^I./;*n0U@SNKCP:jF"UL.91!>qugEp2i18!3PWG,,'#,n.9J<jB%?kV!^@!P@UE%kJ>DF#6eS.sFJ
%=rWl.3k6m[/3i+&mf3HRBN\6F_cC<87(3f]_T`,oiZWki"+@dJ/MSiKM]I6$r!!bETYut#*M`AFgJLYdi/l5.d"(s;csT:2THQ+I
%J4"c4K2Hmq"[jC;YuJpSDGqfG0YWXdMg:-"NF9m9&Rc6e\.&(NJH7Aah(085XIJqp4D61fLJBW,:Ugcq*H1Pd$_Oe^iPou/)F,7Y
%_Wt;<7l<A#>7N5_;%e$KTrZH2WE,GrWG:+1m.>7m^jkrmS;fD3/hELY#7W?`5V#4.5unBR6?+\JM#nTs$0hVa5_YI1,_O+UGT1c^
%gSfeR2:5if$R:C'3ss<V07e7>_r+AQ$3p6]%dUL&As$"f%7,AR0d3YG(#0Q+OC<GWl#fVD@b[#G6C?XR?=s7=0b9u:@k.[,fcfTp
%BWP$\*mT\cFAnW]!0ihl.Y(EfPV?4I,4C<Y&[iq#7$mK71Wi(Hk)Z>rdXN4f<'*[bk;KKGVE22+FYsoCNN3<@lc:ue*r*8fk;I3K
%l5CtqZ8tQ?"G]CDM<&IcXeP55QEWdBFL.*DG*':12uQ3PV^nm>BIb5W6L#^R6L#1C+@3ZpM$0)3WW<8lBg%iR.'X$R[o>^S,@O4X
%9IBK$3=UgNhCS@NO7".rgE'T=LtT\*g["7`(@Kg,p:"]rG)PJLk,r"SmLAN1F9L"YmLUqC?*Q+)S(\<oQt"4V!0-6ZH8JSkO21Na
%$6MnH<pAU&?ZQRjLa#LY[M`OU,sZ$##5F?@mW@N4m?E:`S?<V,(GbrD]?5,_W,[0d?+[B_S$eAajga.'Qp'E2h.+/th6kkYGH0]3
%V.4\P]Crcs[_F'!b&R=A1#)'"]?1/T_]G9oPD*Zr$4`F7`l[M#/A`iB?Ip`bIH>n3d'Qr?\hWJPV9?6_f.j6a?,/&"'#J0[-\5i0
%-\HgO6jB]EQ:sj*i@IB!>n!*8V+>AJ,1iY/$!WR#'!$qY;i0$6hMdJ:"YV0\/kaok[cl;8E(S5,Z24:)ErboZ`HDq8YSFNf1m?%U
%#XPo:3mfHpRnMtYf:2$5/1TX<e%<;<J_^Z=ZrEWMZPsb6(RPL`J9't+2F&uc.c7025]kJN\4Jl;i^k!"ODR&d`LBZ5F^h"Z*JS$5
%W'AC@Zn:Kj9HOt;(5c'FYUmj*$"$37J20KINJ&G%S%u2b.ATDY[j07=LhKgCPbI&(FACJ]^kG3>dA1N!LUB+hA?&hBH*!fT$d@mr
%cD5`,:]RImE$k";J6!=ffWm%KDa*kj1GMKRfsg)tDP;!n#3Lcnc)>oXKE9kRT]r>lC>9`4dM\M.-<=kl,fCV/J8meid3a,[g:nV`
%^*6Ggd/51'$nm1_\ZZk8,q[=G"m3#.Uk6>VX3n>;iTk0idVTP(,9_ke-Eqp;XV"rXLi)hsC7tID,ZESiH)8o)crGn\a>k@b+Wh1%
%CgIe"[c#D<#/]X-OPc+Hh#)k(n_\.=h]T6L=7\0,TcV;kf9KK9NP\(q7;g.fAld]I6>r)kOec,]p,s%#G[5nAGob5p)$\CnM,ua"
%-_0/'+67Tu5!$Q46PlOm4k)@h[&eg_jppjh_1fIO[m?1NMJ(t*W^)4mLHHajJjf#s'Wh562;W7CM@mEbl&KH$G>)2=5qWdJiIK_%
%Cgm>`\iQ-4QjFZT/XR1&!X=7,GFdVsJZ4l6-N_.:EcK>Z65>K'mSS892']'J#GY@SqM;-0.+PiMd%eMoE4fhGr3QkcJPed'crS5m
%M&N4n$9^sJMPcSrL^qYql>JES8b]#JdP33I3l*aKdDrdnG:#s,n'4UmgB-SHl9*,XR2fQ5T`_1]Se=/W8%C3[<SLJB>T(G1#1*\Y
%/b6U.cj?K]]%3,X@\Lj!!MRa+\foM;Wt%s,gN8beGq1Vj6H,/%GTSLl#aK&RV4>^QFXGs;@2[/An;&<a$O/<&2kpcId(f"1.;nGK
%6?E@`5iI9K%8EMDLc9$'-Wl$Kh/aKci]=JHWU-?KMj,J0W75pU;Kn^0mO@q#4JMsnBV5A?D_3Z]FhY5NKkCMt\mJ^<E3t`XkU@IS
%K_&,G7c,eU)@_TpkL5<q:#RB)_.]-L\E.$4lEE\n&S!_.]McB^?\`!8E:+K#[t/FAesu487fY/39ICKl.T1LEj!s$<G:1>JZ_^&"
%FEnI(?H9DEW-B>@`U=Vl)7So$l7@D3XH!^HcC8S.%[-n4\LB:Qdu5(0C.[3qNW(kKnJ_VYee'9'q3_K1Rd>[KX(L[>=V8V_n=-=9
%O.j1I0m(@m%T/J"FCDEGG#q'1il:@6SYH!8647q5MSC;0n1_P\5t_4<P3?'e*1KY]fq=9^8^'T"!<p,rOYR&?kX+j-Q@A[`KeeCI
%4d]q^'j!U=N_"AO:e`8-gq[,+%%cZ((u.pW[UW6&CgcuQZ#$;ti?ZRXbilWXQATCq?Rb3"ZER@Cn'o?%iRC'&Y3;/T">c<J*8#>D
%9&7Ft%2e-7e7&l/:T91P&j$deJFPumV3XDBQgTV+0&S#d\h33D>OA?sQAHF1,8L\fL_XN1Q>+2;XrtA`l_g\t_>XEO':Dek"PtK%
%Mb4ij-,h_%'*9Wl.ODH63aODaKGoKeK!(YRFSh.Z`*uTh>fpaKE06lQRt_LZHAp2SLca!q&?nn=](IqX-(bb4l3Iab`:[u(qreo(
%><i6oV[KP>IPmXFMr.%m0*cl3`(?Z3L\qL(J!m9oGV"K[75<'^Gee)!9HJfde;"q&q(:[[!M.#Nr?CXf44jR(jHTbQ$9[7DNlGR1
%TP+mhXGL/f6,Vd(^:RV?qd>Rn,bglLl[Y0#VBa\P<8k`fqqR8s;2%BKqC,_UK?`Ho<YYQHE0ZfC8[ki9.<dW_&-?Hn2T.PSc\FBK
%:@M'h.Ug^*AIM]K2U?JbpU!E4U#p<WAN\Je-HXF]F=<E#G9`:'dKP1W](:tE"<G-8*32>c%M'(LaVZ1YVtI+t)F.M^P^f':+?boA
%>EbHjJ"6hXFZ1"n?P/l(]E!Ka2C`0D\k4n\?m$EKF+Bi+\oWT?G?rDnhBHSfEC5M\WT*OgBY4h)?)RT70eN4-5V[iRi2&\(7?A[f
%g_*$42PQMg!HL5s/Y/fB(UJY1NgsHHEZo?E?J\+p:10?I:-fV#blh,KCnnd%*"t2'6%bt3d5<O?R,#!I_sc_TpTH3:11&7]=+::X
%=-+QGK8XIQ:)4"V;?06h42E++G9G^8#(s?(h\C'=/@ks0M/O8lIlBM_DLWCOl=0A..81e!&,Mj7D\QTD>=X?1FgU1mJPK9!UIsZV
%oS4a:3kQac!p(e$.%1r*4J\JR5=G__j7a3r2!"[Ln,7Ppfo7PfG6@FWl>^.1-i'C!T=4&s#:LG_fYDeT03Xeb_;3O+,IQKKDk7V.
%174K[<VNLc1UDE3!OqrJrlAV\O:2=<:=O:T(Kj5&s#cW8DtQmHNE>%T4JmGkqVNkiI0Ija<k+s!<X6=0\Zb=ZdASV'^dChNo+AG0
%`4.'/<(Qb/J+V1<0N#W/,/s!/m-J5Qn).%pA&1"/1H/bWQ7q/:q6!6&`*.<r/pu>(&1b`*)c=a/cuQnnUiJ_Z@e?tl,(MPLRDanJ
%#mF=2,!9/k9^eid5@Et$&?XZq4g#N)Q(*#*O3C^-pmtVRk,,'H/IqMH]F58(TN]hd'gcZB0X%d&&X*L%j]]bIDjD7+Qk>#,,eb"_
%L&AG&N\o%%mq,7L!"Uo'_@#TXVn"'P3r<'9;Bhoh+#U4t-Bg/<:5JrqJAkY@HmakVjM>oeYp:jC>u+B@)a8$L9<6fK;3-;64HDaQ
%5r=0,K@E]^gC1_SPX/_pR33f4P+62^W74oIGrOTt_d,c"$qMG$_KQhl9PQ)P7&q$d7'T3^XTd:BFXJ\,"D\Rf&6V4d9@O5])W%aL
%Wf9%_b.;[OUsNM"Yn.Tt;Hcn0B1%BI2W0ZePTqj5&iP3_`UDMIjci?(7S+#&o"mKa\_R0h4.<>Qih;gK=HH0:+W:iV5u=Q\$0N7;
%ctRqD[9)>IF*'bp#&82_l/m8/3CuB/^fc!NB'p08I])OW!nRun>fb=;(g%H8#*VE5SE'qqZK6Sf#+F>W<VUqO23/\0CX?`<J^I1^
%F,TAi4;ZMi4]7`G@Q+^QJNJT\L*n^OVQVT"j!HpG8_pjUfPFko)8@dDqR)s[(;\fD_u+HZ!o;3/djXjN!qn_b!,Ii965:fO]hSf7
%b"N)AW(SJBb;_C6R^<#Taarm6d6+rb\E%b=D=B5GO?"hkZ)7j#!j=BCk6JCqOjQF($05a(o'Fkm-c_$B[)o>O2uO..i+U%ZBC)G@
%hf%eb9>#6K.f;q!dn8=`Ao4WFRfi45BTF?SV9jXK#XO3U@i'%l>.J`2NA\4:kRWEW!b>Hke/)%-XWh:LG_tiSZ$1r1if%5b:kQ0U
%S$#tJW:1YB0WSG.@;(??GH@.&k0cqE&$lR(P#p6tNr=B-#mR9Y^b^*]iIdAlk=:n\@PC.+q%[j*C0WgNYHJs@?-LGPL,r!+\>F%>
%fA2&\9XpRQ>ZJAh+&^/)_.goY$ll>3l5YmRiZ&m6CnJ@^1^o)P7eHk@(R_,$.l3/"hX(@+WK23(m3N[KaL`=56HIfp@Z42DSj)/\
%L<pGl;/SE5G!a/>HN\,nVUnYI_Hm`kd@Lk\LLAZkFYc_63%T9L@l_m,-#9D"=fKqR9FJ;+fIo0HR?^XpFV14m0UVeOmFHj9(@Gcb
%A,pf`R[7UU:pW$rT-Jdm`9$J*f2"K#Gj`(b@e?=&VrR7#TaLq9A;`Q8&"%-1TR3_D-.l^M8]"l).W(=3650JRF>>$$P&AF3Ni#08
%.q:ZNp%(.,p(a`2HD(R;hf(N,]_KqPn'n7(c8rPbEG%buFJ7;?n%V'\o44?sV"MX^L=;Q<JW->oBEI$Q=jahu&*@RcQqT:(&3Wn0
%6]XQ'Fa3-/4_AeNTL5D:giPBN!]CS0l_j`XDU*ZQ$+*]0M-#=)$Jis`j/h7;lO]?ePQg]*:Y5WpNt@.,>a9Dck74@R&a'\uJkJ3h
%[ZP+)?sgkrJY$a!@Mg@#m6-2,Jf>5dQU]OkV>5WVkFgQ1<Cgg<>l#9Z*j-g/lD)?n)K%['i+=soKR&L=PAm,B.*rKcb`g7H$J-e\
%1V)a*OUNaBLjF&el=dgsT^/qPgR/q[)K>\E0Zai:NIdNu>jLo#OB<gq#9M"7&k:mm:JB&VbRP6/V5LjOpUS;;0pb\\&osm@Nguct
%Ag?mPYor(7n6LMqkGk]8)PGoRJqC<065]OI;\s'2"Y;,@mb'9V\IfRCb60io(adP`P=#S8>]=r5]1O+!U%%%;b(ee"\^3Ar5=^[Z
%bl34Pq(9JuA3<(W/R5nW3c*^]L83k8+G%PsP"/"kp8C<=\s)W;^e?VmaBei$`A@YnT#/^oMDD<1bX568^*h8p>kfim'mZPrr,C5L
%$j9o>M&Iogabe<,0\k34X6laIfmA=>d\h_V+?bYTa#!=SE,Slnj)u/Q@[Zs.gp`U6U[b!uI7,!/(T16_E.i*]ANI'!SJ]iA^d/!=
%'r]?\]_i?J7_2]0GU6I3U^C+o3IV>KgkPlR`1[dSX>8^q3SH<+HY_M`,n>\*"VQNt\^/;CBgK7tXl>P#W4dpig6+I=OVsM(0.YE=
%80!XZms=KYa]RP!g!b*.@`p1;aCno29b1SAG75I24_d5DUrf[NNGm,]@PH`QL>-dk_\&Thi]+D3V%$3Z[1h4%6ek5\P[J&kC#+G7
%]=iVZK)RTE4BKeCCu$L'OJE=4DKsbsN1KEGHbqKM9:Y_i!J\btjVe1XlX<54m<6^WKPQN=o@h;sW`;6!fC\oYD?&tpLtH3Io@E/'
%$uDFTb_FCZV['Mt%r\![pi/Op>,TDWD`W?YRT;R5`oIBL4:3r)$[3"hWT2d0/e@m:d01'uo0M);>YWUdX'ebc</#BPe(`f"!=P)*
%]]Nq0D=DV"Wj!hSiBGW+WuH?*X=AYn06eocO_O:&_,BrXL9:%?m&$]F$2(l%:c`/m8RP\5m;9]kl4!#Mnn=9'rpSQ-@=!=n@h6P<
%5X:UrNe+1'Ba3t(Vs/,5348&DW+"=X#Nho4Js@sNagn#l'=7PID:"(&<T.&1BjhW,"EigSqgA%5Vsci"R/6ULfpMU='\`[/nHInE
%Z=a<k]R1imHu$SW%AuCb3cMu%ZN00o,LR_!k7EsaCGbVj(fA]>,h);;dlWToSq/4;:Uj:AraB&k3D[.Ns.c+R!^.+%]s:BE\e`3d
%$r'L0Ps@4sju)/81N_^3dF11<"LX3!s0@r9>1%1e(k;DFEO)S[E]ceD<Vqo'SJi!3Q%6d7aA#rDFNMp)8j_`W8+/SR>Z&kE-dJMI
%L=4&dgMFYkZLk`!h0?EOUI6O,;$ndq<P;Z-oR=X=eLMSDC@OLdg<k6X"h@9gG&q*!d^TYNkD;`iJcSNqOcVgB<i&W.)X\(dcag"o
%%gI2uLUMIRafW>MoA1]XkSn"C@1K2sa.8e<YqML=HrY4\@3#($-%]:8)#uUm()Fni!^i/JI=R?GRuZ?N-s13E1e9BL>^OWiKj[[@
%&dl!%rWA@]>OG(k(FQ30pe[B5jhPF*6D0N%_rmfHT&+fGp4LZ/e#fN8naK\n"j0!)USLbG[4_Yt5W:YlSJYX4QtTn)o5KLm#;PJh
%]tF6,5K%00?RRqr(4r;2q8'UK&lT?-GU*O1K#luHlBQ&N.Ut\1<[Ep2nsG>9,74+J4h\=N`MPZ_.#h*@#T\ia,f96\H8;)D(cb4c
%&^3`#>TG.%gso,HCu+5RNe/N&"je[RJN"U_qsjpNSCT,KLT3h-?r?3EAt?@rlRR&j8S3@Pj5(CfKTi4e^6*L2#OPNU9O'9JnWR4)
%H1+OL3#:bElcGSckVrD@=XmPsk#B[O;9WIYVM5Ne\u8[*+>2[kP&aN<pKh`2j\#BHT6D@`9-OTQ\<$6q_C;l5i"-C3KfC@:YYX/.
%OHo9LEgFSm(H-"IG=:<Z^("%0LKn:nH?sMs&sknI'87C.-=#Rcdi\*C:1N+Lh"JT)5o>\g_;U-#N[@0BQ4YP0(pA^%=#rIIh7WJA
%E"!IOP?`D!/:i_AhVWnT:Z>*b5I+n[=M)M>a<]fcbe&hG24C3#kEh4cII6TtRW)Wl!iN"4aUOBh,AKi9nm'[j3Np@\2AAPM93B;e
%#R3bS`:;Pp1^F93[A3Kq.PtEKaIh^kcn2*RH:X2p'HY8L7Sj4mDht_%Q3_o(4HV&N^`h+L)12^[*nQG/?,:LS_(<WaE\8S$U+:e>
%&U65W.EtBi39Zs9A1APT.T@<IFG[+smLsU#5OPWk'7/-T]C.-WkI@>>"E=R^TX[a[,ZQfD-%2"XB'AaK42nFZqjth1-(Hp%B(a,U
%mN`4;$F6R7qK^t\]Ui.%QgoRIW]nBs-Y@/;Q"f`6l\g/8_Vg7W9B!"*Gu%,BTKQm@`8G>Nb!^7(=HASWCg[D9d9SUk8e*piI9:DE
%O>$M`%OJjCkA\=*DFN$E_6iBf(aJNpc0#bO"uQ1]"$__-bH$TDr>WTo1@bp'Jf!F8GF/qKgD;RL8s'[=W;%3-Jmoa?0daf[*4tH_
%qfG8Id=JWo,T`g0cA`o)rV8$>8%P(qhSc/SLN/pdT6(<NGo"(K,,BK[hq8XM_2ReUFOqN8c]:4N=unBFBi?)AE)prO5mK.IR'rkT
%K3@<(n>8;P>pC9dfTBNooKh1UL$s!0.<7Ib:SRHjh*6n+U41`EpY,4:e">OGoF'@TQXO5@o1=:rn&d^],=<<5]Il"G2OMm`M=0)-
%i:43V7oLkf.p;90&dd:##9<m6bMM*mN:ngTC6(g(LfQ`Uj>TF%;!g9[OOI?ZGasXE4C-pPca^]:=aR;GIst&>pY'[t!Yb;IHjM03
%.Pl6]M%mZR+l?V#2qV$*Kl5%DiVE"V7nZA7.rEE3&i<p>Qj7WkQ$;=HQrU!iDouV;3MP2f)>R9'+/qs':90m[b#Dc\j$NS8kt9sl
%UQq12l)*^kDe]'EV5W-^8YWFJm>8L!h'XK-R<V)/A8O#q4VQYZa2%:^c]4;hbZEN*-\2&mVX6Z;oV>b3%;*"\_OL69FH1&.@n(n^
%dYDQJ%\P#DZhE<GOAL?%F@BMRkVi5I[--08kI3;HP4h0&(b347&#*W,]kq9cQZ=UGd9n](4VQYZa2%:^c]4;hbZEN*#K]'4CcgL)
%.%%NJ4U/7H1Z;&T$p$m8qlqB\#jERnBL[T2SBfi@J104;h*0)PQ8uMPZ4VN6o]N\?rVB!,=$,L!(pV@3+7_R4FZ,PdcIQsbfm;L.
%-Rt!0MYJ*7f@`-m5rpd@.o")5mJ`n0S\*9QB0%tTlYa,]h.UZ9dFql?(Q6=bgR4er/I6FsG(L;S_-:m^IQ!&=Xd*mICU=FgZnB.W
%Nr,$>gP*adm28U0Q7jrMf[&*S>(MA0!h.cYkUFA3=Q;<p!KAbZg@j;ATkVh\BiQ[oOjQ<JjkjGN*r>Yd*Ot1r(-E<%Zj4dLYA_9F
%+[9?J?5eYUd(G.i2:B9=KAbs&N=)FpB#I_!6))=K+7goOZUo%QRP^C3apIN/C#GsYZR;MaCWMuGcM+f/NcCL7%;,;(.]HXcr*,[A
%L0hUQ>TjU7rEqAPnoV/S^>[\((.0`>i+QQoNc<Ot/h<cLV\1/U5Fbb>1LdDOL`j\9CEH"C+gY`SP6S@>3T46s%6Tnhp10D)%=-FG
%q>U*80i$2n_5psL-$?8TIgbFrlK)6?-WIO<pLNLLaaI(Xg\`Ed00d7%ZLed:=hFsnp!UWSM0eJ>KtJk()6q`8`aFAb;-$(m@,bqL
%@R`!e]]l8HV\77GN3]Q/DgFG$h`a*@Bq&@pe]Y"hmdsDjS`-B2lD]1RO75uhQT`2de^b[V>'Y8to20Mlme7A!1Kq?I)kZVK6h7NY
%34toLN!kgX=K@]&SgrekgojR41Ld,E#Z7c[T,n/o:lB[a$aX"siE[rC4B-"eZrG9YfkTVpJ,AFHVepH_7OrC&FfUe?^iAV?Q#cW[
%[nlUR0=cg@^3n&a2eAKI[-Qi<SuZOD:._b8C_pB7=hU?pje>Dqf.X]n3Gj)!bj=QR=YC4HPmF0FP393:c&C<?,rfd_3BbLjo=R#m
%0WUNRhY#=4;i,*^7bQ@S2nbaMD]YJ01een4lK)#D9.sYPBQ5I7\efrb<L!Wd$cIX>:_Oa,0`a\P\L^unXZ]3X/W&'&A/AYc&ZW5r
%MfJCF[#r/R$'ULP3/$o?gB(9$?"L(3,7E`dZ-``u!0mH*^dZ?#R'=[T=Jk-/3:`\-g:!Y-@qJAeg44mG$t2O09f!6ObQ'H:fhmr`
%OG-\+Jn1ni"tq^Z7),>Ocqh'..ut+QJkZ$G;Sm`)khDJ`TFfl=kZF3HdD7l7)"4h\Nc[+4g9DIQW\TsU&CkU56_r$U)!QhbGX8-1
%&M[(<+T4$?.j`m'n>J:Eltpu,m,%r"n(a&7NXVfR,Y$%32j##'MA5SsXJ<.5!]km7b:Z[h1:SO8S:Zn,&'P=gJt"tPD5e0tKCMKK
%T7uM;8XgC%>&*#iV(da.GKr_^G,\:8p/Xn-VN;4t9hia'Ok]S,88T9_hNPeJV<"R0@18j%d_;;LkYKS?XN^5\9.$=`9.l`&$;Nf^
%O`"?[BUhJff(F*;r/_#-BrT(1Q5\CjWJ-,u+Mk0#3Gno7>csls[p"Yk^d^rL9hc4L/u4/t"n6c":"JrI0VbKL[VBR9Tr(AlcMlJg
%%!>*UbU8g1RO?+$;H#8>[cZr&*>q9-b\&Q#_;lPb;*V1WS!Ft;l4-@1r%8LRjlXEO8TBO?(n/)dWGCGk8lj<nAi)Q[fq<fPiW!>s
%.`<HVjIrnX'[gtnf_-%*'&l?U>SV;#5_$4*/_-l`PAn+J\_5:^2etotR\'NV^\kJJ`1UV!ZI4A.CBQ[[A0N("'9QuTALW^LcCf23
%D\V;"@7hUD:6;KoWSA$M_F3`m,_enjf7$2@QugDikXaF2r.QC",[Z'(EFWD[4EcT)(p6&7Jd#ic3+Kc,_;tepjML8)r`i)5?$_r2
%C.N,P73YbI*W`e\4H3+iAILL2!1U]%c4X]HHPWnR%I?YfE2h,u+$Fg(1K+r8b^u395#!@uL<!m.1H)R"_'3QZ<!JUmMu%$\>R6-A
%:K^ned*HJt6Nf+ef6_nPk(ZBrJf_-1]OD<hXu["+\#K\k)%Kt[/4gHl.Pj#t5m.@Pe4dGqoOO?T>Su@7VLs42(=SBdADQdK"[!L"
%;/&9Pl_KAd,X$1BEamTi4i?`+3Z>2Pi+&$)l7ib53#$WIW]86pm7Qk88(C&k1`M'8EQml^S[lPC>sp\S8`mo7/9E*!Nh5*0Zf]:3
%l<Xn3"?f=a7^]'2#MSR(@*lUl1Qd@'8eYcEB-29(mB_.pP\(nnhEmK=r9FP:aggS%8](.#b!NgYDnR"-OW77e-g,C[4%lP7<c_RI
%\ALssdb"Q9;:/Gj51VRuZk^*_6pqn:U06,oYUOWe@hBbmarCs0LBa)#ZHjHQ8-bD8IRY+E4spT]2'dbE-&sC0f*?^hT8Z>,Y6G!;
%6[o46'mDM`3MN(kGa='s94<0mJM,;k%!%[5MZ&M,J9@=i9So/T*(V>dBoq<5]GOde3D^n'f>\IXEgrF'(CN2/pkJPg$@Ic>3Q^6b
%1m!6(@!H>RX?6%0&e\YfqQ!dN5a;S,T,?*0;ah.olF7`S3kJ^,+CFnMqQ<<Hf8/R-kElMG\NuH(I1o=!0,kj7(b=)`,;?2*/fT?j
%YcG?e?T1tdd&?eShEpcKS$LB7rOSab0%7e0m+8Z)<RV:3qqul_:hA^=N#AEa\3s,s3]4B6(o$(>mgmnlmfcU(:^Kbd"G2R?8kSmU
%VlQlZ\qh7gn[>kj^Su'*`!#QBC^-5QpeUqgYHte5p"_0Y@)9i!q.A0(JBnF9X@PU:rq5ked/Ns^*.WN`($O4+o$R?[q@EVu]:Zf$
%r;BF+s35K]l$$M6r6lbegXk?]ju6(A%t=8Ns'$-?NYe;`:\]u7j&i4kU_b*N0>IPSTDq>%"l&)-dY%SqGJF/rs70fNZ5sn-Mg_K$
%kV`D+/$Jd@a$9O]GCTIeY2+U'fAHKQkgP%]O+6s(e(<LWetbm-IeQWfr6$12g]-74qZ$PAs-rn>^C*9lmJNH#Ol,PSKSP'Pa$,(#
%O8e/]IfJTgs7H!aprcIJrR4Plq")gXTeUBXn.2/kprAl%^]*cHs7?9ira10LMdG3;XEQ[Ri@"Ds^\_Raj-T^Z]]9#A:HeaWqsXO1
%J,'ENo"Y4sVk:^%lY(BUimb@2d=;/[&&8)>]0H74I:[o%iB7LgX=t.8YA=$828JAaF@,)oY>?mFX+C9geh,6YU%H7+ldi9*f!"Dj
%hdkP0q2&5P^2=C!>IStoHF&$RH3%:\r.eUfgtUC3h!lP:malUIf6-E2FmJ)=Xik!5&#%`DOtl)3<H3PjT.]1.,2G"HY^umY7kHs0
%*'tlSAjI&IoFKmRLqG7.d*pnN0*1Sr,bc5#g;>Y6V0qHe,Bt3Am9q17,/(AfN`U\<+C)ne5.9-.o%d.sAA,uJjPBYM^)=/a7V]@t
%e1\S]9(<'3#+,4V/-K3H6.i^qkV@N8E\hDp0C@'Y)5;XjA+MQ)@c]L6/%5i1Z."3Y2?3d4SenX9"SkW'91#tbhs,/'OSA[M[eenX
%p_02:Z?fW/H'&9ql`R,IOB.uC*b:9SPIM>5b%`nU$4diX1HFtPH&16BqIuPjgO[YRpq3<\CTgL19!#M,qIF2g;(+5#f$DBaRMpO@
%MbcQ.5)N#t3`6+\`iL0H"'g0hpDG"$\2]!h07\iNGjp1-,7oJ$m_jP)pLg;=W/L0CE/jXWknkl%g@G3[g2^'RfoK@71E9A1S*0,Y
%I:fQe'f8ml$"JAa!G^*&"=.g0`8Vr)lq$Z2o-D(d0rrjVnPr^,F=i$t._0ujZ%d\;>B[bbO;\_Ob[:ZVl\%r+JM21Q9_>C2M^n'J
%MOkPE`J9p#nAWZQ]9(iDX39S9RAG(t[8Rn.8`YP.lQGHo3!O;PEBH'#<S'=bee5.%BS8a=7bfL8E_V].n3r6%bj&*n!PWDH;ArV5
%W2C/%DYXVWd3rs_OW0N:ibjhokp2,So"plZ"r2f)!AX3X`mKHibR(N_YCBAJK!A^nlNNOqn$Kk7/be'Dre>>4qGp/(e56&\r"]qI
%c#"@X;%lA`(2N)\h9aeEfT;h6=<`Z,Juce@:7N)jTQ5UHLb2q0[KoKE#nea>V?&SDcN5nu@)HRJFZ.@C'i-bG77_>;l@MTu8Sj%\
%+*W=_(.>to8G7?+rB4m6q!1^Lje[%A0/t\[E"34q]maDl\Wa5e9h-NUHq&cBrH`#NouQdkOm1nd9J7BL*-+uS7L7.(-`IT#K4:*,
%(q?%DlG-#p&Oq3/lLWXNN]#$k>?`N>iefe,%>s_;I5O5cbE$IS/1llfXd]ZXOj+P+K>&`IpI*COb!8NubkZ>0@*90sUO<tIhZXHA
%FM.A>L5tg"^ACoJm8F9lC&Q,eQ/qdZLUiYII=$2Q?G>.&fL5QB$c-]d_`/]>bYCQ\=GQl5L2i.0%@!?lH+"p8-R+FECg0@=*4M!S
%Aj=&e/F9qM-)C5b@1WK2<1$Z7U:$Ok$FPAI`53%!`nYDlL3O2j0>sm?6ENit<'N=MHLe0jS\W(%@D\L+TmY8HgI\4K;@uH/4F^[6
%8WA;7UCVtoQ!1+dWJ-B&Z1&@ofV]:`144#*@_n)K4+:A\8%\&No.9j3DBH#D73G37=/m?#r:pd2^S"WV7T,@&116gR4D5'WXrpkk
%2lLB3kX8S#W\G?QT@.Q^1]Beq(5bo@<7r&0:[.c&;(&''B&<+@`S^;>@=caCg"5'Xd^MW#$:lRnI?7t)G^mjucAr9,9*_6dk2@4e
%O+T1;Ia%\%B>^A!d'.uCE8fW_j%3dS*pNna5h.J/<tOOtS7/_ZO%A2sr0ggt0MBFfc,sH[RFIM'\99m2?HTcob=2]2E@C^aJ`ro:
%/K1Qk;Pc.61iIoPA1Z*/(^nhZTk[CRG2-0hI*?V^J0s>*k_l'V+G@f\d.QPS$GOmrHIodJikF*lY;^gC<4p$6q/`Muq2V08$dJnB
%b(>KsA:i](AuSc47cXg8ZkaS_XL2YkAuSqk=D8>(VA.MUG1ZKe^ia693LuM)iukmp]6gt1_h8=K0<I"]Aj=&em/7jo:0MVG<*eo6
%qQe'QUk`S?[t$7sH%o0^Up+1`7,`2SFk;6DBqc`'3EYr6UY8TF-5M1"'cBTXd!cn*$'tibjW`4Rng)Rn+_k-+i9ES$q8h4dGb@/u
%Ag!j]SM%,0O]1/&l+:JK`R[j8/IGIFYsJ,RgfSeJ%)Ip)OieMOF?g]UNuG,0V*nES'],47S:cL(.k&'m$q.-;Sh(9?PjleW5C7u1
%!@EY;U]$5&`0(Si4g</JT?:V2qSpk"4Cc_#^`X8hM`F8q=LZNC;X2\P;Q4A$dih7A(l;$rHl1RfK'=Z4qsf6ZLB\J)3LQd#<-[Et
%jTgC7])8&h]-][eA0EX;H_?Gq;jRk9DKDHQIY7L>;keO/%@UFrPq.h__#d?Jn_$Kg/%*^;oeHVpg8;YNTanRHE`fq#$MG<DP3Kh+
%qC6/sK&`u*/N?443gd8<3Z3FO(.KCU()C6po_PM>B;K]%\-^h7,IPn-j)BQiFN4K>EqitFUiN#jB91R`(o3N7QcDb8j2b`[QsFPk
%rikq"U3;%9GS_?is07"%eUtq']RA&rItK'9]&KQqY'BJh<kLVXo84o*40<`GYe7/a*W.oJ*j7]7(!hSb2<9gn%Q!>\!pX);/2t+3
%>tL9od(=-7I'[;piN@5&R01e#r+@&hd"mRsE6?3d*cDac6le6l#387b6'T?3_V'IOYsrbX<ji+t\/qA2,!-*GXg^YmAPEHZ^h(o<
%/41hlA!OImC#!][Ne%mF6*&_dQO[VP*4K&6(tEA'eY>$c/[/hph&mJ<P;,iiHa;dhdGdD!Z;RO<;MXPW/j;VDH"oLL<"aBD1.Tk$
%_QlpQNVTN@(#oDU%@i^ml@8\q^utJ]0&]-76rDD[i/S3\80JgDC_*4Da@lI4?Ihk.Tf^q!%>lYt*8,;/eRW5]EEQU&pK(`t59[+%
%FH:k@AdONmojdPsn@[Jq^X['@p;R$'0+f?U?c!K5\.W@@LdSjF"7h&KJdsCdd#ll!.ud$7\$/]o>&id)i^BWYOPX(l'T5S:\fa@t
%fBFFMK"Z_7?gk[^Ga/F>$dSBqIMFM6.l^q?T6GPgUYG(P5l*BG`6kFFGk8+#3eiHk?93J3*)M9XMD,UKf;2d`qq,!?SG'9W1VY5;
%c!^L3%Lg97OmBf:=rA6#%'QiEOnIUt&Eo^FrZjjUBHpUGJZ:rh1P^CB/1*qN/D:n5<0PG4CBO)IjinTV-#6<t37`U*gb^2pY1KLf
%Em7`M&k8r_JBZJMfqFFH1i41Bl/_u+8.DN86:#kZXdkJ`)Uh8*qnh'"pIQ\.da`S`4i)YQok)r;aO8*4)PJ$F`tbi9A@I:'"tHpV
%(n!O]*ceKJm;5#+4pGU$%WE;rZZup1>r64\:le!e(_jB;\Ms$OS-5\iKna!3oH-J%AY7%%g&XCl04@,@2\o]1Csb+%/@suN7Fu9b
%:fMuQak>M^\q)';E>uf#P'-,'JY+^o@TICD<=Pm9#8:Y*-&b<#fBHX7A,qW_[>5>i"Mo(c%ms`c62T^tBScRO_X7?,&/gES5C[s*
%X.Na:Fc!rAq[t@J.A_;e')r\_`':d)bPBao^L)HU2qY_2VMW7?3/[qS<;a1ur?[VFJU:KoLYb:(rGX/`?AEp&'M7IBO3*dlI$Un7
%:L!E9`9']&[Y"aC2dq%HFXT,5o[>?*l@l`/0Ltn*^!HY1PTQ3_9^'U`e3s+L4A,JTqsu+efnk:PD4YWVpjAp)q[[c(Gh1u+pXbC'
%QOtL^Zgjp9$_=;`@5eFlbHrBrh/sT7m&?jfQQo7)Z'aE<&7<IpZ7O)^nj9H2)g&"rGX$f7FF!/nVTVmZRkBWhCOa$.0`*Pc;<=ha
%QR\IdbgGp'ZT6k;gq0caM`8,,fB^TX&p%;:m$F+2$M<JPoQ$Z%oQMro^)D*AhF\=))8l]M"b@Z\clF@)C8HJLFE18dBGY_Yl0%4M
%`V1dGLT3^[$-$&Yb5:F_Ca8CL&)cPB:9pCX2=#SAGI\6shAU95M.XH4gd5=#.cikCDR".3?#Djb=h7q$?LCWC2m(j-X')>Q2n.D^
%h:kTJYt-$'2,!o7[72`eX<86W9m1HWn:;@]lo`B5/'0,!Fg]tDTj";\EY@f/g%IbVij:tW2Ao>X%@m+T6^oPcQ,+s7'S0PV(jR(f
%(;%RLg,I)VQ*)lHMpa,BT;ML9*5?>K7JKc7;GCet6$0P!n^^[U0sR?&3#2L!"D2;\;#a<$DZ=80>'>A#T6XF@]`J-bY%fU2X*)pE
%<*X.d9&IGKb+R3^6!Ds57+/:qi)Q==6L]%edmPR>`!)BcIbqjk25Y)]UN5iK2M-H5BtDr"Zpg*cT@8lDTUP&8VYp@/i*oMVq[:g'
%(reSPn\WTfSE$>\%WB9*qaEoV?%bEdiP^:BE$h)cpd&e8_JqY9c4P=9<l8,+9L,2iS?@'s<`cf&pi-lU@^o($T4rH(KE%TEe-8E;
%lKpG(0'C3_W[54&s$ga[,`%L\9=4`hC2"3;RE9P!V(RJD%0dUU/e<21AAD76D:&S\mn-c>Sef<:1r+*7,]hc=/WP/ma6D:V6KB`<
%;3;\N=0c)r/hk,>JXTk,..Tj(IDTH21dZ_j9m$RX8&PfPb4sp8p2#("it\/',doV7^ZpFBXit`H>eSDkkO+_rG[*<d_`e%UMp-.c
%0S`r%iLU7gfM2j1dc/[R'(i>\5SV`OO`o_m!q.F7NK.#q'4389bs^ncOi/+BX"9p`<k"2RI4h2bL$J;Y:T7K:GS7#UJAK^.I"6`R
%*b-A!i,BWldkSNB,Y:JBN1@Ye+g^)3Bq.Re=QU<e-<\i<Y=JPA3K'0+\n7*(E<"/1>*n?eKV^k8$EUc#*CXWRhMooST)?'GG`7FD
%06!/WoV<'VV2#pH=BukV$o?,fWh%(:)0&Y3:CP.nat^S<,<MS`MiCDrOUL=n=61+Y*Z`=uT7R`Z*+Ya`i:^s]HUXZnF1;57;nFbe
%\]MKQROb+D$N:G%='&?lUQMnrM]6PrqdaHOr"RTL^7jOI\_n=OiW6Mn^dTSl(u`5XWWuf.p2(B%\lm\aJ/)DN,J-XT.WJB:`\>s\
%gb9-90S'R?E]KqkK?7P-%Z"H>$.VRO^4?`+S@h)m[=L7)&LM<\3o#GbnEKCj&bD]DS;Q+MoRNt'WUaj,(<jLh4FjB;n,:+XL^QHf
%Ri5%5`(iPpb1:h59/gOV.,CET&iILU<MgO<IIq5W=U2VZ#pGD$rq^,=F=&d&(=cJV/s,2QRcmgo%*9V:4lj;Z^R'*sAGQVQ%f@.P
%\hJ!8Oj`dhNdH^T1]^C_\OA^5f8paufFWs'1Cu*b#RZ8=Bg$WW?<Cd,6Q*G81hL'OT9)q5fG#]jM4+ff;`1Z#"V#Eb3*;!4+gX(-
%HBX$JHN!KiLX&U!rSSF`!<u\8[)K+=*r`+n%n\8oSIklQ<,@MkYL,*I.lS>-DKdpV<'*C,"0-S47#'Q`TX",Sl?6cH3I-ji9#:kX
%,De4.QC9*O&1!D.g]#+i(]4ip_Fe1`^pfB7h>T25QLrHTNQ[-_$ma.!KEK\d7O$VDRH$_Z0[fqMmdLQ*oAGDcf-5o&m_(@qG&TN#
%Yk*n+86UCX?i'G?dB!d<=-WHQ05\((\oMbhml!\s)M9ZRW(:"Ufc*lqV(.T%MMMrN!hcsJ=/^miqd]<$E\Q]tk[+WH!6k`7-nL2g
%+M!(M*KEm:S\U97\B8:r@uVi%SO&Q`=\2`<"@Tu.=Dg0^03mFAAE8q%Vl?JB,@R2jLH=Y'C):.-Yo"F_ogH+o/'&8p]Y]&p,R2hM
%SE(8uFD5&GErRVC=.Wfgp6ePXH9I,g7T<M<cn3@lO=HiZO>N`i,Tt1-ktXZo8T0B"?]M<18B9ASkq6Dk$T>M5,_AQt>R#H2]t6*'
%XHnh+hVq*\*T1>(o)0%4"i,DT1EjZ5_.ho_\pi\nonY'Fp]m]IADd.Go?Jn)^t>Q>*JD*1X9RQN&VN+^.MrZCK7e/>BWU1llIu6m
%4Lu<.Z8Q]>+_r#7eW6[.Se4-n+!$3@F5fS5%lFdm$?HT;2Vh3ghGPjKP$fL,c1g2Fr"s:%9+E:taE!tMNQ/qB'/1T!S7[[p\gHJT
%FhgPCG$IeRR=ZnSN,L/H_pa)STggth8EZqG^iC5"m5imBk)p&W21GD!f_$S22T3[g-latIiE=bT64<X9<^?Q,35L+F\3A84j!nXO
%MK5fS)4"H*0mBt%)A)%tk8X0OU%uc`Z3qu,=df.)2:o"h8=M-2Ell[gDGX]/=&m8*'J";!3E_eqK):4FM=j:B(pG?mU//Qp$:T*J
%d<+g6nP_p(,,,Gbldl:QI(4rIqtbTSU.cY._KS;9_)L'1MK8uTSK)</-)pB7ANs^=OI)N`ThZpf9rLSWD(`>s](Vhgo?*B,:A]b^
%:uh;>*'ItMolUJ)OGgI_.uER:l8\P]2n:q)\8X\q%3hTeHg]UC=otX.)&VoR\"/SSfK=W01GM_*\,]M1q`[O`^<9[CE:W<G2(Dk(
%X]"8YI1M%.Hg*mf%\!MiD9fo1g5$VuBJA:r9GC>BI;A!S8,8E$G"DXYhg`-\EReklS3[>![aiVmgi-LZ)80ZR6BjDhYs_H7_FJM/
%"2u!H9k%lY;G`LHUT0NUReQ32ELD%nWI>;rh/;dI>l2ksNT)%1.u][^F@p1lTE-h%1ae,0m0JTHA:Clo'uTpb>_&e@"4U=f%"o4Z
%eq]t7%H<'JF+>3tNYO6sZ^P:_'njSi<@jaK#?`T.hrV[nn9$uU6&WKR,M$0noG-s)s3c[E*`62Jh[5Q%i(3N8%+ZZe$pB]F!IN;;
%VN)m5jTIqYL_Rqr;n@RC"P'#iefP)acX,AX5pJ3FZf!Q?)d8mp^pn!p(_O]l+d&^*;m>0=^k!XR:n$q;.7^YSBPSrmmGT,MVMEPV
%N!P_.m@ro:92Y/1a"%0$NuSPGZ$S)[0Q)abI_sE9A3G!9cYt/0T&kFu":pl9f,f&0mRQ'VaKL115iOjUY"KWJKnC;nZJon[KLHV>
%cBNF?9LqogI!'tEh;GIJ?5sZ*86jP<m7Y1tTsTcJl<5&9))3Y-1<OB_.&uB2U8cmiBl$gIY>kZu1DI;J6Sn8M;C_FE;u8'0N/JMO
%"),Gh?-R/1fN^9>lHqSaY,k>e<tP0+>or@POcqaWQf&B*/:sS19g%KA4&OH;nY_>/6mSf'X*(,d<:j0H3bjb]0Vflk=U`l)W)80+
%0<o]2pH9e[^/.u8/'kVO*B!UsNY1kcUm<.9;6<E[CD((mSEl'N2HI$cnMB2^gJ)$,4&^*9a!n/eq^T$gb7_XrpFn.GKRmVK+L'XP
%ET`fN(qPF$BO<5=/O0O+,MG7'SE@H]]'iEuKX7joJ[b9"+,aUU"BZp.I7WOXeeF>ibXl.=_`3i6"(Hl7Wu6PX%eq=gB2q9O3\<(J
%$[6;t'N'arZ"rr@b_M>qYnCF[DCL5a8$Aa?>Jthai(P(i.iX_42]UJ%-Gh`uX9#3\\P!`KS&VGJX*@O.jc_S(M3NObg'W7I(c)Ub
%-cJmNA&j+X#_sW<#?a-GIV*sVGaiT^cr6b#%=j17[jH;=\B\p8BkVGi58ibW38RC7`:KqtMkA%BN)p0p=P%BMS4LoAXB*55+1dPF
%[Fc\9G-ZAQeqXIg^hQhq0Oh6S9-KY,N&26)!_s)mcEW5S*fSa:qbDKPI!o\bqs^L7SafE<=/nAL%MT;&CSEp&\#e>W>KU&4Tg&_T
%+HGQj=e`E1&0;5W9cq87dQ`+hXW2SLZQ?2E?UJSK$l#keb[=_FHT4HhGDGRBSlZFQJ9e/:ElIFTQVO.7g"C/oXhM>V%310T<=(ai
%_Wc_8P9?^LpaI\re:U`266Qn#[.i,/?s4%*O6trT]P9B_O3e-"qlfl@.-k!QdQm+.*e?ok\p2pm*#eb:%1&gePg%=):ScT"o?%1g
%TPO/:$O0WnS1k%'#MCk7M_m3F&?u9.K4iFMl/,)"!r,.njqkm3N'/-q2k5-j:_]s+Z#f6K#R`&2$K9tC5Wqs=CcV#,A"^==o(;k<
%"6'F0#/`;Z6i#ZJJPcl_bi*f^T=,<m]'\"ffI#RSA+@Fpr?(Q\Q*mLo8n']u#(#@DoRH`j^[Cg.EZ&Mmd?sgT3oFd!8E/?YmZL-(
%@>Lj]XMGt2`t3#k=J(?RZ_BSK6-jFQdBeXfMWJdq.J0:c=K0UuYF,NO&4&ZSl_0^C7*Ndl!0!,?FDHh$q1f@l3N;L(G8VCE8aYo>
%4>$Ig]G`dfXM_r\#XQnZXA@Akf*#B2ES8[h3&JMDr.m5)39h.3H-jZ'(e%OS;=,aj["ObAep)(W3X$]U$ZKD)&"5VnADCEM`K6:O
%R5*iLXW+Vg)!Wd&A4-hf1`"Q)7mhs6j%A[d[&sjW+`K[5Ag)!hDeuLU0iI!1%JXe_4G>04/eZ&3?38INYeF*aO)Uso_urPdQL]!/
%HJ(4`,&fMM`Ta0.%Ls[h0dU!^%K=J(oj3$RXA"C!3\:-M_`-lJA`ag'0rKe"e*AP+RB21MG*W"qDJE9b1kEXZ-X%LJ=Ha[?G`h1Y
%`_`4WkV53eO'S4+PmB!\gsKRW0=n\9;:[XdF!9-)K2]#sEcDN71E"UcOd_&:+!*!^FFR,3G+gLSVP!"]5;VR3\u_V86%ZQmM!HG/
%Ce+[7_"jqkKN-A-9H]9Vo<[pEJs6l@Htcla#VUo\o7!3cl32B6BEeT`2a:DoCLh1/kH>eWcGP+'k)<E<0Vr+M\^f0n5%9;*c0qS-
%M6>;j'/B+SFH7-Z_f)H"r0CD!f07\n65"17Eib/?X5Dan3\;87oat[TB+-fXUR#A2P#Hr?A!1[QViTs(i"\[]l*Uo,NH)Fa4J2s]
%CoX7@:urPs+S/WQIDd>2OU&*_6,NrmB`JoLl15GFBQi)JDs/h@X62*LiGOOIM"_i@\O*n:TPG%ojPD-A5`j*3:tU1O'hsD4%1Lj/
%\5)5n;S;nA?/&GG63ra=0C4/q@^0=sN=<M'b\'W\/=#I%CDS$":G$>PbWn#7VGL1V\P!1bJ&"PLpQ%P*;Bo]Ejiom%8X>&MnOtL=
%M)uV\3O2C&)+EN2m\b%E>[lg'Nrr#f!`k%VH`\K[0H71^^[M';##6r(i>u%_ANp5"q??aWL%Qkb#UHCj*ln./b)TgfL3c0B'>36_
%H.(Au#!H3sf.NZOG6k^0ccdR@Ln.'ei$e3Pd^@Y+2ul'uN06WI_kl%`ak^#)U-V>cl)DcM*"Q/Q&\<DXjIJdA5<1OlEPmQb8j+>D
%cStpC+2CdLm=rN#?bX.&OfA@d7bai+d^Ju\ZailZ,;UG!+&[djg;c:9!B)i!\i;Ia0Q*-mY#c(T>`-aOgLRdYF)M#cDc.nmAdHD,
%U2Q&(4S60<D>2K!3tJ&-L0S<b2OM6Gf"3+Gd[5A::faN)\93L6,d*8em@"UnE65@m,q_6,d.V^FERVo(NZmFDVbpS9;?k.3;]l/t
%$cjQ/Jsl4n]BA*J-kH5.6E761'.q8EMkfstV>YUE<=oH#=Df*r/&$Jkh1JoKe;C)/4gh)+1WkXl@&7qgiGS'.*1_j6r!nE^/rdWP
%rpV+lACs]_=4GiS'HWG!='YVI:'f&jEd[/QCe7N;(2.O.SA90%!'pep"eGtH,$^KoS\4D>,+1=`\e(%[Y!b%,YYtZ<A1baA>f$iS
%/l<3AaIW#:(T`Q)LQ,(F't/kWd'`iH?A`.O0r"h-,?k$a]2M2k!@M1rdl<A=\GG8CY#TD[OS@#X&.ee4b"=/OZMsR58%A9_^4U)Y
%S^T.m+'9:G'R*KDFe7Q;niUj-IXZs(l^QOYh6LUng`u/qLOb%qWAg4!O/.5ch'TbBrm#HN)4cY;5L"@sqlJRO!!@hf)r.Pno,c:)
%+m>noZl+oqj`W6'BuRnOJi'5ENd5S'[K"N%"=gj4,tDt!;.n&Qhfhm.,k2-U:*HVek?Pq5!<^*`j4>[QJa7@gdWd+lUA/qD6L)+:
%pKi^qNjTFegmuS5M"%HF"!U4@8k*#ob/q::cC49V6lR+E!tOXus#kjYmGiU"_,+:)gOb'%?*$-7F@KSW+jLXmT("09cNt(h;0IQp
%A!C&,#JDgOpPb8s%r-<aNaCIiDt=Y^&U,M)53R1J@)XhiB:s3]"\E.FN&=UR(/0G%:P0lXjpboH)'46Q6o[Ib?+fb?&Af(gXW#tI
%C)hMPlg%B3,o$DK\qmU\etDG3j<Pa#auWZMm^*%uNgVAW8V<f79dfBlMQS/R<B<<_Z_ju?=Ou$q"1K6I!f5IPnmGhh2+XN]=M2lc
%#MbPH>g%OJ7'X9C,)C0KGi(6gT%<_49(BD^N')f(qt5!gLnl`FS%A\*pe)KS_W^X+_&4L@TUKS0"2je54X:][J;&]O+(k,dOnJ9R
%^;L#cYY'*jN.DfV[82`\?d2804-N&5@cO;V/Ym;K>FqV%$K91/e=umd+fB3'<:rBr8)6g)'cc`E@H[.o3<kl[V=K/f*-"i6_Af)7
%CN+R--?;=2V\rLJf`SsK+#Wrkok#A2K%oH?V[CFlVA%2;7"JR*kq3(6>tsM1OK:aF:/&msKE:aUcK<11ShFMoU@d-k%+ME<K>Gp8
%R>!2gR%Vh6KB^R?`om-"@e`3j5kL[>jK'(IFcZI#la*PRJgfpRU/kNgrVUuJpKE+r(D_GVe,ila.GMrIF&(_8LL^iLeRDug/I\T8
%F#H6Hq0EFD(N?H;a6SNV(iBkBeM%@_h,pUQ%L_P=<YohM2Zie?"_httk,]\E(E`CteqErn(Xe3KEc(OAlcn9:aGJ,r?7C+H2grN=
%@OY>bGQCtc?9!XUTW'XRZmoS5nY&Gh;]4_e=IfKO(7k3kZ+s0CX*tg>3\sX61Bni:QsH)q?A.m#3l;nJ&^Es^R*HOnPC@qiT-\c3
%.5,G\9uEU\d-qDN90sf%&l4C:>W8qk0B"3Qg'&_[Ke,A)fVTu'*1qD_5JR5G&$%%F3Q#H=_@cg(Z42f%$tRjuU/jts3!M+L0I+8e
%jFbqb.H-)E&E0.eU`0XGDUNEo7;<Q^J*rT_^=gi92uA2ai2@`55,ehIdW'8C":$k806W\,%CD@1Jt&&CFF;fqa8Gr.?*'J;h1>4J
%o<F%#JAW;,(,BV[;6)#JSDtGlR*f6Ynr]tEBgXpo4X'Er&%<)$>`r>[]XXD8)ufbiL0rhlm`=eQNT90>)Xu,mWhg\Bf2*_MS5clV
%3uu:mY:Ji[,CX8OS\tNa5RA'AJh.%DeUH9#,'cC`;Zcn)__Q"M@2l(1?UX#ciK*[uO0"q[27F^qQU2d-`3oAJPVaeh?MK<+8PC7b
%O4uW!`4$Vf]cN\r>Kn$6/U%)nCi1-M\6$%mS*dP!p+#gP[!aP/SMniZ:7>hBD$t4;.b&j6:%MnNF7qoQ#<09>5Xt>lHJM"KRrS.A
%hF60,RKlnscKV-M"s'_,BgXh[:hH(ao+Ih)j7Zj\PBO@Y)9?LJ6oW@HkYRPta\o&p:9/[3[F^%PE2tu$)9oe9k"bM3fYU_/He#td
%q-r?ahOSJ14SZLMYBos"7fLn!n4D)+^$2(RLS=nmmYb'm1JFQf#[Qr?ra:mem%ucF)82O'VKW4bMD@7rlEnQFokqM;H>j@32.n&,
%G?<JQl.njU,"1[%ogG$lECHhOSU;"q^Vq(a3qqLVLoGH'bjdE[FO$OH8Ii<LP>rnbbb]Atgg*\eM4cRne!NFe_G/DBRfQMRB)>5X
%ed/Cdbni8KNaXMV1Q^"mX&NuDm3B<<U27#Z6b<i!gnCHX]0@!*^#fk@4aTt[kYSN^:o#6%)J27b#t0ZE$N8Bl1U<i`Kr29^&XSGI
%j40A[Q?l9PWg<`d+_LUMCY%F&G0RL%O,XaRVA?I:lRIl5c&ujtdkW8:,Bat%7<^DZ=YJUEfO\m5L"39Rm7YQIgL?Gt+A9*hGe&C1
%;ra])Qku'l%[H>XY$2*0Knrl!OJ^HnYq=dh?8D]8@u/Kh<_X%/FDHJ/[g]2B1#&<mZNb&aCVK1^ClE$b[?.4h=(s5AHAPo*;UTD4
%*HH\Q*t`7.#:k#/##,N;-bYO/]<"7AEZh`Vq+2!MBn\S%Kjhh3qEbB,7sf?0BJ6-p;m8JUB5DI-YQ0*40-i>N:gR;hr$R<$J):en
%T93FW.*:o5<aj-l2S^,sLaa&@Ic^;1/BK\6E*l*J>m?J34,\XXW/d??"[U^r>e$sV(kbEg"O8P_L3*YG<+9l=jG*eD1oPt6?A]'&
%C2;7^?m'P;Ba*5qmu0R)'qU*Q<PTc`k7'f`<b"lu7Spo>2j.!p[utt[CI_-#Yg8Kd-OaenADVZ,VKmgX>G/5-)Nbn6795h;BdA?g
%B%!e!OZ<V%0j7>gY@97Fd5(r73.tdj&Kfg5l"d5OTr:gGMlNp?'#a@!No@m!o=:,lh/K+19U<-`L-pqrS2Bj#aM+Tjlbl'b2L5F$
%'Q;h=DI7UL[#pKu^<I`hl&b%jR#GQE(s-.G2RPoq/N`i67!k//oZeRPmhTU/c@Do3b\;7NC(HJV]VZu-c""\`A(6aj4X>+F&3&id
%eC%gAea14>9Do96oZs83JB03Y8$m"67f/AN<hslGP6+csIOF_[6p_YJV_(eW$m_HBrE0J2rA3Y6%9=d`>"+cW#^'350%a]@ZKd5;
%'9BeSZW*BA@B?BYXl9R,k9$!C_<^rM'X+GC=HQ$fep=,ji?b:G8b7PgB=3!+I.Hlq2`LU/`CB4p9tSlfr0P0]I^:3pKjh.s`&S`g
%>*5%<?;-%&Z%<p>[%q;"!i`X?.PTU+o7J5''f7D]<qT2@.hR'Jf.NYZnHc[CM*FauPcc!4P&ZLm>Rr^p#4=B[*AVkR`j+]&XQ4q7
%-t\AlBTX1<r$cDQ?2Jl8bS_$Y`OoAK:HK,ZlD7(jdiPWL1jNdhB8qZt/3#@-T%lG#+f=YCEsEp%cQU3%MYZ1oEml$;A5!1r>$X<O
%QP$X(\Wp]r,7=NuE]bSYJ4p,`0mQ>#3VB)@7[-=Oj7>+j7NSpI3WMQ/C1>iuIPR^>8<P8_Hkbg!GtZqQjC$n!4Ye^0HB>9I$;^8I
%T2j=ZR,(LN"+rm:1K:X&@U*JllDb/e@[a%/Ukc>0Wlj)Z_`_8ZIi<$2X<!2ehh3Qae3j%.SS1P<6BSm!'^<Cn$$-VZQEhEgIG)aR
%689G?LSU/!\,Q$>ap)dkMsk0:TMKFo_tbEK@A&K,.3%cEPSKHfj93;J'-purS9.7Y#_EGRd,e"6#m_s`TiteG"3qq.+$E1D4^>^(
%6<,ND@sLfPcP8X+"J6jJ>tg%Wa4n%s&\6-!7Z*UHSsC(mAq2:!MUdJUnOFa@.ki;6J]Bs+JJ>[?g"NN2kfL1N8IRVA-PZ%BV!"oc
%IO:!TWnF$c_D#*&@<<\1F481Q8=N.%%-Fsi#:]l]`qUAt*m#6XV=4bZ$<$k?id16u=j6;h>TZg[eRt0S):ICrrChU:$-O\2K>bXt
%m9):MW>p"K$k8>c5H<8&1",4%8]/,ii#=.WCB8O6SAgW`3gg,]0X.EgfglK\W)6+a/I_Iik2'lLn:#IP8.#X(G>dYH:(P>)=J;X%
%`VP'VTZ^fO^CY[QVZ&:Ra%JX$E/\Zl5@e`(UJF+Y958!+jSit!2rWE3_Tbe7dX3P\^OXu7-8h#NW-tQ`'A*oX1;),&5"0E2h*545
%$<!*iY/@[?puBr3hMAqt3n-BH+5hc$,6,ut'Sc?e$<^g)DCJ92[BP?,XbF(Pl!cVQ_o#-(i5ac@Fd@WX_@$5I;Re,X"(5PM`Y/V<
%-&nS'N3CF"&.T&aBJq8@Sg:9Fma,kIZ(<.maX9`IHA6kB:/]0/W0Mrr'O%n0MT`l*NI"8l[DT+-%e%KP-TQm9FW9NFC9.[KhgQ=I
%Jr*WtILpu>3gXK2;3jQDmGN'',o,a@JeYJqH>XqU#P64OE-?XQQ0Q1hDFcoDn.g24Bp9nJBi<d\m4Iuc6pXFYF<)RkNYJWIdgZ4'
%*fT=:6h1k'ndGR0@<qeT,5k^Q4rCBDaZhK8+itoWI(U^XDh:Ar@IUlN<E7j+\Ski0@>aHq0Tkr^9^o\''E"9An>5\K='YYRF:mVF
%%WU\f0s.(]U4K#J3-84L`=aa2?O"d=*Cf:Ja=:j=An>,n"]uJ7(*k02W!@I*PdiMWJ`W>D0S.-hgIAqUk2\!t+9XW=1V2U[#(]&Z
%SJ9#5+;;o'<5`&bfSUUs,Z>_[Ufc&%EsJt+W2_Oc:/FL*O#H8W&R=?7m2JH#j,4pAX"?;N)(\T?nN[W']Jo:]A"%K7@#EnCE3%FM
%WiRrXKS-W^Hq5#XhdJFX&:KHip2_+V),Q+=7uda4R'Al%`cK[9E*,<iYmKYF:f7a,GoH&fSQKP3c_*aR(*/6j;J[g%+eY2pi`XJt
%n.CLa9H:D`"<!LN,-IOk]q:i4BM$UE7Z8*'6\PI#B#XA/Z$p8.Os;s^a_nf6&Y@X(ij@ESkNqQT@RcRd[^*:0(alM2l"45\^q&>C
%;?G@('-::Hp68:CN&,1;VV5Toojfa$;?L-k>'Q&C[&`8I0iEQ)$C+tAZ')FD0m.AtCW??;.Xc%>CZSea)9g6G_4+[=4@]bhC:`8\
%<(cq]!jH,;TkusH=fdV<M/d<=Xo5:FK3>H3GS@-/k?o8(j[.aUdV)XgP?<r^S:WgSR$(#,lDEu3/@E.8$B#e,)L/@U?[$a2#s<,$
%(@?QoZVUSIgDY=:#mh>2qm!q:>5.t!O6a?2lo,2L"q\mO;ii_\BKafqrS^TEfZse*[NYNes0/H++e,2irqXa,>Q4P@bEPG\Zb(("
%*b\m$SbrYjPM<5'?ZAbc"M\7XG"Q<*_Z$E,K*+YVC`_@4\@m9#[>i2lD_+aj3LNR0(bIMI-aoJNk,`k#g69$-+$i>f8@]$fi$9Qc
%O5T9#dqkc2<+69sX_f20,jW]"lr>D$L'dusTpHMnC&?XX-Xu'u,%"Ug2@`PK86.N^Dim5DjPaX?7%]K/,0mEoNE*fsOR$WQ%DGQ!
%8X.)G2kB0bS]&bAfT>$WQL;Ril^6B93!]aX_51elr,+)#_$7i^$BAB@=HuDg861q,kCW>Ff9$C?^>a#j0J!Sdfr<(DoE?gkSj=Qg
%Y'M#so:N:f+I(&@h>gf8?=H-<2NY$Q6u3K/fZu&,M8&[>hOm:\I:gBjUg[A(C'p0fKhJ2e%/=6f7eZB_@*t^W7'Lg>iYCIcCZ0Jn
%+BP?\ptCqG6UF(U;T&-t^/e\?Imf]:'%'",%<mpW]qQ?,QmpD.!@M-J`R&:8244QL>M74.#B-?ti`u?,;D=cAjFJ35mnoV3=Epfh
%!*RbRFJ@1oplZ1SnX[F;@]G%OWR'3"Xu7^Y$<t*bqqCt0HgP08%npC'003cc<hpl%;2".a[6")B6)*c=dt>6c$*,hII%c(IW%K+O
%'SaJ$%sK&Y.tHKKAPsb`Xc=rNJ?*N^[GD&8q&[AI-nc.#'J731+T4d22)#@B\14;!V>B1BUNb2/&:b!5JJ2TeBkY4.&W+M<7kaR7
%!$seG6fH/nWqq@e)3HP6eSHp2N`Ka[2_Q+&rQ#@7gm/`K)5-uL2i]>1IDXqL>S"*U)t9gH]QaE&_u]RI:dXdj'(`_2[Ks>.7OkG.
%6Qb%"V$"EuLg';oK.L"P<Pac)jY^GY]7NBSDAX905q4arUkLd]SA`(WgV`n0r%:A60<J#a_d%%@0Oup67GM9_j(^GZ1:B(VZO1)%
%XMUCMY<[]u^5hp/&;G!aS`oio-;W8g:K-@"C.=A:%ifK((J^0T2pN'_1Cu#43*Z8*c;Wg<j'<eU(h@g*]16J1L2n5l9=T.%<8OZ3
%+!g-#m'o`,0@c_VYdWaG"AO5CL3RZCjsDAIi4c,NLhk)3^F][$H'_:5pI7(++<S!Ki<7&a`S`^1*%T8*`enqE=MP#qm1)QRUA4^&
%HIAQ#R2F2$QVMY7X(8Pai/Ipk%Vt6L!\P2a-!bm^df4r>j)[$qPq7H=<s/mK.J,bPMP1iQ%eN4(`?;1X<90LTi5?KYQcYr3#9FR+
%]KsQnk/`>EQJ[=-l/8huJ-,Gmr4#;b]7j1\bl`Mr]Ylsc%OWUODii7OH(4Xc^rcd*(!eGWQZtq58Bhp3<,leI5;ERtaf-BR<Gnp)
%C!2)R"%1&I.!3HDF^8NL_f`'3*^AT;i4*cB9j>A^K847.@r<GLL.*SDE6P:5M/%o1Muc*PM;r%C)D"mR'3)G\Ct&l1%fJcgPuiUt
%13j_iC6JJV92GBo\_HV/E8Z7B=/WO3;$J2sBpGO>RT:2Tfi3Q`^8$Cu>@9VY7m*WqB'(UJUa^ZXA4Q\a/J^)H78cdi^ia_B0l@[u
%6)tVl#ZHVNL57kn(&iE*<44@-ngLSO$$T\7/KYm*N1.9K1Hto+.Q5Xr1Y%lU-ZDfTnJ]7c29I9\b)eRU_k)f4C4tT_%=^nK*KDO!
%?\.]2f#G5aBrj#E2LHWc.32K[iD"&t&Btb5WmI!1`_kdh4][QVSlQ_Vj^JM,kesM0<3bB9Ssn8+E@2kf/[.!q\c%ZGY2V8._T`;Q
%mcM$<TYb<*P"km.6KU`fWm\RDMMKYqC/3'qk>$ca'+:UG8t\:>*em&a_%,)5!DD2K.9/NHI7PY>L<DPG]m5p`C*Ta5'@csVda>F/
%]0/_<XN^Uj3:,7L(5S=,1C%t9[9)R]`=7ulbb/Qu>f\<=$TmdOU4)ObM_=?YOI_+:G(+a/d!9&a51VY9L8r>E&Z%.B&dFAW!!`tB
%3uT05ZpTPs9De>I!fs'^QLg^/S!jXM+?X(Qf*=&`j5qrP0I@Q?6'Wjk%D'DT%T^!1QZ&!t7'?Is!tGo^PU24)Wml#=gIT7D@2tiO
%4NL,T@_77$OlAo#W9X8o=e#>NLFQDFk8pF3YS/!+,+k*kZpQ](X:I>=jU(d+bU4j;kQ?k\#a`Bt^lS>EpfTUR2YGSne8ch+;#+cK
%[^(8a/26*eXsn%s9e2GYfPA;l-<cEZ0"c%R2t>h"&uG?@LPT!+YROrc)Y9IT0<:N+7GaV`=&f])##9NnO)t07Rb'l3oZ3jOJHcC*
%Wp4B'66c_iF1KmbG@OBA:6GZ@l@6oMnfqnmn="Hncg$:f;6H0,=f2;.7H3J8-EAbO6dtbm[BKW,$fZp?ZN'qO:oGIo5i']W()3Te
%qI+[I@qb"XV&j3&%@D+bQtS#OUJA(=AelC5I#s7>"n3\X%BR@H2qW>9+rLX,TC^:sK4f]u,,F71(2[UhCWZ#f0t4%c&uE?&?!7+]
%&ja6*$PpU%I[#/n$dE(e7PNKdNl&OO1`E32g?4(!MPOqk?XRI4[=O;l3pqb:AttJ`dBp<3!88PI'TIVt=@H2e<'<'W6!Z'%SXt&X
%+\@tYWO&M^kidFKmkc.n^7t0/Z\\n_]V4p15Mn!0o;cj[I<do70]Gu,HEWh-f=2OM)+9e'-j\sf7hW]V25'_aE9,T[Pala4:gSCX
%#))]c:6MiG[l$@e;L[C\$b2n#k6FGPI,qr8:DUp!;&4\+`\8g//K@V'kg2j1jG,M3&TFPp""%/8@i(Pm-&T#:Q+d"ZJthiT*n&+h
%..`Bd.+r2s9.*1qUdUMs&g;km'aRd+7n@mZ,sOGQL0`=D7qnrfM3&TOi/=0bXYlVfHQT%A"BqIc1'3<.mK6.(AuTD[b<a%dqGFdq
%Q"ic<O#WGW"-h;b%3pN/CtG@P.7`""SYC_bJM)M9UD&W][T#3J.psDF<6tqFnglk[3iXTG[*Q*a[7&-_Sq-jR(@aO?!MM#DQq1aT
%>"EJ^J+^u%']):HIOp&iSAN:_V&Z`9#oCS^G=+?C_`l3D45B1"8S8FhOZXP?=j3Hg-LW4>%Q(.[=sQ^_4(3s>KO>>#62YUD[YFXf
%/7>D!)ar47h@Qbqj7L4A[(9A$B_MY2#Rrc6("FmDa5>G6i/rJT@%lK5SL%BGU85<,^iU"QNiOO[)$s&[9$e]%GbB4EUb:I7!fl;_
%;-=LJZ^+fJ]+!^3Zi\;G\_MILSX@)m9_YiL=>=!$N%Q<0TsdZ&OW,>:5cbsa""(kK/k=E[$hTXO(9hLb3f[9;#/`N:OR@_*`k#oo
%?%l.kmD8FIo"?VIiB+bO1tY"i$(nrY##?8pcnustCmL(t@.X>9Wbfn?S);Pp)WU_^/'3i];1FrXK+]+WfpJKHa`?clYoiO^QmS#!
%,J<g#j,tcG+(_%fRiDA)K8,_G[`74K`H5m$e#p\V[lW3)f7o=G=-V#l:`R3&C3sj]KFYp@g>/8o!a`HA,FU$U=f)eeXfkMe%&>4,
%i_[=Qr&#6H!`:beHGb9Q_:LE#EZ3:/1'[A;XT<9924u)r:U=J5^O0IY+4bi%OJPLRZ(?AP.%3$.)2[&-kA!'taI(6\[?e-bLZ,>*
%P[t?jbNrgsdrS%nDQMt(g<KHUgOGU89^]I*,0O2\9]c\;Q,e1Fp?>`gplBHA_.:8sHW\Lq[!cjI^Jie&q\e8eWN4FND`XlW72n[`
%mD86djf``8T.pc<5*YrnCU>b[J1%ud:oEQ/!$dDEU)7Z;ZnIsuP_$CdY-g;,Qk6+[>*S^ras1A*8[`a)8\&4E38QCn1$e'<7!m!?
%iJ(?pCJY8*;.Y])_Atld0i&"+5'@V[3%?sSEAl\$&Fq:SUg,Z=_!Y,B[fZH$pu9e,BW_aeDSg;rqu:c4F`7j->RhWJk<H[sD,LW,
%K^&oMUMHj>/kB%QH5cMQM5:46IM`/OD%c&9`+;V+RF8TcBtSJVkRu`/?S"%95U0e[LB2L@a7W.r3ngqA&C>PR1"06TN,C^P"pA4J
%U/'aX#]>RJg<^Uuj`gjHpp8lq&o&OF-?fn=_;[>B/3hK07Z$^jEg(Oic9@.7KIjAXUD"#0\LgY>AcWnfX:D4.0ZMB>guW',Za?KC
%EK_?SRu+Dno=(Y]PA7HF(e?Eo-Xc"I_(d2<8bm2i@!WGi3Lr8dp%p-/-b25Q!40uqSM[(6Wp.Ge95YC_E\kKJeku+'DiT6?D^2^p
%Re=M<`1lS`fX58SSON#!*LVuYN8bkXD#k#1A]6D^q^nJ]"1:)kSS*fB*?@1)]3%+C>oR*-\X>Tl"!t!4;S5o$aou'Mj*0.i0`V!(
%_\G5R3$hN:!K2>6qfGQRFS8TC<?GkPjBLC<r,UQ%O-)N%X_DR(s.XU;oktqNbDaLY>[k<3f,ed\DJI(@^l>@T&d&FV87IV,FQCf(
%JeFD9G&N)R1W%$$3MS:,'LQ(AC@(c\a;S_6+5A3h-Q#dFf/"0'2fM71@"ZP5SHL/;I;9L[<`)p<]hV\bG\@gXRO8r'HZa8:7<h`$
%p&YHIG89l/Jn8?9-Zk6=0kYTl'Pej:p2OQZLNG4UI<V,'?bL<j1l5iRo(Jh'M_/(9eB$@\A#Q>Yd_Dcf,%60=P#?,%%O>GTj_'8S
%O)keNDo"6FE"f7jN)2+=KPJmp<mN2`[)p6fc!TA)8snLHP:?WG_$YPpH[gSYp35T"^PM4OPd^<AR/$pj[GSd8;_fcU`-XZm6%k9p
%9i]jrZ6KmPcefk],BC/nKu@/FgWZsjr<<HahnYn+XDe4si697FJ)]F6rrrXh"f7`cMX3]M#Hnn8<YrL7a^@T<#.7>dn/Q5;B>/7=
%.9/\j:/YYk7sE?sK]6eW#RY=/]XJ8pi$JoWrXEIND."T(K2)^qm/e"JXeamJi>po)CO"Ar$19'S"D4^.5$NP=YoJ&dWYSgE[]#=r
%KeZWVW1mN^g&srJANta;AW7\U6N42`W^ubE%_oK'Cg5[ogR\gcUh\j7<K#/-,&<UJ-q5OGJKF!^3APFM]NRiiBSfpqn>L!7I6NQ,
%Te7$?McA'd'9%`LhIb#]$5+%E!Bf7Q5c;F/q"172CfG8,k8`.427#2cXUQ5^<js*@lg=t\<I0G`g:tI>pTh$VIQ)Kh#!4rlN=B3\
%;(o^c")dJ#B-jNC4k4@kl^N,?r4^.^R7&h'`BmL//@_RM7<Q"XbdNCP;*lO(g37^$1L0t(a(_M?GVR+IG;(6TCMOUZdblE*4WA'/
%8;kdhBYcE<:IY>rE5?8:p2-BK5Xaf2dgF.jaF-G-+>LLB=_NZCJ4?mM*<TgTk[@1ZSAgLb:J2YeI[lHH.>"Ju<*&/EXIYHS*G-H>
%7>!3A)K6*=1EkE9*O:V"DV%W]"M/O/4@J0e\>23nKel>u+56jsft-OPX_+7QE<@,9)fu>f=0SKS=s?<OUO=pgMb#':0Ae,Hb*0.0
%2$aCh.t7/"+<tiX/qFs\N3Aj,=N'#dTqMVb[Tbs&c_fm-^(hi>3GIBRO`$PWeQRT!&K5IWd""/:09M-8O(HZbq8'-4l,BYM$O>`N
%RA%V>g,GG.n(WXIDfeRPSdi'FC=+J2$]ZATc27iJjUgtMp[).tHR0`2Kc0<qA)"28"R0*ok.684>Rb?LCJ_E'^t[gQ[<(-p\iZN1
%$bA8$d;;3D8===<ogN7u<4S#a$tP$)cm;'^NWI"(c?l$,L4kqs&l(b]#$aeKqZ]oqZ#1=([R!KW>FcUE8TB=$[]ucu2PuD;gR<=@
%QAlcQfp9lqZ05(5MbXGbi1)J*1pbu3CN\@X\R8T_/ZojpbI'dj5%E!J6#PoAZ7WYH!/n"LJU>m!j]?6Z7i-83]\l7E/aMg1O&;Mo
%.6lI&Mf\s^=r1$MI!]&c\*'O!hgT@QT3lKfkau_g]l2s'#/oB^WpSEZ#A!;MO:<\h4VK\_)L#j1iZ24V]u(F:`Q1/hhGMXU3(Inn
%O&CA,8a0kg'6Y#YJRGVr8`^%mEKP&Xd,BM&'!IjnlN5rHP#^*3)7!7XP`jVE_F#fB^h`1Wa$d-dMrc.!2;fO88[6QT1oWjJ#!M%&
%KWHZq7/&*7Q-l8/\LT95@lg:lcNlH`'#8;s2#I`&KB=Zjjs=+u?[d5Lo21D`kr:^LU"1;@Th@4%=,lEik9r(Dgb*+AS5^7]T:a"*
%?Au(r@JYEHE7HODf>8b;(K=-ado;pT[X@n@C]NnhiOXBOn%4A@L@V[fF`B[lq%TtNOf)iaV61q:kPQ_:8GH*mL3u:HJlqcDI8P)[
%^9dR1F)Go_W4W9k9qK6P6@$(t^Y#89DJiYPTT7F?q53g!3V!NF6pG3,S$B/SN2pXF@J.1N<DZ=/)70b1r&nNr+FAC=fK89pW'j\Y
%-/5cGHFn[@5_Y>>US/EtH1tM6TAS/r@t?KA4oM%(A6knqU;_B<"#![#M[l&4TLm[R:/IUO'i4lh?$:7*]'L\N-/hb?`<B?^b]$gE
%RXap,`#[dK'W$joMIO&>$<VZP97`G5d79I[;!pK1=f]'6`+:"VIc*,!ghW#AK\Bd@0KYXWheg.7qV3GI]HJ4/I'>3o_A??$9Z+mR
%7na";'ktHOVR^k=kQCP>"Tf<U$@H:t+JGe%WX*n!-:6j')F:bCol1Jo;[`p_ZD[j<53LuLgm%OBG](^Nn$+H;df(oTQK.A@*<(h4
%fg8InjDTj3C#Y;qEP!sS%,="/L-!,R*<bb_1Di*VK1*a((nc(\&:!dVdeamna_#tR?S)O!LubBj_'//rLa2A\Z9fhRj/U0:E[D%5
%*#N(%%:i-!YYTj"KFrI8rIp3^5\gadOt6HQ"*Iid51ON:aJo>p_*YktcRh+gq&6L]:Q,D`'D*Qubbff@/@cX[8UAh="NS$nX6\$W
%qZ4GcI`[J,CbOen<tNil0B*VK@Ut=_OI.VE^gkF$c;"g*?4K&L6'jP_WoJM\&Qdr>SjI_@r?XTX<hbYJeL4sa0HpZ2:9qV<1Gr+1
%<t>L=,.6X_7>$Wj@;dR"$OeI,c8INA;&Qo.i`O:pa3"tCDcuiTk0Fo7l)bL+A5q!O.`CKj*CJ&!WK).bK)%!`?tG.JSg_lp'1IN_
%NqFC\d$@HU<mXMaJCTur1@pX;cY>.^pF#rf_+*bqSg$JNNg;SOmMKZa:Dtg\)0?p:U5'8l@Pb>Bpu/kC4Y=lMhni$A2gC@KN6Ha;
%$A]bF&@nbp'&+_dEmnO=4Q'>M((fsdHf+,1?q-V;Cur7d2-OtD1Y-7H"aS5#KX4bge"#c68ehosJom<%ldcq6Db\+YI#hk)IR7YW
%Yc&<06Ke.@L(nlNB]K:ON`b=5d`g6Q8YJl,+RD)Y[\],OV0B@")\t5m[]kn$J`fjlJ/eF#FF[2^DtrM'"4"mP/rKt&OI=sD>"Ddg
%0AE'6Ai85X7][AsUJ4`;@uXHL3uGh;K96h6?&iR.2MMf^)N:V_5\nmAA2#Oc"f'*!dG+]4_]\8bP-%2C^^"2E8hr14?,Aq0ctW94
%54;k$TM*fd\0c_pf;,_9=r&[#(,gfj"kS?ID;N(=ef/RF;@><clN5[=^T_9-/8U_7$X752Bb+W?e\:f[$21O_q%t5B;'LEJj-pp"
%HsN0b'/fW#;,nN>>kSi6h9N1SlBblAl9mhI",4ZBLLt:-BLR5T/e8HV\Z[To\NKI\S6t11nE6,W?IIK[IOUOpr`RYjKa<]<onRM:
%ODr'8cN_Tr_5("Y`;u0<4>s1]g<D2-KJOJ#eQFCS(`4Qel=b=V8@Tqk,dLaEKRg(TonZ>P2B:?0M6YULN8A+'B3d&o.shZ&e05-s
%eW[iAV52WFlO]X`n/Q:UH:-J`&eXnR&@RFl^:8ERC=iK\8i?28qnE%LU&(l5K3>/lfLj]0F0)12P..&=Ja+40SY\s(H5;+hUl$iE
%H?+2]JMkC7%>-@78IP+n$tb31?n6$q:Eb7eK]G?e=H3P!nla`Q$#@i7L2AE>X0Vhgb,4I5YA,d:D$q:s>BgPl]T"@V,()et-TEZ#
%@H6W68IYkS<SVYB*d^Q_'b*]>g=_V)N)VBFUh\jK=L*gLZj?p!C%6s_W<t1=?q.6UeYMs*##8AIZ9,q*gU=9kZ=50sj*EA2foKNK
%q[j6!AV5E@*dNrX7_K-Xb\=fnJfJ'UkH?!3(\SV`ZWcV%?9K1MIK]i.Y@-9Kg(a4+gIMKlTuj_6<sVO(b]gUPU;U?7"f/bpXe1GP
%R82+$FFnRui&^JOD:/DO?c_1W:F,D<G0t&s2+lg1A&F4O_r/4loRZZ:#.%bsYSFKqkO?Tb.+RX]ODp117bf>&erqWW/7ql99=sm=
%Bi'qnNXTMGD."l0"4+fX<-W<8-:VdU*p5B`U$"p+mt)"b\8;m/!`houqa/r.+Q\I4i^/Vm%6DK8:S/3D9QAuk4h?h6#p/=Vb^p[D
%J)1lr]!DE8'!)/h&U`;9ppoUV&&bO.ikioVC?L4EbTH\0U85dPd(?=#e:so]%@UYJT]UkEFF::O1&^IUnq`qDT?]n6R)"kLI4X#:
%3GcHb)+5CgeVA^7rYs@7/;&tDKpoA">e=MPT9Lrsk%c,k.cg3QJlaJj(*H]ZNj*5NJW(ETC;af40gqhfUq5r?ID+C4_3;D%qT1O`
%U^6*X;BtQWnh'RK(rhZ?6dn5%O>TfLC9<\R:?//Dflf+R$^/<NV?r',lXd9dDpc5R.R?4!j)+i7BNnC^\h,?E*@#CA,M5Fh_1\3$
%X#GKRjNW/9#r4tm!Y(B*%[3Ff#$Fh\i"DabFaP5We$]E8nbR&p""`kN<\SYU`Z$V&<cA<3jNV*)/Dk9'%tcE!)fWpPJ1?,aS)b:M
%'&CmK/c(Y8#PptdWf"a,@l"]o[tnUkBDVm9&iS[2YQ8lO\/B&/Y1<WtGMtCY;>*/C-&h%Gq^#@Y1>4`rO<lad/u]^b7tlFTRU%BV
%fg/Dg)Ja]=PPpTZ7dWsZ#4!s[#K@/nm:=I`K.Kk<E/E"n3`sc+a(AnI6*!u60$4MrbAs'>LqDOThI'=VL](0V=i*#R&uG\P>a8CS
%G,!Oj_Z.7VZf-[PZN89O0%i[f_+B+.8T'V92Zk\C),S?W=6u'N,*CmaA:5UJ,=d5E^u=RaKu7e9-:V_A@%el-)pEt>0.geL:iNF%
%"&1/\?+"!.O_qVJ,rWNVjuQGc=kM/3K?YjMYVgukHYtGq`pGZ#5P*X?8t+r*P.Pu^a$sKcTQ>alDT00L)K9QPegiat%g+GRab&!m
%ZgQ.J6!A*YT%gkQ]6X"T:;bt`lU\=THHNMF3hL7qh0Hlm4M^RTCXI9$hU$QEhAj_fI:,:Tnpab`H"Ke]CN]ARFLeG'\f>T'?*6GN
%Jn/'om,^a0JT>87Cr(0RZVE5tS*=JAANS.sN:D#[:;.Y=oRd)Y"S`;>a!O@,m:46XT"&\N7Y50MrTV`AD:_rqO2K6=k-dLhgpULA
%<m)Rf1?Ue,*;_J$Ip3+=o9^ijHRQXJG_o$nQqI^ZiIceQKCg,nq[DkW3(8BhnIHQ/^^R75i([!6#5a"&*`4m,s*Lf"Y,m6R<Bhd9
%&1+392W59=+kTELoEi_!i/8j,`djI?)[^kdT]?Q_P/U7'7&YMCS8g1^C6[lp%.=MpAG)1L9uZril_Ps%ZjgH\C_[)BD1ap)"9q=J
%YFZ0"0.!_1GRi^."OGK@Sr?XOErEi8:<A^m+_;`rdGGK[a>tpSNKL%Sb!U,g(-J7!`tT[*+haiUql(sr>I]0oidRRE_F9%od55TB
%rOD+<DeV74L..D$*+Pt<Gs4Y$_1S'mfl!=G7mk;]JPnOBpg=]PDS4k#b9(M;rcb-JXR.`LC19uM<j:0(7&<cQORh6.6fYC+5j5;)
%@56+[l)qDO7.-kNMJHT6^kg4)+$JRmKucN1nP0a\fmo;?C^h&,eo0JL7E@:s^sbV*]@E%[oUVRqM@)I9n9fiN?tW8)..a9YWLh[n
%+kG+g+>*NGXp=uSXn0!A,Jp$%DHChFBe;&kdqC_H8g:rd'1G.qD4:98#$K)36*&]D<5GXGk'FVq`%K.&V<r;^9;%H.A:NDHEoW\W
%_a$lg$al_<kSW1CABEaR_%0e**IXIBZ3XOmei#M1DP!u,Y]NrmE='?;qt]ns5C!#&pT0d2AtLqZQ3J=?nmuCJZ^L0^k3!/dc=R6c
%crt9&C):*4l4UTfR4IBF)nXVnoiN]eD_!EXST;-QY"_NqR6D%d<nW2\7Fn2CKVOSSLA<Hk'_hF*69NM2r;,;eIfK"$Scpa<O`*J5
%1D9Ggm/M=%O]._kjV\Btr9cf=N1@R0s+>Yfb%VPCGX`qqE.>;=Kn-HthGG%)Bg&i31dUUC=-RV2R^;$?r*NUI>fjJPIP/oRO+]?e
%#pP5RH$'=((B-QG8--P!7Ae(D_>8UEIR%qKE.%gS5p?$?o-br$gp\puaA3>\i#e$G`[FsMj<'G\gI;;E]D%AA&,)'>s(ME%'8<T6
%nOicGr8VuhYcP(")O'cTKnSB.L)bdtP@Z!q-9#C9&?=h*]g;tP-5b<\A11).Qpd#>U^r7Zd7Zu-V$j^:l\`W8fOu__"c<Cb%gL[o
%2b6>*6[A=F>-Afdis),jK*>2H!^b-rIX#R6A:Zd@SkQtV5XBOPD_+<<)U1>4mZ8-Vop$6g<FSp5f235fV.bChjQ'gU8e_[Ta9sPZ
%fCidg/CmfI'2I.RFIYU86PBkR+UD%7HtTV!9:A,6fHHR\8<PV2.`oMI+mFA>*D.1+oHBcX'g$CZ(Xu3q4X5kLU7;oS\q$m+,OZX%
%\:rL6"7\Is2>gZ)j&0YL@PES!8qeiSpIS3o9RYC/kkc2GMk4NZP.j)L\;X\6L^7X6?B]>0h@+W*ag%kFUkKr/>,iIXd2Q66!p%->
%3PF\:q^Bil=Q`fIS&-T%"l;YfdK8?W,ft^P76Ra)M+-#ae[WfmH5L#!Z4JGZ+[[C5FhbWSk=I2*,2SR/ZIVX6AA-$6jD2bS+q;((
%X;MDD1Ll""T%7)?BV7'&0I*+F91@A4M^V5njDM]r8)D$9:]'(?L9`Zd*b*atN`cN[#`!N=mD0#n17P5Rpj$uZ3OgaE/7t3K-:+NX
%q"U=RFSoMT.?XX^"A9G8Q>24][jb(VLNe@fq%DJh\ba)qW*7gj/Mu07i#](4<<EPeKSj?,7:oiCCJRa$W&mVWEWTgVHpf,X76+^N
%aX?XY0Q\80gaj5-OT#nqagN>tPg=nm,g>6nFjq,Kr%O(^^\"=5[?6D:Er`JO=Uq1I7FDmk^=dTk6HVm\IZ'S=d'.u^:CgLJ7)?,l
%q:c!#YU$?KMS&$)r")*`)j-QbR)*-R$pN>MALE=4J9`)k,eP+^N.hOOcWUd@VONf#.U#?5HnR#ROW!K+=QrICncl=NO?(0%8288m
%LT7IR]M,!54Zn<)KJbiRRTSh_@lnAAnJOWYM^3Em-[/D,oU!+sYA0-@c^kOq.)5)\/9tWKiNU!cm>8cE"-%V_/9dU)T_(36Ycr.;
%.;IB/G#G??aA3J*!H,K1^AIErpDKc3=JIT_(g,!eG#D'AFmFaAM#?lrl&:-'k$D\$eNe4HhtM1j1,kN$\@+SE2O#q,D0Is:&%M]2
%>pDpkQV^"+Tub6)]<*Jrlb/NY#Aoa9!*ReYXqiHYb!K=:=MT-%e&>GO)Bunk<`YPhdQ5.13\H5X)n*I+*T>EplEn_\9/5a_IG/Zo
%78X>ap-]We<Y+N25,=_D[A0G\XPM"*:%/c>DaVZC-)j\`mHZ/qC/>\#hgiVZETZ78(M3PuP"?hQ8)Fd(bj67NaTjH4D`Sfk%E`Y[
%Ya85Q4)!/Q,lJO!:pd;dc6-TEL07-XBi2tNh$Xb/"f8;STE#<C]Pe6Qj]j=>4fR;uj]I<jUR!d'$0Zfp'AATA%D&N;8=J+_8-q<T
%?(GD`1Tr6/&F:5'HJj[A)MneqTZOk26$N0_^c%^$1.#<:<W^6+1UDZV;Uhsb,GtI=AF"$,[%j1D[)CO?-&G$`P/6gG!gGI_W4UQe
%'30OR;'204T4,76ZiMp+G`p"V$nJK.+r0hsMC>b?m!#VMKuIn=?dAN9k#aNJo)Af*0)DSeBmqTh+EsM34/p*4<<eI/qS<@CB#VWU
%NJR^"S?+LfaXHcqTiu,:cPX^IXt`"u"3"(hIE][d+V-"1_bb-9HPR[G#%cADnGRlG_82lFY.I%c2O!JLP66t;/kT](+m_uGNpf#l
%=27KUT23Bf!QbI^f8i4?0Yi9,YOp@q23;T8BtU6<)4\=pp]dJrP<cr=iD>:+g:@V3:1Ml)9rOlR[$GuU+S.u\;28u*_OVXVDd\E7
%&bW69aXHLq<9eo5;*roaHg*qFLXqBY\0&jC:12tth8n8160PX&+_u*H*UT\EG_p1dF$tu6%3/rK(mIU$/T1F3Dr.D3+]M)4>X.RX
%<_;q`^q&B!3&>>6,0D2U%MEJ/fi^k?<kEdJli,tU'4'Mlh!8Pe^8"2X(9&C-hYeV:8ejcOqS=\$n6!&jl;h>s=6W8SUJR8ekq=Qf
%0jhOh:$_,><._/!kn$83Yc@M05`el(]i9)__UE/8i\#0spB;N[+`=g'=nCS*\?78EBSB\NJl@n0m2`39+6ojY.*mjiK;[CiZ'\Kn
%'3PB=ppP1GL7J_dOh'!>/`"B)SS7KM?"I&=7_LCD=*Rb_0Z]/<6,f(AM$b!H;-rS#<41u26JBN%%09`YLs9Y07ATIIZGa-]l+I%u
%.Q`oYfth(`90#pP-V0tB>(U]9Tu)LcXG,CeO!9Atl*")(UXV5S:BtW(>hdl`jiM0g.oM_/9Pk'48-'Ss*B?0LQW%!O<<Y"Rj#^Z*
%7%@kn`d4N!P">j(Y-*1H';?H(gn#bVgneP]05u@LR.P$FSj8hD?'].A=qP(]UCV<\PMR[/Cmb$]Hu[W_4>5*s8b3?J6Y&dMfr1T2
%4Q45[9RJoT[3QWc'@gKOW8o59%iEKpcs]RTdNa3H)T1pF*=\i8O_j.Z$0!H(0RfDmLKba_n+N\\bOca8^q_#i:?RKgUdn*ggt&]?
%2QPef9F0PAdejqA/5SBrYj_?H#*+Lef($c2;d#M$-ZI,qCm8g/8ULu#K?lj=+.c5-)S<)eHBA"F@_6e?N7]R_*;3[d=$U.m:0_E#
%XZcIfi)Z,#G$#3JW#o5_1makOFN"CLpE@^4+?XU%rB1$4JEl<PQn`+qMi+9Q'g0@mFhl69GFAOgP+lP(]Z.blUAh<H(blc]9dR7b
%biAZ_5chFjpY&>;ml_Fk4Hlcb]uI!t*on6t$R=FA,E&WDitp[&F.p[6?o\A0B-d=-k\M\)aLnt(g:9.*^&(o>IBeOaJIB,lSd:F3
%Z'm9&39ql$Z3L'2'U@`:*j<JH%'8s)<H>KWHj<4)UfHQchXpFslGeHrPdQ,VM7l>:\s</L`Z@tqJ?VA'SA,[H)'Vf-2,Q820T&<F
%4B3*?@O7f!G;EQlh=NM[!,5/1gpNpiP:u4Zar+l$O^erQB:dsX+%="NPnNcSPAh,]dE.n&?B[7:1Ep-!32t_U1o<=))>"ku:W$nl
%I=R*0m"g2&[K8K,=Nr>BE*Mfn6l^nrP/TB,[LRE0n.6&<5GuQ0T=N>C4^6^4E4&d?MkTRrn9Cg$j1@ij5*eu8oha*Xf/eOs1BpFW
%`O_AS#uo!$II1S;%WTX.#(5T[??u`eG%Ri(KR##npJjD7]=m_D)UaCd=^"rN3XY%CWH?a]T3lm_DE5pF#oDg+F=X]Y3)UVQR'&*g
%PUEQ5XbpJFDR+481(8f]9]L])=BtU_kEhcp*4i9m;9T<O6BA'JE3iDc#M^DTeSob9&c"?_&:MdYW_Kc!egNtGE!2?U>sH*rV!ij2
%6fA^#I=6eW$EoQLTOQ2Uf<9)@dkT[VOc]V%ns8S]m#>[%9gm3VM)ah;9.+K'K=7M.m?;THG)K?[eH(F0V]/=/,=U.92EWoPVaBM@
%)'"/ZCOU19l5(^Qo#Q7.e+a80IW7<h0Sf4<e&*'HJfYd^q:*&RaopRg^sa:/\kSR)T>br$OIaL;gU$BQQ>Nprr3`$!*8m(#UsXiG
%V*huu8pt?T"qB8NN4X-RPp"Qm@Si,+2#u79E"1j=KYF:3Q3A][^0?6G9Om#7cW!:ZJ>tW\P-.=26>:I>"_T(SX+9Sf-<t$)[UK-m
%P+E!-n0R^^+9S,8anS28=latCF>Tki!s'=rml3'[FVRDIl=A<n8Tob1%;aA/E,2V?&\!f+^C5:Ab%,$&0&>I>0&3UJqO()H:bM9E
%&TO&FB`FstHbOHRc\?U&W+:qJoaoWL)V'V1OfK8Y+I&8lLU''KhjQB*RO#1F3Z;4$-<4jp(&,4DqPGt]#7D_OplP^4A.4N)i+.N%
%CrgjO96``PC*M=3S<ggT/TaSGLV'.tLF<FFjg?e&H=\W4FM&+M1%O@5Jn6<B$%<"Fp$tj;_sHHL!#T`&%h_riI,@j-;[;8(W;h?o
%=48BaNa2#\m!n6B*5"NIP"[2eNpbUY@%[Msi&r"]=]cUkbo/BE)?0BmHP%NURFtJ0WYSuPDN37N_'CfR%*#45:UK!lV=@(,#k&o-
%Gbrtk@PJV2GG*kCLIR#CA78FsZoE/ZZP$5tA$hMVM@gX^&(E\*Yb/g)W_l:U3`%J\f9F[a.'^n0O,s.9q@m@+j)O$9)#ggAV.-[`
%a[#e3il*[5U!ffQ$1-SVZZ!Xi/>5u;57%X^!c#HdQ0!J6ruQG1pN3N0FB-"0V07?Va6CuZF84bXg3mah_)^F91<Wi1V"Er0MTNg:
%@,N!_H=n_H_P/Z`Yo#&/iX?tOT^LZ\9sGHNaWXZa.a\8A*egH`^_GKu!+i+52Ja%m]Z!E!_h/YoJOq_3S;;'WJ:faONrX8%J>b7@
%KH?kh89M`@d+hGLmC%XEoMqnof'f-mr]uosPa\9s]4A0jPYH*V9+sFADhLu7St0LT"`skTg;=Lc67=hu(?e;-<'.b0Zr[FpD$Mj=
%!kY1ACdgAeU3X0_D2!t>@AODXeTs-V@^p>1WT#B\p&>7#%tdRfs&W?;7iY?[T3,fN'[\>5OPaXaZen.QX8<Q?46V;l$]L@1QE5gl
%,k(AacKanY0Y5TV'O\[)@_I@lhN\tY&hp/V6p'11s0dR77*RuF4j5u^.p>bWDH_E_^MIX)0e8.K7<c'5Fp?FA/6"^dR,U$AK7C*k
%V$d.Y1[NIVo@q3_LmD8A(PCgKgaD\KF)'Nt&qN"8KZ/'1OQqANB"Q<,hj6;<Ehqa$mp@&_M_oCX&cd\g89C5%#nS;<e:i_Z.N^:b
%8f@f29G3KtD$'&^UFPMI,]:gY*!-^<>`!X9Nfdj;r.+S(N(=C;K*->^TFbM*i-,6@Lmu:iohpAQ)kl!D,ZgO2W=BcJ%%aJM0d#7Q
%n.-"_<Ut[s9kQd[.JhC(5%OP3=En;jJrEPXVCt?+*U^+\gVIa(@j#j6*07(CT1F55rpQG?7u5l?AJEUs=r7$"*K00oKjiZ2*VV'7
%nAD3$0=T:<m<^^=FT1*@@6OQTA3##cF';=G#KWMXi8qZR\@C5*<B:"2:^aG`U_[4\eUm+T>2\jM$SLUW_0)[[gK1<WQZKRmqSd28
%1!o#e/%C%t<cC(N$Ei9`'jS=NO:?O7(8]r0WYA^Q74BA$%)\I"!YctU3"RAM@o-PBHH%WsV8,Et'F<(r\(AC_i',PI`Y'RllTn&#
%P4o>V*tTe\XXN!#Bi6IaC'<:ej4a]pJ&0;uNU*>1NO[n%8d2Hkl9Tn)hFJkIqWNF.=E0i4Wj2GqRK\WU^8Sm\Uf7@W6>T"3GN%*]
%UgXiO?O?3ZE9#.-$kF,n9.a0LiKTG"[biUZpcRu0%BST&$E,]uUml#K9+7]p=/^;PmIoiS&&"dQ[.rX>>(I5HC#N_o&7_o];$<T%
%H1?6KYp3#4V4hS*IT]oY;e]p0\<?moMPWba&-m#`l7m7s"T=!-@S"[B7.3`W$"?EGRo$`P[_q$-B\R499jh=PE79G?>]D1mLDEf9
%Phg*#&D?K]GPh=V&m4.3J$>U?8"*C+5"h*<*(/A+XVm9p@\'2JZ-`LWqsM<$$=I:@POF=2EX9!epRP,acr67W#D]f<IM6r/Gal0E
%Q;W-*0FHV.T'HmSMARP"l0'4H(k'*>5aPD<m.sG6f]??M]:LH\mVYJ[[B'D+.7c.BQ+I@RV[pA<;A<mhbAbXrg/a%VWsnB!.L<r'
%#:;MI+^egpoB9VUO2FAq8bYf"!a\M1jis92(56H2%.(qH`IFN07Ml[I^fPTu8.9Nr='<;_5<k+V%AgU1AC\c3]L6U26tT^]JhZ\!
%K;$eOb)dLbP_Cn#lTEDW!&ptNO_;Qhjm1_f\dSUNQrf/rH7s5PW=)6;?su;gn7K,q@\4dh6`T!94RCuJQ,(Om2TB*Bm@(B(7mjmB
%WMY%[W%C>0=t2?u7ae\GJB;+YU;HXO*X@AF1BK8IW=Y6,!a5X\HksD'U7;d8OMPcW<I9eEZkm-*,Hjna(Kbeh[Y7J^+KuNG:s&!t
%7dP"Z_30jO@8!YeN:8FfUe$Lu[X"Qc4q?)oTQbQHq*s#I5Nj7rB]Q?%1jleqr(mNeB-_<0LrfOn'FJ>J3Bbtdm&^mO"7p?_oM3";
%WS,L(H\QJ33PfnURcaas[MOcFXgce3HM&]H6h@>:>K?jIXs6e3l/=?b>WDPUA&I_u6.uqoB-Bhn!\Z"ILBfQ[=RlYP2Jn_.]L]-I
%C9n/!KrIQ2-%nub=@(Y&V7Lt&MoUqg.sa,5MQK$DA&T^ke`[nu)3SOn3m4XBL+)=Dh$-=%';.O/DR!*nSEDk.pKXAnWnJF*iXA&M
%?;Nk40JMOR/$9qUAQ@bN#dhUOW+7OJF-,ItkZM8g%fLjH[KZbYRWPS<_jq4G/CLd5rLp$*=\Fa+@c>g]%b-\,)$J?U9el^3,aiXn
%*2TQ8@,FnB%4J?SrcI!WUb=Zs%[*OdRi>iOTLCI=^Cp:gJeV(iH50"]Xk^p?-;h>g:'PI:J=<d4^T\+g*mYWLo`C/MQ2L9U<!YD7
%i#h`mO&iu:_?XM7i`HnKqX^4]:#"Jp`hg@o4q39_pL(fL+u]ic.ZY!'p>gR8bt4XM4t;9'F;T]*Y>S[F7ml'rWd_qI8GsP?`[T%l
%Nn-q6,bnmp'WkJ;H7oilZ:]Wki[?VhSSn+&F<.*#IusZJXAN4/,2N2F,P?!6hu_oW&2']Y7jJ_s4>4JZVHVnHs$081C[\L4XFjPH
%n5:YK!?uQb2*X<ae3t#PK]j)p=EFET85EXr^(+)sGZK6P*a?o[PtZ>tMB)c-@B"Z$$1CKoPb>&I4OE-D3JaU^DH#pRH1?b8,X]GZ
%4*h!dMV&T"GReH$$H:jH2U=]<JgBJ@K;+&K'\D)u,'H1fClRjAks^KaAkME.mat@46gpgbH/3YcTV1LQlLjp4Eh-72#Dd:getR^<
%`.Jos%>m6B2Bf=R^)&P+^doYAE8O=PNK+o>Hl5@<%mc=,p]96I]m97dRGT2h<\C*S%Q//9FI`Cr^QT/k!j[YtTI\6:W7`/d#C>K2
%2&^")dUj;:H&i0CPCDU^eE)F:i._45SdGAYaHq+/`Z?A+g)t@Wia#*ZUPOoK0lia\7%Ec0M5=2P3?39WCgNpo5t<E@F_0':2!>B'
%_GJ#pF@AA2c?kQP]9l"gbB\Wp!8D;H-<-mU7VHRF?H"JSMJ-D.m[,;*&S"i-#H.t6)WQ)6R4P/+'*JQo^AMh7)i(LCUgKo0]Pu8%
%flRn2^u.J2K.OB-)\-+e[;q"'=0ZUF(:TCn"k)^MgGcSJD&[<1/p?)h_\K:4j*h[%P+5_EikC6]b2gO!dP`iOF1.rZ:f8-$71(Je
%[#(F0N&E[rAQTru>A7.%5u.[d7Hs'JmXuaiP_p3GBZ[i#b1254que;K%Z+TWBL7#!Pd/u%+s:G_Md`E&iA?XSHekgFp#7!>5jtck
%n)t3/icc^`j^^9(IJ#lWUi5j"lHT[hhu#C-3lNgE?\jn5jcdEFL#o2_"[ShcDQ5H(i^&Ws(Z]%<>TZe:"?eOVVJM4u+=]_D9ehpL
%UUf[3ZZQ_N!Rs?Qj)PspQTGJj;S42.s"0+T50dYZ,$g=^JZ@k,p,*PLFASbUj[nU?i_Icgjr-WumKLAl+HFOkb+HS)/_5DPS(C]r
%M`+@kN*DEV^)j-f<]m$;`SDUMd,CmpEi:)&YVh7^PAY^d+boej`n"?+hh[r_N9%ZI../3<jZT'j0jZA)LYUl:2,W!"_Q.KMATgE,
%*lUs,`CJ`:#rY^UA7b45jI+IN$h7:Uj].s'1jRb>5%ZXG*K,FnIPG,1&6UNA&c&$O'4).#R:eB"-9T\)]gr3bTY(FbnU@%U-JiCB
%lVF`-0jJN#k_t&%BP$m+)Q>CV!RstC7'r71<cpdD.<Y88h)h:8SI;20P-9t%FgW(OD:Nn3O>p>^!:26),>K+/Bu.lK-r_mq0HH-u
%V?tRWiAWVmD[8NrP;K76>7c4]4l0U+o?F7+q1^goadso8@uI)Of4%Md%mqWffdK6s#9tM^(pJ[[aAG7"%#2p_X$sY5hOtMIp"%'T
%=%oiBZ"MmF2,?\O<<"Ajg+kSHr@t&iO/$4km`m@B6i)*FHaldK3BJsVkN_R;#":PRo5;*aW_Z\13Vq3HoFFK8KM0o/P2Wt;N-<0m
%lA8ME<0)klpT)HsBC8jWaPLl(K+`=+Bi"nHHh#N`/YZk7>.!U6<:\6JjerQ=hEbo[\J+(FVh)jc'34]\WN'"/T'<up-2FK5?`$c%
%U"=GmYZI/I/cMF1?RBVs&#nk'[eiE2TV$GKj7:[045X;-g1U&)gseoXZe/DCo%`;65oDpXWK//L)L4.0&9):*8Z]E(,)7C!D1:n,
%`lCm"l:]YB1aCM_ePmggM(,<%\gG^rTu[pl;<e-(9j`k"a;&?&$r",?NcJC3f9DHsl#DYXI[Mj\"8p&q_o<U[+H?GXdO`Zc<*Ti-
%dL@t2.u"e4n4])90DcJ\DHKOQ"A.uC)<.on!Dt+HpUm.'cj.+//K6;%aRhlrJYt"olJAb&R!]+Z;Mj@"jVoTJ"XOVVJ"c3LCNgc=
%Gj&djR['W9"\j$#&iZ)@*,S&:74F^>BU_Q<LbP5>2&I,$Pn9&1n5.M5#$HSOWri!*LrW6kWDoSmdeb9$@:c[&Q:7eTXfA[gC7-kC
%RUMF;6i9!W<e3B-[PfD=B64J3\?MEm%.VupJ?)rkj$DLE=aVAp3(`@m<$nh"$Z+W3+Q9.\,WVhF/^,'okCVtl<arEs.&Of>BSSkp
%3shFDOq!7g"tE`;!X(ue6ORhX0`"KG-$/QY;NTl0:SITjnD&VW$&%@0Vlm$t`t9@SJ](C(/CMs:EK9mKQ63XS'G$)9#sPUGB\`Z!
%HnCi!`$0((W!frnk5@W+e>JKr*kn<mC[]Zoi?_QjR;jble5:*s.1m?Zg[o>M4)nfHO&UfcGI/%G7l;P;\"4$!fIt&]fSiWqbE(VH
%8tH7HL9aj4BNdr96SUkJE2^J_2#.Gh`aE[r+t8.]*%mO)@m$-J^s]U(+osJj_Cg]YX<jn+bEsH]D[B"+Gj?Og7t='cB1LL'KpJs!
%OqU85ecD@;#'oP\!m9;THOlAT`'m;I[s1Fo\iE^u#fp.QeNI"fj@P53e0BucmslT')f>'nkfl=Y+#t4tYqsJj>LFOFhM>'GLFO69
%7flpRhDHE[,^eK8fG9UNn@:X:,RJ&sVB]uT&O[Y]itr;-Q/MY=Pla*'['i>,i.u2_i,uMBml[*V99o7A!]$,N58G`0U%$,=KT,[`
%F/r;$%Ir?ociL.QbUNk*N+Qs9I6\Cg#=rUR^pR>+CtRZ8f.ncYV?$<AO)&foeh-K81;\[s#dGsISX<O^Z(^@d((T[ZDA)UV<l\m>
%L_9R=KjFp(%Wu$kMqH=q:CgqtFq+d2'dnCZ@T_ggK:I8(V-m+>>Brs.=kumbjeMa$o;aoQl^k)V*kCS,dst!)P;++>LG/AHrpA7#
%3s>1'>5t6[L!]*&5[Rt#>)/LP.P[VR8Ot%=K1*Hh:VMOF%22(/nNC8b[A<,2)i3==-rS&HFmL.+$%ZO5mV+e@TFs`S)j1<PdJ6ZB
%DXVnBi%_8rOI?#dSNc.Zco)\?.<;u.\Nl"kE8l(,+qK9`OI<YbYno39gJX`@GWiaJgJC@7Et7I4l&9?mV)K>[Ht880+oH?k@:XG+
%F<-i5&'lY8'Nh,MAfhp`=92m4i9E1gD_-!cB(d,3`'+Cnhms>/GbVt%bWZ:LM'^H.HIW918V:1>)=YR.*?MQP".@7QfBH#_#MJ7N
%<'0d[Lf$q+r+V\lYXtbEq<(<EjW;RJn5%.E=ZWlb?/ZFe]RhQVN7JnZTfY*;c[[D:0l[0DIA"CirKS_t5n#]t!qRCh5r#UGP;A<Z
%S:Ok`l"H\a)e.%e\2nQG1^iocd-dSZd#Mg:Y6\"RVb^sQB9PDcRTCrQgdCn-Bm+.D1]"hi1],*XX>buoo2ncKE34;]2IL!d%U/!4
%@/JNGrnrV3+qs.Tn\[1*o,pZ?KOi1BaKWrT/aIMc:Sa%+-@9!_2\J)`j7LQaE:M"0KbYNll$Do:L=527hNhjg2Wn%H5#:hd6*jTT
%%!T[Y8Q\K#Sb=$Qclkr)/8ds)2ArIT'8*_HgW(/g^VA"2-u23rT:6n'D!(q9j:#Q9AY>>d3nicF`u#IRY0:+A9Hj*5g2RI?M`0.,
%5<bT?+U1AM?9=L6FC4I/qqA"P\,Yttnu20IAuuWA+?/PFMTeRg8#I#7TL8P%1!DZ,?=oKQ5NYk\U^JEhQ\d)EpBG/qAY>>l3]a'/
%)oJ1:LR!-`2(%u"g+c768^LX_p2G`gOCbe*<FQG[?gaTaq:"QR-TA:pr!eSUa*.?+=EDbHkKu4udBFZo1^lB*3&I^L*#dD3i)"m)
%59e&N):+di#kf#30V_1l@[^J#iP"Rt"Fl)=P(LcO6H^eL`uLQM>#GIM+h?;9>Z_4s(;"(A'p*])aKtFP,DFD?'Z,4hf,YB^8Tf%X
%P#3m1960-GrSc(WH1dES:=%8Z&a/>TO3^CGlL4:oj7>"'kOo7p+V/a5QAEh(#&QJSaF:_H4!0k^%X(2>p;4t4m4h_5IFF=3Q@TI^
%%Ff?e!?7*l+U0<^3?"4LYA>9H'C4]f1g'1U/8$O.[X.m^eG;bJh4`DLKiUE0[o9ECZPur/jWc-r1MC9\M#?R1Cmdj)G(YRR=Dgc&
%1#!#W!?#boW8TW:2YLf/$m%/[1sFNXfK@faeYsF"0\^SEcC"!W%2"fCVaG*OL`OfEoO2p!=:TK[JHj^8n6h!,jibm[S`p^$_04BC
%di#N48n#8t@#rel7<>9AiLa6[V4X^pg0j&[3`QW$cd`'NPLZ?)D!g8M_fa2Q0OK<Lo3e1sVe;[=I)j2d@m7:1Sf1ImfaRiP7b#c:
%:m]k<hVRHN-Ig(=:g[Wte808#8NSQ3E+^.Ic<00fDu;J)CK3G!VC/DGU74`;r740Z@$V<.D#)GN6cX!&%/)H?21.C?gcjD(BIF@,
%Yi<b;SatcaE<s7[5KM+ID(rke"$O5JgpFocFpAJ"ge`FSPs%2I\FU5oFT!cYb^9jaU&`2Te%ir21n07u1RR:D!F'FuB]gBV`Gh34
%Wb'3LhY,>\5=9BtL)H$[1mmgs]UYOY89%2eX_'Vh'BHjI1e,OI+^hE5#_rNbYLq=9+Q':G#Z10A$*AhrPCgZQf*OhF>(/g7^VnL.
%Nnii,,7,ZnSMr&cX;7nUi&$aK-4N?iJRdoXOuIp*`.cH+"miF>[:#J(7%nrcO(^=6Y1i"/VOQdGrk+_<$M#-rVAho[qj<tBS@rbS
%a"c&p%kYdYD/)A21FsFlO(K`bpS96;"%5G@:CqsM4Ag4>ESK>`1Q4)MZH)m_P7Q]q-:Ld37"Y-[YsY"a)A!'RJpTiCR*r:U(?B'N
%-r`722<;Wo5#*;G)i3$S=3=pd'kPt&+[5sT$%*&u2Ip:5AU_$(C,Kqo$"[pTFC7I<4h>#2G%et91/7qTlo^]g26VX\hOVAHoIV\.
%C\Fc1h7$CepYHPSbePSS%h;[-SD=o!qMa/$"]tR"[1-Z6GbC@\/Ll,PZYNkm$qPXU9d75,KeeUG7%gjG@q:4)bJnF!6P/em(i7tn
%bJjYND#E=Zf\12drjYX?,[9f2BCF%W%cNi`b/L'Mn(G%8PB(Y+'sHeB?gaTa]`d]f$lTqkrl1U<_4XNLU*?)VAMA_eJ1:j5gY@'!
%/5bD"C:b<K>;&"(>aZliN8+#07tY9]QIQBtJ0AYHAju+&<"qM@*MH=+2L0!R_['JQ%S#0,+*/p[AP^-+q*'HtL9s)rgqD,OPq,I!
%4(^[N=0XT"5#9B29A6sNbWI#kbT37Afq?L3kig0l`e0ZkU+_3,%5YmA0BGA+2a9)BIerTW%d_;r@$&4O"19+ccosUWG`$M#l/QNl
%TgJX8Ut*2B<p1a:UJC[Xft7J0n(Xm(m?-h[*H]&cd/C_rV]mS)P#"$Gk>O\?Hj]MeVaS:e:V3SKYa'3qKs*q7E'tL2XmFdFBL'a@
%(O#B$6ms#MMeH^h-i"_OqGu3*LloI^S4)iHRgb>(GE]?gGg+sci$6B_PI7O;pj$5"0o1C8(d;*?Hf_K4,.t(4h_DXXHOb7u2]\ZA
%qUr,JA=aNoJPDS%LM,/S^eM:''rY(_;q$2^V9#NFF;0>N4$K"&9igGM+aWZZ+</6QH:K>P+6]*Pi`I43>)VEU^84@i;m*Bs7OD2"
%"ba>ULGRY5#+/J!(!9%h0DA<BDIWGA1#';._6rUl\T[bW0[4GfTFKV.-egJ48O+M7:s,J,$8Pi6Z@VM@+eu_%S#%&=)%DlXST8Dc
%#.'2-LM'oG^eK\Ia3;q&<ZBo#_V-Q$Q.BoQ8Q3/cTeD8Mb6MRrol3Fh(>%aYQIZ/q+(;l/HFL5KVYSlc-sYiP4&ZQ(iqj53HuIql
%'gs:U2"Nl!/Gm*CHab`WB\TdUqM2A;Z))uX6E,Rm#;VBLrrGpnDr<A%%AhbV]E+&9pQjqLa2HoEY#]A6o0Yg#N3e9qqitSS^M:PD
%;LZ03o(NgP^Tm6O@pe8S_h@-'?j*un]4BaM/UO$60PXb!S*U^F-pLtZ6%l#E:C4?5:RK-_Mf=;O&`2JLKH%FZE!.XF=k/>tYn3*)
%5JgKEoL=""0bjJYR#qehK_WZphJI"NkjYhs9R2<IIN'Eg^$^Jd)gJ^i$1"r-$tcubJ>[6l@HC818F^QN#(C^%EUC18MV.cBgM[2/
%TF>P)[Xhf4q0#Z"/7c3*J>[6li%`ge*D)T3)k="p>:SO/5WdQI8F_?O1anf:p2"@0EqI:t<VJZiI^t+#pG5/Y\b%iCI1Z"]f46k!
%7YbP.__'Y3.k7ELZ:m"neYQ4$Ftt&VSX)/#6o_28XfG+DmoL5%GEW<AQkA9ZSj^)BRp\\PNKo@\`bIZf@5;%/@8_73%h&Q%U!VE0
%N+=Ue_G=5*>_MSF50m]ih":U('pVAjrZAV!rR9*mG5^ZThZ*0E>_+!rq5;!?s-I)AqN'D.?[i$e^\mrWa7i@orVSJ"gu&-ErE#7\
%msk;>^]*g'l.:Fbl[K#QO89B9pu,$KoFJ_:h>[Nb,uB?~>
%AI9_PrivateDataEnd
